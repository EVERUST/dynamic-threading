; ModuleID = 'probe.18289f57-cgu.0'
source_filename = "probe.18289f57-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>" = type { %"std::thread::local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>", i8, [7 x i8] }
%"std::thread::local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>" = type { %"core::cell::UnsafeCell<core::option::Option<core::cell::Cell<(u64, u64)>>>" }
%"core::cell::UnsafeCell<core::option::Option<core::cell::Cell<(u64, u64)>>>" = type { %"core::option::Option<core::cell::Cell<(u64, u64)>>" }
%"core::option::Option<core::cell::Cell<(u64, u64)>>" = type { i64, [2 x i64] }
%"core::sync::atomic::AtomicUsize" = type { i64 }
%"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>" = type { <2 x i64>, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, { i64, i64 }, i16, i8, [5 x i8] }
%"hashbrown::raw::RawTableInner<alloc::alloc::Global>" = type { %"alloc::alloc::Global", i64, i8*, i64, i64 }
%"alloc::alloc::Global" = type {}
%"core::option::Option<usize>::Some" = type { [1 x i64], i64 }
%"alloc::vec::into_iter::IntoIter<&str>" = type { %"core::marker::PhantomData<&str>", %"alloc::alloc::Global", i64*, i64, { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }* }
%"core::marker::PhantomData<&str>" = type {}
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>" = type { { i64, i64 }, i64, i8, [7 x i8] }
%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>" = type { %"core::str::IsNotEmpty", %"core::str::iter::Split<core::str::IsWhitespace>" }
%"core::str::IsNotEmpty" = type {}
%"core::str::iter::Split<core::str::IsWhitespace>" = type { %"core::str::iter::SplitInternal<core::str::IsWhitespace>" }
%"core::str::iter::SplitInternal<core::str::IsWhitespace>" = type { i64, i64, %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>", i8, i8, [6 x i8] }
%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>" = type { %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>" }
%"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>" = type { %"core::str::IsWhitespace", { [0 x i8]*, i64 }, %"core::str::iter::CharIndices" }
%"core::str::IsWhitespace" = type {}
%"core::str::iter::CharIndices" = type { i64, { i8*, i8* } }
%"alloc::vec::Vec<&str>" = type { { i64*, i64 }, i64 }
%"core::str::iter::SplitWhitespace" = type { %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>" }
%"core::result::Result<(), alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::result::Result<(), alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>" = type { [1 x i64], i64, [1 x i64] }
%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::alloc::layout::LayoutError" = type {}
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::alloc::AllocError" = type {}
%"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>" = type { i64, [6 x i64] }
%"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>" = type { i64, [2 x i64] }
%"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>::Err" = type { [8 x i8], %"std::thread::local::AccessError" }
%"std::thread::local::AccessError" = type {}
%"core::result::Result<(), hashbrown::TryReserveError>" = type { i64, [2 x i64] }
%"core::result::Result<(), hashbrown::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>" = type { i64, [4 x i64] }
%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"std::sys::unix::mutex::Mutex" = type { %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>" }
%"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>" = type { %"libc::unix::linux_like::linux::pthread_mutex_t" }
%"libc::unix::linux_like::linux::pthread_mutex_t" = type { [40 x i8] }
%"std::sys::unix::rwlock::RWLock" = type { %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>", %"core::sync::atomic::AtomicUsize", i8, [7 x i8] }
%"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>" = type { %"libc::unix::linux_like::linux::pthread_rwlock_t" }
%"libc::unix::linux_like::linux::pthread_rwlock_t" = type { [56 x i8] }
%"std::sys_common::condvar::Condvar" = type { %"std::sys::unix::condvar::Condvar"*, %"std::sys_common::condvar::check::SameMutexCheck" }
%"std::sys::unix::condvar::Condvar" = type { %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_cond_t>" }
%"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_cond_t>" = type { %"libc::unix::linux_like::linux::pthread_cond_t" }
%"libc::unix::linux_like::linux::pthread_cond_t" = type { [48 x i8] }
%"std::sys_common::condvar::check::SameMutexCheck" = type { %"core::sync::atomic::AtomicUsize" }
%"[closure@std::panicking::begin_panic<&str>::{closure#0}]" = type { { [0 x i8]*, i64 }, %"core::panic::location::Location"* }
%"std::collections::hash::map::Entry<std::thread::ThreadId, i32>" = type { i64, [3 x i64] }
%"std::collections::hash::map::VacantEntry<std::thread::ThreadId, i32>" = type { %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>" }
%"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>" = type { i64, i64, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* }
%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>" = type { %"core::marker::PhantomData<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>" }
%"core::marker::PhantomData<(std::thread::ThreadId, i32)>" = type {}
%"std::collections::hash::map::OccupiedEntry<std::thread::ThreadId, i32>" = type { %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>" }
%"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>" = type { i64, i64*, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* }
%"std::collections::hash::map::Entry<std::thread::ThreadId, i32>::Occupied" = type { [1 x i64], %"std::collections::hash::map::OccupiedEntry<std::thread::ThreadId, i32>" }
%"std::collections::hash::map::Entry<std::thread::ThreadId, i32>::Vacant" = type { [1 x i64], %"std::collections::hash::map::VacantEntry<std::thread::ThreadId, i32>" }
%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>" = type { %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>" }
%"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>" = type { { i64, i64 }, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>" }
%"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>" = type { i64, [3 x i64] }
%"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>::Occupied" = type { [1 x i64], %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>" }
%"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>::Vacant" = type { [1 x i64], %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>" }
%"core::result::Result<std::fs::File, std::io::error::Error>" = type { i32, [5 x i32] }
%"std::fs::OpenOptions" = type { %"std::sys::unix::fs::OpenOptions" }
%"std::sys::unix::fs::OpenOptions" = type { i32, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }
%"std::path::Path" = type { %"std::ffi::os_str::OsStr" }
%"std::ffi::os_str::OsStr" = type { %"std::sys::unix::os_str::Slice" }
%"std::sys::unix::os_str::Slice" = type { [0 x i8] }
%"std::io::error::Error" = type { %"std::io::error::Repr" }
%"std::io::error::Repr" = type { i8, [15 x i8] }
%"core::result::Result<usize, std::io::error::Error>" = type { i64, [2 x i64] }
%"core::result::Result<(), std::io::error::Error>" = type { i8, [15 x i8] }
%"core::result::Result<usize, std::io::error::Error>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<usize, std::io::error::Error>::Err" = type { [1 x i64], %"std::io::error::Error" }
%"core::result::Result<(), std::io::error::Error>::Err" = type { %"std::io::error::Error" }
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"std::io::Write::write_fmt::Adapter<std::fs::File>" = type { i32*, %"core::result::Result<(), std::io::error::Error>" }
%"std::io::error::Repr::Os" = type { [1 x i32], i32 }
%"std::io::error::Repr::Simple" = type { [1 x i8], i8 }
%"std::io::error::Repr::SimpleMessage" = type { [1 x i8], i8, [6 x i8], { [0 x i8]*, i64 }* }
%"std::io::error::Repr::Custom" = type { [1 x i64], %"std::io::error::Custom"* }
%"std::io::error::Custom" = type { { {}*, [3 x i64]* }, i8, [7 x i8] }
%"std::sync::mutex::Mutex<i32>" = type { i64*, %"std::sync::poison::Flag", [3 x i8], i32 }
%"std::sync::poison::Flag" = type { %"core::sync::atomic::AtomicBool" }
%"core::sync::atomic::AtomicBool" = type { i8 }
%"std::sync::mutex::Mutex<()>" = type { i64*, %"std::sync::poison::Flag", %"core::cell::UnsafeCell<()>", [7 x i8] }
%"core::cell::UnsafeCell<()>" = type { {} }
%"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>" = type { i64*, %"std::sync::poison::Flag", [7 x i8], %"core::cell::UnsafeCell<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>" }
%"core::cell::UnsafeCell<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>" = type { %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>" }
%"std::sync::mutex::Mutex<std::fs::File>" = type { i64*, %"std::sync::poison::Flag", [3 x i8], i32 }
%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>" = type { i64*, %"std::sync::poison::Flag", [7 x i8], %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>" }
%"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>" = type { %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>" }
%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>" = type { { i64*, i64 }, i64 }
%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>" = type { i64*, %"std::sync::poison::Flag", [7 x i8], %"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>" }
%"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>" = type { %"alloc::collections::vec_deque::VecDeque<i32>" }
%"alloc::collections::vec_deque::VecDeque<i32>" = type { i64, i64, { i32*, i64 } }
%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>" = type { i64, [2 x i64] }
%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>" = type { i64, [2 x i64] }
%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>" = type { i64, [2 x i64] }
%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>" = type { i64, [2 x i64] }
%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>" = type { i64, [2 x i64] }
%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>" = type { i64, [2 x i64] }
%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>" = type { i64, [2 x i64] }
%"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok" = type { [1 x i8], i8 }
%"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err" = type { [1 x i8], i8 }
%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Err" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Ok" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Err" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Ok" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Err" = type { [1 x i64], i64* }
%"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Ok" = type { [1 x i64], i64* }
%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Err" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Ok" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>::Err" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>::Ok" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok" = type { [1 x i64], { i64*, i8 } }
%"std::sync::rwlock::RwLock<i32>" = type { i64*, %"std::sync::poison::Flag", [3 x i8], i32 }
%"std::sync::condvar::Condvar" = type { %"std::sys_common::condvar::Condvar" }
%"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>::Ok" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<core::cell::Cell<(u64, u64)>>::Some" = type { [1 x i64], { i64, i64 } }
%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%_ProbeNode = type { { [0 x i8]*, i64 }, { i64, i8* }, i32, i32, i32, i32 }
%"core::str::pattern::MultiCharEqPattern<core::str::IsWhitespace>" = type { %"core::str::IsWhitespace" }
%"core::fmt::Opaque" = type {}
%"core::fmt::rt::v1::Argument" = type { i64, %"core::fmt::rt::v1::FormatSpec" }
%"core::fmt::rt::v1::FormatSpec" = type { { i64, i64 }, { i64, i64 }, i32, i32, i8, [7 x i8] }
%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>" }
%"alloc::sync::ArcInner<_ProbeSemaphore>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %_ProbeSemaphore }
%_ProbeSemaphore = type { %"std::sync::mutex::Mutex<i32>", %"std::sync::condvar::Condvar" }
%"alloc::sync::ArcInner<_ShuffledOrder>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %_ShuffledOrder }
%_ShuffledOrder = type { %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::rwlock::RwLock<i32>", %"std::sync::condvar::Condvar", %"std::sync::mutex::Mutex<()>" }
%"alloc::sync::ArcInner<std::thread::Inner>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"std::thread::Inner" }
%"std::thread::Inner" = type { { i8*, i64 }, i64, %"std::sys_common::thread_parker::futex::Parker", [1 x i32] }
%"std::sys_common::thread_parker::futex::Parker" = type { %"core::sync::atomic::AtomicI32" }
%"core::sync::atomic::AtomicI32" = type { i32 }
%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"std::sync::mutex::Mutex<std::fs::File>" }
%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>" }
%"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"std::sync::mutex::Mutex<i32>" }
%"alloc::vec::Vec<_ProbeNode>" = type { { i64*, i64 }, i64 }
%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>" = type { { i64, i64 }, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>" }
%"core::mem::maybe_uninit::MaybeUninit<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>" = type { [4 x i64] }
%"core::ptr::swap_nonoverlapping_bytes::UnalignedBlock" = type { i64, i64, i64, i64 }
%"alloc::string::String" = type { %"alloc::vec::Vec<u8>" }
%"alloc::vec::Vec<u8>" = type { { i8*, i64 }, i64 }
%"core::str::error::Utf8Error" = type { i64, { i8, i8 }, [6 x i8] }
%"core::mem::manually_drop::ManuallyDrop<hashbrown::raw::RawTableInner<alloc::alloc::Global>>" = type { %"hashbrown::raw::RawTableInner<alloc::alloc::Global>" }
%"core::mem::maybe_uninit::MaybeUninit<hashbrown::raw::RawTableInner<alloc::alloc::Global>>" = type { [4 x i64] }
%"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::Cell<(u64, u64)>>>" = type { %"core::option::Option<core::cell::Cell<(u64, u64)>>" }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::Cell<(u64, u64)>>>" = type { [3 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>" = type { [0 x i8] }
%"core::num::error::TryFromIntError" = type { {} }
%"core::result::Result<std::fs::File, std::io::error::Error>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<std::fs::File, std::io::error::Error>::Err" = type { [1 x i64], %"std::io::error::Error" }
%"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<_ProbeNode>]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[_ProbeNode]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[&str]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[i32]>" = type { [2 x i64] }
%"core::option::Option<u32>::Some" = type { [1 x i32], i32 }
%"core::result::Result<i32, core::num::error::ParseIntError>" = type { i8, [7 x i8] }
%"core::option::Option<(usize, usize)>" = type { i64, [2 x i64] }
%"core::option::Option<(usize, usize)>::Some" = type { [1 x i64], { i64, i64 } }
%"core::str::pattern::SearchStep" = type { i64, [2 x i64] }
%"core::str::pattern::SearchStep::Match" = type { [1 x i64], i64, i64 }
%"core::hash::sip::SipHasher13" = type { %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>" }
%"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>" = type { %"core::marker::PhantomData<core::hash::sip::Sip13Rounds>", i64, i64, i64, %"core::hash::sip::State", i64, i64 }
%"core::marker::PhantomData<core::hash::sip::Sip13Rounds>" = type {}
%"core::hash::sip::State" = type { i64, i64, i64, i64 }
%"std::collections::hash::map::DefaultHasher" = type { %"core::hash::sip::SipHasher13" }
%"core::option::Option<core::fmt::Arguments>" = type { {}*, [5 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>" = type { [1 x i64], i64, [1 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue" = type { { { i64, i64 }, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue" = type { [1 x i64], i64 }
%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Ok" = type { { { i64, i64 }, i64 } }
%"core::result::Result<usize, hashbrown::TryReserveError>" = type { i64, [2 x i64] }
%"core::result::Result<usize, hashbrown::TryReserveError>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<usize, hashbrown::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<usize, core::alloc::layout::LayoutError>::Err" = type { [8 x i8], %"core::alloc::layout::LayoutError" }
%"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::result::Result<&core::cell::Cell<(u64, u64)>, std::thread::local::AccessError>::Err" = type { %"std::thread::local::AccessError" }
%"core::option::Option<i32>::Some" = type { [1 x i32], i32 }
%"core::result::Result<i32, core::num::error::ParseIntError>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<i32, core::num::error::ParseIntError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<u64, core::num::error::TryFromIntError>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<u32, core::num::error::TryFromIntError>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<&str, core::str::error::Utf8Error>" = type { i64, [2 x i64] }
%"core::result::Result<&str, core::str::error::Utf8Error>::Ok" = type { [1 x i64], { [0 x i8]*, i64 } }
%"core::result::Result<&str, core::str::error::Utf8Error>::Err" = type { [1 x i64], %"core::str::error::Utf8Error" }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok" = type { [8 x i8], {} }
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<u8>, ()>::Err" = type { {} }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { {}*, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>" = type { %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>", i64 }
%"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>" = type { i64*, i8*, i8*, i16, [3 x i16] }
%"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>" = type { %"core::marker::PhantomData<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>" }
%"core::fmt::builders::DebugTuple" = type { %"core::fmt::Formatter"*, i64, i8, i8, [6 x i8] }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue" = type { [1 x i64], i64 }
%"core::fmt::builders::DebugStruct" = type { %"core::fmt::Formatter"*, i8, i8, [6 x i8] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>" = type { i64, [6 x i64] }
%"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>::Ok" = type { [1 x i64], %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>::Continue" = type { [1 x i64], %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>" = type { i64, [4 x i64] }
%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Ok" = type { [1 x i64], %"hashbrown::raw::RawTableInner<alloc::alloc::Global>" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Continue" = type { [1 x i64], %"hashbrown::raw::RawTableInner<alloc::alloc::Global>" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Break" = type { %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break" = type { %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" }
%"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err" = type { %"std::thread::local::AccessError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::Cell<(u64, u64)>>::Break" = type { %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue" = type { [8 x i8], {} }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break" = type { [8 x i8], %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::alloc::layout::Layout, usize)>" = type { [1 x i64], i64, [1 x i64] }
%"[closure@hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>::rehash_in_place<[closure@hashbrown::map::make_hasher<std::thread::ThreadId, std::thread::ThreadId, i32, std::collections::hash::map::RandomState>::{closure#0}]>::{closure#0}]" = type {}
%"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>" = type { %"alloc::vec::Vec<&str>" }
%"core::ops::control_flow::ControlFlow<&str>::Continue" = type { {} }
%"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<&str, core::convert::Infallible>>::Continue" = type { {} }
%"core::str::pattern::SearchStep::Reject" = type { [1 x i64], i64, i64 }
%"core::option::Option<(core::alloc::layout::Layout, usize)>::Some" = type { { { i64, i64 }, i64 } }
%"std::ffi::c_str::CStr" = type { [0 x i8] }
%"core::option::Option<*const u64>::Some" = type { [1 x i64], i64* }
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@alloc466 = private unnamed_addr constant <{ [78 x i8] }> <{ [78 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/alloc/src/vec/into_iter.rs" }>, align 1
@alloc467 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc466, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00\91\00\00\00\1B\00\00\00" }>, align 8
@alloc129 = private unnamed_addr constant <{ i8*, [0 x i8] }> <{ i8* bitcast (i64* ()* @_ZN3std11collections4hash3map11RandomState3new4KEYS7__getit17h46866a828f9fcf12E to i8*), [0 x i8] zeroinitializer }>, align 8
@_ZN3std11collections4hash3map11RandomState3new4KEYS7__getit5__KEY17h99907fa180e5819cE = external thread_local global %"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>"
@alloc92 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"#" }>, align 1
@alloc485 = private unnamed_addr constant <{ [69 x i8] }> <{ [69 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/std/src/io/mod.rs" }>, align 1
@alloc486 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [69 x i8] }>, <{ [69 x i8] }>* @alloc485, i32 0, i32 0, i32 0), [16 x i8] c"E\00\00\00\00\00\00\00\1B\06\00\00!\00\00\00" }>, align 8
@alloc89 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"failed to write whole buffer" }>, align 1
@alloc90 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [28 x i8] }>, <{ [28 x i8] }>* @alloc89, i32 0, i32 0, i32 0), [8 x i8] c"\1C\00\00\00\00\00\00\00" }>, align 8
@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::io::Write::write_fmt::Adapter<std::fs::File>"*)* @"_ZN4core3ptr76drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..fs..File$GT$$GT$17hcdc823dc7b0aab2cE" to i8*), [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::io::Write::write_fmt::Adapter<std::fs::File>"*, [0 x i8]*, i64)* @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h2b21fc3b5653bd2aE" to i8*), i8* bitcast (i1 (%"std::io::Write::write_fmt::Adapter<std::fs::File>"*, i32)* @_ZN4core3fmt5Write10write_char17h1743d30a643fa6daE to i8*), i8* bitcast (i1 (%"std::io::Write::write_fmt::Adapter<std::fs::File>"*, %"core::fmt::Arguments"*)* @_ZN4core3fmt5Write9write_fmt17h01cd695cc9e778c4E to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc86 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"formatter error" }>, align 1
@alloc87 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [15 x i8] }>, <{ [15 x i8] }>* @alloc86, i32 0, i32 0, i32 0), [8 x i8] c"\0F\00\00\00\00\00\00\00" }>, align 8
@alloc492 = private unnamed_addr constant <{ [36 x i8] }> <{ [36 x i8] c"rwlock maximum reader count exceeded" }>, align 1
@alloc499 = private unnamed_addr constant <{ [78 x i8] }> <{ [78 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/std/src/sys/unix/rwlock.rs" }>, align 1
@alloc494 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc499, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00)\00\00\00\0D\00\00\00" }>, align 8
@alloc495 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"rwlock read lock would result in deadlock" }>, align 1
@alloc497 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc499, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\001\00\00\00\0D\00\00\00" }>, align 8
@alloc498 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"rwlock write lock would result in deadlock" }>, align 1
@alloc500 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc499, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00X\00\00\00\0D\00\00\00" }>, align 8
@alloc501 = private unnamed_addr constant <{ [70 x i8] }> <{ [70 x i8] c"cannot access a Thread Local Storage value during or after destruction" }>, align 1
@alloc502 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/std/src/thread/local.rs" }>, align 1
@alloc503 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc502, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00w\01\00\00\1A\00\00\00" }>, align 8
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, [0 x i8] }> <{ i8* bitcast (void ({ i8*, i64 }*)* @"_ZN4core3ptr77drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$$RF$str$GT$$GT$17hacb5b8cb32d3adc8E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast ({ {}*, [3 x i64]* } ({ i8*, i64 }*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17hec8e73c462ea9b75E" to i8*), i8* bitcast ({ {}*, [3 x i64]* } ({ i8*, i64 }*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h277fbd8270d4e46cE" to i8*), [0 x i8] zeroinitializer }>, align 8
@_ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h9f4123c916e0c58dE = external global %"core::sync::atomic::AtomicUsize"
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::io::Write::write_fmt::Adapter<std::fs::File>"**)* @"_ZN4core3ptr88drop_in_place$LT$$RF$mut$u20$std..io..Write..write_fmt..Adapter$LT$std..fs..File$GT$$GT$17h9a475963423fe632E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::io::Write::write_fmt::Adapter<std::fs::File>"**, [0 x i8]*, i64)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hba729fff3869aee0E" to i8*), i8* bitcast (i1 (%"std::io::Write::write_fmt::Adapter<std::fs::File>"**, i32)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h2fe8ac81821fc6afE" to i8*), i8* bitcast (i1 (%"std::io::Write::write_fmt::Adapter<std::fs::File>"**, %"core::fmt::Arguments"*)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h482e9ea236e0f641E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc513 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc514 = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/fmt/mod.rs" }>, align 1
@alloc515 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [71 x i8] }>, <{ [71 x i8] }>* @alloc514, i32 0, i32 0, i32 0), [16 x i8] c"G\00\00\00\00\00\00\00k\01\00\00\0D\00\00\00" }>, align 8
@str.3 = internal constant [58 x i8] c"attempted to zero-initialize type `&str`, which is invalid"
@alloc516 = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/num/mod.rs" }>, align 1
@alloc517 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [71 x i8] }>, <{ [71 x i8] }>* @alloc516, i32 0, i32 0, i32 0), [16 x i8] c"G\00\00\00\00\00\00\00S\03\00\00\05\00\00\00" }>, align 8
@str.4 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc518 = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/ptr/mod.rs" }>, align 1
@alloc519 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [71 x i8] }>, <{ [71 x i8] }>* @alloc518, i32 0, i32 0, i32 0), [16 x i8] c"G\00\00\00\00\00\00\00\BC\02\00\00\0D\00\00\00" }>, align 8
@alloc520 = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize" }>, align 1
@alloc521 = private unnamed_addr constant <{ [77 x i8] }> <{ [77 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/ptr/const_ptr.rs" }>, align 1
@alloc522 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc521, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00\85\01\00\00\09\00\00\00" }>, align 8
@alloc527 = private unnamed_addr constant <{ [76 x i8] }> <{ [76 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/char/methods.rs" }>, align 1
@alloc524 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc527, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00v\06\00\00\16\00\00\00" }>, align 8
@alloc526 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc527, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\90\06\00\00\0A\00\00\00" }>, align 8
@alloc94 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"encode_utf8: need " }>, align 1
@alloc96 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c" bytes to encode U+" }>, align 1
@alloc97 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c", but the buffer has " }>, align 1
@alloc95 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc94, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc96, i32 0, i32 0, i32 0), [8 x i8] c"\13\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc97, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc528 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc527, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\89\06\00\00\0E\00\00\00" }>, align 8
@alloc529 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/iter/traits/exact_size.rs" }>, align 1
@alloc530 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc529, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00l\00\00\00\09\00\00\00" }>, align 8
@0 = private unnamed_addr constant <{ [16 x i8] }> zeroinitializer, align 8
@alloc531 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"assertion failed: step != 0" }>, align 1
@alloc532 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/iter/adapters/step_by.rs" }>, align 1
@alloc533 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc532, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00\15\00\00\00\09\00\00\00" }>, align 8
@alloc540 = private unnamed_addr constant <{ [49 x i8] }> <{ [49 x i8] c"there is no such thing as an acquire/release load" }>, align 1
@alloc549 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/sync/atomic.rs" }>, align 1
@alloc536 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc549, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00<\09\00\00\17\00\00\00" }>, align 8
@alloc541 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"there is no such thing as a release load" }>, align 1
@alloc539 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc549, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00;\09\00\00\18\00\00\00" }>, align 8
@alloc542 = private unnamed_addr constant <{ [50 x i8] }> <{ [50 x i8] c"there is no such thing as an acquire/release store" }>, align 1
@alloc544 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc549, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00.\09\00\00\17\00\00\00" }>, align 8
@alloc545 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"there is no such thing as an acquire store" }>, align 1
@alloc547 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc549, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00-\09\00\00\18\00\00\00" }>, align 8
@alloc548 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"there is no such thing as a relaxed fence" }>, align 1
@alloc550 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc549, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00{\0A\00\00\18\00\00\00" }>, align 8
@alloc551 = private unnamed_addr constant <{ [76 x i8] }> <{ [76 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/alloc/layout.rs" }>, align 1
@alloc552 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc551, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\18\01\00\009\00\00\00" }>, align 8
@alloc553 = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: mid <= self.len()" }>, align 1
@alloc554 = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/slice/mod.rs" }>, align 1
@alloc555 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [73 x i8] }>, <{ [73 x i8] }>* @alloc554, i32 0, i32 0, i32 0), [16 x i8] c"I\00\00\00\00\00\00\00\1F\06\00\00\09\00\00\00" }>, align 8
@alloc557 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Option::unwrap()` on a `None` value" }>, align 1
@vtable.5 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::io::error::Error"*)* @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h211456880990b21cE" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::io::error::Error"*, %"core::fmt::Formatter"*)* @"_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h827e52fb911077aeE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.6 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::thread::local::AccessError"*)* @"_ZN4core3ptr52drop_in_place$LT$std..thread..local..AccessError$GT$17ha95bfb5dce17b15cE" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::thread::local::AccessError"*, %"core::fmt::Formatter"*)* @"_ZN68_$LT$std..thread..local..AccessError$u20$as$u20$core..fmt..Debug$GT$3fmt17h4742560aef5d22b8E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc610 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.7 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr104drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..rwlock..RwLockReadGuard$LT$i32$GT$$GT$$GT$17had4b19d075e98758E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i64**, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h37f9792248c369ecE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.8 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i8*)* @"_ZN4core3ptr52drop_in_place$LT$core..num..error..ParseIntError$GT$17h6048539c6b3dd394E" to i8*), [16 x i8] c"\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (i8*, %"core::fmt::Formatter"*)* @"_ZN68_$LT$core..num..error..ParseIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17he685b773c162151eE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.9 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64*, i8 }*)* @"_ZN4core3ptr166drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$$GT$17h7bad0bc74b47c879E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64*, i8 }*, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hdf07e3df7689eddcE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.a = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64*, i8 }*)* @"_ZN4core3ptr145drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$$GT$17h3397bb728e8477b1E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64*, i8 }*, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h2c6b02a53225da62E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.b = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"core::num::error::TryFromIntError"*)* @"_ZN4core3ptr54drop_in_place$LT$core..num..error..TryFromIntError$GT$17h13e63c3b0605de1eE" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::num::error::TryFromIntError"*, %"core::fmt::Formatter"*)* @"_ZN70_$LT$core..num..error..TryFromIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e45209909fb04c2E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.c = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64*, i8 }*)* @"_ZN4core3ptr158drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$$GT$17haf22541e72c1e95fE" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64*, i8 }*, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hba969beb5962690eE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.d = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64*, i8 }*)* @"_ZN4core3ptr105drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..rwlock..RwLockWriteGuard$LT$i32$GT$$GT$$GT$17had3e1b0792cd9ffbE" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64*, i8 }*, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h4aba724f914b752eE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.e = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"core::alloc::layout::LayoutError"*)* @"_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17h73173610c2420e90E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::alloc::layout::LayoutError"*, %"core::fmt::Formatter"*)* @"_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17h18b08294eb593cf2E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.f = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64*, i8 }*)* @"_ZN4core3ptr103drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$$GT$17h72d26074c19c85aeE" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64*, i8 }*, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hc595086de48b39d5E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.g = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64*, i8 }*)* @"_ZN4core3ptr108drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$$GT$17h1abf9ea40254334aE" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64*, i8 }*, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h2c54a0bc512714ccE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.h = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64*, i8 }*)* @"_ZN4core3ptr98drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$$GT$17hd5d867184074250cE" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64*, i8 }*, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hfd44579ee3c17748E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.i = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"core::str::error::Utf8Error"*)* @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h0f56a84840f10277E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::str::error::Utf8Error"*, %"core::fmt::Formatter"*)* @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h1c178a3c145491d4E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc614 = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs" }>, align 1
@alloc615 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [107 x i8] }>, <{ [107 x i8] }>* @alloc614, i32 0, i32 0, i32 0), [16 x i8] c"k\00\00\00\00\00\00\00\BF\0A\00\00+\00\00\00" }>, align 8
@vtable.j = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64, i64 }**)* @"_ZN4core3ptr58drop_in_place$LT$$RF$core..option..Option$LT$usize$GT$$GT$17h3d652b8008633118E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64, i64 }**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8e5d4581cd3c5a93E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc619 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"capacity overflow" }>, align 1
@alloc623 = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/alloc/src/collections/vec_deque/mod.rs" }>, align 1
@alloc621 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc623, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00$\02\00\00\09\00\00\00" }>, align 8
@alloc622 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"assertion failed: self.cap() == old_cap * 2" }>, align 1
@alloc624 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc623, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\8D\08\00\00\0D\00\00\00" }>, align 8
@1 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@2 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc446 = private unnamed_addr constant <{ [0 x i8] }> zeroinitializer, align 8
@alloc625 = private unnamed_addr constant <{ [72 x i8] }> <{ [72 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/alloc/src/raw_vec.rs" }>, align 1
@alloc626 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [72 x i8] }>, <{ [72 x i8] }>* @alloc625, i32 0, i32 0, i32 0), [16 x i8] c"H\00\00\00\00\00\00\00\9A\01\00\00\09\00\00\00" }>, align 8
@str.k = internal constant [25 x i8] c"attempt to divide by zero"
@alloc627 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"Some" }>, align 1
@vtable.l = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h2f97a526b18e167aE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i64**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha737c2dc58407cd7E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc631 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"None" }>, align 1
@alloc639 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"PoisonError" }>, align 1
@vtable.m = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ [0 x i8]*, i64 }*)* @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h5769bdeb6b7527e7E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i64 ({ [0 x i8]*, i64 }*)* @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h01c9823a85611c60E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc643 = private unnamed_addr constant <{ [98 x i8] }> <{ [98 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/alloc/src/collections/vec_deque/ring_slices.rs" }>, align 1
@alloc644 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [98 x i8] }>, <{ [98 x i8] }>* @alloc643, i32 0, i32 0, i32 0), [16 x i8] c"b\00\00\00\00\00\00\00 \00\00\00\0E\00\00\00" }>, align 8
@_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE = internal global <{ [8 x i8] }> zeroinitializer, align 8
@_ZN5probe15_PROBE_THRD_SEM17h1ff8d86fa638bd83E = internal global <{ [8 x i8] }> zeroinitializer, align 8
@_ZN5probe16_PROBE_PARENT_ID17h1bc633027d08bcbaE = internal global <{ [8 x i8] }> zeroinitializer, align 8
@_ZN5probe15_PROBE_THRD_MAP17h391daae210d64eb1E = internal global <{ [8 x i8] }> zeroinitializer, align 8
@_ZN5probe21_PROBE_THRD_CUSTOM_ID17h978374fd36dfa2b3E = internal global <{ [8 x i8] }> zeroinitializer, align 8
@_ZN5probe15_PROBE_THRD_EXE17hb3ee71562d869e1cE = internal global <{ [8 x i8] }> zeroinitializer, align 8
@_ZN5probe15_SHUFFLED_ORDER17hb0f2f5030d42cf53E = internal global <{ [8 x i8] }> zeroinitializer, align 8
@alloc646 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"log_neW" }>, align 1
@alloc761 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"probe.rs" }>, align 1
@alloc648 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00*\00\00\00.\00\00\00" }>, align 8
@alloc650 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00,\00\00\001\00\00\00" }>, align 8
@alloc50 = private unnamed_addr constant <{ [54 x i8] }> <{ [54 x i8] c"---------------------From _init_---------------------\0A" }>, align 1
@alloc51 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [54 x i8] }>, <{ [54 x i8] }>* @alloc50, i32 0, i32 0, i32 0), [8 x i8] c"6\00\00\00\00\00\00\00" }>, align 8
@alloc717 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"write failed\0A" }>, align 1
@alloc653 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00-\00\00\00\\\00\00\00" }>, align 8
@alloc57 = private unnamed_addr constant <{ [23 x i8] }> <{ [23 x i8] c"ThreadId(1) :     main\0A" }>, align 1
@alloc58 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [23 x i8] }>, <{ [23 x i8] }>* @alloc57, i32 0, i32 0, i32 0), [8 x i8] c"\17\00\00\00\00\00\00\00" }>, align 8
@alloc656 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00/\00\00\00=\00\00\00" }>, align 8
@alloc657 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"shuffle" }>, align 1
@alloc65 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"read shuffle fail\0A" }>, align 1
@alloc66 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc65, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00" }>, align 8
@alloc70 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"DEBUG read shuffle success\0A" }>, align 1
@alloc71 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [27 x i8] }>, <{ [27 x i8] }>* @alloc70, i32 0, i32 0, i32 0), [8 x i8] c"\1B\00\00\00\00\00\00\00" }>, align 8
@alloc658 = private unnamed_addr constant <{ [23 x i8] }> <{ [23 x i8] c"fail to read from file\0A" }>, align 1
@alloc660 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\008\00\00\00C\00\00\00" }>, align 8
@alloc662 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00I\00\00\001\00\00\00" }>, align 8
@alloc131 = private unnamed_addr constant <{ [53 x i8] }> <{ [53 x i8] c"---------------------From_final---------------------\0A" }>, align 1
@alloc132 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [53 x i8] }>, <{ [53 x i8] }>* @alloc131, i32 0, i32 0, i32 0), [8 x i8] c"5\00\00\00\00\00\00\00" }>, align 8
@alloc665 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00J\00\00\00[\00\00\00" }>, align 8
@alloc666 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"struct" }>, align 1
@alloc668 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00M\00\00\00e\00\00\00" }>, align 8
@alloc670 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00P\00\00\00.\00\00\00" }>, align 8
@alloc139 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"tid " }>, align 1
@alloc141 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c" --------\0A" }>, align 1
@alloc140 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc139, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [10 x i8] }>, <{ [10 x i8] }>* @alloc141, i32 0, i32 0, i32 0), [8 x i8] c"\0A\00\00\00\00\00\00\00" }>, align 8
@alloc673 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00S\00\00\00?\00\00\00" }>, align 8
@alloc675 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00T\00\00\00\11\00\00\00" }>, align 8
@alloc147 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\09" }>, align 1
@alloc449 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\0A" }>, align 1
@alloc148 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc147, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc449, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc678 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00V\00\00\00;\00\00\00" }>, align 8
@alloc680 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00b\00\00\00*\00\00\00" }>, align 8
@alloc682 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00c\00\00\00'\00\00\00" }>, align 8
@alloc684 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00e\00\00\00<\00\00\00" }>, align 8
@alloc686 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00g\00\00\001\00\00\00" }>, align 8
@alloc245 = private unnamed_addr constant <{ [25 x i8] }> <{ [25 x i8] c"|RANDOM_SLEEP_WAKE!|tid: " }>, align 1
@alloc352 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c" | func_name: " }>, align 1
@alloc353 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c" | line: " }>, align 1
@alloc421 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c" | func_num: " }>, align 1
@alloc392 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c" |\0A" }>, align 1
@alloc246 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @alloc245, i32 0, i32 0, i32 0), [8 x i8] c"\19\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc352, i32 0, i32 0, i32 0), [8 x i8] c"\0E\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc353, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc421, i32 0, i32 0, i32 0), [8 x i8] c"\0D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc392, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc382 = private unnamed_addr constant <{ [224 x i8] }> <{ [224 x i8] c}>, align 8
@alloc689 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00i\00\00\00A\00\00\00" }>, align 8
@alloc691 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00v\00\00\00<\00\00\00" }>, align 8
@alloc693 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00z\00\00\001\00\00\00" }>, align 8
@alloc156 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"tid: " }>, align 1
@alloc307 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c" | lock_var_addr: " }>, align 1
@alloc303 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc156, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc352, i32 0, i32 0, i32 0), [8 x i8] c"\0E\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc353, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc421, i32 0, i32 0, i32 0), [8 x i8] c"\0D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc307, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc449, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc342 = private unnamed_addr constant <{ [280 x i8] }> <{ [280 x i8] c}>, align 8
@alloc696 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00|\00\00\00P\00\00\00" }>, align 8
@alloc698 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\8C\00\00\00<\00\00\00" }>, align 8
@alloc700 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\90\00\00\001\00\00\00" }>, align 8
@alloc351 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc156, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc352, i32 0, i32 0, i32 0), [8 x i8] c"\0E\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc353, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc421, i32 0, i32 0, i32 0), [8 x i8] c"\0D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc392, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc703 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\92\00\00\00A\00\00\00" }>, align 8
@alloc705 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\A6\00\00\001\00\00\00" }>, align 8
@alloc390 = private unnamed_addr constant <{ [31 x i8] }> <{ [31 x i8] c" | func_name: spawning | line: " }>, align 1
@alloc389 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc156, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [31 x i8] }>, <{ [31 x i8] }>* @alloc390, i32 0, i32 0, i32 0), [8 x i8] c"\1F\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc421, i32 0, i32 0, i32 0), [8 x i8] c"\0D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc392, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc442 = private unnamed_addr constant <{ [168 x i8] }> <{ [168 x i8] c}>, align 8
@alloc708 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\A8\00\00\002\00\00\00" }>, align 8
@alloc709 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"spawning" }>, align 1
@alloc711 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\B8\00\00\008\00\00\00" }>, align 8
@alloc713 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\BA\00\00\001\00\00\00" }>, align 8
@alloc420 = private unnamed_addr constant <{ [31 x i8] }> <{ [31 x i8] c" | func_name:  spawned | line: " }>, align 1
@alloc422 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c" | " }>, align 1
@alloc419 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc156, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [31 x i8] }>, <{ [31 x i8] }>* @alloc420, i32 0, i32 0, i32 0), [8 x i8] c"\1F\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc421, i32 0, i32 0, i32 0), [8 x i8] c"\0D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc422, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc716 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\BC\00\00\002\00\00\00" }>, align 8
@alloc448 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c" spawned " }>, align 1
@alloc447 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc446, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc448, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc449, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc719 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\BD\00\00\00E\00\00\00" }>, align 8
@alloc720 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"spawned" }>, align 1
@alloc722 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\CE\00\00\00.\00\00\00" }>, align 8
@alloc724 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\CF\00\00\00+\00\00\00" }>, align 8
@alloc726 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\D8\00\00\00(\00\00\00" }>, align 8
@alloc728 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\DA\00\00\006\00\00\00" }>, align 8
@alloc730 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\DD\00\00\00\15\00\00\00" }>, align 8
@alloc732 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\EF\00\00\000\00\00\00" }>, align 8
@alloc734 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\F3\00\00\00\16\00\00\00" }>, align 8
@str.n = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc736 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\F3\00\00\00\0D\00\00\00" }>, align 8
@alloc738 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\0B\01\00\00*\00\00\00" }>, align 8
@alloc740 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\0C\01\00\00\09\00\00\00" }>, align 8
@alloc742 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\0E\01\00\00)\00\00\00" }>, align 8
@alloc744 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\12\01\00\00*\00\00\00" }>, align 8
@alloc746 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00\13\01\00\00\09\00\00\00" }>, align 8
@alloc158 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c", parent_tid: " }>, align 1
@alloc159 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c", line: " }>, align 1
@alloc160 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c", func: " }>, align 1
@alloc161 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c", func_num: " }>, align 1
@alloc175 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c", var: " }>, align 1
@alloc170 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc156, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc158, i32 0, i32 0, i32 0), [8 x i8] c"\0E\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc159, i32 0, i32 0, i32 0), [8 x i8] c"\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc160, i32 0, i32 0, i32 0), [8 x i8] c"\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc161, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [7 x i8] }>, <{ [7 x i8] }>* @alloc175, i32 0, i32 0, i32 0), [8 x i8] c"\07\00\00\00\00\00\00\00" }>, align 8
@alloc215 = private unnamed_addr constant <{ [336 x i8] }> <{ [336 x i8] c}>, align 8
@alloc162 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c", var: None" }>, align 1
@alloc157 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc156, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc158, i32 0, i32 0, i32 0), [8 x i8] c"\0E\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc159, i32 0, i32 0, i32 0), [8 x i8] c"\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc160, i32 0, i32 0, i32 0), [8 x i8] c"\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc161, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [11 x i8] }>, <{ [11 x i8] }>* @alloc162, i32 0, i32 0, i32 0), [8 x i8] c"\0B\00\00\00\00\00\00\00" }>, align 8
@alloc243 = private unnamed_addr constant <{ [280 x i8] }> <{ [280 x i8] c}>, align 8
@alloc748 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00=\01\00\006\00\00\00" }>, align 8
@alloc750 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00?\01\00\00/\00\00\00" }>, align 8
@alloc752 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00J\01\00\00'\00\00\00" }>, align 8
@alloc754 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00K\01\00\007\00\00\00" }>, align 8
@alloc756 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00N\01\00\00+\00\00\00" }>, align 8
@alloc758 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00O\01\00\003\00\00\00" }>, align 8
@alloc760 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00T\01\00\001\00\00\00" }>, align 8
@alloc762 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc761, i32 0, i32 0, i32 0), [16 x i8] c"\08\00\00\00\00\00\00\00X\01\00\003\00\00\00" }>, align 8

; <hashbrown::raw::RawIterHashInner<A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN100_$LT$hashbrown..raw..RawIterHashInner$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hdd1325278bdda391E"(%"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* align 16 dereferenceable(48) %self) unnamed_addr #0 {
start:
  %0 = alloca <2 x i64>, align 16
  %1 = alloca <2 x i64>, align 16
  %2 = alloca i8, align 1
  %3 = alloca <2 x i64>, align 16
  %_2 = alloca { i64, i64 }, align 8
  %4 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %bb14, %start
  %_3 = getelementptr inbounds %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>", %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %self, i32 0, i32 3
; call <hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator>::next
  %5 = call { i64, i64 } @"_ZN95_$LT$hashbrown..raw..bitmask..BitMaskIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hae38ff65ad780fe6E"(i16* align 2 dereferenceable(2) %_3)
  store { i64, i64 } %5, { i64, i64 }* %_2, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = bitcast { i64, i64 }* %_2 to i64*
  %_4 = load i64, i64* %6, align 8, !range !2
  %7 = icmp eq i64 %_4, 1
  br i1 %7, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %8 = bitcast { i64, i64 }* %_2 to %"core::option::Option<usize>::Some"*
  %9 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %8, i32 0, i32 1
  %bit = load i64, i64* %9, align 8
  %10 = getelementptr inbounds %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>", %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %self, i32 0, i32 2
  %11 = bitcast { i64, i64 }* %10 to i64*
  %_8 = load i64, i64* %11, align 8
  %_7 = add i64 %_8, %bit
  %12 = getelementptr inbounds %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>", %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %self, i32 0, i32 1
  %13 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %12, align 16, !nonnull !3
  %14 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %13 to i64*
  %_10 = load i64, i64* %14, align 8
  %index = and i64 %_7, %_10
  %15 = bitcast { i64, i64 }* %4 to %"core::option::Option<usize>::Some"*
  %16 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %15, i32 0, i32 1
  store i64 %index, i64* %16, align 8
  %17 = bitcast { i64, i64 }* %4 to i64*
  store i64 1, i64* %17, align 8
  br label %bb15

bb4:                                              ; preds = %bb2
  %18 = bitcast %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %self to <2 x i64>*
  %_15 = load <2 x i64>, <2 x i64>* %18, align 16
  store <2 x i64> %_15, <2 x i64>* %3, align 16
; call hashbrown::raw::sse2::Group::match_empty
  %_14 = call i16 @_ZN9hashbrown3raw4sse25Group11match_empty17h3316e7517f0cda4cE(<2 x i64>* noalias nocapture dereferenceable(16) %3)
  br label %bb5

bb5:                                              ; preds = %bb4
; call hashbrown::raw::bitmask::BitMask::any_bit_set
  %_13 = call zeroext i1 @_ZN9hashbrown3raw7bitmask7BitMask11any_bit_set17h61e7f7be2421c466E(i16 %_14)
  br label %bb6

bb6:                                              ; preds = %bb5
  %19 = call i1 @llvm.expect.i1(i1 %_13, i1 true)
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %2, align 1
  %21 = load i8, i8* %2, align 1, !range !4
  %_12 = trunc i8 %21 to i1
  br label %bb7

bb7:                                              ; preds = %bb6
  br i1 %_12, label %bb8, label %bb9

bb9:                                              ; preds = %bb7
  %_17 = getelementptr inbounds %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>", %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %self, i32 0, i32 2
  %22 = getelementptr inbounds %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>", %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %self, i32 0, i32 1
  %23 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %22, align 16, !nonnull !3
  %24 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %23 to i64*
  %_18 = load i64, i64* %24, align 8
; call hashbrown::raw::ProbeSeq::move_next
  call void @_ZN9hashbrown3raw8ProbeSeq9move_next17h4ed1df9a9d1ae40cE({ i64, i64 }* align 8 dereferenceable(16) %_17, i64 %_18)
  br label %bb10

bb8:                                              ; preds = %bb7
  %25 = bitcast { i64, i64 }* %4 to i64*
  store i64 0, i64* %25, align 8
  br label %bb15

bb15:                                             ; preds = %bb3, %bb8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0
  %27 = load i64, i64* %26, align 8, !range !2
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1
  ret { i64, i64 } %31

bb10:                                             ; preds = %bb9
  %32 = getelementptr inbounds %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>", %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %self, i32 0, i32 1
  %_22 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %32, align 16, !nonnull !3
  %33 = getelementptr inbounds %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>", %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %self, i32 0, i32 2
  %34 = bitcast { i64, i64 }* %33 to i64*
  %_23 = load i64, i64* %34, align 8
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_21 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_22, i64 %_23)
  br label %bb11

bb11:                                             ; preds = %bb10
; call hashbrown::raw::sse2::Group::load
  call void @_ZN9hashbrown3raw4sse25Group4load17h929c447c903befa1E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %1, i8* %_21)
  %_19 = load <2 x i64>, <2 x i64>* %1, align 16
  br label %bb12

bb12:                                             ; preds = %bb11
  %35 = bitcast %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %self to <2 x i64>*
  store <2 x i64> %_19, <2 x i64>* %35, align 16
  %36 = bitcast %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %self to <2 x i64>*
  %_26 = load <2 x i64>, <2 x i64>* %36, align 16
  %37 = getelementptr inbounds %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>", %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %self, i32 0, i32 4
  %_27 = load i8, i8* %37, align 2
  store <2 x i64> %_26, <2 x i64>* %0, align 16
; call hashbrown::raw::sse2::Group::match_byte
  %_25 = call i16 @_ZN9hashbrown3raw4sse25Group10match_byte17hfcb9e6a3882d5c0bE(<2 x i64>* noalias nocapture dereferenceable(16) %0, i8 %_27)
  br label %bb13

bb13:                                             ; preds = %bb12
; call <hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator>::into_iter
  %_24 = call i16 @"_ZN94_$LT$hashbrown..raw..bitmask..BitMask$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h8f11dc9ac57d9c38E"(i16 %_25)
  br label %bb14

bb14:                                             ; preds = %bb13
  %38 = getelementptr inbounds %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>", %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %self, i32 0, i32 3
  store i16 %_24, i16* %38, align 8
  br label %bb1
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9faa5f88aab080eaE"(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca i8*, align 8
  %2 = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  %_4 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8
  %4 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 5
  %_5 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %4, align 8
  %_2 = icmp eq { [0 x i8]*, i64 }* %_4, %_5
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  br label %bb3

bb1:                                              ; preds = %start
  %5 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %5, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb1
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i8*, i64 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i64 } %10, i64 %9, 1
  ret { i8*, i64 } %11

bb3:                                              ; preds = %bb2
  %12 = icmp eq i64 16, 0
  br i1 %12, label %bb4, label %bb7

bb4:                                              ; preds = %bb3
  %13 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  %_11 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %13, align 8
  %_10 = bitcast { [0 x i8]*, i64 }* %_11 to i8*
  %14 = getelementptr i8, i8* %_10, i64 1
  store i8* %14, i8** %1, align 8
  %_9 = load i8*, i8** %1, align 8
  br label %bb5

bb7:                                              ; preds = %bb3
  %15 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  %old = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %15, align 8
  %16 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  %_15 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %16, align 8
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_15, i64 1
  store { [0 x i8]*, i64 }* %17, { [0 x i8]*, i64 }** %0, align 8
  %18 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  %19 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  store { [0 x i8]*, i64 }* %18, { [0 x i8]*, i64 }** %19, align 8
; call core::ptr::read
  %20 = call { [0 x i8]*, i64 } @_ZN4core3ptr4read17h6180861ee271f480E({ [0 x i8]*, i64 }* %old)
  %_16.0 = extractvalue { [0 x i8]*, i64 } %20, 0
  %_16.1 = extractvalue { [0 x i8]*, i64 } %20, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %21 = bitcast { i8*, i64 }* %2 to { [0 x i8]*, i64 }*
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 0
  store [0 x i8]* %_16.0, [0 x i8]** %22, align 8
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 1
  store i64 %_16.1, i64* %23, align 8
  br label %bb10

bb10:                                             ; preds = %bb6, %bb9
  br label %bb11

bb5:                                              ; preds = %bb4
  %_8 = bitcast i8* %_9 to { [0 x i8]*, i64 }*
  %24 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  store { [0 x i8]*, i64 }* %_8, { [0 x i8]*, i64 }** %24, align 8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([58 x i8]* @str.3 to [0 x i8]*), i64 58, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc467 to %"core::panic::location::Location"*)) #20
; call core::mem::maybe_uninit::MaybeUninit<T>::zeroed
  %25 = call { i8*, i64 } @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6zeroed17h9e148ca4c09fbb82E"()
  %_2.0.i = extractvalue { i8*, i64 } %25, 0
  %_2.1.i = extractvalue { i8*, i64 } %25, 1
  %26 = bitcast i8* %_2.0.i to [0 x i8]*
  %27 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %26, 0
  %28 = insertvalue { [0 x i8]*, i64 } %27, i64 %_2.1.i, 1
  %29 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %26, 0
  %30 = insertvalue { [0 x i8]*, i64 } %29, i64 %_2.1.i, 1
  %31 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %26, 0
  %32 = insertvalue { [0 x i8]*, i64 } %31, i64 %_2.1.i, 1
  %_12.0 = extractvalue { [0 x i8]*, i64 } %32, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %32, 1
  br label %bb6

bb6:                                              ; preds = %bb5
  %33 = bitcast { i8*, i64 }* %2 to { [0 x i8]*, i64 }*
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %33, i32 0, i32 0
  store [0 x i8]* %_12.0, [0 x i8]** %34, align 8
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %33, i32 0, i32 1
  store i64 %_12.1, i64* %35, align 8
  br label %bb10
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h3517c4953fce235fE"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, %"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_12 = alloca { i64, i64 }, align 8
  %exact = alloca i64, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 16, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 5
  %_5 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %2, align 8
  %_4 = ptrtoint { [0 x i8]*, i64 }* %_5 to i64
  %3 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  %_7 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8
  %_6 = ptrtoint { [0 x i8]*, i64 }* %_7 to i64
  %4 = sub i64 %_4, %_6
  store i64 %4, i64* %exact, align 8
  br label %bb3

bb4:                                              ; preds = %bb1
  %5 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 5
  %_9 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  %_10 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %6, align 8
; call core::ptr::const_ptr::<impl *const T>::offset_from
  %_8 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$11offset_from17h56ac58c52849cb49E"({ [0 x i8]*, i64 }* %_9, { [0 x i8]*, i64 }* %_10)
  br label %bb5

bb5:                                              ; preds = %bb4
  store i64 %_8, i64* %exact, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb5
  %_11 = load i64, i64* %exact, align 8
  %_13 = load i64, i64* %exact, align 8
  %7 = bitcast { i64, i64 }* %_12 to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  store i64 %_13, i64* %8, align 8
  %9 = bitcast { i64, i64 }* %_12 to i64*
  store i64 1, i64* %9, align 8
  %10 = bitcast { i64, { i64, i64 } }* %0 to i64*
  store i64 %_11, i64* %10, align 8
  %11 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 0
  %13 = load i64, i64* %12, align 8, !range !2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %15, i64* %17, align 8
  ret void

bb3:                                              ; preds = %bb2
  br label %bb6
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h28cf73313e086464E"(i8* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %2 = alloca { i8*, i64 }, align 8
  %residual = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %residual, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %residual, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %residual to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  %b.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  %b.1 = load i64, i64* %7, align 8
  %8 = bitcast { i8*, i64 }* %2 to { [0 x i8]*, i64 }*
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0
  store [0 x i8]* %b.0, [0 x i8]** %9, align 8
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1
  store i64 %b.1, i64* %10, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = insertvalue { i8*, i64 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i64 } %15, i64 %14, 1
  ret { i8*, i64 } %16
}

; <core::iter::adapters::step_by::StepBy<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0ad93d812beea318E"(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>", %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* %self, i32 0, i32 2
  %2 = load i8, i8* %1, align 8, !range !4
  %_2 = trunc i8 %2 to i1
  br i1 %_2, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %_4 = bitcast %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* %self to { i64, i64 }*
  %3 = getelementptr inbounds %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>", %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %3, align 8
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::nth
  %4 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h4f99d1afb93cd51cE"({ i64, i64 }* align 8 dereferenceable(16) %_4, i64 %_5)
  store { i64, i64 } %4, { i64, i64 }* %0, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>", %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* %self, i32 0, i32 2
  store i8 0, i8* %5, align 8
  %_3 = bitcast %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* %self to { i64, i64 }*
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %6 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h0e85e17e0284a4dfE"({ i64, i64 }* align 8 dereferenceable(16) %_3)
  store { i64, i64 } %6, { i64, i64 }* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8, !range !2
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12

bb4:                                              ; preds = %bb3
  br label %bb5
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hca1d89c8ca04d749E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h33c8fef928034592E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_4, i64 %self.0
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hf5bb20055aa66712E(i8* %2, i64 %_7)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h68dce87c441efd70E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = bitcast [0 x i8]* %slice.0 to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, i8* %1, i64 %self.0
  store i8* %2, i8** %0, align 8
  %_3.i.i = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts_mut
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h2a23878c8d823489E(i8* %_3.i.i, i64 %_7)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hd08b356366a4c007E"(i64 %self.0, i64 %self.1, [0 x i32]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i32*, align 8
  %1 = bitcast [0 x i32]* %slice.0 to i32*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i32, i32* %1, i64 %self.0
  store i32* %2, i32** %0, align 8
  %_3.i.i = load i32*, i32** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts_mut
  %3 = call { [0 x i32]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h5ccde716743148f3E(i32* %_3.i.i, i64 %_7)
  %4 = extractvalue { [0 x i32]*, i64 } %3, 0
  %5 = extractvalue { [0 x i32]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %4, 0
  %7 = insertvalue { [0 x i32]*, i64 } %6, i64 %5, 1
  ret { [0 x i32]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h65df7b68350f6fb3E"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_4 = icmp ugt i64 %self.0, %self.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1
  br i1 %_9, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17hf6d6ed6dae21e8e9E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h68dce87c441efd70E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1)
  %_18.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_18.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h811b684e8de6a021E(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_18.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_18.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hc2d640440e7d18dcE"(i64 %self.0, i64 %self.1, [0 x i32]* nonnull align 4 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_4 = icmp ugt i64 %self.0, %self.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1
  br i1 %_9, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17hf6d6ed6dae21e8e9E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hd08b356366a4c007E"(i64 %self.0, i64 %self.1, [0 x i32]* %slice.0, i64 %slice.1)
  %_18.0 = extractvalue { [0 x i32]*, i64 } %1, 0
  %_18.1 = extractvalue { [0 x i32]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h811b684e8de6a021E(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %_18.0, 0
  %3 = insertvalue { [0 x i32]*, i64 } %2, i64 %_18.1, 1
  ret { [0 x i32]*, i64 } %3
}

; <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4d5b87ca12f549c3E"(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* align 8 dereferenceable(64) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* %self to %"core::str::iter::Split<core::str::IsWhitespace>"*
  %_3 = bitcast %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* %self to %"core::str::IsNotEmpty"*
; call core::iter::traits::iterator::Iterator::find
  %0 = call { i8*, i64 } @_ZN4core4iter6traits8iterator8Iterator4find17h836272c70930cc58E(%"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %_2, %"core::str::IsNotEmpty"* nonnull align 1 %_3)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h75f7ca3554f872d0E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* align 8 dereferenceable(64) %self) unnamed_addr #1 {
start:
  %_3 = alloca { i64, { i64, i64 } }, align 8
  %_4 = bitcast %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* %self to %"core::str::iter::Split<core::str::IsWhitespace>"*
; call core::iter::traits::iterator::Iterator::size_hint
  call void @_ZN4core4iter6traits8iterator8Iterator9size_hint17he9c72383f4646d51E({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_3, %"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %_3, i32 0, i32 1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %upper.0 = load i64, i64* %2, align 8, !range !2
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %upper.1 = load i64, i64* %3, align 8
  %4 = bitcast { i64, { i64, i64 } }* %0 to i64*
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0
  store i64 %upper.0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1
  store i64 %upper.1, i64* %7, align 8
  ret void
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hdb8aa586d2fbfc24E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_5 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_5 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %self, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %7 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h65df7b68350f6fb3E"(i64 %4, i64 %6, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %7, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %9
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb9852e074c53aec2E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %_3 = alloca { i64, i64 }, align 8
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_5 = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h09b58e9b0c38ed9dE"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast { i64, i64 }* %_3 to i64*
  store i64 %self, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %_5, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %6 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hca1d89c8ca04d749E"(i64 %3, i64 %5, [0 x i8]* %slice.0, i64 %slice.1)
  %7 = extractvalue { [0 x i8]*, i64 } %6, 0
  %8 = extractvalue { [0 x i8]*, i64 } %6, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %7, 0
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %8, 1
  ret { [0 x i8]*, i64 } %10
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h1f27fe3d8735d746E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_3 = icmp ugt i64 %self, %slice.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb9852e074c53aec2E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1)
  %_10.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_10.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb3

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17h429384a76db70f0fE(i64 %self, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
  unreachable

bb3:                                              ; preds = %bb2
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_10.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_10.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17hb83950a02f1d1969E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %iterator) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_24 = alloca i8, align 1
  %_23 = alloca i8, align 1
  %_22 = alloca %"core::str::iter::SplitWhitespace", align 8
  %vector1 = alloca %"alloc::vec::Vec<&str>", align 8
  %_8 = alloca { i64, { i64, i64 } }, align 8
  %_3 = alloca { i8*, i64 }, align 8
  %vector = alloca %"alloc::vec::Vec<&str>", align 8
  store i8 0, i8* %_24, align 1
  store i8 0, i8* %_23, align 1
  store i8 1, i8* %_24, align 1
; invoke <core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator>::next
  %3 = invoke { i8*, i64 } @"_ZN91_$LT$core..str..iter..SplitWhitespace$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50da6162aa518711E"(%"core::str::iter::SplitWhitespace"* align 8 dereferenceable(64) %iterator)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store { i8*, i64 } %3, { i8*, i64 }* %_3, align 8
  %4 = bitcast { i8*, i64 }* %_3 to {}**
  %5 = load {}*, {}** %4, align 8
  %6 = icmp eq {}* %5, null
  %_5 = select i1 %6, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb21:                                             ; preds = %bb19, %bb13, %cleanup
  %7 = load i8, i8* %_24, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb20, label %bb15

cleanup:                                          ; preds = %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb21

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h61c0c20f3da59db7E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0)
          to label %bb16 unwind label %cleanup5

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_23, align 1
  %14 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0
  %element.0 = load [0 x i8]*, [0 x i8]** %15, align 8, !nonnull !3
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1
  %element.1 = load i64, i64* %16, align 8
; invoke <core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN91_$LT$core..str..iter..SplitWhitespace$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4088af0cda2b2972E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_8, %"core::str::iter::SplitWhitespace"* align 8 dereferenceable(64) %iterator)
          to label %bb5 unwind label %cleanup2

bb5:                                              ; preds = %bb2
  %17 = bitcast { i64, { i64, i64 } }* %_8 to i64*
  %lower = load i64, i64* %17, align 8
  %18 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1)
  store i64 %18, i64* %1, align 8
  %19 = load i64, i64* %1, align 8
  br label %bb6

bb18:                                             ; preds = %bb14, %cleanup2
  %20 = load i8, i8* %_23, align 1, !range !4
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb17, label %bb19

cleanup2:                                         ; preds = %bb6, %bb2
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb18

bb6:                                              ; preds = %bb5
; invoke alloc::vec::Vec<T>::with_capacity
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h334d68fe986639a5E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %vector1, i64 %19)
          to label %bb7 unwind label %cleanup2

bb7:                                              ; preds = %bb6
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_14 = invoke { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h80f2d9979e978176E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %vector1)
          to label %bb8 unwind label %cleanup3

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_23, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h6c2b7fb957ce2bd5E({ [0 x i8]*, i64 }* %_14, [0 x i8]* nonnull align 1 %element.0, i64 %element.1)
          to label %bb9 unwind label %cleanup3

bb14:                                             ; preds = %cleanup3
; call core::ptr::drop_in_place<alloc::vec::Vec<&str>>
  call void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17h79d85d6a9dea6092E"(%"alloc::vec::Vec<&str>"* %vector1) #21
  br label %bb18

cleanup3:                                         ; preds = %bb9, %bb8, %bb7
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb14

bb9:                                              ; preds = %bb8
; invoke alloc::vec::Vec<T,A>::set_len
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h89201302637a2f5fE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %vector1, i64 1)
          to label %bb10 unwind label %cleanup3

bb10:                                             ; preds = %bb9
  %32 = bitcast %"alloc::vec::Vec<&str>"* %vector to i8*
  %33 = bitcast %"alloc::vec::Vec<&str>"* %vector1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false)
  store i8 0, i8* %_23, align 1
  store i8 0, i8* %_24, align 1
  %34 = bitcast %"core::str::iter::SplitWhitespace"* %_22 to i8*
  %35 = bitcast %"core::str::iter::SplitWhitespace"* %iterator to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 64, i1 false)
; invoke <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  invoke void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17ha0aa8d66a0b35fd4E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %vector, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %_22)
          to label %bb11 unwind label %cleanup4

bb19:                                             ; preds = %cleanup5, %bb17, %bb18
  br label %bb21

bb17:                                             ; preds = %bb18
  br label %bb19

bb11:                                             ; preds = %bb10
  %36 = bitcast %"alloc::vec::Vec<&str>"* %0 to i8*
  %37 = bitcast %"alloc::vec::Vec<&str>"* %vector to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false)
  br label %bb12

bb13:                                             ; preds = %cleanup4
; call core::ptr::drop_in_place<alloc::vec::Vec<&str>>
  call void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17h79d85d6a9dea6092E"(%"alloc::vec::Vec<&str>"* %vector) #21
  br label %bb21

cleanup4:                                         ; preds = %bb10
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  %40 = extractvalue { i8*, i32 } %38, 1
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %39, i8** %41, align 8
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %40, i32* %42, align 8
  br label %bb13

bb12:                                             ; preds = %bb16, %bb11
  ret void

bb16:                                             ; preds = %bb4
  br label %bb12

cleanup5:                                         ; preds = %bb4
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  %45 = extractvalue { i8*, i32 } %43, 1
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %45, i32* %47, align 8
  br label %bb19

bb15:                                             ; preds = %bb20, %bb21
  %48 = bitcast { i8*, i32 }* %2 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %53 = insertvalue { i8*, i32 } %52, i32 %51, 1
  resume { i8*, i32 } %53

bb20:                                             ; preds = %bb21
  br label %bb15
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hd46ef77552d5e21bE"(i8* nonnull %unique) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17he98f1f261e87a8bdE"(i8* nonnull %unique)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h85904ef05060d28aE"(i64 %kind.0, i64 %kind.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h562cbd6b1b4ae4b3E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #1 {
start:
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %6, align 8
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %7 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h85904ef05060d28aE"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h5885b61392823b10E"(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") dereferenceable(24) %0) unnamed_addr #1 {
start:
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc6c8826c50f47c04E"()
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* %0 to %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Err"*
  %2 = bitcast %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Err"* %1 to %"core::alloc::layout::LayoutError"*
  %3 = getelementptr inbounds %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* %0, i32 0, i32 1
  store i64 0, i64* %3, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h62dd9c26bfa1f216E"() unnamed_addr #1 {
start:
  %0 = alloca { i8*, i64 }, align 8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haf4bffc006f7a99cE"()
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i8*, i64 }* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err"*
  %2 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err"* %1 to %"core::alloc::AllocError"*
  %3 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h745729f705e7f875E"() unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc6c8826c50f47c04E"()
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err"*
  %2 = bitcast %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err"* %1 to %"core::alloc::layout::LayoutError"*
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h7c9b06083ac4de8bE"(%"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>") dereferenceable(56) %0, i64 %1, i64 %2) unnamed_addr #1 {
start:
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %6, align 8
; call <T as core::convert::From<T>>::from
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h904b03d5beac2a2aE"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>"* %0 to %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>::Err", %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h9fe578aa0942f458E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #1 {
start:
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %6, align 8
; call <T as core::convert::From<T>>::from
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h360839fe85a6fb25E"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha2c05ca3d9c6943dE"(%"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>"* noalias nocapture sret(%"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>") dereferenceable(24) %0) unnamed_addr #1 {
start:
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h4e66fd1ad434bf3bE"()
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>"* %0 to %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>::Err"*
  %2 = getelementptr inbounds %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>::Err", %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>::Err"* %1, i32 0, i32 1
  %3 = bitcast %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>"* %0 to i64*
  store i64 1, i64* %3, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha4c61f6986952715E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #1 {
start:
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %6, align 8
; call <T as core::convert::From<T>>::from
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h360839fe85a6fb25E"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc980a609c0a9ed43E"(%"core::result::Result<(), hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), hashbrown::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #1 {
start:
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %6, align 8
; call <T as core::convert::From<T>>::from
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h904b03d5beac2a2aE"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<(), hashbrown::TryReserveError>"* %0 to %"core::result::Result<(), hashbrown::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<(), hashbrown::TryReserveError>::Err", %"core::result::Result<(), hashbrown::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<(), hashbrown::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17he159bf1eb484ed92E"(%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>") dereferenceable(40) %0, i64 %1, i64 %2) unnamed_addr #1 {
start:
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %6, align 8
; call <T as core::convert::From<T>>::from
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h904b03d5beac2a2aE"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* %0 to %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Err", %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17he85627546bc9d02fE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #1 {
start:
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %6, align 8
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %7 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h85904ef05060d28aE"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  ret void
}

; <<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN157_$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf206107d4cba666eE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_5 = alloca { i64*, i64 }, align 8
  store i8 0, i8* %_10, align 1
  %1 = bitcast i64** %self to %"alloc::vec::into_iter::IntoIter<&str>"**
  %2 = load %"alloc::vec::into_iter::IntoIter<&str>"*, %"alloc::vec::into_iter::IntoIter<&str>"** %1, align 8, !nonnull !3
  %_4 = bitcast %"alloc::vec::into_iter::IntoIter<&str>"* %2 to %"alloc::alloc::Global"*
  store i8 1, i8* %_10, align 1
; call core::ptr::read
  call void @_ZN4core3ptr4read17hbce6ceabb48c7425E(%"alloc::alloc::Global"* %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %self to %"alloc::vec::into_iter::IntoIter<&str>"**
  %4 = load %"alloc::vec::into_iter::IntoIter<&str>"*, %"alloc::vec::into_iter::IntoIter<&str>"** %3, align 8, !nonnull !3
  %5 = bitcast %"alloc::vec::into_iter::IntoIter<&str>"* %4 to i64**
  %_7 = load i64*, i64** %5, align 8, !nonnull !3
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = invoke { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6191cd23f8e44eacE"(i64* nonnull %_7)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %6 = bitcast i64** %self to %"alloc::vec::into_iter::IntoIter<&str>"**
  %7 = load %"alloc::vec::into_iter::IntoIter<&str>"*, %"alloc::vec::into_iter::IntoIter<&str>"** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %7, i32 0, i32 3
  %_8 = load i64, i64* %8, align 8
  store i8 0, i8* %_10, align 1
; invoke alloc::raw_vec::RawVec<T,A>::from_raw_parts_in
  %9 = invoke { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17h7d8428424c1d994aE"({ [0 x i8]*, i64 }* %_6, i64 %_8)
          to label %bb3 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %10 = load i8, i8* %_10, align 1, !range !4
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  store { i64*, i64 } %9, { i64*, i64 }* %_5, align 8
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17hb848d67a7d0929eeE"({ i64*, i64 }* %_5)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_10, align 1
  ret void

bb5:                                              ; preds = %bb6, %bb7
  %17 = bitcast { i8*, i32 }* %0 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22

bb6:                                              ; preds = %bb7
  br label %bb5
}

; <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::Dropper<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN159_$LT$$LT$alloc..collections..vec_deque..VecDeque$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..Dropper$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3a9e38bbc6e78318E"({ i32*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i32*, i64 }* %self to { [0 x i32]*, i64 }*
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %0, i32 0, i32 0
  %_3.0 = load [0 x i32]*, [0 x i32]** %1, align 8, !nonnull !3
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %0, i32 0, i32 1
  %_3.1 = load i64, i64* %2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <T as core::any::Any>::type_id
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h01c9823a85611c60E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::any::TypeId::of
  %0 = call i64 @_ZN4core3any6TypeId2of17hf7941339227356dfE()
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; std::sys_common::mutex::MovableMutex::raw_unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17hf021d37193ae9062E(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = bitcast i64** %self to %"std::sys::unix::mutex::Mutex"**
  %_2 = load %"std::sys::unix::mutex::Mutex"*, %"std::sys::unix::mutex::Mutex"** %0, align 8, !nonnull !3
; call std::sys::unix::mutex::Mutex::unlock
  call void @_ZN3std3sys4unix5mutex5Mutex6unlock17ha7f3529944b56876E(%"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::sys_common::mutex::MovableMutex::raw_lock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17h273d2dd79f30435aE(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = bitcast i64** %self to %"std::sys::unix::mutex::Mutex"**
  %_2 = load %"std::sys::unix::mutex::Mutex"*, %"std::sys::unix::mutex::Mutex"** %0, align 8, !nonnull !3
; call std::sys::unix::mutex::Mutex::lock
  call void @_ZN3std3sys4unix5mutex5Mutex4lock17h81f51b77ca07a081E(%"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::sys_common::rwlock::MovableRWLock::read_unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common6rwlock13MovableRWLock11read_unlock17hd3ffb4a72e46d6cfE(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = bitcast i64** %self to %"std::sys::unix::rwlock::RWLock"**
  %_2 = load %"std::sys::unix::rwlock::RWLock"*, %"std::sys::unix::rwlock::RWLock"** %0, align 8, !nonnull !3
; call std::sys::unix::rwlock::RWLock::read_unlock
  call void @_ZN3std3sys4unix6rwlock6RWLock11read_unlock17hc43cd3d383eefa03E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::sys_common::rwlock::MovableRWLock::write_unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common6rwlock13MovableRWLock12write_unlock17h87645411ef7cbdcdE(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = bitcast i64** %self to %"std::sys::unix::rwlock::RWLock"**
  %_2 = load %"std::sys::unix::rwlock::RWLock"*, %"std::sys::unix::rwlock::RWLock"** %0, align 8, !nonnull !3
; call std::sys::unix::rwlock::RWLock::write_unlock
  call void @_ZN3std3sys4unix6rwlock6RWLock12write_unlock17hbc6d40648adb5949E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::sys_common::rwlock::MovableRWLock::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common6rwlock13MovableRWLock4read17h4bd39e54facd5eeeE(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = bitcast i64** %self to %"std::sys::unix::rwlock::RWLock"**
  %_2 = load %"std::sys::unix::rwlock::RWLock"*, %"std::sys::unix::rwlock::RWLock"** %0, align 8, !nonnull !3
; call std::sys::unix::rwlock::RWLock::read
  call void @_ZN3std3sys4unix6rwlock6RWLock4read17h63a7d60402fb5d61E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::sys_common::rwlock::MovableRWLock::write
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common6rwlock13MovableRWLock5write17hc5be9b3cfa69a2f6E(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = bitcast i64** %self to %"std::sys::unix::rwlock::RWLock"**
  %_2 = load %"std::sys::unix::rwlock::RWLock"*, %"std::sys::unix::rwlock::RWLock"** %0, align 8, !nonnull !3
; call std::sys::unix::rwlock::RWLock::write
  call void @_ZN3std3sys4unix6rwlock6RWLock5write17h7a1357fdcc0fab8cE(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::sys_common::condvar::Condvar::wait
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common7condvar7Condvar4wait17ha138f06521792bfbE(%"std::sys_common::condvar::Condvar"* align 8 dereferenceable(16) %self, i64** align 8 dereferenceable(8) %mutex) unnamed_addr #1 {
start:
  %_4 = getelementptr inbounds %"std::sys_common::condvar::Condvar", %"std::sys_common::condvar::Condvar"* %self, i32 0, i32 1
; call std::sys_common::condvar::check::SameMutexCheck::verify
  call void @_ZN3std10sys_common7condvar5check14SameMutexCheck6verify17h05fd77e152fcfa51E(%"std::sys_common::condvar::check::SameMutexCheck"* align 8 dereferenceable(8) %_4, i64** align 8 dereferenceable(8) %mutex)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"std::sys_common::condvar::Condvar"* %self to %"std::sys::unix::condvar::Condvar"**
  %_6 = load %"std::sys::unix::condvar::Condvar"*, %"std::sys::unix::condvar::Condvar"** %0, align 8, !nonnull !3
; call std::sys_common::mutex::MovableMutex::raw
  %_8 = call align 8 dereferenceable(40) %"std::sys::unix::mutex::Mutex"* @_ZN3std10sys_common5mutex12MovableMutex3raw17h291a5d574400a240E(i64** align 8 dereferenceable(8) %mutex)
  br label %bb2

bb2:                                              ; preds = %bb1
; call std::sys::unix::condvar::Condvar::wait
  call void @_ZN3std3sys4unix7condvar7Condvar4wait17h21570249c6b3c9bdE(%"std::sys::unix::condvar::Condvar"* align 8 dereferenceable(48) %_6, %"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %_8)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; std::sys_common::backtrace::__rust_end_short_backtrace
; Function Attrs: noinline noreturn nonlazybind uwtable
define void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17h1e2f96ed68be88ecE(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", align 8
  %1 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_2 to i8*
  %2 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call std::panicking::begin_panic::{{closure}}
  call void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17h0cd692dac978da80E"(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_2) #20
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::hint::black_box
  invoke void @_ZN4core4hint9black_box17h4c7df2e865018a98E()
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.trap()
  unreachable

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13
}

; std::collections::hash::map::RandomState::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN3std11collections4hash3map11RandomState3new17hb37874bdd08cddd1E() unnamed_addr #1 {
start:
; call std::thread::local::LocalKey<T>::with
  %0 = call { i64, i64 } @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h0b7ea76177e8514fE"(i64** align 8 dereferenceable(8) bitcast (<{ i8*, [0 x i8] }>* @alloc129 to i64**))
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; std::collections::hash::map::RandomState::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN3std11collections4hash3map11RandomState3new28_$u7b$$u7b$closure$u7d$$u7d$17h453e6777884ed1ddE"({ i64, i64 }* align 8 dereferenceable(16) %keys) unnamed_addr #1 {
start:
  %_9 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
; call core::cell::Cell<T>::get
  %1 = call { i64, i64 } @"_ZN4core4cell13Cell$LT$T$GT$3get17h4ce5ac50e5413e3bE"({ i64, i64 }* align 8 dereferenceable(16) %keys)
  %_5.0 = extractvalue { i64, i64 } %1, 0
  %_5.1 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = add i64 %_5.0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, i64 }* %_9 to i64*
  store i64 %2, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  store i64 %_5.1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h76c672d251d71af1E"({ i64, i64 }* align 8 dereferenceable(16) %keys, i64 %6, i64 %8)
  br label %bb3

bb3:                                              ; preds = %bb2
  %9 = bitcast { i64, i64 }* %0 to i64*
  store i64 %_5.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_5.1, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = insertvalue { i64, i64 } undef, i64 %12, 0
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1
  ret { i64, i64 } %16
}

; std::collections::hash::map::RandomState::new::KEYS::__init
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN3std11collections4hash3map11RandomState3new4KEYS6__init17h43625dd4dbef490fE() unnamed_addr #1 {
start:
; call std::sys::unix::rand::hashmap_random_keys
  %0 = call { i64, i64 } @_ZN3std3sys4unix4rand19hashmap_random_keys17hef8077cc4ee723c6E()
  %_1.0 = extractvalue { i64, i64 } %0, 0
  %_1.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::cell::Cell<T>::new
  %1 = call { i64, i64 } @"_ZN4core4cell13Cell$LT$T$GT$3new17h70ae99796dfa92e2E"(i64 %_1.0, i64 %_1.1)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; std::collections::hash::map::RandomState::new::KEYS::__getit
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 dereferenceable_or_null(16) i64* @_ZN3std11collections4hash3map11RandomState3new4KEYS7__getit17h46866a828f9fcf12E() unnamed_addr #1 {
start:
; call std::thread::local::fast::Key<T>::get
  %0 = call align 8 dereferenceable_or_null(16) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17hebf8f753599c2456E"(%"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(32) @_ZN3std11collections4hash3map11RandomState3new4KEYS7__getit5__KEY17h99907fa180e5819cE)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; std::collections::hash::map::Entry<K,V>::or_insert
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN3std11collections4hash3map18Entry$LT$K$C$V$GT$9or_insert17h1a83f9084e716f88E"(%"std::collections::hash::map::Entry<std::thread::ThreadId, i32>"* noalias nocapture dereferenceable(32) %self, i32 %default) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_11 = alloca %"std::collections::hash::map::VacantEntry<std::thread::ThreadId, i32>", align 8
  %entry1 = alloca %"std::collections::hash::map::VacantEntry<std::thread::ThreadId, i32>", align 8
  %_8 = alloca %"std::collections::hash::map::OccupiedEntry<std::thread::ThreadId, i32>", align 8
  %entry = alloca %"std::collections::hash::map::OccupiedEntry<std::thread::ThreadId, i32>", align 8
  %_4 = alloca i32*, align 8
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_13, align 1
  %1 = bitcast %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>"* %self to i64*
  %_5 = load i64, i64* %1, align 8, !range !2
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>"* %self to %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>::Occupied"*
  %3 = getelementptr inbounds %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>::Occupied", %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>::Occupied"* %2, i32 0, i32 1
  %4 = bitcast %"std::collections::hash::map::OccupiedEntry<std::thread::ThreadId, i32>"* %entry to i8*
  %5 = bitcast %"std::collections::hash::map::OccupiedEntry<std::thread::ThreadId, i32>"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  %6 = bitcast %"std::collections::hash::map::OccupiedEntry<std::thread::ThreadId, i32>"* %_8 to i8*
  %7 = bitcast %"std::collections::hash::map::OccupiedEntry<std::thread::ThreadId, i32>"* %entry to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
; invoke std::collections::hash::map::OccupiedEntry<K,V>::into_mut
  %_7 = invoke align 4 dereferenceable(4) i32* @"_ZN3std11collections4hash3map26OccupiedEntry$LT$K$C$V$GT$8into_mut17h1ca911e54dbcaaf1E"(%"std::collections::hash::map::OccupiedEntry<std::thread::ThreadId, i32>"* noalias nocapture dereferenceable(24) %_8)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %start
  %8 = bitcast %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>"* %self to %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>::Vacant"*
  %9 = getelementptr inbounds %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>::Vacant", %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>::Vacant"* %8, i32 0, i32 1
  %10 = bitcast %"std::collections::hash::map::VacantEntry<std::thread::ThreadId, i32>"* %entry1 to i8*
  %11 = bitcast %"std::collections::hash::map::VacantEntry<std::thread::ThreadId, i32>"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false)
  %12 = bitcast %"std::collections::hash::map::VacantEntry<std::thread::ThreadId, i32>"* %_11 to i8*
  %13 = bitcast %"std::collections::hash::map::VacantEntry<std::thread::ThreadId, i32>"* %entry1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  store i8 0, i8* %_13, align 1
; invoke std::collections::hash::map::VacantEntry<K,V>::insert
  %_10 = invoke align 4 dereferenceable(4) i32* @"_ZN3std11collections4hash3map24VacantEntry$LT$K$C$V$GT$6insert17h640a720c6dd561b3E"(%"std::collections::hash::map::VacantEntry<std::thread::ThreadId, i32>"* noalias nocapture dereferenceable(24) %_11, i32 %default)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb1
  store i32* %_10, i32** %_4, align 8
  br label %bb6

bb10:                                             ; preds = %cleanup
  %14 = load i8, i8* %_13, align 1, !range !4
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb9, label %bb11

cleanup:                                          ; preds = %bb3, %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb10

bb6:                                              ; preds = %bb4, %bb5
  %_3 = load i32*, i32** %_4, align 8, !nonnull !3
  %21 = load i8, i8* %_13, align 1, !range !4
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb8, label %bb7

bb4:                                              ; preds = %bb3
  store i32* %_7, i32** %_4, align 8
  br label %bb6

bb11:                                             ; preds = %bb9, %bb10
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb9:                                              ; preds = %bb10
  br label %bb11

bb7:                                              ; preds = %bb8, %bb6
  ret i32* %_3

bb8:                                              ; preds = %bb6
  br label %bb7
}

; std::collections::hash::map::HashMap<K,V>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std11collections4hash3map20HashMap$LT$K$C$V$GT$3new17h897dfa1f07da2d42E"(%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* noalias nocapture sret(%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>") dereferenceable(48) %0) unnamed_addr #1 {
start:
; call <std::collections::hash::map::HashMap<K,V,S> as core::default::Default>::default
  call void @"_ZN96_$LT$std..collections..hash..map..HashMap$LT$K$C$V$C$S$GT$$u20$as$u20$core..default..Default$GT$7default17h3965d4194a230f06E"(%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* noalias nocapture sret(%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>") dereferenceable(48) %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::collections::hash::map::HashMap<K,V,S>::with_hasher
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std11collections4hash3map24HashMap$LT$K$C$V$C$S$GT$11with_hasher17h9d91a2efa04c6e9aE"(%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* noalias nocapture sret(%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>") dereferenceable(48) %0, i64 %hash_builder.0, i64 %hash_builder.1) unnamed_addr #1 {
start:
  %_2 = alloca %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>", align 8
; call hashbrown::map::HashMap<K,V,S>::with_hasher
  call void @"_ZN9hashbrown3map24HashMap$LT$K$C$V$C$S$GT$11with_hasher17hb97db696b3da97b8E"(%"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* noalias nocapture sret(%"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>") dereferenceable(48) %_2, i64 %hash_builder.0, i64 %hash_builder.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* %0 to %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"*
  %2 = bitcast %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* %1 to i8*
  %3 = bitcast %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 48, i1 false)
  ret void
}

; std::collections::hash::map::HashMap<K,V,S>::entry
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std11collections4hash3map24HashMap$LT$K$C$V$C$S$GT$5entry17h2dcf38ab880c8131E"(%"std::collections::hash::map::Entry<std::thread::ThreadId, i32>"* noalias nocapture sret(%"std::collections::hash::map::Entry<std::thread::ThreadId, i32>") dereferenceable(32) %0, %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* align 8 dereferenceable(48) %self, i64 %key) unnamed_addr #1 {
start:
  %_3 = alloca %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>", align 8
  %_4 = bitcast %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* %self to %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"*
; call hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry
  call void @"_ZN9hashbrown11rustc_entry62_$LT$impl$u20$hashbrown..map..HashMap$LT$K$C$V$C$S$C$A$GT$$GT$11rustc_entry17hafe1c2ac87285debE"(%"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>"* noalias nocapture sret(%"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>") dereferenceable(32) %_3, %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* align 8 dereferenceable(48) %_4, i64 %key)
  br label %bb1

bb1:                                              ; preds = %start
; call std::collections::hash::map::map_entry
  call void @_ZN3std11collections4hash3map9map_entry17h6bc91b92e44e71a7E(%"std::collections::hash::map::Entry<std::thread::ThreadId, i32>"* noalias nocapture sret(%"std::collections::hash::map::Entry<std::thread::ThreadId, i32>") dereferenceable(32) %0, %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>"* noalias nocapture dereferenceable(32) %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::collections::hash::map::VacantEntry<K,V>::insert
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN3std11collections4hash3map24VacantEntry$LT$K$C$V$GT$6insert17h640a720c6dd561b3E"(%"std::collections::hash::map::VacantEntry<std::thread::ThreadId, i32>"* noalias nocapture dereferenceable(24) %self, i32 %value) unnamed_addr #1 {
start:
  %_5 = alloca %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>", align 8
  %0 = bitcast %"std::collections::hash::map::VacantEntry<std::thread::ThreadId, i32>"* %self to %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"*
  %1 = bitcast %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %_5 to i8*
  %2 = bitcast %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call hashbrown::rustc_entry::RustcVacantEntry<K,V,A>::insert
  %_4 = call align 4 dereferenceable(4) i32* @"_ZN9hashbrown11rustc_entry33RustcVacantEntry$LT$K$C$V$C$A$GT$6insert17h61619651df5920e5E"(%"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* noalias nocapture dereferenceable(24) %_5, i32 %value)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_4
}

; std::collections::hash::map::OccupiedEntry<K,V>::into_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN3std11collections4hash3map26OccupiedEntry$LT$K$C$V$GT$8into_mut17h1ca911e54dbcaaf1E"(%"std::collections::hash::map::OccupiedEntry<std::thread::ThreadId, i32>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_4 = alloca %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>", align 8
  %0 = bitcast %"std::collections::hash::map::OccupiedEntry<std::thread::ThreadId, i32>"* %self to %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"*
  %1 = bitcast %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* %_4 to i8*
  %2 = bitcast %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call hashbrown::rustc_entry::RustcOccupiedEntry<K,V,A>::into_mut
  %_3 = call align 4 dereferenceable(4) i32* @"_ZN9hashbrown11rustc_entry35RustcOccupiedEntry$LT$K$C$V$C$A$GT$8into_mut17ha128a54a97928514E"(%"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* noalias nocapture dereferenceable(24) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_3
}

; std::collections::hash::map::map_entry
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN3std11collections4hash3map9map_entry17h6bc91b92e44e71a7E(%"std::collections::hash::map::Entry<std::thread::ThreadId, i32>"* noalias nocapture sret(%"std::collections::hash::map::Entry<std::thread::ThreadId, i32>") dereferenceable(32) %0, %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>"* noalias nocapture dereferenceable(32) %raw) unnamed_addr #1 {
start:
  %_8 = alloca %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>", align 8
  %_7 = alloca %"std::collections::hash::map::VacantEntry<std::thread::ThreadId, i32>", align 8
  %base1 = alloca %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>", align 8
  %_5 = alloca %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>", align 8
  %_4 = alloca %"std::collections::hash::map::OccupiedEntry<std::thread::ThreadId, i32>", align 8
  %base = alloca %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>", align 8
  %1 = bitcast %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>"* %raw to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>"* %raw to %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>::Occupied"*
  %3 = getelementptr inbounds %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>::Occupied", %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>::Occupied"* %2, i32 0, i32 1
  %4 = bitcast %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* %base to i8*
  %5 = bitcast %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  %6 = bitcast %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* %_5 to i8*
  %7 = bitcast %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* %base to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  %8 = bitcast %"std::collections::hash::map::OccupiedEntry<std::thread::ThreadId, i32>"* %_4 to %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"*
  %9 = bitcast %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* %8 to i8*
  %10 = bitcast %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = bitcast %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>"* %0 to %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>::Occupied"*
  %12 = getelementptr inbounds %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>::Occupied", %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>::Occupied"* %11, i32 0, i32 1
  %13 = bitcast %"std::collections::hash::map::OccupiedEntry<std::thread::ThreadId, i32>"* %12 to i8*
  %14 = bitcast %"std::collections::hash::map::OccupiedEntry<std::thread::ThreadId, i32>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  %15 = bitcast %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>"* %0 to i64*
  store i64 0, i64* %15, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %16 = bitcast %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>"* %raw to %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>::Vacant"*
  %17 = getelementptr inbounds %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>::Vacant", %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>::Vacant"* %16, i32 0, i32 1
  %18 = bitcast %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %base1 to i8*
  %19 = bitcast %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false)
  %20 = bitcast %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %_8 to i8*
  %21 = bitcast %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %base1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false)
  %22 = bitcast %"std::collections::hash::map::VacantEntry<std::thread::ThreadId, i32>"* %_7 to %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"*
  %23 = bitcast %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %22 to i8*
  %24 = bitcast %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false)
  %25 = bitcast %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>"* %0 to %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>::Vacant"*
  %26 = getelementptr inbounds %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>::Vacant", %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>::Vacant"* %25, i32 0, i32 1
  %27 = bitcast %"std::collections::hash::map::VacantEntry<std::thread::ThreadId, i32>"* %26 to i8*
  %28 = bitcast %"std::collections::hash::map::VacantEntry<std::thread::ThreadId, i32>"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false)
  %29 = bitcast %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>"* %0 to i64*
  store i64 1, i64* %29, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; std::fs::OpenOptions::open
; Function Attrs: nonlazybind uwtable
define void @_ZN3std2fs11OpenOptions4open17h1cda0d010ba70858E(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24) %0, %"std::fs::OpenOptions"* align 4 dereferenceable(16) %self, [0 x i8]* nonnull align 1 %1, i64 %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %path = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %path, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %path, i32 0, i32 1
  store i64 %2, i64* %5, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %6 = invoke { %"std::path::Path"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17hcd92eae36b9b473dE"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %path)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { %"std::path::Path"*, i64 } %6, 0
  %_5.1 = extractvalue { %"std::path::Path"*, i64 } %6, 1
; invoke std::fs::OpenOptions::_open
  invoke void @_ZN3std2fs11OpenOptions5_open17hf9a7f113c14c71dfE(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24) %0, %"std::fs::OpenOptions"* align 4 dereferenceable(16) %self, %"std::path::Path"* nonnull align 1 %_5.0, i64 %_5.1)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  br label %bb3

bb5:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %3 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17

bb3:                                              ; preds = %bb2
  ret void
}

; std::io::Write::write_all
; Function Attrs: nonlazybind uwtable
define i128 @_ZN3std2io5Write9write_all17h4b7afc93b95c103eE(i32* align 4 dereferenceable(4) %self, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i128, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_32 = alloca i8, align 1
  %_29 = alloca %"std::io::error::Error", align 8
  %e1 = alloca %"std::io::error::Error", align 8
  %_25 = alloca i8, align 1
  %e = alloca %"std::io::error::Error"*, align 8
  %_19 = alloca i64, align 8
  %_11 = alloca i8, align 1
  %_10 = alloca %"std::io::error::Error", align 8
  %_6 = alloca %"core::result::Result<usize, std::io::error::Error>", align 8
  %4 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %buf = alloca { [0 x i8]*, i64 }, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  store i64 %1, i64* %6, align 8
  store i8 0, i8* %_32, align 1
  br label %bb1

bb1:                                              ; preds = %bb20, %start
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  %_5.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !3
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  %_5.1 = load i64, i64* %8, align 8
; call core::slice::<impl [T]>::is_empty
  %_4 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hd5917bb55b00e93fE"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb3, label %bb16

bb16:                                             ; preds = %bb2
  %9 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to i8*
  store i8 4, i8* %9, align 8
  br label %bb18

bb3:                                              ; preds = %bb2
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  %_8.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !3
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  %_8.1 = load i64, i64* %11, align 8
  store i8 1, i8* %_32, align 1
; call <std::fs::File as std::io::Write>::write
  call void @"_ZN48_$LT$std..fs..File$u20$as$u20$std..io..Write$GT$5write17h03102cc4fd32491dE"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<usize, std::io::error::Error>") dereferenceable(24) %_6, i32* align 4 dereferenceable(4) %self, [0 x i8]* nonnull align 1 %_8.0, i64 %_8.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %12 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to i64*
  %_9 = load i64, i64* %12, align 8, !range !2
  switch i64 %_9, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb11
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %13 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Ok"*
  %14 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Ok", %"core::result::Result<usize, std::io::error::Error>::Ok"* %13, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %bb7, label %bb9

bb11:                                             ; preds = %bb4
  %17 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %17, i32 0, i32 1
  store %"std::io::error::Error"* %18, %"std::io::error::Error"** %e, align 8
  %_26 = load %"std::io::error::Error"*, %"std::io::error::Error"** %e, align 8, !nonnull !3
; invoke std::io::error::Error::kind
  %19 = invoke i8 @_ZN3std2io5error5Error4kind17h930fbdc40b54cc50E(%"std::io::error::Error"* align 8 dereferenceable(16) %_26)
          to label %bb12 unwind label %cleanup, !range !5

bb12:                                             ; preds = %bb11
  store i8 %19, i8* %_25, align 1
; invoke <std::io::error::ErrorKind as core::cmp::PartialEq>::eq
  %_23 = invoke zeroext i1 @"_ZN66_$LT$std..io..error..ErrorKind$u20$as$u20$core..cmp..PartialEq$GT$2eq17h3114da9cff7372f6E"(i8* align 1 dereferenceable(1) %_25, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc92, i32 0, i32 0, i32 0))
          to label %bb13 unwind label %cleanup

bb26:                                             ; preds = %cleanup
  %20 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to i64*
  %_34 = load i64, i64* %20, align 8, !range !2
  %21 = icmp eq i64 %_34, 1
  br i1 %21, label %bb24, label %bb19

cleanup:                                          ; preds = %bb7, %bb9, %bb12, %bb11
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb26

bb13:                                             ; preds = %bb12
  br i1 %_23, label %bb14, label %bb15

bb15:                                             ; preds = %bb13
  store i8 0, i8* %_32, align 1
  %27 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %27, i32 0, i32 1
  %29 = bitcast %"std::io::error::Error"* %e1 to i8*
  %30 = bitcast %"std::io::error::Error"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false)
  %31 = bitcast %"std::io::error::Error"* %_29 to i8*
  %32 = bitcast %"std::io::error::Error"* %e1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false)
  %33 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %34 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %33 to %"std::io::error::Error"*
  %35 = bitcast %"std::io::error::Error"* %34 to i8*
  %36 = bitcast %"std::io::error::Error"* %_29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false)
  br label %bb17

bb14:                                             ; preds = %bb13
  br label %bb23

bb23:                                             ; preds = %bb10, %bb14
  %37 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to i64*
  %_33 = load i64, i64* %37, align 8, !range !2
  %38 = icmp eq i64 %_33, 1
  br i1 %38, label %bb21, label %bb20

bb17:                                             ; preds = %bb8, %bb15
  store i8 0, i8* %_32, align 1
  br label %bb18

bb7:                                              ; preds = %bb5
  store i8 23, i8* %_11, align 1
  %39 = load i8, i8* %_11, align 1, !range !5
; invoke std::io::error::Error::new_const
  %40 = invoke i128 @_ZN3std2io5error5Error9new_const17ha2efdad0995b6808E(i8 %39, { [0 x i8]*, i64 }* align 8 dereferenceable(16) bitcast (<{ i8*, [8 x i8] }>* @alloc90 to { [0 x i8]*, i64 }*))
          to label %bb8 unwind label %cleanup

bb9:                                              ; preds = %bb5
  %41 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Ok"*
  %42 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Ok", %"core::result::Result<usize, std::io::error::Error>::Ok"* %41, i32 0, i32 1
  %n = load i64, i64* %42, align 8
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  %_18.0 = load [0 x i8]*, [0 x i8]** %43, align 8, !nonnull !3
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  %_18.1 = load i64, i64* %44, align 8
  store i64 %n, i64* %_19, align 8
  %45 = load i64, i64* %_19, align 8
; invoke core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %46 = invoke { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h741bc83631f22e6cE"([0 x i8]* nonnull align 1 %_18.0, i64 %_18.1, i64 %45, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc486 to %"core::panic::location::Location"*))
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %_17.0 = extractvalue { [0 x i8]*, i64 } %46, 0
  %_17.1 = extractvalue { [0 x i8]*, i64 } %46, 1
  %47 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  store [0 x i8]* %_17.0, [0 x i8]** %47, align 8
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  store i64 %_17.1, i64* %48, align 8
  br label %bb23

bb21:                                             ; preds = %bb23
  %49 = load i8, i8* %_32, align 1, !range !4
  %50 = trunc i8 %49 to i1
  br i1 %50, label %bb22, label %bb20

bb20:                                             ; preds = %bb22, %bb21, %bb23
  store i8 0, i8* %_32, align 1
  br label %bb1

bb22:                                             ; preds = %bb21
  %51 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %52 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %51, i32 0, i32 1
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h211456880990b21cE"(%"std::io::error::Error"* %52)
  br label %bb20

bb8:                                              ; preds = %bb7
  store i128 %40, i128* %2, align 8
  %53 = bitcast %"std::io::error::Error"* %_10 to i8*
  %54 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 16, i1 false)
  %55 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %56 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %55 to %"std::io::error::Error"*
  %57 = bitcast %"std::io::error::Error"* %56 to i8*
  %58 = bitcast %"std::io::error::Error"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 16, i1 false)
  br label %bb17

bb24:                                             ; preds = %bb26
  %59 = load i8, i8* %_32, align 1, !range !4
  %60 = trunc i8 %59 to i1
  br i1 %60, label %bb25, label %bb19

bb19:                                             ; preds = %bb25, %bb24, %bb26
  %61 = bitcast { i8*, i32 }* %3 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = insertvalue { i8*, i32 } undef, i8* %62, 0
  %66 = insertvalue { i8*, i32 } %65, i32 %64, 1
  resume { i8*, i32 } %66

bb25:                                             ; preds = %bb24
  %67 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %68 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %67, i32 0, i32 1
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h211456880990b21cE"(%"std::io::error::Error"* %68) #21
  br label %bb19

bb18:                                             ; preds = %bb16, %bb17
  %69 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to i128*
  %70 = load i128, i128* %69, align 8
  ret i128 %70
}

; std::io::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define i128 @_ZN3std2io5Write9write_fmt17hf9981e1ad317e608E(i32* align 4 dereferenceable(4) %self, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %fmt) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i128, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_19 = alloca i8, align 1
  %_15 = alloca i8, align 1
  %_14 = alloca %"std::io::error::Error", align 8
  %_10 = alloca %"core::fmt::Arguments", align 8
  %_6 = alloca i8, align 1
  %_5 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %output = alloca %"std::io::Write::write_fmt::Adapter<std::fs::File>", align 8
  %2 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  store i8 0, i8* %_19, align 1
  %3 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_5 to i8*
  store i8 4, i8* %3, align 8
  store i8 1, i8* %_19, align 1
  %4 = bitcast %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %output to i32**
  store i32* %self, i32** %4, align 8
  %5 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %output, i32 0, i32 1
  %6 = bitcast %"core::result::Result<(), std::io::error::Error>"* %5 to i8*
  %7 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false)
  %_7.0 = bitcast %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %output to {}*
  %8 = bitcast %"core::fmt::Arguments"* %_10 to i8*
  %9 = bitcast %"core::fmt::Arguments"* %fmt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 48, i1 false)
; invoke core::fmt::write
  %10 = invoke zeroext i1 @_ZN4core3fmt5write17h182b3dab33fa727dE({}* nonnull align 1 %_7.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.0 to [3 x i64]*), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_10)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %_6, align 1
  %12 = load i8, i8* %_6, align 1, !range !4
  %13 = trunc i8 %12 to i1
  %_11 = zext i1 %13 to i64
  switch i64 %_11, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb10:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::Write::write_fmt::Adapter<std::fs::File>>
  call void @"_ZN4core3ptr76drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..fs..File$GT$$GT$17hcdc823dc7b0aab2cE"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* %output) #21
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb2, %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb10

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<(), std::io::error::Error>"* %2 to i8*
  store i8 4, i8* %19, align 8
  br label %bb14

bb2:                                              ; preds = %bb1
  %_13 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %output, i32 0, i32 1
; invoke core::result::Result<T,E>::is_err
  %_12 = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hbf4242f5832da1c1E"(%"core::result::Result<(), std::io::error::Error>"* align 8 dereferenceable(16) %_13)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb2
  br i1 %_12, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  store i8 40, i8* %_15, align 1
  %20 = load i8, i8* %_15, align 1, !range !5
; invoke std::io::error::Error::new_const
  %21 = invoke i128 @_ZN3std2io5error5Error9new_const17ha2efdad0995b6808E(i8 %20, { [0 x i8]*, i64 }* align 8 dereferenceable(16) bitcast (<{ i8*, [8 x i8] }>* @alloc87 to { [0 x i8]*, i64 }*))
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_19, align 1
  %22 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %output, i32 0, i32 1
  %23 = bitcast %"core::result::Result<(), std::io::error::Error>"* %2 to i8*
  %24 = bitcast %"core::result::Result<(), std::io::error::Error>"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  br label %bb9

bb9:                                              ; preds = %bb8, %bb6
  br label %bb14

bb8:                                              ; preds = %bb7
  store i128 %21, i128* %0, align 8
  %25 = bitcast %"std::io::error::Error"* %_14 to i8*
  %26 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false)
  %27 = bitcast %"core::result::Result<(), std::io::error::Error>"* %2 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %28 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %27 to %"std::io::error::Error"*
  %29 = bitcast %"std::io::error::Error"* %28 to i8*
  %30 = bitcast %"std::io::error::Error"* %_14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false)
  br label %bb9

bb11:                                             ; preds = %bb10
  %31 = bitcast { i8*, i32 }* %1 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = insertvalue { i8*, i32 } undef, i8* %32, 0
  %36 = insertvalue { i8*, i32 } %35, i32 %34, 1
  resume { i8*, i32 } %36

bb14:                                             ; preds = %bb4, %bb9
  %37 = load i8, i8* %_19, align 1, !range !4
  %38 = trunc i8 %37 to i1
  br i1 %38, label %bb13, label %bb12

bb12:                                             ; preds = %bb13, %bb14
  store i8 0, i8* %_19, align 1
  %39 = bitcast %"core::result::Result<(), std::io::error::Error>"* %2 to i128*
  %40 = load i128, i128* %39, align 8
  ret i128 %40

bb13:                                             ; preds = %bb14
  %41 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %output, i32 0, i32 1
; call core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  call void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h676bc739b61a0c43E"(%"core::result::Result<(), std::io::error::Error>"* %41)
  br label %bb12
}

; std::io::error::Error::kind
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN3std2io5error5Error4kind17h930fbdc40b54cc50E(%"std::io::error::Error"* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %2 = bitcast %"std::io::error::Repr"* %1 to i8*
  %3 = load i8, i8* %2, align 8, !range !6
  %_2 = zext i8 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb6
    i64 2, label %bb1
    i64 3, label %bb5
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %5 = bitcast %"std::io::error::Repr"* %4 to %"std::io::error::Repr::Os"*
  %6 = getelementptr inbounds %"std::io::error::Repr::Os", %"std::io::error::Repr::Os"* %5, i32 0, i32 1
  %code = load i32, i32* %6, align 4
; call std::sys::unix::decode_error_kind
  %7 = call i8 @_ZN3std3sys4unix17decode_error_kind17h0b4b195659215c25E(i32 %code), !range !5
  store i8 %7, i8* %0, align 1
  br label %bb4

bb6:                                              ; preds = %start
  %8 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %9 = bitcast %"std::io::error::Repr"* %8 to %"std::io::error::Repr::Simple"*
  %10 = getelementptr inbounds %"std::io::error::Repr::Simple", %"std::io::error::Repr::Simple"* %9, i32 0, i32 1
  %kind1 = load i8, i8* %10, align 1, !range !5
  store i8 %kind1, i8* %0, align 1
  br label %bb7

bb1:                                              ; preds = %start
  %11 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %12 = bitcast %"std::io::error::Repr"* %11 to %"std::io::error::Repr::SimpleMessage"*
  %13 = getelementptr inbounds %"std::io::error::Repr::SimpleMessage", %"std::io::error::Repr::SimpleMessage"* %12, i32 0, i32 1
  %kind = load i8, i8* %13, align 1, !range !5
  store i8 %kind, i8* %0, align 1
  br label %bb7

bb5:                                              ; preds = %start
  %14 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %15 = bitcast %"std::io::error::Repr"* %14 to %"std::io::error::Repr::Custom"*
  %c = getelementptr inbounds %"std::io::error::Repr::Custom", %"std::io::error::Repr::Custom"* %15, i32 0, i32 1
  %16 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %c, align 8, !nonnull !3
  %17 = getelementptr inbounds %"std::io::error::Custom", %"std::io::error::Custom"* %16, i32 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !5
  store i8 %18, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6, %bb1, %bb5
  %19 = load i8, i8* %0, align 1, !range !5
  ret i8 %19

bb4:                                              ; preds = %bb3
  br label %bb7
}

; std::io::error::Error::new_const
; Function Attrs: inlinehint nonlazybind uwtable
define internal i128 @_ZN3std2io5error5Error9new_const17ha2efdad0995b6808E(i8 %kind, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %message) unnamed_addr #1 {
start:
  %_3 = alloca %"std::io::error::Repr", align 8
  %0 = alloca %"std::io::error::Error", align 8
  %1 = bitcast %"std::io::error::Repr"* %_3 to %"std::io::error::Repr::SimpleMessage"*
  %2 = getelementptr inbounds %"std::io::error::Repr::SimpleMessage", %"std::io::error::Repr::SimpleMessage"* %1, i32 0, i32 1
  store i8 %kind, i8* %2, align 1
  %3 = bitcast %"std::io::error::Repr"* %_3 to %"std::io::error::Repr::SimpleMessage"*
  %4 = getelementptr inbounds %"std::io::error::Repr::SimpleMessage", %"std::io::error::Repr::SimpleMessage"* %3, i32 0, i32 3
  store { [0 x i8]*, i64 }* %message, { [0 x i8]*, i64 }** %4, align 8
  %5 = bitcast %"std::io::error::Repr"* %_3 to i8*
  store i8 2, i8* %5, align 8
  %6 = bitcast %"std::io::error::Error"* %0 to %"std::io::error::Repr"*
  %7 = bitcast %"std::io::error::Repr"* %6 to i8*
  %8 = bitcast %"std::io::error::Repr"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  %9 = bitcast %"std::io::error::Error"* %0 to i128*
  %10 = load i128, i128* %9, align 8
  ret i128 %10
}

; std::ffi::os_str::OsStr::from_inner
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::os_str::OsStr"*, i64 } @_ZN3std3ffi6os_str5OsStr10from_inner17hbc722e7632463b43E(%"std::sys::unix::os_str::Slice"* nonnull align 1 %inner.0, i64 %inner.1) unnamed_addr #1 {
start:
  %_2.0 = bitcast %"std::sys::unix::os_str::Slice"* %inner.0 to %"std::ffi::os_str::OsStr"*
  %0 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } undef, %"std::ffi::os_str::OsStr"* %_2.0, 0
  %1 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } %0, i64 %inner.1, 1
  ret { %"std::ffi::os_str::OsStr"*, i64 } %1
}

; std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h17c35b61c8d6c8c4E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call std::sys::unix::os_str::Slice::from_str
  %0 = call { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice8from_str17h2d3e4903422b0c20E([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %_3.0 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %0, 0
  %_3.1 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::ffi::os_str::OsStr::from_inner
  %1 = call { %"std::ffi::os_str::OsStr"*, i64 } @_ZN3std3ffi6os_str5OsStr10from_inner17hbc722e7632463b43E(%"std::sys::unix::os_str::Slice"* nonnull align 1 %_3.0, i64 %_3.1)
  %2 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %1, 0
  %3 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } undef, %"std::ffi::os_str::OsStr"* %2, 0
  %5 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } %4, i64 %3, 1
  ret { %"std::ffi::os_str::OsStr"*, i64 } %5
}

; std::sys::unix::mutex::raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal %"libc::unix::linux_like::linux::pthread_mutex_t"* @_ZN3std3sys4unix5mutex3raw17hff7d63e15ace40e3E(%"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %m) unnamed_addr #1 {
start:
  %_2 = bitcast %"std::sys::unix::mutex::Mutex"* %m to %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>"* %_2 to %"libc::unix::linux_like::linux::pthread_mutex_t"*
  br label %bb1

bb1:                                              ; preds = %start
  ret %"libc::unix::linux_like::linux::pthread_mutex_t"* %_2.i
}

; std::sys::unix::mutex::Mutex::lock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix5mutex5Mutex4lock17h81f51b77ca07a081E(%"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_4 = bitcast %"std::sys::unix::mutex::Mutex"* %self to %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>"* %_4 to %"libc::unix::linux_like::linux::pthread_mutex_t"*
  br label %bb1

bb1:                                              ; preds = %start
  %r = call i32 @pthread_mutex_lock(%"libc::unix::linux_like::linux::pthread_mutex_t"* %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sys::unix::mutex::Mutex::unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix5mutex5Mutex6unlock17ha7f3529944b56876E(%"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_4 = bitcast %"std::sys::unix::mutex::Mutex"* %self to %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>"* %_4 to %"libc::unix::linux_like::linux::pthread_mutex_t"*
  br label %bb1

bb1:                                              ; preds = %start
  %r = call i32 @pthread_mutex_unlock(%"libc::unix::linux_like::linux::pthread_mutex_t"* %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sys::unix::os_str::Slice::from_u8_slice
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice13from_u8_slice17h4a9e29c182b42ffcE([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
  %0 = alloca { %"std::sys::unix::os_str::Slice"*, i64 }, align 8
  %1 = bitcast { %"std::sys::unix::os_str::Slice"*, i64 }* %0 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %s.1, i64* %3, align 8
  %4 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 0
  %5 = load %"std::sys::unix::os_str::Slice"*, %"std::sys::unix::os_str::Slice"** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } undef, %"std::sys::unix::os_str::Slice"* %5, 0
  %9 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } %8, i64 %7, 1
  ret { %"std::sys::unix::os_str::Slice"*, i64 } %9
}

; std::sys::unix::os_str::Slice::from_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice8from_str17h2d3e4903422b0c20E([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !3
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %_3.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::sys::unix::os_str::Slice::from_u8_slice
  %9 = call { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice13from_u8_slice17h4a9e29c182b42ffcE([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1)
  %10 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %9, 0
  %11 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %9, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %12 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } undef, %"std::sys::unix::os_str::Slice"* %10, 0
  %13 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } %12, i64 %11, 1
  ret { %"std::sys::unix::os_str::Slice"*, i64 } %13
}

; std::sys::unix::rwlock::RWLock::raw_unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix6rwlock6RWLock10raw_unlock17ha69cdd9d34dcbb58E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self) unnamed_addr #1 {
start:
  %_4 = bitcast %"std::sys::unix::rwlock::RWLock"* %self to %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>"* %_4 to %"libc::unix::linux_like::linux::pthread_rwlock_t"*
  br label %bb1

bb1:                                              ; preds = %start
  %r = call i32 @pthread_rwlock_unlock(%"libc::unix::linux_like::linux::pthread_rwlock_t"* %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sys::unix::rwlock::RWLock::read_unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix6rwlock6RWLock11read_unlock17hc43cd3d383eefa03E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
  %_3 = getelementptr inbounds %"std::sys::unix::rwlock::RWLock", %"std::sys::unix::rwlock::RWLock"* %self, i32 0, i32 1
  store i8 0, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_3, i64 1, i8 %0)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sys::unix::rwlock::RWLock::raw_unlock
  call void @_ZN3std3sys4unix6rwlock6RWLock10raw_unlock17ha69cdd9d34dcbb58E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sys::unix::rwlock::RWLock::write_unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix6rwlock6RWLock12write_unlock17hbc6d40648adb5949E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self) unnamed_addr #1 {
start:
  %_6 = getelementptr inbounds %"std::sys::unix::rwlock::RWLock", %"std::sys::unix::rwlock::RWLock"* %self, i32 0, i32 2
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_6, align 1
; call std::sys::unix::rwlock::RWLock::raw_unlock
  call void @_ZN3std3sys4unix6rwlock6RWLock10raw_unlock17ha69cdd9d34dcbb58E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sys::unix::rwlock::RWLock::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix6rwlock6RWLock4read17h63a7d60402fb5d61E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self) unnamed_addr #1 {
start:
  %_23 = alloca i8, align 1
  %_10 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %_4 = bitcast %"std::sys::unix::rwlock::RWLock"* %self to %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>"* %_4 to %"libc::unix::linux_like::linux::pthread_rwlock_t"*
  br label %bb1

bb1:                                              ; preds = %start
  %r = call i32 @pthread_rwlock_rdlock(%"libc::unix::linux_like::linux::pthread_rwlock_t"* %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = icmp eq i32 %r, 11
  br i1 %_5, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_8 = icmp eq i32 %r, 35
  br i1 %_8, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17ha42a2eee8544a2f2E([0 x i8]* nonnull align 1 bitcast (<{ [36 x i8] }>* @alloc492 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc494 to %"core::panic::location::Location"*)) #20
  unreachable

bb6:                                              ; preds = %bb4
  %0 = icmp eq i32 %r, 0
  br i1 %0, label %bb9, label %bb8

bb5:                                              ; preds = %bb4
  store i8 1, i8* %_7, align 1
  br label %bb7

bb7:                                              ; preds = %bb10, %bb5
  %1 = load i8, i8* %_7, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb12, label %bb17

bb9:                                              ; preds = %bb6
  %_14 = getelementptr inbounds %"std::sys::unix::rwlock::RWLock", %"std::sys::unix::rwlock::RWLock"* %self, i32 0, i32 2
  br label %bb11

bb8:                                              ; preds = %bb6
  store i8 0, i8* %_10, align 1
  br label %bb10

bb10:                                             ; preds = %bb11, %bb8
  %3 = load i8, i8* %_10, align 1, !range !4
  %4 = trunc i8 %3 to i1
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %_7, align 1
  br label %bb7

bb11:                                             ; preds = %bb9
  %6 = load i8, i8* %_14, align 1, !range !4
  %_12 = trunc i8 %6 to i1
  %7 = zext i1 %_12 to i8
  store i8 %7, i8* %_10, align 1
  br label %bb10

bb17:                                             ; preds = %bb7
  %_22 = getelementptr inbounds %"std::sys::unix::rwlock::RWLock", %"std::sys::unix::rwlock::RWLock"* %self, i32 0, i32 1
  store i8 0, i8* %_23, align 1
  %8 = load i8, i8* %_23, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_add
  %_21 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_add17h1b161b556bcddfe8E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_22, i64 1, i8 %8)
  br label %bb18

bb12:                                             ; preds = %bb7
  %9 = icmp eq i32 %r, 0
  br i1 %9, label %bb13, label %bb15

bb13:                                             ; preds = %bb12
; call std::sys::unix::rwlock::RWLock::raw_unlock
  call void @_ZN3std3sys4unix6rwlock6RWLock10raw_unlock17ha69cdd9d34dcbb58E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self)
  br label %bb14

bb15:                                             ; preds = %bb12
  br label %bb16

bb16:                                             ; preds = %bb14, %bb15
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17ha42a2eee8544a2f2E([0 x i8]* nonnull align 1 bitcast (<{ [41 x i8] }>* @alloc495 to [0 x i8]*), i64 41, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc497 to %"core::panic::location::Location"*)) #20
  unreachable

bb14:                                             ; preds = %bb13
  br label %bb16

bb18:                                             ; preds = %bb17
  ret void
}

; std::sys::unix::rwlock::RWLock::write
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix6rwlock6RWLock5write17h7a1357fdcc0fab8cE(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self) unnamed_addr #1 {
start:
  %_17 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_6 = alloca i8, align 1
  %_5 = alloca i8, align 1
  %_4 = bitcast %"std::sys::unix::rwlock::RWLock"* %self to %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>"* %_4 to %"libc::unix::linux_like::linux::pthread_rwlock_t"*
  br label %bb1

bb1:                                              ; preds = %start
  %r = call i32 @pthread_rwlock_wrlock(%"libc::unix::linux_like::linux::pthread_rwlock_t"* %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = icmp eq i32 %r, 35
  br i1 %_7, label %bb6, label %bb7

bb7:                                              ; preds = %bb2
  %0 = icmp eq i32 %r, 0
  br i1 %0, label %bb10, label %bb9

bb6:                                              ; preds = %bb2
  store i8 1, i8* %_6, align 1
  br label %bb8

bb8:                                              ; preds = %bb11, %bb6
  %1 = load i8, i8* %_6, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb3, label %bb4

bb10:                                             ; preds = %bb7
  %_13 = getelementptr inbounds %"std::sys::unix::rwlock::RWLock", %"std::sys::unix::rwlock::RWLock"* %self, i32 0, i32 2
  br label %bb12

bb9:                                              ; preds = %bb7
  store i8 0, i8* %_9, align 1
  br label %bb11

bb11:                                             ; preds = %bb12, %bb9
  %3 = load i8, i8* %_9, align 1, !range !4
  %4 = trunc i8 %3 to i1
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %_6, align 1
  br label %bb8

bb12:                                             ; preds = %bb10
  %6 = load i8, i8* %_13, align 1, !range !4
  %_11 = trunc i8 %6 to i1
  %7 = zext i1 %_11 to i8
  store i8 %7, i8* %_9, align 1
  br label %bb11

bb4:                                              ; preds = %bb8
  %_16 = getelementptr inbounds %"std::sys::unix::rwlock::RWLock", %"std::sys::unix::rwlock::RWLock"* %self, i32 0, i32 1
  store i8 0, i8* %_17, align 1
  %8 = load i8, i8* %_17, align 1, !range !7
; call core::sync::atomic::AtomicUsize::load
  %_15 = call i64 @_ZN4core4sync6atomic11AtomicUsize4load17hb942a0364fa6d354E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_16, i8 %8)
  br label %bb13

bb3:                                              ; preds = %bb8
  store i8 1, i8* %_5, align 1
  br label %bb5

bb5:                                              ; preds = %bb13, %bb3
  %9 = load i8, i8* %_5, align 1, !range !4
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb14, label %bb19

bb13:                                             ; preds = %bb4
  %_14 = icmp ne i64 %_15, 0
  %11 = zext i1 %_14 to i8
  store i8 %11, i8* %_5, align 1
  br label %bb5

bb19:                                             ; preds = %bb5
  %_25 = getelementptr inbounds %"std::sys::unix::rwlock::RWLock", %"std::sys::unix::rwlock::RWLock"* %self, i32 0, i32 2
  br label %bb20

bb14:                                             ; preds = %bb5
  %12 = icmp eq i32 %r, 0
  br i1 %12, label %bb15, label %bb17

bb15:                                             ; preds = %bb14
; call std::sys::unix::rwlock::RWLock::raw_unlock
  call void @_ZN3std3sys4unix6rwlock6RWLock10raw_unlock17ha69cdd9d34dcbb58E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self)
  br label %bb16

bb17:                                             ; preds = %bb14
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17ha42a2eee8544a2f2E([0 x i8]* nonnull align 1 bitcast (<{ [42 x i8] }>* @alloc498 to [0 x i8]*), i64 42, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc500 to %"core::panic::location::Location"*)) #20
  unreachable

bb16:                                             ; preds = %bb15
  br label %bb18

bb20:                                             ; preds = %bb19
  store i8 1, i8* %_25, align 1
  ret void
}

; std::sys::unix::condvar::Condvar::wait
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix7condvar7Condvar4wait17h21570249c6b3c9bdE(%"std::sys::unix::condvar::Condvar"* align 8 dereferenceable(48) %self, %"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %mutex) unnamed_addr #1 {
start:
  %_5 = bitcast %"std::sys::unix::condvar::Condvar"* %self to %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_cond_t>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_cond_t>"* %_5 to %"libc::unix::linux_like::linux::pthread_cond_t"*
  br label %bb1

bb1:                                              ; preds = %start
; call std::sys::unix::mutex::raw
  %_6 = call %"libc::unix::linux_like::linux::pthread_mutex_t"* @_ZN3std3sys4unix5mutex3raw17hff7d63e15ace40e3E(%"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %mutex)
  br label %bb2

bb2:                                              ; preds = %bb1
  %r = call i32 @pthread_cond_wait(%"libc::unix::linux_like::linux::pthread_cond_t"* %_2.i, %"libc::unix::linux_like::linux::pthread_mutex_t"* %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; std::path::Path::new
; Function Attrs: nonlazybind uwtable
define { %"std::path::Path"*, i64 } @_ZN3std4path4Path3new17h7588003d88a2a081E([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
; call std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
  %0 = call { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h17c35b61c8d6c8c4E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  %_4.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %0, 0
  %_4.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2.0 = bitcast %"std::ffi::os_str::OsStr"* %_4.0 to %"std::path::Path"*
  %1 = insertvalue { %"std::path::Path"*, i64 } undef, %"std::path::Path"* %_2.0, 0
  %2 = insertvalue { %"std::path::Path"*, i64 } %1, i64 %_4.1, 1
  ret { %"std::path::Path"*, i64 } %2
}

; std::path::<impl core::convert::AsRef<std::path::Path> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::path::Path"*, i64 } @"_ZN3std4path77_$LT$impl$u20$core..convert..AsRef$LT$std..path..Path$GT$$u20$for$u20$str$GT$6as_ref17he636b2d37ce78798E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call std::path::Path::new
  %0 = call { %"std::path::Path"*, i64 } @_ZN3std4path4Path3new17h7588003d88a2a081E([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %1 = extractvalue { %"std::path::Path"*, i64 } %0, 0
  %2 = extractvalue { %"std::path::Path"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { %"std::path::Path"*, i64 } undef, %"std::path::Path"* %1, 0
  %4 = insertvalue { %"std::path::Path"*, i64 } %3, i64 %2, 1
  ret { %"std::path::Path"*, i64 } %4
}

; std::sync::mutex::guard_lock
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(8) i64** @_ZN3std4sync5mutex10guard_lock17h3ecb1d4ecdb2b6cfE({ i64*, i8 }* align 8 dereferenceable(16) %guard) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %guard to %"std::sync::mutex::Mutex<i32>"**
  %1 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %0, align 8, !nonnull !3
  %2 = bitcast %"std::sync::mutex::Mutex<i32>"* %1 to i64**
  ret i64** %2
}

; std::sync::mutex::guard_lock
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(8) i64** @_ZN3std4sync5mutex10guard_lock17h4021a8c0b8ce9662E({ i64*, i8 }* align 8 dereferenceable(16) %guard) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %guard to %"std::sync::mutex::Mutex<()>"**
  %1 = load %"std::sync::mutex::Mutex<()>"*, %"std::sync::mutex::Mutex<()>"** %0, align 8, !nonnull !3
  %2 = bitcast %"std::sync::mutex::Mutex<()>"* %1 to i64**
  ret i64** %2
}

; std::sync::mutex::guard_poison
; Function Attrs: nonlazybind uwtable
define align 1 dereferenceable(1) %"std::sync::poison::Flag"* @_ZN3std4sync5mutex12guard_poison17ha0896f353e8dcd7eE({ i64*, i8 }* align 8 dereferenceable(16) %guard) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %guard to %"std::sync::mutex::Mutex<()>"**
  %1 = load %"std::sync::mutex::Mutex<()>"*, %"std::sync::mutex::Mutex<()>"** %0, align 8, !nonnull !3
  %2 = getelementptr inbounds %"std::sync::mutex::Mutex<()>", %"std::sync::mutex::Mutex<()>"* %1, i32 0, i32 1
  ret %"std::sync::poison::Flag"* %2
}

; std::sync::mutex::guard_poison
; Function Attrs: nonlazybind uwtable
define align 1 dereferenceable(1) %"std::sync::poison::Flag"* @_ZN3std4sync5mutex12guard_poison17hf2902e00b700f6a8E({ i64*, i8 }* align 8 dereferenceable(16) %guard) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %guard to %"std::sync::mutex::Mutex<i32>"**
  %1 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %0, align 8, !nonnull !3
  %2 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %1, i32 0, i32 1
  ret %"std::sync::poison::Flag"* %2
}

; std::sync::mutex::Mutex<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h52445d40790d1897E"(%"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* noalias nocapture sret(%"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>") dereferenceable(64) %0, %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* noalias nocapture dereferenceable(48) %t) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %_2.i = alloca %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>", align 8
  %1 = alloca i8, align 1
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_5 = alloca %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>", align 8
  %_4 = alloca %"core::cell::UnsafeCell<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>", align 8
  %_3 = alloca %"std::sync::poison::Flag", align 1
  %_2 = alloca i64*, align 8
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke std::sys_common::mutex::MovableMutex::new
  %3 = invoke noalias nonnull align 8 i64* @_ZN3std10sys_common5mutex12MovableMutex3new17h2bb8f0e9b979bf81E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %3, i64** %_2, align 8
; invoke std::sync::poison::Flag::new
  %4 = invoke i8 @_ZN3std4sync6poison4Flag3new17h47827b134c610a5eE()
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %5 = load i8, i8* %_6, align 1, !range !4
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  store i8 %4, i8* %1, align 1
  %12 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %1, i64 1, i1 false)
  store i8 0, i8* %_6, align 1
  %13 = bitcast %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* %_5 to i8*
  %14 = bitcast %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 48, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !8)
  call void @llvm.experimental.noalias.scope.decl(metadata !11)
  %15 = bitcast %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* %_2.i to i8*
  %16 = bitcast %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 48, i1 false), !noalias !8
  %17 = bitcast %"core::cell::UnsafeCell<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %_4 to %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"*
  %18 = bitcast %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* %17 to i8*
  %19 = bitcast %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 48, i1 false), !noalias !11
  br label %bb3

bb4:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h391195306a5ba975E"(i64** %_2) #21
  br label %bb7

cleanup1:                                         ; preds = %bb1
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  %22 = extractvalue { i8*, i32 } %20, 1
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %25 = bitcast %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %0 to i64**
  %26 = load i64*, i64** %_2, align 8, !nonnull !3
  store i64* %26, i64** %25, align 8
  %27 = getelementptr inbounds %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>", %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %0, i32 0, i32 1
  %28 = bitcast %"std::sync::poison::Flag"* %27 to i8*
  %29 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 1 %29, i64 1, i1 false)
  %30 = getelementptr inbounds %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>", %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %0, i32 0, i32 3
  %31 = bitcast %"core::cell::UnsafeCell<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %30 to i8*
  %32 = bitcast %"core::cell::UnsafeCell<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 48, i1 false)
  ret void

bb5:                                              ; preds = %bb6, %bb7
  %33 = bitcast { i8*, i32 }* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>
  call void @"_ZN4core3ptr92drop_in_place$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$17h90fac0c67f71ecceE"(%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* %t) #21
  br label %bb5
}

; std::sync::mutex::Mutex<T>::new
; Function Attrs: nonlazybind uwtable
define i128 @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h7ad5700cb02aded8E"(i32 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i32, align 4
  %2 = alloca i8, align 1
  %3 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_3 = alloca %"std::sync::poison::Flag", align 1
  %_2 = alloca i64*, align 8
  %4 = alloca %"std::sync::mutex::Mutex<std::fs::File>", align 8
  %t = alloca i32, align 4
  store i32 %0, i32* %t, align 4
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke std::sys_common::mutex::MovableMutex::new
  %5 = invoke noalias nonnull align 8 i64* @_ZN3std10sys_common5mutex12MovableMutex3new17h2bb8f0e9b979bf81E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %5, i64** %_2, align 8
; invoke std::sync::poison::Flag::new
  %6 = invoke i8 @_ZN3std4sync6poison4Flag3new17h47827b134c610a5eE()
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %7 = load i8, i8* %_6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  store i8 %6, i8* %2, align 1
  %14 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %2, i64 1, i1 false)
  store i8 0, i8* %_6, align 1
  %_5 = load i32, i32* %t, align 4, !range !13
  store i32 %_5, i32* %1, align 4
  %15 = load i32, i32* %1, align 4, !range !13
  br label %bb3

bb4:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h391195306a5ba975E"(i64** %_2) #21
  br label %bb7

cleanup1:                                         ; preds = %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %21 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %4 to i64**
  %22 = load i64*, i64** %_2, align 8, !nonnull !3
  store i64* %22, i64** %21, align 8
  %23 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %4, i32 0, i32 1
  %24 = bitcast %"std::sync::poison::Flag"* %23 to i8*
  %25 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 1 %25, i64 1, i1 false)
  %26 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %4, i32 0, i32 3
  store i32 %15, i32* %26, align 4
  %27 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %4 to i128*
  %28 = load i128, i128* %27, align 8
  ret i128 %28

bb5:                                              ; preds = %bb6, %bb7
  %29 = bitcast { i8*, i32 }* %3 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17hd5d8e8584b5106e5E"(i32* %t) #21
  br label %bb5
}

; std::sync::mutex::Mutex<T>::new
; Function Attrs: nonlazybind uwtable
define i128 @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h98151f38a867f203E"(i32 %t) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i32, align 4
  %1 = alloca i8, align 1
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_3 = alloca %"std::sync::poison::Flag", align 1
  %_2 = alloca i64*, align 8
  %3 = alloca %"std::sync::mutex::Mutex<i32>", align 8
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke std::sys_common::mutex::MovableMutex::new
  %4 = invoke noalias nonnull align 8 i64* @_ZN3std10sys_common5mutex12MovableMutex3new17h2bb8f0e9b979bf81E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %4, i64** %_2, align 8
; invoke std::sync::poison::Flag::new
  %5 = invoke i8 @_ZN3std4sync6poison4Flag3new17h47827b134c610a5eE()
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %6 = load i8, i8* %_6, align 1, !range !4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  store i8 %5, i8* %1, align 1
  %13 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %1, i64 1, i1 false)
  store i8 0, i8* %_6, align 1
  store i32 %t, i32* %0, align 4
  %14 = load i32, i32* %0, align 4
  br label %bb3

bb4:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h391195306a5ba975E"(i64** %_2) #21
  br label %bb7

cleanup1:                                         ; preds = %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %20 = bitcast %"std::sync::mutex::Mutex<i32>"* %3 to i64**
  %21 = load i64*, i64** %_2, align 8, !nonnull !3
  store i64* %21, i64** %20, align 8
  %22 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %3, i32 0, i32 1
  %23 = bitcast %"std::sync::poison::Flag"* %22 to i8*
  %24 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 1 %24, i64 1, i1 false)
  %25 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %3, i32 0, i32 3
  store i32 %14, i32* %25, align 4
  %26 = bitcast %"std::sync::mutex::Mutex<i32>"* %3 to i128*
  %27 = load i128, i128* %26, align 8
  ret i128 %27

bb5:                                              ; preds = %bb6, %bb7
  %28 = bitcast { i8*, i32 }* %2 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

bb6:                                              ; preds = %bb7
  br label %bb5
}

; std::sync::mutex::Mutex<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17hbd06b2fa9e9834f8E"(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* noalias nocapture sret(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>") dereferenceable(40) %0, %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* noalias nocapture dereferenceable(24) %t) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %_2.i = alloca %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", align 8
  %1 = alloca i8, align 1
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_5 = alloca %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", align 8
  %_4 = alloca %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", align 8
  %_3 = alloca %"std::sync::poison::Flag", align 1
  %_2 = alloca i64*, align 8
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke std::sys_common::mutex::MovableMutex::new
  %3 = invoke noalias nonnull align 8 i64* @_ZN3std10sys_common5mutex12MovableMutex3new17h2bb8f0e9b979bf81E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %3, i64** %_2, align 8
; invoke std::sync::poison::Flag::new
  %4 = invoke i8 @_ZN3std4sync6poison4Flag3new17h47827b134c610a5eE()
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %5 = load i8, i8* %_6, align 1, !range !4
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  store i8 %4, i8* %1, align 1
  %12 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %1, i64 1, i1 false)
  store i8 0, i8* %_6, align 1
  %13 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_5 to i8*
  %14 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !14)
  call void @llvm.experimental.noalias.scope.decl(metadata !17)
  %15 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_2.i to i8*
  %16 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !noalias !14
  %17 = bitcast %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_4 to %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"*
  %18 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %17 to i8*
  %19 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false), !noalias !17
  br label %bb3

bb4:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h391195306a5ba975E"(i64** %_2) #21
  br label %bb7

cleanup1:                                         ; preds = %bb1
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  %22 = extractvalue { i8*, i32 } %20, 1
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %25 = bitcast %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %0 to i64**
  %26 = load i64*, i64** %_2, align 8, !nonnull !3
  store i64* %26, i64** %25, align 8
  %27 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %0, i32 0, i32 1
  %28 = bitcast %"std::sync::poison::Flag"* %27 to i8*
  %29 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 1 %29, i64 1, i1 false)
  %30 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %0, i32 0, i32 3
  %31 = bitcast %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %30 to i8*
  %32 = bitcast %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false)
  ret void

bb5:                                              ; preds = %bb6, %bb7
  %33 = bitcast { i8*, i32 }* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>
  call void @"_ZN4core3ptr84drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$17h1433181a53c1f073E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %t) #21
  br label %bb5
}

; std::sync::mutex::Mutex<T>::new
; Function Attrs: nonlazybind uwtable
define i128 @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17he70e54143d7100bbE"() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca %"core::cell::UnsafeCell<()>", align 1
  %1 = alloca i8, align 1
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_3 = alloca %"std::sync::poison::Flag", align 1
  %_2 = alloca i64*, align 8
  %3 = alloca %"std::sync::mutex::Mutex<()>", align 8
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke std::sys_common::mutex::MovableMutex::new
  %4 = invoke noalias nonnull align 8 i64* @_ZN3std10sys_common5mutex12MovableMutex3new17h2bb8f0e9b979bf81E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %4, i64** %_2, align 8
; invoke std::sync::poison::Flag::new
  %5 = invoke i8 @_ZN3std4sync6poison4Flag3new17h47827b134c610a5eE()
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %6 = load i8, i8* %_6, align 1, !range !4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  store i8 %5, i8* %1, align 1
  %13 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %1, i64 1, i1 false)
  store i8 0, i8* %_6, align 1
  %14 = bitcast %"core::cell::UnsafeCell<()>"* %0 to {}*
  br label %bb3

bb4:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h391195306a5ba975E"(i64** %_2) #21
  br label %bb7

cleanup1:                                         ; preds = %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %20 = bitcast %"std::sync::mutex::Mutex<()>"* %3 to i64**
  %21 = load i64*, i64** %_2, align 8, !nonnull !3
  store i64* %21, i64** %20, align 8
  %22 = getelementptr inbounds %"std::sync::mutex::Mutex<()>", %"std::sync::mutex::Mutex<()>"* %3, i32 0, i32 1
  %23 = bitcast %"std::sync::poison::Flag"* %22 to i8*
  %24 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 1 %24, i64 1, i1 false)
  %25 = getelementptr inbounds %"std::sync::mutex::Mutex<()>", %"std::sync::mutex::Mutex<()>"* %3, i32 0, i32 2
  %26 = bitcast %"std::sync::mutex::Mutex<()>"* %3 to i128*
  %27 = load i128, i128* %26, align 8
  ret i128 %27

bb5:                                              ; preds = %bb6, %bb7
  %28 = bitcast { i8*, i32 }* %2 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

bb6:                                              ; preds = %bb7
  br label %bb5
}

; std::sync::mutex::Mutex<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17hf4a326059a1f3b38E"(%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* noalias nocapture sret(%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>") dereferenceable(48) %0, %"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture dereferenceable(32) %t) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %_2.i = alloca %"alloc::collections::vec_deque::VecDeque<i32>", align 8
  %1 = alloca i8, align 1
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_5 = alloca %"alloc::collections::vec_deque::VecDeque<i32>", align 8
  %_4 = alloca %"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>", align 8
  %_3 = alloca %"std::sync::poison::Flag", align 1
  %_2 = alloca i64*, align 8
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke std::sys_common::mutex::MovableMutex::new
  %3 = invoke noalias nonnull align 8 i64* @_ZN3std10sys_common5mutex12MovableMutex3new17h2bb8f0e9b979bf81E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %3, i64** %_2, align 8
; invoke std::sync::poison::Flag::new
  %4 = invoke i8 @_ZN3std4sync6poison4Flag3new17h47827b134c610a5eE()
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %5 = load i8, i8* %_6, align 1, !range !4
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  store i8 %4, i8* %1, align 1
  %12 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %1, i64 1, i1 false)
  store i8 0, i8* %_6, align 1
  %13 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %_5 to i8*
  %14 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 32, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !19)
  call void @llvm.experimental.noalias.scope.decl(metadata !22)
  %15 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %_2.i to i8*
  %16 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 32, i1 false), !noalias !19
  %17 = bitcast %"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %_4 to %"alloc::collections::vec_deque::VecDeque<i32>"*
  %18 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %17 to i8*
  %19 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 32, i1 false), !noalias !22
  br label %bb3

bb4:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h391195306a5ba975E"(i64** %_2) #21
  br label %bb7

cleanup1:                                         ; preds = %bb1
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  %22 = extractvalue { i8*, i32 } %20, 1
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %25 = bitcast %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %0 to i64**
  %26 = load i64*, i64** %_2, align 8, !nonnull !3
  store i64* %26, i64** %25, align 8
  %27 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %0, i32 0, i32 1
  %28 = bitcast %"std::sync::poison::Flag"* %27 to i8*
  %29 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 1 %29, i64 1, i1 false)
  %30 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %0, i32 0, i32 3
  %31 = bitcast %"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %30 to i8*
  %32 = bitcast %"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 32, i1 false)
  ret void

bb5:                                              ; preds = %bb6, %bb7
  %33 = bitcast { i8*, i32 }* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::collections::vec_deque::VecDeque<i32>>
  call void @"_ZN4core3ptr71drop_in_place$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$17h8b92a4cead11df23E"(%"alloc::collections::vec_deque::VecDeque<i32>"* %t) #21
  br label %bb5
}

; std::sync::mutex::Mutex<T>::lock
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h32273d4a7a559da0E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* align 8 dereferenceable(48) %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %self to i64**
; call std::sys_common::mutex::MovableMutex::raw_lock
  call void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17h273d2dd79f30435aE(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::mutex::MutexGuard<T>::new
  call void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h399b4a1502eb423bE"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* align 8 dereferenceable(48) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::Mutex<T>::lock
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h5daacf6ccc61ca94E"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<i32>"* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"std::sync::mutex::Mutex<i32>"* %self to i64**
; call std::sys_common::mutex::MovableMutex::raw_lock
  call void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17h273d2dd79f30435aE(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::mutex::MutexGuard<T>::new
  call void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17hb418871c8c459aadE"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<i32>"* align 8 dereferenceable(16) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::Mutex<T>::lock
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h7129a9f664b9b485E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %self to i64**
; call std::sys_common::mutex::MovableMutex::raw_lock
  call void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17h273d2dd79f30435aE(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::mutex::MutexGuard<T>::new
  call void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h8203c246267aa3a2E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* align 8 dereferenceable(40) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::Mutex<T>::lock
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h8905175bd6462be5E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* align 8 dereferenceable(64) %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %self to i64**
; call std::sys_common::mutex::MovableMutex::raw_lock
  call void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17h273d2dd79f30435aE(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::mutex::MutexGuard<T>::new
  call void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h292e07eea07642b4E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* align 8 dereferenceable(64) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::Mutex<T>::lock
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h93445635c1b90ef9E"(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<()>"* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"std::sync::mutex::Mutex<()>"* %self to i64**
; call std::sys_common::mutex::MovableMutex::raw_lock
  call void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17h273d2dd79f30435aE(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::mutex::MutexGuard<T>::new
  call void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h770dbe300ce23b9bE"(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<()>"* align 8 dereferenceable(16) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::Mutex<T>::lock
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17ha01c69d09bf051ccE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %self to i64**
; call std::sys_common::mutex::MovableMutex::raw_lock
  call void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17h273d2dd79f30435aE(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::mutex::MutexGuard<T>::new
  call void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h9af8b641c46b5d31E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h292e07eea07642b4E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* align 8 dereferenceable(64) %1) unnamed_addr #0 {
start:
  %_4 = alloca i64*, align 8
  %lock = alloca %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"*, align 8
  store %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %1, %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"** %lock, align 8
  %2 = load %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"*, %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"** %lock, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>", %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %2, i32 0, i32 1
; call std::sync::poison::Flag::borrow
  %3 = call { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17he7e872dcfbb0a1baE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3)
  %4 = extractvalue { i8, i8 } %3, 0
  %_2.0 = trunc i8 %4 to i1
  %_2.1 = extractvalue { i8, i8 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast i64** %_4 to %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"***
  store %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"** %lock, %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"*** %5, align 8
  %6 = load i64*, i64** %_4, align 8, !nonnull !3
; call std::sync::poison::map_result
  call void @_ZN3std4sync6poison10map_result17hd4b5a2a2cc2c7745E(%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>") dereferenceable(24) %0, i1 zeroext %_2.0, i8 %_2.1, i64* align 8 dereferenceable(8) %6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h399b4a1502eb423bE"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* align 8 dereferenceable(48) %1) unnamed_addr #0 {
start:
  %_4 = alloca i64*, align 8
  %lock = alloca %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*, align 8
  store %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %1, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %lock, align 8
  %2 = load %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %lock, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %2, i32 0, i32 1
; call std::sync::poison::Flag::borrow
  %3 = call { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17he7e872dcfbb0a1baE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3)
  %4 = extractvalue { i8, i8 } %3, 0
  %_2.0 = trunc i8 %4 to i1
  %_2.1 = extractvalue { i8, i8 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast i64** %_4 to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"***
  store %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %lock, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*** %5, align 8
  %6 = load i64*, i64** %_4, align 8, !nonnull !3
; call std::sync::poison::map_result
  call void @_ZN3std4sync6poison10map_result17h40194fe3daed24bdE(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>") dereferenceable(24) %0, i1 zeroext %_2.0, i8 %_2.1, i64* align 8 dereferenceable(8) %6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h770dbe300ce23b9bE"(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<()>"* align 8 dereferenceable(16) %1) unnamed_addr #0 {
start:
  %_4 = alloca i64*, align 8
  %lock = alloca %"std::sync::mutex::Mutex<()>"*, align 8
  store %"std::sync::mutex::Mutex<()>"* %1, %"std::sync::mutex::Mutex<()>"** %lock, align 8
  %2 = load %"std::sync::mutex::Mutex<()>"*, %"std::sync::mutex::Mutex<()>"** %lock, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<()>", %"std::sync::mutex::Mutex<()>"* %2, i32 0, i32 1
; call std::sync::poison::Flag::borrow
  %3 = call { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17he7e872dcfbb0a1baE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3)
  %4 = extractvalue { i8, i8 } %3, 0
  %_2.0 = trunc i8 %4 to i1
  %_2.1 = extractvalue { i8, i8 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast i64** %_4 to %"std::sync::mutex::Mutex<()>"***
  store %"std::sync::mutex::Mutex<()>"** %lock, %"std::sync::mutex::Mutex<()>"*** %5, align 8
  %6 = load i64*, i64** %_4, align 8, !nonnull !3
; call std::sync::poison::map_result
  call void @_ZN3std4sync6poison10map_result17hf6999d5ed4337ddaE(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %0, i1 zeroext %_2.0, i8 %_2.1, i64* align 8 dereferenceable(8) %6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h8203c246267aa3a2E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* align 8 dereferenceable(40) %1) unnamed_addr #0 {
start:
  %_4 = alloca i64*, align 8
  %lock = alloca %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"*, align 8
  store %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %1, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"** %lock, align 8
  %2 = load %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"*, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"** %lock, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %2, i32 0, i32 1
; call std::sync::poison::Flag::borrow
  %3 = call { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17he7e872dcfbb0a1baE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3)
  %4 = extractvalue { i8, i8 } %3, 0
  %_2.0 = trunc i8 %4 to i1
  %_2.1 = extractvalue { i8, i8 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast i64** %_4 to %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"***
  store %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"** %lock, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"*** %5, align 8
  %6 = load i64*, i64** %_4, align 8, !nonnull !3
; call std::sync::poison::map_result
  call void @_ZN3std4sync6poison10map_result17hcda0333fe493ced2E(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>") dereferenceable(24) %0, i1 zeroext %_2.0, i8 %_2.1, i64* align 8 dereferenceable(8) %6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h9af8b641c46b5d31E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %1) unnamed_addr #0 {
start:
  %_4 = alloca i64*, align 8
  %lock = alloca %"std::sync::mutex::Mutex<std::fs::File>"*, align 8
  store %"std::sync::mutex::Mutex<std::fs::File>"* %1, %"std::sync::mutex::Mutex<std::fs::File>"** %lock, align 8
  %2 = load %"std::sync::mutex::Mutex<std::fs::File>"*, %"std::sync::mutex::Mutex<std::fs::File>"** %lock, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %2, i32 0, i32 1
; call std::sync::poison::Flag::borrow
  %3 = call { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17he7e872dcfbb0a1baE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3)
  %4 = extractvalue { i8, i8 } %3, 0
  %_2.0 = trunc i8 %4 to i1
  %_2.1 = extractvalue { i8, i8 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast i64** %_4 to %"std::sync::mutex::Mutex<std::fs::File>"***
  store %"std::sync::mutex::Mutex<std::fs::File>"** %lock, %"std::sync::mutex::Mutex<std::fs::File>"*** %5, align 8
  %6 = load i64*, i64** %_4, align 8, !nonnull !3
; call std::sync::poison::map_result
  call void @_ZN3std4sync6poison10map_result17h9e5430aefcc25121E(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %0, i1 zeroext %_2.0, i8 %_2.1, i64* align 8 dereferenceable(8) %6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17hb418871c8c459aadE"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<i32>"* align 8 dereferenceable(16) %1) unnamed_addr #0 {
start:
  %_4 = alloca i64*, align 8
  %lock = alloca %"std::sync::mutex::Mutex<i32>"*, align 8
  store %"std::sync::mutex::Mutex<i32>"* %1, %"std::sync::mutex::Mutex<i32>"** %lock, align 8
  %2 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %lock, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %2, i32 0, i32 1
; call std::sync::poison::Flag::borrow
  %3 = call { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17he7e872dcfbb0a1baE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3)
  %4 = extractvalue { i8, i8 } %3, 0
  %_2.0 = trunc i8 %4 to i1
  %_2.1 = extractvalue { i8, i8 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast i64** %_4 to %"std::sync::mutex::Mutex<i32>"***
  store %"std::sync::mutex::Mutex<i32>"** %lock, %"std::sync::mutex::Mutex<i32>"*** %5, align 8
  %6 = load i64*, i64** %_4, align 8, !nonnull !3
; call std::sync::poison::map_result
  call void @_ZN3std4sync6poison10map_result17hcab55c1b4f12db59E(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %0, i1 zeroext %_2.0, i8 %_2.1, i64* align 8 dereferenceable(8) %6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h0b27faa28926bf26E"(i64* align 8 dereferenceable(8) %_1, i1 zeroext %guard) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"**
  %2 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"**
  %_3 = load %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"*, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"** %2, align 8, !nonnull !3
  %3 = bitcast { i64*, i8 }* %0 to %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"**
  store %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_3, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"** %3, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %5 = zext i1 %guard to i8
  store i8 %5, i8* %4, align 8
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i8
  %12 = insertvalue { i64*, i8 } undef, i64* %7, 0
  %13 = insertvalue { i64*, i8 } %12, i8 %11, 1
  ret { i64*, i8 } %13
}

; std::sync::mutex::MutexGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h230e4f65d5ba5e6bE"(i64* align 8 dereferenceable(8) %_1, i1 zeroext %guard) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"**
  %2 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"**
  %_3 = load %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %2, align 8, !nonnull !3
  %3 = bitcast { i64*, i8 }* %0 to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"**
  store %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %_3, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %3, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %5 = zext i1 %guard to i8
  store i8 %5, i8* %4, align 8
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i8
  %12 = insertvalue { i64*, i8 } undef, i64* %7, 0
  %13 = insertvalue { i64*, i8 } %12, i8 %11, 1
  ret { i64*, i8 } %13
}

; std::sync::mutex::MutexGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h2657f592b4a1fd8eE"(i64* align 8 dereferenceable(8) %_1, i1 zeroext %guard) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"**
  %2 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"**
  %_3 = load %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"*, %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"** %2, align 8, !nonnull !3
  %3 = bitcast { i64*, i8 }* %0 to %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"**
  store %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %_3, %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"** %3, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %5 = zext i1 %guard to i8
  store i8 %5, i8* %4, align 8
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i8
  %12 = insertvalue { i64*, i8 } undef, i64* %7, 0
  %13 = insertvalue { i64*, i8 } %12, i8 %11, 1
  ret { i64*, i8 } %13
}

; std::sync::mutex::MutexGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h56d0852ffa0e00d9E"(i64* align 8 dereferenceable(8) %_1, i1 zeroext %guard) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<i32>"**
  %2 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<i32>"**
  %_3 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %2, align 8, !nonnull !3
  %3 = bitcast { i64*, i8 }* %0 to %"std::sync::mutex::Mutex<i32>"**
  store %"std::sync::mutex::Mutex<i32>"* %_3, %"std::sync::mutex::Mutex<i32>"** %3, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %5 = zext i1 %guard to i8
  store i8 %5, i8* %4, align 8
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i8
  %12 = insertvalue { i64*, i8 } undef, i64* %7, 0
  %13 = insertvalue { i64*, i8 } %12, i8 %11, 1
  ret { i64*, i8 } %13
}

; std::sync::mutex::MutexGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17hc36379000a9db4aaE"(i64* align 8 dereferenceable(8) %_1, i1 zeroext %guard) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<std::fs::File>"**
  %2 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<std::fs::File>"**
  %_3 = load %"std::sync::mutex::Mutex<std::fs::File>"*, %"std::sync::mutex::Mutex<std::fs::File>"** %2, align 8, !nonnull !3
  %3 = bitcast { i64*, i8 }* %0 to %"std::sync::mutex::Mutex<std::fs::File>"**
  store %"std::sync::mutex::Mutex<std::fs::File>"* %_3, %"std::sync::mutex::Mutex<std::fs::File>"** %3, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %5 = zext i1 %guard to i8
  store i8 %5, i8* %4, align 8
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i8
  %12 = insertvalue { i64*, i8 } undef, i64* %7, 0
  %13 = insertvalue { i64*, i8 } %12, i8 %11, 1
  ret { i64*, i8 } %13
}

; std::sync::mutex::MutexGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17he01b1947f6d00fefE"(i64* align 8 dereferenceable(8) %_1, i1 zeroext %guard) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<()>"**
  %2 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<()>"**
  %_3 = load %"std::sync::mutex::Mutex<()>"*, %"std::sync::mutex::Mutex<()>"** %2, align 8, !nonnull !3
  %3 = bitcast { i64*, i8 }* %0 to %"std::sync::mutex::Mutex<()>"**
  store %"std::sync::mutex::Mutex<()>"* %_3, %"std::sync::mutex::Mutex<()>"** %3, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %5 = zext i1 %guard to i8
  store i8 %5, i8* %4, align 8
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i8
  %12 = insertvalue { i64*, i8 } undef, i64* %7, 0
  %13 = insertvalue { i64*, i8 } %12, i8 %11, 1
  ret { i64*, i8 } %13
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync6poison10map_result17h29b29a5b2b622c33E(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>") dereferenceable(24) %0, i1 zeroext %1, i8 %2, i64* align 8 dereferenceable(8) %f) unnamed_addr #0 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %2, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %9, i32 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !4
  %t = trunc i8 %11 to i1
  %12 = zext i1 %t to i8
  store i8 %12, i8* %_7, align 1
  %13 = load i8, i8* %_7, align 1, !range !4
  %14 = trunc i8 %13 to i1
; call std::sync::rwlock::RwLockWriteGuard<T>::new::{{closure}}
  %15 = call { i64*, i8 } @"_ZN3std4sync6rwlock25RwLockWriteGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h3981d61ce724c97bE"(i64* align 8 dereferenceable(8) %f, i1 zeroext %14)
  %_5.0 = extractvalue { i64*, i8 } %15, 0
  %16 = extractvalue { i64*, i8 } %15, 1
  %_5.1 = trunc i8 %16 to i1
  br label %bb4

bb1:                                              ; preds = %start
  %17 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %17, i32 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %guard = trunc i8 %19 to i1
  %20 = zext i1 %guard to i8
  store i8 %20, i8* %_13, align 1
  %21 = load i8, i8* %_13, align 1, !range !4
  %22 = trunc i8 %21 to i1
; call std::sync::rwlock::RwLockWriteGuard<T>::new::{{closure}}
  %23 = call { i64*, i8 } @"_ZN3std4sync6rwlock25RwLockWriteGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h3981d61ce724c97bE"(i64* align 8 dereferenceable(8) %f, i1 zeroext %22)
  %_11.0 = extractvalue { i64*, i8 } %23, 0
  %24 = extractvalue { i64*, i8 } %23, 1
  %_11.1 = trunc i8 %24 to i1
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %25 = call { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h5d03f379684b0f9cE"(i64* align 8 dereferenceable(16) %_11.0, i1 zeroext %_11.1)
  %_10.0 = extractvalue { i64*, i8 } %25, 0
  %26 = extractvalue { i64*, i8 } %25, 1
  %_10.1 = trunc i8 %26 to i1
  br label %bb6

bb6:                                              ; preds = %bb5
  %27 = bitcast %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* %0 to %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Err", %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Err"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 0
  store i64* %_10.0, i64** %29, align 8
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 1
  %31 = zext i1 %_10.1 to i8
  store i8 %31, i8* %30, align 8
  %32 = bitcast %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* %0 to i64*
  store i64 1, i64* %32, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  %33 = bitcast { i8, i8 }* %result to i8*
  %34 = load i8, i8* %33, align 1, !range !4
  %35 = trunc i8 %34 to i1
  %_15 = zext i1 %35 to i64
  %36 = icmp eq i64 %_15, 0
  br i1 %36, label %bb8, label %bb9

bb4:                                              ; preds = %bb3
  %37 = bitcast %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* %0 to %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Ok"*
  %38 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Ok", %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Ok"* %37, i32 0, i32 1
  %39 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 0
  store i64* %_5.0, i64** %39, align 8
  %40 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 1
  %41 = zext i1 %_5.1 to i8
  store i8 %41, i8* %40, align 8
  %42 = bitcast %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* %0 to i64*
  store i64 0, i64* %42, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  ret void

bb9:                                              ; preds = %bb7
  br label %bb8
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync6poison10map_result17h40194fe3daed24bdE(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>") dereferenceable(24) %0, i1 zeroext %1, i8 %2, i64* align 8 dereferenceable(8) %f) unnamed_addr #0 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %2, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %9, i32 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !4
  %t = trunc i8 %11 to i1
  %12 = zext i1 %t to i8
  store i8 %12, i8* %_7, align 1
  %13 = load i8, i8* %_7, align 1, !range !4
  %14 = trunc i8 %13 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %15 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h230e4f65d5ba5e6bE"(i64* align 8 dereferenceable(8) %f, i1 zeroext %14)
  %_5.0 = extractvalue { i64*, i8 } %15, 0
  %16 = extractvalue { i64*, i8 } %15, 1
  %_5.1 = trunc i8 %16 to i1
  br label %bb4

bb1:                                              ; preds = %start
  %17 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %17, i32 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %guard = trunc i8 %19 to i1
  %20 = zext i1 %guard to i8
  store i8 %20, i8* %_13, align 1
  %21 = load i8, i8* %_13, align 1, !range !4
  %22 = trunc i8 %21 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %23 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h230e4f65d5ba5e6bE"(i64* align 8 dereferenceable(8) %f, i1 zeroext %22)
  %_11.0 = extractvalue { i64*, i8 } %23, 0
  %24 = extractvalue { i64*, i8 } %23, 1
  %_11.1 = trunc i8 %24 to i1
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %25 = call { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17hf3e633b0fcf0e025E"(i64* align 8 dereferenceable(48) %_11.0, i1 zeroext %_11.1)
  %_10.0 = extractvalue { i64*, i8 } %25, 0
  %26 = extractvalue { i64*, i8 } %25, 1
  %_10.1 = trunc i8 %26 to i1
  br label %bb6

bb6:                                              ; preds = %bb5
  %27 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Err"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 0
  store i64* %_10.0, i64** %29, align 8
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 1
  %31 = zext i1 %_10.1 to i8
  store i8 %31, i8* %30, align 8
  %32 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* %0 to i64*
  store i64 1, i64* %32, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  %33 = bitcast { i8, i8 }* %result to i8*
  %34 = load i8, i8* %33, align 1, !range !4
  %35 = trunc i8 %34 to i1
  %_15 = zext i1 %35 to i64
  %36 = icmp eq i64 %_15, 0
  br i1 %36, label %bb8, label %bb9

bb4:                                              ; preds = %bb3
  %37 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Ok"*
  %38 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Ok"* %37, i32 0, i32 1
  %39 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 0
  store i64* %_5.0, i64** %39, align 8
  %40 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 1
  %41 = zext i1 %_5.1 to i8
  store i8 %41, i8* %40, align 8
  %42 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* %0 to i64*
  store i64 0, i64* %42, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  ret void

bb9:                                              ; preds = %bb7
  br label %bb8
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define { i64, i8* } @_ZN3std4sync6poison10map_result17h7cd49d5179d73d46E(i1 zeroext %0, i8 %1, i64* align 8 dereferenceable(8) %f) unnamed_addr #0 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %2 = alloca { i64, i8* }, align 8
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %0 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %1, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %9, i32 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !4
  %t = trunc i8 %11 to i1
  %12 = zext i1 %t to i8
  store i8 %12, i8* %_7, align 1
  %13 = load i8, i8* %_7, align 1, !range !4
  %14 = trunc i8 %13 to i1
; call std::sync::rwlock::RwLockReadGuard<T>::new::{{closure}}
  %_5 = call align 8 dereferenceable(16) i64* @"_ZN3std4sync6rwlock24RwLockReadGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17hf1e1c19a0b830b85E"(i64* align 8 dereferenceable(8) %f, i1 zeroext %14)
  br label %bb4

bb1:                                              ; preds = %start
  %15 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %16 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %15, i32 0, i32 1
  %17 = load i8, i8* %16, align 1, !range !4
  %guard = trunc i8 %17 to i1
  %18 = zext i1 %guard to i8
  store i8 %18, i8* %_13, align 1
  %19 = load i8, i8* %_13, align 1, !range !4
  %20 = trunc i8 %19 to i1
; call std::sync::rwlock::RwLockReadGuard<T>::new::{{closure}}
  %_11 = call align 8 dereferenceable(16) i64* @"_ZN3std4sync6rwlock24RwLockReadGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17hf1e1c19a0b830b85E"(i64* align 8 dereferenceable(8) %f, i1 zeroext %20)
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %_10 = call align 8 dereferenceable(16) i64* @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17hfa2b0ae2d2d1768fE"(i64* align 8 dereferenceable(16) %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %21 = bitcast { i64, i8* }* %2 to %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Err"*
  %22 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Err", %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Err"* %21, i32 0, i32 1
  store i64* %_10, i64** %22, align 8
  %23 = bitcast { i64, i8* }* %2 to i64*
  store i64 1, i64* %23, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  %24 = bitcast { i8, i8 }* %result to i8*
  %25 = load i8, i8* %24, align 1, !range !4
  %26 = trunc i8 %25 to i1
  %_15 = zext i1 %26 to i64
  %27 = icmp eq i64 %_15, 0
  br i1 %27, label %bb8, label %bb9

bb4:                                              ; preds = %bb3
  %28 = bitcast { i64, i8* }* %2 to %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Ok"*
  %29 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Ok", %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Ok"* %28, i32 0, i32 1
  store i64* %_5, i64** %29, align 8
  %30 = bitcast { i64, i8* }* %2 to i64*
  store i64 0, i64* %30, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  %31 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %2, i32 0, i32 0
  %32 = load i64, i64* %31, align 8, !range !2
  %33 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %2, i32 0, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = insertvalue { i64, i8* } undef, i64 %32, 0
  %36 = insertvalue { i64, i8* } %35, i8* %34, 1
  ret { i64, i8* } %36

bb9:                                              ; preds = %bb7
  br label %bb8
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync6poison10map_result17h9e5430aefcc25121E(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %0, i1 zeroext %1, i8 %2, i64* align 8 dereferenceable(8) %f) unnamed_addr #0 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %2, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %9, i32 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !4
  %t = trunc i8 %11 to i1
  %12 = zext i1 %t to i8
  store i8 %12, i8* %_7, align 1
  %13 = load i8, i8* %_7, align 1, !range !4
  %14 = trunc i8 %13 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %15 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17hc36379000a9db4aaE"(i64* align 8 dereferenceable(8) %f, i1 zeroext %14)
  %_5.0 = extractvalue { i64*, i8 } %15, 0
  %16 = extractvalue { i64*, i8 } %15, 1
  %_5.1 = trunc i8 %16 to i1
  br label %bb4

bb1:                                              ; preds = %start
  %17 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %17, i32 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %guard = trunc i8 %19 to i1
  %20 = zext i1 %guard to i8
  store i8 %20, i8* %_13, align 1
  %21 = load i8, i8* %_13, align 1, !range !4
  %22 = trunc i8 %21 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %23 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17hc36379000a9db4aaE"(i64* align 8 dereferenceable(8) %f, i1 zeroext %22)
  %_11.0 = extractvalue { i64*, i8 } %23, 0
  %24 = extractvalue { i64*, i8 } %23, 1
  %_11.1 = trunc i8 %24 to i1
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %25 = call { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h7a48c655e1663ef5E"(i64* align 8 dereferenceable(16) %_11.0, i1 zeroext %_11.1)
  %_10.0 = extractvalue { i64*, i8 } %25, 0
  %26 = extractvalue { i64*, i8 } %25, 1
  %_10.1 = trunc i8 %26 to i1
  br label %bb6

bb6:                                              ; preds = %bb5
  %27 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 0
  store i64* %_10.0, i64** %29, align 8
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 1
  %31 = zext i1 %_10.1 to i8
  store i8 %31, i8* %30, align 8
  %32 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %0 to i64*
  store i64 1, i64* %32, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  %33 = bitcast { i8, i8 }* %result to i8*
  %34 = load i8, i8* %33, align 1, !range !4
  %35 = trunc i8 %34 to i1
  %_15 = zext i1 %35 to i64
  %36 = icmp eq i64 %_15, 0
  br i1 %36, label %bb8, label %bb9

bb4:                                              ; preds = %bb3
  %37 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok"*
  %38 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok"* %37, i32 0, i32 1
  %39 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 0
  store i64* %_5.0, i64** %39, align 8
  %40 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 1
  %41 = zext i1 %_5.1 to i8
  store i8 %41, i8* %40, align 8
  %42 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %0 to i64*
  store i64 0, i64* %42, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  ret void

bb9:                                              ; preds = %bb7
  br label %bb8
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync6poison10map_result17hcab55c1b4f12db59E(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %0, i1 zeroext %1, i8 %2, i64* align 8 dereferenceable(8) %f) unnamed_addr #0 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %2, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %9, i32 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !4
  %t = trunc i8 %11 to i1
  %12 = zext i1 %t to i8
  store i8 %12, i8* %_7, align 1
  %13 = load i8, i8* %_7, align 1, !range !4
  %14 = trunc i8 %13 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %15 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h56d0852ffa0e00d9E"(i64* align 8 dereferenceable(8) %f, i1 zeroext %14)
  %_5.0 = extractvalue { i64*, i8 } %15, 0
  %16 = extractvalue { i64*, i8 } %15, 1
  %_5.1 = trunc i8 %16 to i1
  br label %bb4

bb1:                                              ; preds = %start
  %17 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %17, i32 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %guard = trunc i8 %19 to i1
  %20 = zext i1 %guard to i8
  store i8 %20, i8* %_13, align 1
  %21 = load i8, i8* %_13, align 1, !range !4
  %22 = trunc i8 %21 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %23 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h56d0852ffa0e00d9E"(i64* align 8 dereferenceable(8) %f, i1 zeroext %22)
  %_11.0 = extractvalue { i64*, i8 } %23, 0
  %24 = extractvalue { i64*, i8 } %23, 1
  %_11.1 = trunc i8 %24 to i1
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %25 = call { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h7e248b0b28523a33E"(i64* align 8 dereferenceable(16) %_11.0, i1 zeroext %_11.1)
  %_10.0 = extractvalue { i64*, i8 } %25, 0
  %26 = extractvalue { i64*, i8 } %25, 1
  %_10.1 = trunc i8 %26 to i1
  br label %bb6

bb6:                                              ; preds = %bb5
  %27 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 0
  store i64* %_10.0, i64** %29, align 8
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 1
  %31 = zext i1 %_10.1 to i8
  store i8 %31, i8* %30, align 8
  %32 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to i64*
  store i64 1, i64* %32, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  %33 = bitcast { i8, i8 }* %result to i8*
  %34 = load i8, i8* %33, align 1, !range !4
  %35 = trunc i8 %34 to i1
  %_15 = zext i1 %35 to i64
  %36 = icmp eq i64 %_15, 0
  br i1 %36, label %bb8, label %bb9

bb4:                                              ; preds = %bb3
  %37 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"*
  %38 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"* %37, i32 0, i32 1
  %39 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 0
  store i64* %_5.0, i64** %39, align 8
  %40 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 1
  %41 = zext i1 %_5.1 to i8
  store i8 %41, i8* %40, align 8
  %42 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to i64*
  store i64 0, i64* %42, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  ret void

bb9:                                              ; preds = %bb7
  br label %bb8
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync6poison10map_result17hcda0333fe493ced2E(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>") dereferenceable(24) %0, i1 zeroext %1, i8 %2, i64* align 8 dereferenceable(8) %f) unnamed_addr #0 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %2, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %9, i32 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !4
  %t = trunc i8 %11 to i1
  %12 = zext i1 %t to i8
  store i8 %12, i8* %_7, align 1
  %13 = load i8, i8* %_7, align 1, !range !4
  %14 = trunc i8 %13 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %15 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h0b27faa28926bf26E"(i64* align 8 dereferenceable(8) %f, i1 zeroext %14)
  %_5.0 = extractvalue { i64*, i8 } %15, 0
  %16 = extractvalue { i64*, i8 } %15, 1
  %_5.1 = trunc i8 %16 to i1
  br label %bb4

bb1:                                              ; preds = %start
  %17 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %17, i32 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %guard = trunc i8 %19 to i1
  %20 = zext i1 %guard to i8
  store i8 %20, i8* %_13, align 1
  %21 = load i8, i8* %_13, align 1, !range !4
  %22 = trunc i8 %21 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %23 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h0b27faa28926bf26E"(i64* align 8 dereferenceable(8) %f, i1 zeroext %22)
  %_11.0 = extractvalue { i64*, i8 } %23, 0
  %24 = extractvalue { i64*, i8 } %23, 1
  %_11.1 = trunc i8 %24 to i1
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %25 = call { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h23a765467daacca0E"(i64* align 8 dereferenceable(40) %_11.0, i1 zeroext %_11.1)
  %_10.0 = extractvalue { i64*, i8 } %25, 0
  %26 = extractvalue { i64*, i8 } %25, 1
  %_10.1 = trunc i8 %26 to i1
  br label %bb6

bb6:                                              ; preds = %bb5
  %27 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Err"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 0
  store i64* %_10.0, i64** %29, align 8
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 1
  %31 = zext i1 %_10.1 to i8
  store i8 %31, i8* %30, align 8
  %32 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %0 to i64*
  store i64 1, i64* %32, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  %33 = bitcast { i8, i8 }* %result to i8*
  %34 = load i8, i8* %33, align 1, !range !4
  %35 = trunc i8 %34 to i1
  %_15 = zext i1 %35 to i64
  %36 = icmp eq i64 %_15, 0
  br i1 %36, label %bb8, label %bb9

bb4:                                              ; preds = %bb3
  %37 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Ok"*
  %38 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Ok"* %37, i32 0, i32 1
  %39 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 0
  store i64* %_5.0, i64** %39, align 8
  %40 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 1
  %41 = zext i1 %_5.1 to i8
  store i8 %41, i8* %40, align 8
  %42 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %0 to i64*
  store i64 0, i64* %42, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  ret void

bb9:                                              ; preds = %bb7
  br label %bb8
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync6poison10map_result17hd4b5a2a2cc2c7745E(%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>") dereferenceable(24) %0, i1 zeroext %1, i8 %2, i64* align 8 dereferenceable(8) %f) unnamed_addr #0 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %2, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %9, i32 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !4
  %t = trunc i8 %11 to i1
  %12 = zext i1 %t to i8
  store i8 %12, i8* %_7, align 1
  %13 = load i8, i8* %_7, align 1, !range !4
  %14 = trunc i8 %13 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %15 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h2657f592b4a1fd8eE"(i64* align 8 dereferenceable(8) %f, i1 zeroext %14)
  %_5.0 = extractvalue { i64*, i8 } %15, 0
  %16 = extractvalue { i64*, i8 } %15, 1
  %_5.1 = trunc i8 %16 to i1
  br label %bb4

bb1:                                              ; preds = %start
  %17 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %17, i32 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %guard = trunc i8 %19 to i1
  %20 = zext i1 %guard to i8
  store i8 %20, i8* %_13, align 1
  %21 = load i8, i8* %_13, align 1, !range !4
  %22 = trunc i8 %21 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %23 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h2657f592b4a1fd8eE"(i64* align 8 dereferenceable(8) %f, i1 zeroext %22)
  %_11.0 = extractvalue { i64*, i8 } %23, 0
  %24 = extractvalue { i64*, i8 } %23, 1
  %_11.1 = trunc i8 %24 to i1
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %25 = call { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17haf4869d39c368e09E"(i64* align 8 dereferenceable(64) %_11.0, i1 zeroext %_11.1)
  %_10.0 = extractvalue { i64*, i8 } %25, 0
  %26 = extractvalue { i64*, i8 } %25, 1
  %_10.1 = trunc i8 %26 to i1
  br label %bb6

bb6:                                              ; preds = %bb5
  %27 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>::Err"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 0
  store i64* %_10.0, i64** %29, align 8
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 1
  %31 = zext i1 %_10.1 to i8
  store i8 %31, i8* %30, align 8
  %32 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>"* %0 to i64*
  store i64 1, i64* %32, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  %33 = bitcast { i8, i8 }* %result to i8*
  %34 = load i8, i8* %33, align 1, !range !4
  %35 = trunc i8 %34 to i1
  %_15 = zext i1 %35 to i64
  %36 = icmp eq i64 %_15, 0
  br i1 %36, label %bb8, label %bb9

bb4:                                              ; preds = %bb3
  %37 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>::Ok"*
  %38 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>::Ok"* %37, i32 0, i32 1
  %39 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 0
  store i64* %_5.0, i64** %39, align 8
  %40 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 1
  %41 = zext i1 %_5.1 to i8
  store i8 %41, i8* %40, align 8
  %42 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>"* %0 to i64*
  store i64 0, i64* %42, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  ret void

bb9:                                              ; preds = %bb7
  br label %bb8
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync6poison10map_result17hf6999d5ed4337ddaE(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %0, i1 zeroext %1, i8 %2, i64* align 8 dereferenceable(8) %f) unnamed_addr #0 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %2, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %9, i32 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !4
  %t = trunc i8 %11 to i1
  %12 = zext i1 %t to i8
  store i8 %12, i8* %_7, align 1
  %13 = load i8, i8* %_7, align 1, !range !4
  %14 = trunc i8 %13 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %15 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17he01b1947f6d00fefE"(i64* align 8 dereferenceable(8) %f, i1 zeroext %14)
  %_5.0 = extractvalue { i64*, i8 } %15, 0
  %16 = extractvalue { i64*, i8 } %15, 1
  %_5.1 = trunc i8 %16 to i1
  br label %bb4

bb1:                                              ; preds = %start
  %17 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %17, i32 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %guard = trunc i8 %19 to i1
  %20 = zext i1 %guard to i8
  store i8 %20, i8* %_13, align 1
  %21 = load i8, i8* %_13, align 1, !range !4
  %22 = trunc i8 %21 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %23 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17he01b1947f6d00fefE"(i64* align 8 dereferenceable(8) %f, i1 zeroext %22)
  %_11.0 = extractvalue { i64*, i8 } %23, 0
  %24 = extractvalue { i64*, i8 } %23, 1
  %_11.1 = trunc i8 %24 to i1
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %25 = call { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17ha9f67bcf54f2dafeE"(i64* align 8 dereferenceable(16) %_11.0, i1 zeroext %_11.1)
  %_10.0 = extractvalue { i64*, i8 } %25, 0
  %26 = extractvalue { i64*, i8 } %25, 1
  %_10.1 = trunc i8 %26 to i1
  br label %bb6

bb6:                                              ; preds = %bb5
  %27 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 0
  store i64* %_10.0, i64** %29, align 8
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 1
  %31 = zext i1 %_10.1 to i8
  store i8 %31, i8* %30, align 8
  %32 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to i64*
  store i64 1, i64* %32, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  %33 = bitcast { i8, i8 }* %result to i8*
  %34 = load i8, i8* %33, align 1, !range !4
  %35 = trunc i8 %34 to i1
  %_15 = zext i1 %35 to i64
  %36 = icmp eq i64 %_15, 0
  br i1 %36, label %bb8, label %bb9

bb4:                                              ; preds = %bb3
  %37 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok"*
  %38 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok"* %37, i32 0, i32 1
  %39 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 0
  store i64* %_5.0, i64** %39, align 8
  %40 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 1
  %41 = zext i1 %_5.1 to i8
  store i8 %41, i8* %40, align 8
  %42 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to i64*
  store i64 0, i64* %42, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  ret void

bb9:                                              ; preds = %bb7
  br label %bb8
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h23a765467daacca0E"(i64* align 8 dereferenceable(40) %guard.0, i1 zeroext %guard.1) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  store i64* %guard.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard.1 to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i64*, i8 } undef, i64* %5, 0
  %11 = insertvalue { i64*, i8 } %10, i8 %9, 1
  ret { i64*, i8 } %11
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h5d03f379684b0f9cE"(i64* align 8 dereferenceable(16) %guard.0, i1 zeroext %guard.1) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  store i64* %guard.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard.1 to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i64*, i8 } undef, i64* %5, 0
  %11 = insertvalue { i64*, i8 } %10, i8 %9, 1
  ret { i64*, i8 } %11
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h61e4a162909aa746E"(i1 zeroext %guard) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = zext i1 %guard to i8
  store i8 %1, i8* %0, align 1
  %2 = load i8, i8* %0, align 1, !range !4
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h7a48c655e1663ef5E"(i64* align 8 dereferenceable(16) %guard.0, i1 zeroext %guard.1) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  store i64* %guard.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard.1 to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i64*, i8 } undef, i64* %5, 0
  %11 = insertvalue { i64*, i8 } %10, i8 %9, 1
  ret { i64*, i8 } %11
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h7e248b0b28523a33E"(i64* align 8 dereferenceable(16) %guard.0, i1 zeroext %guard.1) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  store i64* %guard.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard.1 to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i64*, i8 } undef, i64* %5, 0
  %11 = insertvalue { i64*, i8 } %10, i8 %9, 1
  ret { i64*, i8 } %11
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17ha9f67bcf54f2dafeE"(i64* align 8 dereferenceable(16) %guard.0, i1 zeroext %guard.1) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  store i64* %guard.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard.1 to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i64*, i8 } undef, i64* %5, 0
  %11 = insertvalue { i64*, i8 } %10, i8 %9, 1
  ret { i64*, i8 } %11
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17haf4869d39c368e09E"(i64* align 8 dereferenceable(64) %guard.0, i1 zeroext %guard.1) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  store i64* %guard.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard.1 to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i64*, i8 } undef, i64* %5, 0
  %11 = insertvalue { i64*, i8 } %10, i8 %9, 1
  ret { i64*, i8 } %11
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17hf3e633b0fcf0e025E"(i64* align 8 dereferenceable(48) %guard.0, i1 zeroext %guard.1) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  store i64* %guard.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard.1 to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i64*, i8 } undef, i64* %5, 0
  %11 = insertvalue { i64*, i8 } %10, i8 %9, 1
  ret { i64*, i8 } %11
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(16) i64* @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17hfa2b0ae2d2d1768fE"(i64* align 8 dereferenceable(16) %guard) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  store i64* %guard, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %1
}

; std::sync::poison::Flag::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std4sync6poison4Flag3get17hfbe7686c476faaaeE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %self) unnamed_addr #1 {
start:
  %_3 = alloca i8, align 1
  %_2 = bitcast %"std::sync::poison::Flag"* %self to %"core::sync::atomic::AtomicBool"*
  store i8 0, i8* %_3, align 1
  %0 = load i8, i8* %_3, align 1, !range !7
; call core::sync::atomic::AtomicBool::load
  %1 = call zeroext i1 @_ZN4core4sync6atomic10AtomicBool4load17h9d3c0d586579c5e2E(%"core::sync::atomic::AtomicBool"* align 1 dereferenceable(1) %_2, i8 %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; std::sync::poison::Flag::done
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std4sync6poison4Flag4done17he8752d03e6c0e24aE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %self, i8* align 1 dereferenceable(1) %guard) unnamed_addr #1 {
start:
  %_9 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %0 = load i8, i8* %guard, align 1, !range !4
  %_5 = trunc i8 %0 to i1
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_3, align 1
  br label %bb3

bb2:                                              ; preds = %start
; call std::thread::panicking
  %_6 = call zeroext i1 @_ZN3std6thread9panicking17h372353a900e1458cE()
  br label %bb4

bb4:                                              ; preds = %bb2
  %1 = zext i1 %_6 to i8
  store i8 %1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb4
  %2 = load i8, i8* %_3, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb3
  %_8 = bitcast %"std::sync::poison::Flag"* %self to %"core::sync::atomic::AtomicBool"*
  store i8 0, i8* %_9, align 1
  %4 = load i8, i8* %_9, align 1, !range !7
; call core::sync::atomic::AtomicBool::store
  call void @_ZN4core4sync6atomic10AtomicBool5store17h5fb03db410a3034cE(%"core::sync::atomic::AtomicBool"* align 1 dereferenceable(1) %_8, i1 zeroext true, i8 %4)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; std::sync::poison::Flag::borrow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17he7e872dcfbb0a1baE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %self) unnamed_addr #1 {
start:
  %ret = alloca i8, align 1
  %0 = alloca { i8, i8 }, align 1
; call std::thread::panicking
  %_3 = call zeroext i1 @_ZN3std6thread9panicking17h372353a900e1458cE()
  br label %bb1

bb1:                                              ; preds = %start
  %1 = zext i1 %_3 to i8
  store i8 %1, i8* %ret, align 1
; call std::sync::poison::Flag::get
  %_4 = call zeroext i1 @_ZN3std4sync6poison4Flag3get17hfbe7686c476faaaeE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_4, label %bb3, label %bb5

bb5:                                              ; preds = %bb2
  %2 = load i8, i8* %ret, align 1, !range !4
  %_8 = trunc i8 %2 to i1
  %3 = bitcast { i8, i8 }* %0 to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %3, i32 0, i32 1
  %5 = zext i1 %_8 to i8
  store i8 %5, i8* %4, align 1
  %6 = bitcast { i8, i8 }* %0 to i8*
  store i8 0, i8* %6, align 1
  br label %bb6

bb3:                                              ; preds = %bb2
  %7 = load i8, i8* %ret, align 1, !range !4
  %_7 = trunc i8 %7 to i1
; call std::sync::poison::PoisonError<T>::new
  %_6 = call zeroext i1 @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h61e4a162909aa746E"(i1 zeroext %_7)
  br label %bb4

bb4:                                              ; preds = %bb3
  %8 = bitcast { i8, i8 }* %0 to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %8, i32 0, i32 1
  %10 = zext i1 %_6 to i8
  store i8 %10, i8* %9, align 1
  %11 = bitcast { i8, i8 }* %0 to i8*
  store i8 1, i8* %11, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %12 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 0
  %13 = load i8, i8* %12, align 1, !range !4
  %14 = trunc i8 %13 to i1
  %15 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i1 %14 to i8
  %18 = insertvalue { i8, i8 } undef, i8 %17, 0
  %19 = insertvalue { i8, i8 } %18, i8 %16, 1
  ret { i8, i8 } %19
}

; std::sync::rwlock::RwLock<T>::new
; Function Attrs: nonlazybind uwtable
define i128 @"_ZN3std4sync6rwlock15RwLock$LT$T$GT$3new17h4d4f45c94d5ba133E"(i32 %t) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i32, align 4
  %1 = alloca i8, align 1
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_3 = alloca %"std::sync::poison::Flag", align 1
  %_2 = alloca i64*, align 8
  %3 = alloca %"std::sync::rwlock::RwLock<i32>", align 8
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke std::sys_common::rwlock::MovableRWLock::new
  %4 = invoke noalias nonnull align 8 i64* @_ZN3std10sys_common6rwlock13MovableRWLock3new17h8cb6241447c11387E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %4, i64** %_2, align 8
; invoke std::sync::poison::Flag::new
  %5 = invoke i8 @_ZN3std4sync6poison4Flag3new17h47827b134c610a5eE()
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %6 = load i8, i8* %_6, align 1, !range !4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  store i8 %5, i8* %1, align 1
  %13 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %1, i64 1, i1 false)
  store i8 0, i8* %_6, align 1
  store i32 %t, i32* %0, align 4
  %14 = load i32, i32* %0, align 4
  br label %bb3

bb4:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sys_common::rwlock::MovableRWLock>
  call void @"_ZN4core3ptr59drop_in_place$LT$std..sys_common..rwlock..MovableRWLock$GT$17h8cad6df13dcf7acbE"(i64** %_2) #21
  br label %bb7

cleanup1:                                         ; preds = %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %20 = bitcast %"std::sync::rwlock::RwLock<i32>"* %3 to i64**
  %21 = load i64*, i64** %_2, align 8, !nonnull !3
  store i64* %21, i64** %20, align 8
  %22 = getelementptr inbounds %"std::sync::rwlock::RwLock<i32>", %"std::sync::rwlock::RwLock<i32>"* %3, i32 0, i32 1
  %23 = bitcast %"std::sync::poison::Flag"* %22 to i8*
  %24 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 1 %24, i64 1, i1 false)
  %25 = getelementptr inbounds %"std::sync::rwlock::RwLock<i32>", %"std::sync::rwlock::RwLock<i32>"* %3, i32 0, i32 3
  store i32 %14, i32* %25, align 4
  %26 = bitcast %"std::sync::rwlock::RwLock<i32>"* %3 to i128*
  %27 = load i128, i128* %26, align 8
  ret i128 %27

bb5:                                              ; preds = %bb6, %bb7
  %28 = bitcast { i8*, i32 }* %2 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

bb6:                                              ; preds = %bb7
  br label %bb5
}

; std::sync::rwlock::RwLock<T>::read
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i8* } @"_ZN3std4sync6rwlock15RwLock$LT$T$GT$4read17he4f2c18380bac321E"(%"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_3 = bitcast %"std::sync::rwlock::RwLock<i32>"* %self to i64**
; call std::sys_common::rwlock::MovableRWLock::read
  call void @_ZN3std10sys_common6rwlock13MovableRWLock4read17h4bd39e54facd5eeeE(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::rwlock::RwLockReadGuard<T>::new
  %0 = call { i64, i8* } @"_ZN3std4sync6rwlock24RwLockReadGuard$LT$T$GT$3new17h07441077bbb0d4a2E"(%"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i8* } %0, 0
  %2 = extractvalue { i64, i8* } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { i64, i8* } undef, i64 %1, 0
  %4 = insertvalue { i64, i8* } %3, i8* %2, 1
  ret { i64, i8* } %4
}

; std::sync::rwlock::RwLock<T>::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std4sync6rwlock15RwLock$LT$T$GT$5write17h3a4c8dedd894a963E"(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>") dereferenceable(24) %0, %"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_3 = bitcast %"std::sync::rwlock::RwLock<i32>"* %self to i64**
; call std::sys_common::rwlock::MovableRWLock::write
  call void @_ZN3std10sys_common6rwlock13MovableRWLock5write17hc5be9b3cfa69a2f6E(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::rwlock::RwLockWriteGuard<T>::new
  call void @"_ZN3std4sync6rwlock25RwLockWriteGuard$LT$T$GT$3new17hde3bfca309c61b7aE"(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>") dereferenceable(24) %0, %"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::rwlock::RwLockReadGuard<T>::new
; Function Attrs: nonlazybind uwtable
define { i64, i8* } @"_ZN3std4sync6rwlock24RwLockReadGuard$LT$T$GT$3new17h07441077bbb0d4a2E"(%"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %0) unnamed_addr #0 {
start:
  %_4 = alloca i64*, align 8
  %lock = alloca %"std::sync::rwlock::RwLock<i32>"*, align 8
  store %"std::sync::rwlock::RwLock<i32>"* %0, %"std::sync::rwlock::RwLock<i32>"** %lock, align 8
  %1 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %lock, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::rwlock::RwLock<i32>", %"std::sync::rwlock::RwLock<i32>"* %1, i32 0, i32 1
; call std::sync::poison::Flag::borrow
  %2 = call { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17he7e872dcfbb0a1baE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3)
  %3 = extractvalue { i8, i8 } %2, 0
  %_2.0 = trunc i8 %3 to i1
  %_2.1 = extractvalue { i8, i8 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64** %_4 to %"std::sync::rwlock::RwLock<i32>"***
  store %"std::sync::rwlock::RwLock<i32>"** %lock, %"std::sync::rwlock::RwLock<i32>"*** %4, align 8
  %5 = load i64*, i64** %_4, align 8, !nonnull !3
; call std::sync::poison::map_result
  %6 = call { i64, i8* } @_ZN3std4sync6poison10map_result17h7cd49d5179d73d46E(i1 zeroext %_2.0, i8 %_2.1, i64* align 8 dereferenceable(8) %5)
  %7 = extractvalue { i64, i8* } %6, 0
  %8 = extractvalue { i64, i8* } %6, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = insertvalue { i64, i8* } undef, i64 %7, 0
  %10 = insertvalue { i64, i8* } %9, i8* %8, 1
  ret { i64, i8* } %10
}

; std::sync::rwlock::RwLockReadGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(16) i64* @"_ZN3std4sync6rwlock24RwLockReadGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17hf1e1c19a0b830b85E"(i64* align 8 dereferenceable(8) %_1, i1 zeroext %_2) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64* %_1 to %"std::sync::rwlock::RwLock<i32>"**
  %2 = bitcast i64* %_1 to %"std::sync::rwlock::RwLock<i32>"**
  %_3 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %2, align 8, !nonnull !3
  %3 = bitcast i64** %0 to %"std::sync::rwlock::RwLock<i32>"**
  store %"std::sync::rwlock::RwLock<i32>"* %_3, %"std::sync::rwlock::RwLock<i32>"** %3, align 8
  %4 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %4
}

; std::sync::rwlock::RwLockWriteGuard<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync6rwlock25RwLockWriteGuard$LT$T$GT$3new17hde3bfca309c61b7aE"(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>") dereferenceable(24) %0, %"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %1) unnamed_addr #0 {
start:
  %_4 = alloca i64*, align 8
  %lock = alloca %"std::sync::rwlock::RwLock<i32>"*, align 8
  store %"std::sync::rwlock::RwLock<i32>"* %1, %"std::sync::rwlock::RwLock<i32>"** %lock, align 8
  %2 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %lock, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::rwlock::RwLock<i32>", %"std::sync::rwlock::RwLock<i32>"* %2, i32 0, i32 1
; call std::sync::poison::Flag::borrow
  %3 = call { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17he7e872dcfbb0a1baE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3)
  %4 = extractvalue { i8, i8 } %3, 0
  %_2.0 = trunc i8 %4 to i1
  %_2.1 = extractvalue { i8, i8 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast i64** %_4 to %"std::sync::rwlock::RwLock<i32>"***
  store %"std::sync::rwlock::RwLock<i32>"** %lock, %"std::sync::rwlock::RwLock<i32>"*** %5, align 8
  %6 = load i64*, i64** %_4, align 8, !nonnull !3
; call std::sync::poison::map_result
  call void @_ZN3std4sync6poison10map_result17h29b29a5b2b622c33E(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>") dereferenceable(24) %0, i1 zeroext %_2.0, i8 %_2.1, i64* align 8 dereferenceable(8) %6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::rwlock::RwLockWriteGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync6rwlock25RwLockWriteGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h3981d61ce724c97bE"(i64* align 8 dereferenceable(8) %_1, i1 zeroext %guard) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = bitcast i64* %_1 to %"std::sync::rwlock::RwLock<i32>"**
  %2 = bitcast i64* %_1 to %"std::sync::rwlock::RwLock<i32>"**
  %_3 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %2, align 8, !nonnull !3
  %3 = bitcast { i64*, i8 }* %0 to %"std::sync::rwlock::RwLock<i32>"**
  store %"std::sync::rwlock::RwLock<i32>"* %_3, %"std::sync::rwlock::RwLock<i32>"** %3, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %5 = zext i1 %guard to i8
  store i8 %5, i8* %4, align 8
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i8
  %12 = insertvalue { i64*, i8 } undef, i64* %7, 0
  %13 = insertvalue { i64*, i8 } %12, i8 %11, 1
  ret { i64*, i8 } %13
}

; std::sync::condvar::Condvar::wait
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync7condvar7Condvar4wait17h7e48308164e57e12E(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %0, %"std::sync::condvar::Condvar"* align 8 dereferenceable(16) %self, i64* align 8 dereferenceable(16) %1, i1 zeroext %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %guard = alloca { i64*, i8 }, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  store i64* %1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %6 = zext i1 %2 to i8
  store i8 %6, i8* %5, align 8
  store i8 0, i8* %_18, align 1
  store i8 1, i8* %_18, align 1
; invoke std::sync::mutex::guard_lock
  %lock = invoke align 8 dereferenceable(8) i64** @_ZN3std4sync5mutex10guard_lock17h4021a8c0b8ce9662E({ i64*, i8 }* align 8 dereferenceable(16) %guard)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_8 = bitcast %"std::sync::condvar::Condvar"* %self to %"std::sys_common::condvar::Condvar"*
; invoke std::sys_common::condvar::Condvar::wait
  invoke void @_ZN3std10sys_common7condvar7Condvar4wait17ha138f06521792bfbE(%"std::sys_common::condvar::Condvar"* align 8 dereferenceable(16) %_8, i64** align 8 dereferenceable(8) %lock)
          to label %bb2 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %7 = load i8, i8* %_18, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb10, label %bb9

cleanup:                                          ; preds = %bb5, %bb3, %bb2, %bb1, %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb11

bb2:                                              ; preds = %bb1
; invoke std::sync::mutex::guard_poison
  %_11 = invoke align 1 dereferenceable(1) %"std::sync::poison::Flag"* @_ZN3std4sync5mutex12guard_poison17ha0896f353e8dcd7eE({ i64*, i8 }* align 8 dereferenceable(16) %guard)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke std::sync::poison::Flag::get
  %poisoned = invoke zeroext i1 @_ZN3std4sync6poison4Flag3get17hfbe7686c476faaaeE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_11)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  br i1 %poisoned, label %bb5, label %bb7

bb7:                                              ; preds = %bb4
  store i8 0, i8* %_18, align 1
  %14 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  %_17.0 = load i64*, i64** %14, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %_17.1 = trunc i8 %16 to i1
  %17 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %18, i32 0, i32 0
  store i64* %_17.0, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %18, i32 0, i32 1
  %21 = zext i1 %_17.1 to i8
  store i8 %21, i8* %20, align 8
  %22 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to i64*
  store i64 0, i64* %22, align 8
  br label %bb8

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_18, align 1
  %23 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  %_16.0 = load i64*, i64** %23, align 8, !nonnull !3
  %24 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !4
  %_16.1 = trunc i8 %25 to i1
; invoke std::sync::poison::PoisonError<T>::new
  %26 = invoke { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17ha9f67bcf54f2dafeE"(i64* align 8 dereferenceable(16) %_16.0, i1 zeroext %_16.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_15.0 = extractvalue { i64*, i8 } %26, 0
  %27 = extractvalue { i64*, i8 } %26, 1
  %_15.1 = trunc i8 %27 to i1
  %28 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err"*
  %29 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err"* %28, i32 0, i32 1
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %29, i32 0, i32 0
  store i64* %_15.0, i64** %30, align 8
  %31 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %29, i32 0, i32 1
  %32 = zext i1 %_15.1 to i8
  store i8 %32, i8* %31, align 8
  %33 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to i64*
  store i64 1, i64* %33, align 8
  br label %bb8

bb9:                                              ; preds = %bb10, %bb11
  %34 = bitcast { i8*, i32 }* %3 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

bb10:                                             ; preds = %bb11
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<()>>
  call void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$17haacb45849dcb6ae5E"({ i64*, i8 }* %guard) #21
  br label %bb9

bb8:                                              ; preds = %bb7, %bb6
  ret void
}

; std::sync::condvar::Condvar::wait
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync7condvar7Condvar4wait17hecfa1b9ed17ab9ccE(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %0, %"std::sync::condvar::Condvar"* align 8 dereferenceable(16) %self, i64* align 8 dereferenceable(16) %1, i1 zeroext %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %guard = alloca { i64*, i8 }, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  store i64* %1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %6 = zext i1 %2 to i8
  store i8 %6, i8* %5, align 8
  store i8 0, i8* %_18, align 1
  store i8 1, i8* %_18, align 1
; invoke std::sync::mutex::guard_lock
  %lock = invoke align 8 dereferenceable(8) i64** @_ZN3std4sync5mutex10guard_lock17h3ecb1d4ecdb2b6cfE({ i64*, i8 }* align 8 dereferenceable(16) %guard)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_8 = bitcast %"std::sync::condvar::Condvar"* %self to %"std::sys_common::condvar::Condvar"*
; invoke std::sys_common::condvar::Condvar::wait
  invoke void @_ZN3std10sys_common7condvar7Condvar4wait17ha138f06521792bfbE(%"std::sys_common::condvar::Condvar"* align 8 dereferenceable(16) %_8, i64** align 8 dereferenceable(8) %lock)
          to label %bb2 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %7 = load i8, i8* %_18, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb10, label %bb9

cleanup:                                          ; preds = %bb5, %bb3, %bb2, %bb1, %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb11

bb2:                                              ; preds = %bb1
; invoke std::sync::mutex::guard_poison
  %_11 = invoke align 1 dereferenceable(1) %"std::sync::poison::Flag"* @_ZN3std4sync5mutex12guard_poison17hf2902e00b700f6a8E({ i64*, i8 }* align 8 dereferenceable(16) %guard)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke std::sync::poison::Flag::get
  %poisoned = invoke zeroext i1 @_ZN3std4sync6poison4Flag3get17hfbe7686c476faaaeE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_11)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  br i1 %poisoned, label %bb5, label %bb7

bb7:                                              ; preds = %bb4
  store i8 0, i8* %_18, align 1
  %14 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  %_17.0 = load i64*, i64** %14, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %_17.1 = trunc i8 %16 to i1
  %17 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %18, i32 0, i32 0
  store i64* %_17.0, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %18, i32 0, i32 1
  %21 = zext i1 %_17.1 to i8
  store i8 %21, i8* %20, align 8
  %22 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to i64*
  store i64 0, i64* %22, align 8
  br label %bb8

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_18, align 1
  %23 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  %_16.0 = load i64*, i64** %23, align 8, !nonnull !3
  %24 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !4
  %_16.1 = trunc i8 %25 to i1
; invoke std::sync::poison::PoisonError<T>::new
  %26 = invoke { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h7e248b0b28523a33E"(i64* align 8 dereferenceable(16) %_16.0, i1 zeroext %_16.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_15.0 = extractvalue { i64*, i8 } %26, 0
  %27 = extractvalue { i64*, i8 } %26, 1
  %_15.1 = trunc i8 %27 to i1
  %28 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"*
  %29 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"* %28, i32 0, i32 1
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %29, i32 0, i32 0
  store i64* %_15.0, i64** %30, align 8
  %31 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %29, i32 0, i32 1
  %32 = zext i1 %_15.1 to i8
  store i8 %32, i8* %31, align 8
  %33 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to i64*
  store i64 1, i64* %33, align 8
  br label %bb8

bb9:                                              ; preds = %bb10, %bb11
  %34 = bitcast { i8*, i32 }* %3 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

bb10:                                             ; preds = %bb11
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h8a0966216e5866c0E"({ i64*, i8 }* %guard) #21
  br label %bb9

bb8:                                              ; preds = %bb7, %bb6
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h0b7ea76177e8514fE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = alloca %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>", align 8
; call std::thread::local::LocalKey<T>::try_with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h0260c7f8c28652fdE"(%"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>"* noalias nocapture sret(%"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>") dereferenceable(24) %_3, i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  %0 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h6d979bc5c989e7d9E"(%"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>"* noalias nocapture dereferenceable(24) %_3, [0 x i8]* nonnull align 1 bitcast (<{ [70 x i8] }>* @alloc501 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc503 to %"core::panic::location::Location"*))
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h0260c7f8c28652fdE"(%"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>"* noalias nocapture sret(%"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>") dereferenceable(24) %0, i64** align 8 dereferenceable(8) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  %_15 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
  %2 = bitcast i64** %self to i64* ()**
  %_7 = load i64* ()*, i64* ()** %2, align 8, !nonnull !3
  %_6 = invoke align 8 dereferenceable_or_null(16) i64* %_7()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 dereferenceable_or_null(16) i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17hef8c2dc72ffeb95aE"(i64* align 8 dereferenceable_or_null(16) %_6)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %3 = load i8, i8* %_17, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %10 = invoke align 8 dereferenceable_or_null(16) i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb8781295074a7d22E"(i64* align 8 dereferenceable_or_null(16) %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %10, i64** %_4, align 8
  %11 = bitcast i64** %_4 to {}**
  %12 = load {}*, {}** %11, align 8
  %13 = icmp eq {}* %12, null
  %_9 = select i1 %13, i64 1, i64 0
  switch i64 %_9, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %14 = bitcast i64** %_4 to { i64, i64 }**
  %val = load { i64, i64 }*, { i64, i64 }** %14, align 8, !nonnull !3
  store i8 0, i8* %_17, align 1
  %15 = bitcast i64** %_15 to { i64, i64 }**
  store { i64, i64 }* %val, { i64, i64 }** %15, align 8
  %16 = load i64*, i64** %_15, align 8, !nonnull !3
  %17 = bitcast i64* %16 to { i64, i64 }*
; invoke std::collections::hash::map::RandomState::new::{{closure}}
  %18 = invoke { i64, i64 } @"_ZN3std11collections4hash3map11RandomState3new28_$u7b$$u7b$closure$u7d$$u7d$17h453e6777884ed1ddE"({ i64, i64 }* align 8 dereferenceable(16) %17)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  invoke void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha2c05ca3d9c6943dE"(%"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>"* noalias nocapture sret(%"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>") dereferenceable(24) %0)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  ret void

bb8:                                              ; preds = %bb4
  %_13.0 = extractvalue { i64, i64 } %18, 0
  %_13.1 = extractvalue { i64, i64 } %18, 1
  %19 = bitcast %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>"* %0 to %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>::Ok"*
  %20 = getelementptr inbounds %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>::Ok", %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>::Ok"* %19, i32 0, i32 1
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0
  store i64 %_13.0, i64* %21, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1
  store i64 %_13.1, i64* %22, align 8
  %23 = bitcast %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>"* %0 to i64*
  store i64 0, i64* %23, align 8
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %24 = bitcast { i8*, i32 }* %1 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::fast::Key<T>::try_initialize
; Function Attrs: noinline nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h27e448168b21ae46E"(%"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(32) %self) unnamed_addr #3 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_12 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %1 = alloca i64*, align 8
  store i8 0, i8* %_12, align 1
  store i8 1, i8* %_12, align 1
; invoke core::mem::needs_drop
  %_5 = invoke zeroext i1 @_ZN4core3mem10needs_drop17h7bbbe6170a365fceE()
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb1, label %bb2

bb14:                                             ; preds = %cleanup
  %2 = load i8, i8* %_12, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb13, label %bb11

cleanup:                                          ; preds = %bb6, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb14

bb2:                                              ; preds = %bb4
; invoke std::thread::local::fast::Key<T>::try_register_dtor
  %_6 = invoke zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17ha6416d92067e279cE"(%"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(32) %self)
          to label %bb5 unwind label %cleanup

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb5, %bb1
  %9 = load i8, i8* %_3, align 1, !range !4
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb8

bb5:                                              ; preds = %bb2
  %11 = zext i1 %_6 to i8
  store i8 %11, i8* %_3, align 1
  br label %bb3

bb8:                                              ; preds = %bb3
  %12 = bitcast i64** %1 to {}**
  store {}* null, {}** %12, align 8
  br label %bb9

bb6:                                              ; preds = %bb3
  %_10 = bitcast %"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>"* %self to %"std::thread::local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>"*
  store i8 0, i8* %_12, align 1
; invoke std::thread::local::lazy::LazyKeyInner<T>::initialize
  %_9 = invoke align 8 dereferenceable(16) { i64, i64 }* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17h100962f06329a747E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(24) %_10)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %13 = bitcast i64** %1 to { i64, i64 }**
  store { i64, i64 }* %_9, { i64, i64 }** %13, align 8
  br label %bb9

bb11:                                             ; preds = %bb13, %bb14
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb13:                                             ; preds = %bb14
  br label %bb11

bb9:                                              ; preds = %bb8, %bb7
  %20 = load i8, i8* %_12, align 1, !range !4
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb12, label %bb10

bb10:                                             ; preds = %bb12, %bb9
  %22 = load i64*, i64** %1, align 8
  ret i64* %22

bb12:                                             ; preds = %bb9
  br label %bb10
}

; std::thread::local::fast::Key<T>::try_register_dtor
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17ha6416d92067e279cE"(%"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_12 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_3 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>", %"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>"* %self, i32 0, i32 1
; call core::cell::Cell<T>::get
  %1 = call i8 @"_ZN4core4cell13Cell$LT$T$GT$3get17h8303ff7f9598c9bdE"(i8* align 1 dereferenceable(1) %_3), !range !24
  store i8 %1, i8* %_2, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load i8, i8* %_2, align 1, !range !24
  %_4 = zext i8 %2 to i64
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb7
    i64 2, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %_6 = bitcast %"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>"* %self to i8*
; call std::sys::unix::thread_local_dtor::register_dtor
  call void @_ZN3std3sys4unix17thread_local_dtor13register_dtor17h23209ede0e49f302E(i8* %_6, void (i8*)* nonnull @_ZN3std6thread5local4fast13destroy_value17h49e47dea69b38184E)
  br label %bb5

bb7:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb8

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7, %bb2
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  %_11 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>", %"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>"* %self, i32 0, i32 1
  store i8 1, i8* %_12, align 1
  %5 = load i8, i8* %_12, align 1, !range !24
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h6806daddfacb5892E"(i8* align 1 dereferenceable(1) %_11, i8 %5)
  br label %bb6

bb6:                                              ; preds = %bb5
  store i8 1, i8* %0, align 1
  br label %bb8
}

; std::thread::local::fast::Key<T>::get
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17hebf8f753599c2456E"(%"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_3 = alloca i64*, align 8
  %1 = alloca i64*, align 8
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %_4 = bitcast %"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>"* %self to %"std::thread::local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>"*
; invoke std::thread::local::lazy::LazyKeyInner<T>::get
  %2 = invoke align 8 dereferenceable_or_null(16) i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17heec50763f3e6577bE"(%"std::thread::local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(24) %_4)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %2, i64** %_3, align 8
  %3 = bitcast i64** %_3 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb11:                                             ; preds = %cleanup
  %6 = load i8, i8* %_10, align 1, !range !4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb10, label %bb8

cleanup:                                          ; preds = %bb2, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb11

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_10, align 1
; invoke std::thread::local::fast::Key<T>::try_initialize
  %13 = invoke align 8 dereferenceable_or_null(16) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h27e448168b21ae46E"(%"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(32) %self)
          to label %bb5 unwind label %cleanup

bb4:                                              ; preds = %bb1
  %14 = bitcast i64** %_3 to { i64, i64 }**
  %val = load { i64, i64 }*, { i64, i64 }** %14, align 8, !nonnull !3
  %15 = bitcast i64** %1 to { i64, i64 }**
  store { i64, i64 }* %val, { i64, i64 }** %15, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %16 = load i8, i8* %_10, align 1, !range !4
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb9, label %bb7

bb5:                                              ; preds = %bb2
  store i64* %13, i64** %1, align 8
  br label %bb6

bb8:                                              ; preds = %bb10, %bb11
  %18 = bitcast { i8*, i32 }* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23

bb10:                                             ; preds = %bb11
  br label %bb8

bb7:                                              ; preds = %bb9, %bb6
  %24 = load i64*, i64** %1, align 8
  ret i64* %24

bb9:                                              ; preds = %bb6
  br label %bb7
}

; std::thread::local::fast::destroy_value
; Function Attrs: nonlazybind uwtable
define void @_ZN3std6thread5local4fast13destroy_value17h49e47dea69b38184E(i8* %ptr) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca %"core::option::Option<core::cell::Cell<(u64, u64)>>", align 8
  %_8 = alloca i8, align 1
  %value = alloca %"core::option::Option<core::cell::Cell<(u64, u64)>>", align 8
  %ptr1 = bitcast i8* %ptr to %"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>"*
  %_5 = bitcast %"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>"* %ptr1 to %"std::thread::local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>"*
; invoke std::thread::local::lazy::LazyKeyInner<T>::take
  invoke void @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17hafa5539b420c70a7E"(%"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture sret(%"core::option::Option<core::cell::Cell<(u64, u64)>>") dereferenceable(24) %value, %"std::thread::local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(24) %_5)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_7 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>", %"std::thread::local::fast::Key<core::cell::Cell<(u64, u64)>>"* %ptr1, i32 0, i32 1
  store i8 2, i8* %_8, align 1
  %1 = load i8, i8* %_8, align 1, !range !24
; invoke core::cell::Cell<T>::set
  invoke void @"_ZN4core4cell13Cell$LT$T$GT$3set17h6806daddfacb5892E"(i8* align 1 dereferenceable(1) %_7, i8 %1)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  call void @llvm.trap()
  unreachable

cleanup:                                          ; preds = %bb2, %bb1, %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  %7 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %_10 to i8*
  %8 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
; invoke core::mem::drop
  invoke void @_ZN4core3mem4drop17h8827a24fd0ea8d02E(%"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture dereferenceable(24) %_10)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  ret void
}

; std::thread::local::lazy::LazyKeyInner<T>::initialize
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(16) { i64, i64 }* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17h100962f06329a747E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_11 = alloca %"core::option::Option<core::cell::Cell<(u64, u64)>>", align 8
  %_8 = alloca %"core::option::Option<core::cell::Cell<(u64, u64)>>", align 8
  store i8 0, i8* %_14, align 1
; call core::ops::function::FnOnce::call_once
  %1 = call { i64, i64 } @_ZN4core3ops8function6FnOnce9call_once17h34facafd5b19d98aE()
  %value.0 = extractvalue { i64, i64 } %1, 0
  %value.1 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  store i8 1, i8* %_14, align 1
  %_7 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::Cell<(u64, u64)>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::Cell<(u64, u64)>>>"* %_7 to %"core::option::Option<core::cell::Cell<(u64, u64)>>"*
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_14, align 1
  %2 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %_11 to %"core::option::Option<core::cell::Cell<(u64, u64)>>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<core::cell::Cell<(u64, u64)>>::Some", %"core::option::Option<core::cell::Cell<(u64, u64)>>::Some"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %value.0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %value.1, i64* %5, align 8
  %6 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %_11 to i64*
  store i64 1, i64* %6, align 8
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17h09495c46fb371866E(%"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture sret(%"core::option::Option<core::cell::Cell<(u64, u64)>>") dereferenceable(24) %_8, %"core::option::Option<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(24) %_2.i, %"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture dereferenceable(24) %_11)
          to label %bb3 unwind label %cleanup

bb10:                                             ; preds = %cleanup
  %7 = load i8, i8* %_14, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb8

cleanup:                                          ; preds = %bb5, %bb2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb10

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %14 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %_2.i to i64*
  %_13 = load i64, i64* %14, align 8, !range !2
  switch i64 %_13, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
; invoke core::hint::unreachable_unchecked
  invoke void @_ZN4core4hint21unreachable_unchecked17h12171fe7a3ebae5cE() #20
          to label %unreachable unwind label %cleanup

bb7:                                              ; preds = %bb4
  %15 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %_2.i to %"core::option::Option<core::cell::Cell<(u64, u64)>>::Some"*
  %x = getelementptr inbounds %"core::option::Option<core::cell::Cell<(u64, u64)>>::Some", %"core::option::Option<core::cell::Cell<(u64, u64)>>::Some"* %15, i32 0, i32 1
  store i8 0, i8* %_14, align 1
  ret { i64, i64 }* %x

unreachable:                                      ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb9, %bb10
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb9:                                              ; preds = %bb10
  br label %bb8
}

; std::thread::local::lazy::LazyKeyInner<T>::get
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17heec50763f3e6577bE"(%"std::thread::local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_4 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::Cell<(u64, u64)>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::Cell<(u64, u64)>>>"* %_4 to %"core::option::Option<core::cell::Cell<(u64, u64)>>"*
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::as_ref
  %0 = call align 8 dereferenceable_or_null(16) i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h5f5f38039388dfb5E"(%"core::option::Option<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(24) %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; std::thread::local::lazy::LazyKeyInner<T>::take
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17hafa5539b420c70a7E"(%"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture sret(%"core::option::Option<core::cell::Cell<(u64, u64)>>") dereferenceable(24) %0, %"std::thread::local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_4 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::Cell<(u64, u64)>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::Cell<(u64, u64)>>>"* %_4 to %"core::option::Option<core::cell::Cell<(u64, u64)>>"*
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::take
  call void @"_ZN4core6option15Option$LT$T$GT$4take17h756d96f76829226dE"(%"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture sret(%"core::option::Option<core::cell::Cell<(u64, u64)>>") dereferenceable(24) %0, %"core::option::Option<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(24) %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::panicking
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std6thread9panicking17h372353a900e1458cE() unnamed_addr #1 {
start:
; call std::panicking::panicking
  %0 = call zeroext i1 @_ZN3std9panicking9panicking17h55c8cafa0fcfc715E()
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; std::panicking::begin_panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
define void @_ZN3std9panicking11begin_panic17ha42a2eee8544a2f2E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #4 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_4 = alloca i8, align 1
  %_3 = alloca %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", align 8
  store i8 0, i8* %_4, align 1
  store i8 1, i8* %_4, align 1
; invoke core::panic::location::Location::caller
  %loc = invoke align 8 dereferenceable(24) %"core::panic::location::Location"* @_ZN4core5panic8location8Location6caller17h5348652b54841341E(%"core::panic::location::Location"* align 8 dereferenceable(24) %0)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_4, align 1
  %2 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_3 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %msg.1, i64* %4, align 8
  %5 = getelementptr inbounds %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_3, i32 0, i32 1
  store %"core::panic::location::Location"* %loc, %"core::panic::location::Location"** %5, align 8
; invoke std::sys_common::backtrace::__rust_end_short_backtrace
  invoke void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17h1e2f96ed68be88ecE(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_3) #20
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %6 = load i8, i8* %_4, align 1, !range !4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb3, label %bb2

cleanup:                                          ; preds = %bb1, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb3, %bb4
  %13 = bitcast { i8*, i32 }* %1 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb3:                                              ; preds = %bb4
  br label %bb2
}

; std::panicking::begin_panic::PanicPayload<A>::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64 } @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17hd1f7729b65fced58E"([0 x i8]* nonnull align 1 %inner.0, i64 %inner.1) unnamed_addr #0 {
start:
  %_2 = alloca { i8*, i64 }, align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %inner.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %inner.1, i64* %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %5, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { i8*, i64 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i64 } %14, i64 %13, 1
  ret { i8*, i64 } %15
}

; std::panicking::begin_panic::{{closure}}
; Function Attrs: inlinehint noreturn nonlazybind uwtable
define void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17h0cd692dac978da80E"(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_1) unnamed_addr #5 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i64*, align 8
  %_5 = alloca { i8*, i64 }, align 8
  %1 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !3
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %_6.1 = load i64, i64* %3, align 8
; call std::panicking::begin_panic::PanicPayload<A>::new
  %4 = call { i8*, i64 } @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17hd1f7729b65fced58E"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1)
  store { i8*, i64 } %4, { i8*, i64 }* %_5, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_2.0 = bitcast { i8*, i64 }* %_5 to {}*
  %5 = bitcast i64** %_7 to {}**
  store {}* null, {}** %5, align 8
  %6 = getelementptr inbounds %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1, i32 0, i32 1
  %_8 = load %"core::panic::location::Location"*, %"core::panic::location::Location"** %6, align 8, !nonnull !3
  %7 = load i64*, i64** %_7, align 8
; invoke std::panicking::rust_panic_with_hook
  invoke void @_ZN3std9panicking20rust_panic_with_hook17h00e530dc19739cc5E({}* nonnull align 1 %_2.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*), i64* align 8 dereferenceable_or_null(48) %7, %"core::panic::location::Location"* align 8 dereferenceable(24) %_8) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18
}

; std::panicking::panic_count::count_is_zero
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std9panicking11panic_count13count_is_zero17hf5b57edfd0820182E() unnamed_addr #1 {
start:
  %_5 = alloca i8, align 1
  %0 = alloca i8, align 1
  store i8 0, i8* %_5, align 1
  %1 = load i8, i8* %_5, align 1, !range !7
; call core::sync::atomic::AtomicUsize::load
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize4load17hb942a0364fa6d354E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) @_ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h9f4123c916e0c58dE, i8 %1)
  br label %bb1

bb1:                                              ; preds = %start
  %_1 = and i64 %_2, 9223372036854775807
  %2 = icmp eq i64 %_1, 0
  br i1 %2, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb4

bb3:                                              ; preds = %bb1
; call std::panicking::panic_count::is_zero_slow_path
  %3 = call zeroext i1 @_ZN3std9panicking11panic_count17is_zero_slow_path17h88139735fad522c1E()
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %5 = load i8, i8* %0, align 1, !range !4
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; std::panicking::panicking
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std9panicking9panicking17h55c8cafa0fcfc715E() unnamed_addr #1 {
start:
; call std::panicking::panic_count::count_is_zero
  %_1 = call zeroext i1 @_ZN3std9panicking11panic_count13count_is_zero17hf5b57edfd0820182E()
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_1, true
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8e5d4581cd3c5a93E"({ i64, i64 }** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %_4 = load { i64, i64 }*, { i64, i64 }** %self, align 8, !nonnull !3
; call <core::option::Option<T> as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h87d5e15b37f8cb3dE"({ i64, i64 }* align 8 dereferenceable(16) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha737c2dc58407cd7E"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %_4 = load i64*, i64** %self, align 8, !nonnull !3
; call core::fmt::num::<impl core::fmt::Debug for usize>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h20abaf426936e4d0E"(i64* align 8 dereferenceable(8) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h62cc0c0fa08558c9E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !3
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_4.1 = load i64, i64* %1, align 8
; call <str as core::fmt::Display>::fmt
  %2 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hc7fdfa9efeb52994E"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h919b8185d35b63a1E"(%_ProbeNode** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %_4 = load %_ProbeNode*, %_ProbeNode** %self, align 8, !nonnull !3
; call <probe::_ProbeNode as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN56_$LT$probe.._ProbeNode$u20$as$u20$core..fmt..Display$GT$3fmt17h4e054377c9d9d8c2E"(%_ProbeNode* align 8 dereferenceable(48) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <F as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hd3a926e6550934b8E"(%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* noalias nocapture sret(%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 {
start:
  %_4 = alloca %"core::str::pattern::MultiCharEqPattern<core::str::IsWhitespace>", align 1
  %_3 = alloca %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>", align 8
  %1 = bitcast %"core::str::pattern::MultiCharEqPattern<core::str::IsWhitespace>"* %_4 to %"core::str::IsWhitespace"*
; call <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h3f0a9311a4f9369cE"(%"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* noalias nocapture sret(%"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>") dereferenceable(40) %_3, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* %0 to %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"*
  %3 = bitcast %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %2 to i8*
  %4 = bitcast %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  ret void
}

; <usize as core::iter::range::Step>::forward_checked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$15forward_checked17h6ba6c0edef02d2bdE"(i64 %start1, i64 %n) unnamed_addr #1 {
start:
  %_3 = alloca i64, align 8
; call <T as core::convert::TryFrom<U>>::try_from
  %0 = call i64 @"_ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17h828544bdb290f692E"(i64 %n)
  store i64 %0, i64* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %n2 = load i64, i64* %_3, align 8
; call core::num::<impl usize>::checked_add
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h0d90790d1c3b3aa6E"(i64 %start1, i64 %n2)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hd095f86c08296a89E"(i64 %start1, i64 %n) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = add nuw i64 %start1, %n
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::intrinsics::write_bytes
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics11write_bytes17hb158a5c09bd7f88dE({ [0 x i8]*, i64 }* %dst, i8 %val, i64 %count) unnamed_addr #1 {
start:
  %0 = mul i64 16, %count
  %1 = bitcast { [0 x i8]*, i64 }* %dst to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 %val, i64 %0, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::write_bytes
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics11write_bytes17he9b94e9742774c94E(i8* %dst, i8 %val, i64 %count) unnamed_addr #1 {
start:
  %0 = mul i64 1, %count
  call void @llvm.memset.p0i8.i64(i8* align 1 %dst, i8 %val, i64 %0, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics19copy_nonoverlapping17h9f2894b20e788521E(i32* %src, i32* %dst, i64 %count) unnamed_addr #1 {
start:
  %0 = mul i64 %count, 4
  %1 = bitcast i32* %dst to i8*
  %2 = bitcast i32* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 %0, i1 false)
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics19copy_nonoverlapping17hb984a4318aa516b1E(i8* %src, i8* %dst, i64 %count) unnamed_addr #1 {
start:
  %0 = mul i64 %count, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %0, i1 false)
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics19copy_nonoverlapping17he05a35ce3f75b1b3E(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %src, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %dst, i64 %count) unnamed_addr #1 {
start:
  %0 = mul i64 %count, 32
  %1 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %dst to i8*
  %2 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false)
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics19copy_nonoverlapping17hfed4ffca4e9c849cE({ i64, i32 }* %src, { i64, i32 }* %dst, i64 %count) unnamed_addr #1 {
start:
  %0 = mul i64 %count, 16
  %1 = bitcast { i64, i32 }* %dst to i8*
  %2 = bitcast { i64, i32 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false)
  ret void
}

; core::intrinsics::copy
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics4copy17hfc661a234df63b88E(i8* %src, i8* %dst, i64 %count) unnamed_addr #1 {
start:
  %0 = mul i64 1, %count
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %0, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::any::TypeId::of
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core3any6TypeId2of17hf7941339227356dfE() unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 9147559743429524724, i64* %0, align 8
  %_1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %_1, i64* %1, align 8
  %2 = load i64, i64* %1, align 8
  ret i64 %2
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3Ord3max17hf22febd5e2cfbeedE(i64 %self, i64 %other) unnamed_addr #1 {
start:
; call core::cmp::max_by
  %0 = call i64 @_ZN4core3cmp6max_by17h013c79dffccdeaabE(i64 %self, i64 %other)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::Ord::min
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3Ord3min17h106441662e87badcE(i64 %self, i64 %other) unnamed_addr #1 {
start:
; call core::cmp::min_by
  %0 = call i64 @_ZN4core3cmp6min_by17hf39db88eb33327faE(i64 %self, i64 %other)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::max
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3max17hd4dddf8168eaa5f5E(i64 %v1, i64 %v2) unnamed_addr #1 {
start:
; call core::cmp::Ord::max
  %0 = call i64 @_ZN4core3cmp3Ord3max17hf22febd5e2cfbeedE(i64 %v1, i64 %v2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::min
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3min17h7596f3b06f8c43bdE(i64 %v1, i64 %v2) unnamed_addr #1 {
start:
; call core::cmp::Ord::min
  %0 = call i64 @_ZN4core3cmp3Ord3min17h106441662e87badcE(i64 %v1, i64 %v2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hd9a5b7e2cc6ac4a5E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_4 = load i64, i64* %self, align 8
  %_5 = load i64, i64* %other, align 8
  %_3 = icmp ult i64 %_4, %_5
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8
  %_8 = load i64, i64* %other, align 8
  %_6 = icmp eq i64 %_7, %_8
  br i1 %_6, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !range !25
  ret i8 %1

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6
}

; core::cmp::impls::<impl core::cmp::PartialEq for usize>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2eq17h9f156237d5981027E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #1 {
start:
  %_3 = load i64, i64* %self, align 8
  %_4 = load i64, i64* %other, align 8
  %0 = icmp eq i64 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h447a1a731799c8afE"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #1 {
start:
  %_3 = load i64, i64* %self, align 8
  %_4 = load i64, i64* %other, align 8
  %0 = icmp ult i64 %_3, %_4
  ret i1 %0
}

; core::cmp::max_by
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp6max_by17h013c79dffccdeaabE(i64 %0, i64 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %3 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  store i8 0, i8* %_13, align 1
  store i8 0, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  store i8 1, i8* %_12, align 1
  %4 = bitcast { i64*, i64* }* %_6 to i64**
  store i64* %v1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  store i64* %v2, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8, !nonnull !3
; invoke core::ops::function::FnOnce::call_once
  %10 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17hf3f7efdf056c9249E(i64* align 8 dereferenceable(8) %7, i64* align 8 dereferenceable(8) %9)
          to label %bb1 unwind label %cleanup, !range !25

bb1:                                              ; preds = %start
  store i8 %10, i8* %_4, align 1
  %_11 = load i8, i8* %_4, align 1, !range !25
  switch i8 %_11, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ]

bb8:                                              ; preds = %cleanup
  br label %bb13

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb8

bb13:                                             ; preds = %bb8
  %16 = load i8, i8* %_13, align 1, !range !4
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb12, label %bb9

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_12, align 1
  %18 = load i64, i64* %v2, align 8
  store i64 %18, i64* %3, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_13, align 1
  %19 = load i64, i64* %v1, align 8
  store i64 %19, i64* %3, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %20 = load i8, i8* %_12, align 1, !range !4
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb10, label %bb6

bb6:                                              ; preds = %bb10, %bb5
  %22 = load i8, i8* %_13, align 1, !range !4
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb11, label %bb7

bb10:                                             ; preds = %bb5
  br label %bb6

bb9:                                              ; preds = %bb12, %bb13
  %24 = bitcast { i8*, i32 }* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb12:                                             ; preds = %bb13
  br label %bb9

bb7:                                              ; preds = %bb11, %bb6
  %30 = load i64, i64* %3, align 8
  ret i64 %30

bb11:                                             ; preds = %bb6
  br label %bb7
}

; core::cmp::min_by
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp6min_by17hf39db88eb33327faE(i64 %0, i64 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %3 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  store i8 0, i8* %_13, align 1
  store i8 0, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  store i8 1, i8* %_12, align 1
  %4 = bitcast { i64*, i64* }* %_6 to i64**
  store i64* %v1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  store i64* %v2, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8, !nonnull !3
; invoke core::ops::function::FnOnce::call_once
  %10 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17hf3f7efdf056c9249E(i64* align 8 dereferenceable(8) %7, i64* align 8 dereferenceable(8) %9)
          to label %bb1 unwind label %cleanup, !range !25

bb1:                                              ; preds = %start
  store i8 %10, i8* %_4, align 1
  %_11 = load i8, i8* %_4, align 1, !range !25
  switch i8 %_11, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ]

bb8:                                              ; preds = %cleanup
  br label %bb13

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb8

bb13:                                             ; preds = %bb8
  %16 = load i8, i8* %_13, align 1, !range !4
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb12, label %bb9

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_13, align 1
  %18 = load i64, i64* %v1, align 8
  store i64 %18, i64* %3, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_12, align 1
  %19 = load i64, i64* %v2, align 8
  store i64 %19, i64* %3, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %20 = load i8, i8* %_12, align 1, !range !4
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb10, label %bb6

bb6:                                              ; preds = %bb10, %bb5
  %22 = load i8, i8* %_13, align 1, !range !4
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb11, label %bb7

bb10:                                             ; preds = %bb5
  br label %bb6

bb9:                                              ; preds = %bb12, %bb13
  %24 = bitcast { i8*, i32 }* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb12:                                             ; preds = %bb13
  br label %bb9

bb7:                                              ; preds = %bb11, %bb6
  %30 = load i64, i64* %3, align 8
  ret i64 %30

bb11:                                             ; preds = %bb6
  br label %bb7
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h21e82606826b264cE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %x, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { [0 x i8]*, i64 }* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h233601096a17cf05E(i64* align 8 dereferenceable(8) %x, i1 (i64*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i64*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h40defbc0267408b4E(%_ProbeNode** align 8 dereferenceable(8) %x, i1 (%_ProbeNode**, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (%_ProbeNode**, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %_ProbeNode** %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h5a7cae8ee0ce0cc4E(i64** align 8 dereferenceable(8) %x, i1 (i64**, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i64**, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64** %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h77f14a8e347ace4bE(i32* align 4 dereferenceable(4) %x, i1 (i32*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i32*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i32* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %x, i1 (i32*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i32*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i32* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hb96a12b728446af2E(i64** align 8 dereferenceable(8) %x, i1 (i64**, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i64**, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64** %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::num::<impl core::fmt::Debug for usize>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h20abaf426936e4d0E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h0354e4a24413a363E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h964ee865e084bf23E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17hd38ace2d8b112396E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hea1df36702709463E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb9

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17hec07c72f4ac49b15E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10
}

; core::fmt::Write::write_char
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3fmt5Write10write_char17h1743d30a643fa6daE(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* align 8 dereferenceable(24) %self, i32 %c) unnamed_addr #0 {
start:
  %_10 = alloca [4 x i8], align 1
  %0 = getelementptr inbounds [4 x i8], [4 x i8]* %_10, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 4, i1 false)
  %_7.0 = bitcast [4 x i8]* %_10 to [0 x i8]*
; call core::char::methods::<impl char>::encode_utf8
  %1 = call { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h1af64856c950de94E"(i32 %c, [0 x i8]* nonnull align 1 %_7.0, i64 4)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str
  %2 = call zeroext i1 @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h2b21fc3b5653bd2aE"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %_5.0, i64 %_5.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %2
}

; core::fmt::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3fmt5Write9write_fmt17h01cd695cc9e778c4E(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* align 8 dereferenceable(24) %0, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %args) unnamed_addr #0 {
start:
  %_6 = alloca %"core::fmt::Arguments", align 8
  %self = alloca %"std::io::Write::write_fmt::Adapter<std::fs::File>"*, align 8
  store %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %0, %"std::io::Write::write_fmt::Adapter<std::fs::File>"** %self, align 8
  %_3.0 = bitcast %"std::io::Write::write_fmt::Adapter<std::fs::File>"** %self to {}*
  %1 = bitcast %"core::fmt::Arguments"* %_6 to i8*
  %2 = bitcast %"core::fmt::Arguments"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 48, i1 false)
; call core::fmt::write
  %3 = call zeroext i1 @_ZN4core3fmt5write17h182b3dab33fa727dE({}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.2 to [3 x i64]*), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_6)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %3
}

; core::fmt::Arguments::new_v1_formatted
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments16new_v1_formatted17h534abb8b47cf1117E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %0, [0 x { [0 x i8]*, i64 }]* nonnull align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* nonnull align 8 %args.0, i64 %args.1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 %fmt.0, i64 %fmt.1) unnamed_addr #1 {
start:
  %_6 = alloca { i64*, i64 }, align 8
  %1 = bitcast { i64*, i64 }* %_6 to { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }*
  %2 = getelementptr inbounds { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }, { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }* %1, i32 0, i32 0
  store [0 x %"core::fmt::rt::v1::Argument"]* %fmt.0, [0 x %"core::fmt::rt::v1::Argument"]** %2, align 8
  %3 = getelementptr inbounds { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }, { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }* %1, i32 0, i32 1
  store i64 %fmt.1, i64* %3, align 8
  %4 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %5 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %4, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %5, align 8
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %4, i32 0, i32 1
  store i64 %pieces.1, i64* %6, align 8
  %7 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %7, i32 0, i32 0
  store i64* %9, i64** %12, align 8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %7, i32 0, i32 1
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2
  %15 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %14, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %15, align 8
  %16 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %14, i32 0, i32 1
  store i64 %args.1, i64* %16, align 8
  ret void
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117h759598569139005dE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %0, [0 x { [0 x i8]*, i64 }]* nonnull align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* nonnull align 8 %args.0, i64 %args.1) unnamed_addr #1 {
start:
  %_16 = alloca { i64*, i64 }, align 8
  %_3 = alloca i8, align 1
  %_4 = icmp ult i64 %pieces.1, %args.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1
  %_9 = icmp ugt i64 %pieces.1, %_12
  %1 = zext i1 %_9 to i8
  store i8 %1, i8* %_3, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i8, i8* %_3, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %4 = bitcast { i64*, i64 }* %_16 to {}**
  store {}* null, {}** %4, align 8
  %5 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %5, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %6, align 8
  %7 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %5, i32 0, i32 1
  store i64 %pieces.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1
  %9 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_16, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_16, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %8, i32 0, i32 0
  store i64* %10, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %8, i32 0, i32 1
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2
  %16 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %15, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %16, align 8
  %17 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %15, i32 0, i32 1
  store i64 %args.1, i64* %17, align 8
  ret void

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [12 x i8] }>* @alloc513 to [0 x i8]*), i64 12, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc515 to %"core::panic::location::Location"*)) #20
  unreachable
}

; core::mem::needs_drop
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3mem10needs_drop17h67b88efeaa074302E() unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  store i8 0, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; core::mem::needs_drop
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3mem10needs_drop17h7bbbe6170a365fceE() unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  store i8 0, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; core::mem::maybe_uninit::MaybeUninit<T>::zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6zeroed17h9e148ca4c09fbb82E"() unnamed_addr #1 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %u = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  store { i8*, i64 } %7, { i8*, i64 }* %u, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %u to { [0 x i8]*, i64 }*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::write_bytes
  call void @_ZN4core10intrinsics11write_bytes17hb158a5c09bd7f88dE({ [0 x i8]*, i64 }* %8, i8 0, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %u, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %u, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = insertvalue { i8*, i64 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i64 } %13, i64 %12, 1
  ret { i8*, i64 } %14
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem15size_of_val_raw17h3d2763de9db74286E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %val) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  store i64 80, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem15size_of_val_raw17h44b855fd4c1377a7E(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %val) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  store i64 48, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem15size_of_val_raw17h4e883c390b3faadeE(%"alloc::sync::ArcInner<_ShuffledOrder>"* %val) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  store i64 112, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem15size_of_val_raw17h7d76e3ae5a4fd5b5E(%"alloc::sync::ArcInner<std::thread::Inner>"* %val) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  store i64 48, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem15size_of_val_raw17hac6ee92ae622a627E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %val) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  store i64 32, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem15size_of_val_raw17hd0d36ee81f15f405E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %val) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  store i64 56, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem15size_of_val_raw17hed65faed75ab6466E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %val) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  store i64 32, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem16align_of_val_raw17h0e681e378c77d698E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %val) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem16align_of_val_raw17h2c2a5bfe9e0eb18fE(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %val) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem16align_of_val_raw17h3d55794cf47b7106E(%"alloc::sync::ArcInner<_ShuffledOrder>"* %val) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem16align_of_val_raw17h4d08ef1255b2ec43E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %val) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem16align_of_val_raw17h6c130ff641a84946E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %val) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem16align_of_val_raw17h787a67f28fa8a23fE(%"alloc::sync::ArcInner<std::thread::Inner>"* %val) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem16align_of_val_raw17h9449e18d6b288cacE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %val) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17h043cba090ce1d3a0E(i64* nonnull %0) unnamed_addr #1 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>>
  call void @"_ZN4core3ptr140drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$$GT$17h7f698080b9cdecbeE"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17h243edcfcd53af04fE(i64* nonnull %0) unnamed_addr #1 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<alloc::sync::Weak<std::thread::Inner>>
  call void @"_ZN4core3ptr64drop_in_place$LT$alloc..sync..Weak$LT$std..thread..Inner$GT$$GT$17h78bf51cfcf8f4e94E"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17h2ec33aa22f7a10f7E(i64* align 8 dereferenceable(16) %0) unnamed_addr #1 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<std::sync::rwlock::RwLockReadGuard<i32>>
  call void @"_ZN4core3ptr66drop_in_place$LT$std..sync..rwlock..RwLockReadGuard$LT$i32$GT$$GT$17hc4e57e7e0691015aE"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17h8827a24fd0ea8d02E(%"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture dereferenceable(24) %_x) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17h8e8c97d2cb448404E(i64* nonnull %0) unnamed_addr #1 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<alloc::sync::Weak<probe::_ProbeSemaphore>>
  call void @"_ZN4core3ptr68drop_in_place$LT$alloc..sync..Weak$LT$probe.._ProbeSemaphore$GT$$GT$17hfbe06cb997e4bfdcE"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17h96484a4ace896235E(i8 %_x) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17ha29366189bce7364E(i64* nonnull %0) unnamed_addr #1 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<i32>>>
  call void @"_ZN4core3ptr80drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$i32$GT$$GT$$GT$17h6d1a67b8c0bf90acE"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17hacb47c8f9fd65165E(i64* nonnull %0) unnamed_addr #1 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>>
  call void @"_ZN4core3ptr148drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$$GT$17hdf90245d465da833E"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17hd072c28420660d65E(i64 %_x.0, i64 %_x.1) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17he591a75830c85f49E(i64* nonnull %0) unnamed_addr #1 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<alloc::sync::Weak<probe::_ShuffledOrder>>
  call void @"_ZN4core3ptr67drop_in_place$LT$alloc..sync..Weak$LT$probe.._ShuffledOrder$GT$$GT$17h1284eb7f545ad543E"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17hf01d2244c09443eaE(i64* nonnull %0) unnamed_addr #1 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<std::fs::File>>>
  call void @"_ZN4core3ptr90drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$17h6816a806a440e90eE"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::swap
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4swap17h00dbed271550e9a2E({ i64, i32 }* align 8 dereferenceable(16) %x, { i64, i32 }* align 8 dereferenceable(16) %y) unnamed_addr #1 {
start:
; call core::ptr::swap_nonoverlapping_one
  call void @_ZN4core3ptr23swap_nonoverlapping_one17h40fe2f0fc1414177E({ i64, i32 }* %x, { i64, i32 }* %y)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::swap
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4swap17hc0cce7c9a45e3d5dE(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %x, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %y) unnamed_addr #1 {
start:
; call core::ptr::swap_nonoverlapping_one
  call void @_ZN4core3ptr23swap_nonoverlapping_one17hb2ef1afc6e628155E(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %x, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %y)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::forget
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem6forget17h79c7e443f1816bdfE(i64* align 8 dereferenceable(32) %t) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  store i64* %t, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem7replace17h09495c46fb371866E(%"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture sret(%"core::option::Option<core::cell::Cell<(u64, u64)>>") dereferenceable(24) %result, %"core::option::Option<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(24) %dest, %"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture dereferenceable(24) %src) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca %"core::option::Option<core::cell::Cell<(u64, u64)>>", align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17ha289abc907d566c1E(%"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture sret(%"core::option::Option<core::cell::Cell<(u64, u64)>>") dereferenceable(24) %result, %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %1 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %_6 to i8*
  %2 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h12269151b3b1f705E(%"core::option::Option<core::cell::Cell<(u64, u64)>>"* %dest, %"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture dereferenceable(24) %_6)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %3 = load i8, i8* %_7, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %15 = bitcast { i8*, i32 }* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem7replace17h35e8e50b39193487E(i64* align 8 dereferenceable(8) %dest, i64 %src) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i64 @_ZN4core3ptr4read17h0bd619d5bb9d4209E(i64* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17he3b6925f354062a8E(i64* %dest, i64 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i64 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core3mem7replace17h7b33b6f5ccde236eE({ i64, i64 }* align 8 dereferenceable(16) %dest, i64 %src.0, i64 %src.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %1 = invoke { i64, i64 } @_ZN4core3ptr4read17he69f1ad32c914bc5E({ i64, i64 }* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %result.0 = extractvalue { i64, i64 } %1, 0
  %result.1 = extractvalue { i64, i64 } %1, 1
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h840ec610b8e83b35E({ i64, i64 }* %dest, i64 %src.0, i64 %src.1)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %2 = load i8, i8* %_7, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %9 = insertvalue { i64, i64 } undef, i64 %result.0, 0
  %10 = insertvalue { i64, i64 } %9, i64 %result.1, 1
  ret { i64, i64 } %10

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @_ZN4core3mem7replace17h96fbff8a1bd3755dE(i8* align 1 dereferenceable(1) %dest, i8 %src) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i8 @_ZN4core3ptr4read17h47799e30fa360176E(i8* %dest)
          to label %bb1 unwind label %cleanup, !range !24

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hd64c74f5dc8e377bE(i8* %dest, i8 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i8 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @_ZN4core3mem7replace17h978bb6626fa1bb68E({ i8*, i64 }* align 8 dereferenceable(16) %dest, i8* align 1 %src.0, i64 %src.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %1 = invoke { i8*, i64 } @_ZN4core3ptr4read17he9e7053f8250e710E({ i8*, i64 }* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %result.0 = extractvalue { i8*, i64 } %1, 0
  %result.1 = extractvalue { i8*, i64 } %1, 1
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h2e0980a69e8d4666E({ i8*, i64 }* %dest, i8* align 1 %src.0, i64 %src.1)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %2 = load i8, i8* %_7, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %9 = insertvalue { i8*, i64 } undef, i8* %result.0, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %result.1, 1
  ret { i8*, i64 } %10

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::num::<impl u64>::to_ne_bytes
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3num21_$LT$impl$u20$u64$GT$11to_ne_bytes17h6e465664b5ea699eE"(i64 %self) unnamed_addr #1 {
start:
  %0 = alloca [8 x i8], align 1
  %1 = bitcast [8 x i8]* %0 to i64*
  store i64 %self, i64* %1, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast [8 x i8]* %0 to i64*
  %3 = load i64, i64* %2, align 1
  ret i64 %3
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h0d90790d1c3b3aa6E"(i64 %self, i64 %rhs) unnamed_addr #1 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !4
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !4
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !4
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<usize>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !2
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h16b05a09bfdc27b1E"(i64 %self, i64 %rhs) unnamed_addr #1 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !4
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !4
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !4
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<usize>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !2
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::<impl usize>::next_power_of_two
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17ha90e5d4f46918584E"(i64 %self) unnamed_addr #1 {
start:
; call core::num::<impl usize>::one_less_than_next_power_of_two
  %_2 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h5f54ac3c73fddf05E"(i64 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_2, i64 1)
  %_4.0 = extractvalue { i64, i1 } %0, 0
  %_4.1 = extractvalue { i64, i1 } %0, 1
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false)
  br i1 %1, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %_4.0

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.4 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc517 to %"core::panic::location::Location"*)) #20
  unreachable
}

; core::num::<impl usize>::one_less_than_next_power_of_two
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h5f54ac3c73fddf05E"(i64 %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %_2 = icmp ule i64 %self, 1
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %p = sub i64 %self, 1
  %2 = call i64 @llvm.ctlz.i64(i64 %p, i1 true)
  store i64 %2, i64* %0, align 8
  %z = load i64, i64* %0, align 8
  br label %bb3

bb1:                                              ; preds = %start
  store i64 0, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %3 = load i64, i64* %1, align 8
  ret i64 %3

bb3:                                              ; preds = %bb2
  %4 = and i64 %z, 63
  %5 = lshr i64 -1, %4
  store i64 %5, i64* %1, align 8
  br label %bb4
}

; core::num::nonzero::NonZeroUsize::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h8f702eaeef65e280E(i64 %n) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  store i64 %n, i64* %0, align 8
  %1 = load i64, i64* %0, align 8, !range !26
  ret i64 %1
}

; core::num::nonzero::NonZeroUsize::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize3get17ha028078fd33be2beE(i64 %self) unnamed_addr #1 {
start:
  ret i64 %self
}

; core::ops::control_flow::ControlFlow<B,C>::break_value
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17hc5844284a53d3902E"(i8* align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_2 = select i1 %7, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %8, align 8
  br label %bb6

bb1:                                              ; preds = %start
  %9 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %x.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !3
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %x.1 = load i64, i64* %11, align 8
  %12 = bitcast { i8*, i64 }* %2 to { [0 x i8]*, i64 }*
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0
  store [0 x i8]* %x.0, [0 x i8]** %13, align 8
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1
  store i64 %x.1, i64* %14, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb1
  %15 = bitcast { i8*, i64 }* %self to {}**
  %16 = load {}*, {}** %15, align 8
  %17 = icmp eq {}* %16, null
  %_5 = select i1 %17, i64 0, i64 1
  %18 = icmp eq i64 %_5, 1
  br i1 %18, label %bb4, label %bb5

bb4:                                              ; preds = %bb5, %bb6
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = insertvalue { i8*, i64 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i64 } %23, i64 %22, 1
  ret { i8*, i64 } %24

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h64da3d63a941444aE"(%"core::str::IsNotEmpty"** align 8 dereferenceable(8) %self, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %0) unnamed_addr #0 {
start:
  %args = alloca i64*, align 8
  %1 = bitcast i64** %args to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %0, { [0 x i8]*, i64 }** %1, align 8
  %_3 = load %"core::str::IsNotEmpty"*, %"core::str::IsNotEmpty"** %self, align 8, !nonnull !3
  %_4 = load i64*, i64** %args, align 8, !nonnull !3
  %2 = bitcast i64* %_4 to { [0 x i8]*, i64 }*
; call <core::str::IsNotEmpty as core::ops::function::FnMut<(&&str,)>>::call_mut
  %3 = call zeroext i1 @"_ZN98_$LT$core..str..IsNotEmpty$u20$as$u20$core..ops..function..FnMut$LT$$LP$$RF$$RF$str$C$$RP$$GT$$GT$8call_mut17he92093f36f9b4812E"(%"core::str::IsNotEmpty"* nonnull align 1 %_3, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %3
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core3ops8function6FnOnce9call_once17h34facafd5b19d98aE() unnamed_addr #1 {
start:
  %_2 = alloca {}, align 1
; call std::collections::hash::map::RandomState::new::KEYS::__init
  %0 = call { i64, i64 } @_ZN3std11collections4hash3map11RandomState3new4KEYS6__init17h43625dd4dbef490fE()
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17hf3f7efdf056c9249E(i64* align 8 dereferenceable(8) %0, i64* align 8 dereferenceable(8) %1) unnamed_addr #1 {
start:
  %_2 = alloca { i64*, i64* }, align 8
  %2 = bitcast { i64*, i64* }* %_2 to i64**
  store i64* %0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  store i64* %1, i64** %3, align 8
  %4 = bitcast { i64*, i64* }* %_2 to i64**
  %5 = load i64*, i64** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !3
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %8 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hd9a5b7e2cc6ac4a5E"(i64* align 8 dereferenceable(8) %5, i64* align 8 dereferenceable(8) %7), !range !25
  br label %bb1

bb1:                                              ; preds = %start
  ret i8 %8
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr101drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h15eafd62a92c596aE"(%"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %_1) unnamed_addr #0 {
start:
  %0 = bitcast %"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %_1 to %"alloc::collections::vec_deque::VecDeque<i32>"*
; call core::ptr::drop_in_place<alloc::collections::vec_deque::VecDeque<i32>>
  call void @"_ZN4core3ptr71drop_in_place$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$17h8b92a4cead11df23E"(%"alloc::collections::vec_deque::VecDeque<i32>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr102drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h208a2ee2999e08b3E"(%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = bitcast %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %_1 to i64**
; invoke core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  invoke void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h391195306a5ba975E"(i64** %1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %2 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>>
  call void @"_ZN4core3ptr101drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h15eafd62a92c596aE"(%"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %2)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %3 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>>
  call void @"_ZN4core3ptr101drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h15eafd62a92c596aE"(%"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %3) #21
  br label %bb1

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr103drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$$GT$17h72d26074c19c85aeE"({ i64*, i8 }* %_1) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<()>>
  call void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$17haacb45849dcb6ae5E"({ i64*, i8 }* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr104drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..rwlock..RwLockReadGuard$LT$i32$GT$$GT$$GT$17had4b19d075e98758E"(i64** %_1) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place<std::sync::rwlock::RwLockReadGuard<i32>>
  call void @"_ZN4core3ptr66drop_in_place$LT$std..sync..rwlock..RwLockReadGuard$LT$i32$GT$$GT$17hc4e57e7e0691015aE"(i64** %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr105drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..rwlock..RwLockWriteGuard$LT$i32$GT$$GT$$GT$17had3e1b0792cd9ffbE"({ i64*, i8 }* %_1) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place<std::sync::rwlock::RwLockWriteGuard<i32>>
  call void @"_ZN4core3ptr67drop_in_place$LT$std..sync..rwlock..RwLockWriteGuard$LT$i32$GT$$GT$17h0571f2f9628123b1E"({ i64*, i8 }* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<i32>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr107drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$i32$GT$$GT$$GT$$GT$17h8371d2d0d6263221E"(i64** %_1) unnamed_addr #0 {
start:
  %0 = bitcast i64** %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<i32>>>
  call void @"_ZN4core3ptr79drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$i32$GT$$GT$$GT$17hb264f581f405e15aE"(i64** %_1)
  br label %bb1
}

; core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr107drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h1ea3cb36011a5c6dE"({ i64*, i8 }* %_1) unnamed_addr #0 {
start:
; call <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h097fb3ecbfbd811dE"({ i64*, i8 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr108drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$$GT$17h1abf9ea40254334aE"({ i64*, i8 }* %_1) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr114drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$17h975b5ebe5f11ae5fE"(%"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_1) unnamed_addr #0 {
start:
  %0 = bitcast %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_1 to %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"*
; call core::ptr::drop_in_place<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>
  call void @"_ZN4core3ptr84drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$17h1433181a53c1f073E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr115drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$17h00da6a240cade04aE"(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = bitcast %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_1 to i64**
; invoke core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  invoke void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h391195306a5ba975E"(i64** %1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %2 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>
  call void @"_ZN4core3ptr114drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$17h975b5ebe5f11ae5fE"(%"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %2)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %3 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>
  call void @"_ZN4core3ptr114drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$17h975b5ebe5f11ae5fE"(%"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %3) #21
  br label %bb1

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Sync+core::marker::Send>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$17hadf2a7e5712b44f7E"({ {}*, [3 x i64]* }* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 0
  %2 = load {}*, {}** %1, align 8, !nonnull !3
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 1
  %4 = load [3 x i64]*, [3 x i64]** %3, align 8, !nonnull !3
  %5 = bitcast [3 x i64]* %4 to void ({}*)**
  %6 = getelementptr inbounds void ({}*)*, void ({}*)** %5, i64 0
  %7 = load void ({}*)*, void ({}*)** %6, align 8, !invariant.load !3, !nonnull !3
  invoke void %7({}* %2)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %start
  %8 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !nonnull !3
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hd5261e32d5ee0931E(i8* nonnull %10, i64* align 8 dereferenceable(24) %12)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %13 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8, !nonnull !3
  %16 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 1
  %17 = load i64*, i64** %16, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hd5261e32d5ee0931E(i8* nonnull %15, i64* align 8 dereferenceable(24) %17) #21
  br label %bb2

cleanup:                                          ; preds = %start
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb4

bb2:                                              ; preds = %bb4
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<std::fs::File>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr117drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$$GT$17habdc8cb6bc6a397aE"(i64** %_1) unnamed_addr #0 {
start:
  %0 = bitcast i64** %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<std::fs::File>>>
  call void @"_ZN4core3ptr89drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$17h5be5a3470f202d4aE"(i64** %_1)
  br label %bb1
}

; core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr120drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$17h08690209491720deE"({ i64*, i8 }* %_1) unnamed_addr #0 {
start:
; call <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hde991252fad1e053E"({ i64*, i8 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr122drop_in_place$LT$core..cell..UnsafeCell$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$17h346b7c642f233a3aE"(%"core::cell::UnsafeCell<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %_1) unnamed_addr #0 {
start:
  %0 = bitcast %"core::cell::UnsafeCell<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %_1 to %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"*
; call core::ptr::drop_in_place<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>
  call void @"_ZN4core3ptr92drop_in_place$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$17h90fac0c67f71ecceE"(%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<hashbrown::map::HashMap<std::thread::ThreadId,i32,std::collections::hash::map::RandomState>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr122drop_in_place$LT$hashbrown..map..HashMap$LT$std..thread..ThreadId$C$i32$C$std..collections..hash..map..RandomState$GT$$GT$17h58b555f7c18f10acE"(%"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* %_1) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>", %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<hashbrown::raw::RawTable<(std::thread::ThreadId,i32)>>
  call void @"_ZN4core3ptr88drop_in_place$LT$hashbrown..raw..RawTable$LT$$LP$std..thread..ThreadId$C$i32$RP$$GT$$GT$17h43555655faa6cfe7E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr123drop_in_place$LT$std..sync..mutex..Mutex$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$17hb49b018df8ca0356E"(%"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = bitcast %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %_1 to i64**
; invoke core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  invoke void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h391195306a5ba975E"(i64** %1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %2 = getelementptr inbounds %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>", %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<core::cell::UnsafeCell<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>
  call void @"_ZN4core3ptr122drop_in_place$LT$core..cell..UnsafeCell$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$17h346b7c642f233a3aE"(%"core::cell::UnsafeCell<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %2)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %3 = getelementptr inbounds %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>", %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<core::cell::UnsafeCell<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>
  call void @"_ZN4core3ptr122drop_in_place$LT$core..cell..UnsafeCell$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$17h346b7c642f233a3aE"(%"core::cell::UnsafeCell<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %3) #21
  br label %bb1

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr128drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$17h2519821ebbe65e78E"({ i64*, i8 }* %_1) unnamed_addr #0 {
start:
; call <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hae73fca16dadd366E"({ i64*, i8 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr139drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$$GT$17hf65ced65ccc87877E"(i64** %_1) unnamed_addr #0 {
start:
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h49d426f7e67196a4E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::Dropper<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr140drop_in_place$LT$$LT$alloc..collections..vec_deque..VecDeque$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..Dropper$LT$i32$GT$$GT$17h8455a6258bde02bdE"({ i32*, i64 }* %_1) unnamed_addr #0 {
start:
; call <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::Dropper<T> as core::ops::drop::Drop>::drop
  call void @"_ZN159_$LT$$LT$alloc..collections..vec_deque..VecDeque$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..Dropper$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3a9e38bbc6e78318E"({ i32*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr140drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$$GT$17h7f698080b9cdecbeE"(i64** %_1) unnamed_addr #0 {
start:
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf9ba2a5e87be736eE"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr145drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$$GT$17h3397bb728e8477b1E"({ i64*, i8 }* %_1) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>
  call void @"_ZN4core3ptr107drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h1ea3cb36011a5c6dE"({ i64*, i8 }* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr147drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$$GT$17h318c22585b3b9661E"(i64** %_1) unnamed_addr #0 {
start:
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he9a2b57033d4cc11E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr148drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$$GT$17hdf90245d465da833E"(i64** %_1) unnamed_addr #0 {
start:
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h550168a71b5786acE"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr158drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$$GT$17haf22541e72c1e95fE"({ i64*, i8 }* %_1) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>
  call void @"_ZN4core3ptr120drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$17h08690209491720deE"({ i64*, i8 }* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<&str,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr161drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$$RF$str$C$alloc..alloc..Global$GT$$GT$17ha683cbb0ec0c0ee5E"(i64** %_1) unnamed_addr #0 {
start:
; call <<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN157_$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf206107d4cba666eE"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr166drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$$GT$17h7bad0bc74b47c879E"({ i64*, i8 }* %_1) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>
  call void @"_ZN4core3ptr128drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$17h2519821ebbe65e78E"({ i64*, i8 }* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr167drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$$GT$$GT$17h8c75b5e02ddf0eaaE"(i64** %_1) unnamed_addr #0 {
start:
  %0 = bitcast i64** %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>>
  call void @"_ZN4core3ptr139drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$$GT$17hf65ced65ccc87877E"(i64** %_1)
  br label %bb1
}

; core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr175drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$$GT$$GT$17h82888fad8e09ca80E"(i64** %_1) unnamed_addr #0 {
start:
  %0 = bitcast i64** %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>>
  call void @"_ZN4core3ptr147drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$$GT$17h318c22585b3b9661E"(i64** %_1)
  br label %bb1
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr19swap_nonoverlapping17h049e2ffb3bf8a55dE(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %x, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %y, i64 %count) unnamed_addr #1 {
start:
  %x1 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %x to i8*
  %y2 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %y to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %len = mul i64 32, %count
; call core::ptr::swap_nonoverlapping_bytes
  call void @_ZN4core3ptr25swap_nonoverlapping_bytes17h18bbc75d1e27f111E(i8* %x1, i8* %y2, i64 %len)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr19swap_nonoverlapping17h2af698e68ec228d2E({ i64, i32 }* %x, { i64, i32 }* %y, i64 %count) unnamed_addr #1 {
start:
  %x1 = bitcast { i64, i32 }* %x to i8*
  %y2 = bitcast { i64, i32 }* %y to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %len = mul i64 16, %count
; call core::ptr::swap_nonoverlapping_bytes
  call void @_ZN4core3ptr25swap_nonoverlapping_bytes17h18bbc75d1e27f111E(i8* %x1, i8* %y2, i64 %len)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h00d36fc3ed11ebc5E(%"alloc::vec::Vec<_ProbeNode>"* %data, i64 %len) unnamed_addr #1 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h19aa413bfd28d4bcE"(%"alloc::vec::Vec<_ProbeNode>"* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h26443a8632726afeE({}* %_3, i64 %len)
  %1 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 0
  %2 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %1, 0
  %4 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %3, i64 %2, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %4
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h786b8f8f376b8079E(%_ProbeNode* %data, i64 %len) unnamed_addr #1 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hc6653f5fdadc5867E"(%_ProbeNode* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h3e0ed8ab55d4a5ebE({}* %_3, i64 %len)
  %1 = extractvalue { [0 x %_ProbeNode]*, i64 } %0, 0
  %2 = extractvalue { [0 x %_ProbeNode]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x %_ProbeNode]*, i64 } undef, [0 x %_ProbeNode]* %1, 0
  %4 = insertvalue { [0 x %_ProbeNode]*, i64 } %3, i64 %2, 1
  ret { [0 x %_ProbeNode]*, i64 } %4
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hf5bb20055aa66712E(i8* %data, i64 %len) unnamed_addr #1 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hc39600cfbec4ebadE"(i8* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h7b33a36447fac036E({}* %_3, i64 %len)
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; core::ptr::drop_in_place<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>,hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{{closure}}>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr224drop_in_place$LT$hashbrown..scopeguard..ScopeGuard$LT$hashbrown..raw..RawTableInner$LT$alloc..alloc..Global$GT$$C$hashbrown..raw..RawTableInner$LT$alloc..alloc..Global$GT$..prepare_resize..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h66e4ec4bbbb0e6ceE"(%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %_1) unnamed_addr #0 {
start:
; call <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::drop::Drop>::drop
  call void @"_ZN88_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h709476293f145df6E"(%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* align 8 dereferenceable(48) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::swap_nonoverlapping_one
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr23swap_nonoverlapping_one17h40fe2f0fc1414177E({ i64, i32 }* %x, { i64, i32 }* %y) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  store i8 0, i8* %_18, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp uge i64 16, 32
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  store i8 1, i8* %_18, align 1
; call core::ptr::read
  %1 = call { i64, i32 } @_ZN4core3ptr4read17h1046902cc3d06f66E({ i64, i32 }* %x)
  %z.0 = extractvalue { i64, i32 } %1, 0
  %z.1 = extractvalue { i64, i32 } %1, 1
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::ptr::swap_nonoverlapping
  call void @_ZN4core3ptr19swap_nonoverlapping17h2af698e68ec228d2E({ i64, i32 }* %x, { i64, i32 }* %y, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb8

bb8:                                              ; preds = %bb7, %bb3
  ret void

bb5:                                              ; preds = %bb4
; invoke core::intrinsics::copy_nonoverlapping
  invoke void @_ZN4core10intrinsics19copy_nonoverlapping17hfed4ffca4e9c849cE({ i64, i32 }* %y, { i64, i32 }* %x, i64 1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_18, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hde134d7063bc0725E({ i64, i32 }* %y, i64 %z.0, i32 %z.1)
          to label %bb7 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %2 = load i8, i8* %_18, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb10, label %bb9

cleanup:                                          ; preds = %bb6, %bb5
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb11

bb7:                                              ; preds = %bb6
  store i8 0, i8* %_18, align 1
  br label %bb8

bb9:                                              ; preds = %bb10, %bb11
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb10:                                             ; preds = %bb11
  br label %bb9
}

; core::ptr::swap_nonoverlapping_one
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr23swap_nonoverlapping_one17hb2ef1afc6e628155E(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %x, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %y) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_17 = alloca %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", align 8
  %z = alloca %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", align 8
  store i8 0, i8* %_18, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp uge i64 32, 32
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  store i8 1, i8* %_18, align 1
; call core::ptr::read
  call void @_ZN4core3ptr4read17h910d59e44b00401aE(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* noalias nocapture sret(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>") dereferenceable(32) %z, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %x)
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::ptr::swap_nonoverlapping
  call void @_ZN4core3ptr19swap_nonoverlapping17h049e2ffb3bf8a55dE(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %x, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %y, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb8

bb8:                                              ; preds = %bb7, %bb3
  ret void

bb5:                                              ; preds = %bb4
; invoke core::intrinsics::copy_nonoverlapping
  invoke void @_ZN4core10intrinsics19copy_nonoverlapping17he05a35ce3f75b1b3E(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %y, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %x, i64 1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_18, align 1
  %1 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_17 to i8*
  %2 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %z to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h6f80eff0d4ad82feE(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %y, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* noalias nocapture dereferenceable(32) %_17)
          to label %bb7 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %3 = load i8, i8* %_18, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb10, label %bb9

cleanup:                                          ; preds = %bb6, %bb5
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb11

bb7:                                              ; preds = %bb6
  store i8 0, i8* %_18, align 1
  br label %bb8

bb9:                                              ; preds = %bb10, %bb11
  %10 = bitcast { i8*, i32 }* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb10:                                             ; preds = %bb11
  br label %bb9
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h2a23878c8d823489E(i8* %data, i64 %len) unnamed_addr #1 {
start:
  %0 = bitcast i8* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17ha497f754f8613813E({}* %0, i64 %len)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h5ccde716743148f3E(i32* %data, i64 %len) unnamed_addr #1 {
start:
  %0 = bitcast i32* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x i32]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h857d938ba19f725cE({}* %0, i64 %len)
  %2 = extractvalue { [0 x i32]*, i64 } %1, 0
  %3 = extractvalue { [0 x i32]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %2, 0
  %5 = insertvalue { [0 x i32]*, i64 } %4, i64 %3, 1
  ret { [0 x i32]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h798a9bb69b4846afE(%"alloc::vec::Vec<_ProbeNode>"* %data, i64 %len) unnamed_addr #1 {
start:
  %0 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h1cca9366fb87c6ecE({}* %0, i64 %len)
  %2 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 0
  %3 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %2, 0
  %5 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %4, i64 %3, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hb54d7315376a0ca5E({ [0 x i8]*, i64 }* %data, i64 %len) unnamed_addr #1 {
start:
  %0 = bitcast { [0 x i8]*, i64 }* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h0b1ca24d430e4aa4E({}* %0, i64 %len)
  %2 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %1, 0
  %3 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } undef, [0 x { [0 x i8]*, i64 }]* %2, 0
  %5 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %4, i64 %3, 1
  ret { [0 x { [0 x i8]*, i64 }]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hc87cab258c17f2f7E(%_ProbeNode* %data, i64 %len) unnamed_addr #1 {
start:
  %0 = bitcast %_ProbeNode* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hfbf59d9737eba442E({}* %0, i64 %len)
  %2 = extractvalue { [0 x %_ProbeNode]*, i64 } %1, 0
  %3 = extractvalue { [0 x %_ProbeNode]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x %_ProbeNode]*, i64 } undef, [0 x %_ProbeNode]* %2, 0
  %5 = insertvalue { [0 x %_ProbeNode]*, i64 } %4, i64 %3, 1
  ret { [0 x %_ProbeNode]*, i64 } %5
}

; core::ptr::swap_nonoverlapping_bytes
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ptr25swap_nonoverlapping_bytes17h18bbc75d1e27f111E(i8* %x, i8* %y, i64 %len) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %t1 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>", align 8
  %t = alloca <4 x i64>, align 32
  %i = alloca i64, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 0, i64* %i, align 8
  br label %bb2

bb2:                                              ; preds = %bb10, %bb1
  %_8 = load i64, i64* %i, align 8
  %_7 = add i64 %_8, 32
  %_6 = icmp ule i64 %_7, %len
  br i1 %_6, label %bb3, label %bb11

bb11:                                             ; preds = %bb2
  %_38 = load i64, i64* %i, align 8
  %_37 = icmp ult i64 %_38, %len
  br i1 %_37, label %bb12, label %bb20

bb3:                                              ; preds = %bb2
  call void @llvm.experimental.noalias.scope.decl(metadata !27)
  %4 = bitcast <4 x i64>* %t to {}*
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb5

bb5:                                              ; preds = %bb4
  %t2 = bitcast <4 x i64>* %t to i8*
  %_17 = load i64, i64* %i, align 8
  %5 = getelementptr inbounds i8, i8* %x, i64 %_17
  store i8* %5, i8** %3, align 8
  %_3.i.i = load i8*, i8** %3, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %_20 = load i64, i64* %i, align 8
  %6 = getelementptr inbounds i8, i8* %y, i64 %_20
  store i8* %6, i8** %0, align 8
  %_3.i.i10 = load i8*, i8** %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb984a4318aa516b1E(i8* %_3.i.i, i8* %t2, i64 32)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb984a4318aa516b1E(i8* %_3.i.i10, i8* %_3.i.i, i64 32)
  br label %bb9

bb9:                                              ; preds = %bb8
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb984a4318aa516b1E(i8* %t2, i8* %_3.i.i10, i64 32)
  br label %bb10

bb10:                                             ; preds = %bb9
  %7 = load i64, i64* %i, align 8
  %8 = add i64 %7, 32
  store i64 %8, i64* %i, align 8
  br label %bb2

bb20:                                             ; preds = %bb19, %bb11
  ret void

bb12:                                             ; preds = %bb11
  call void @llvm.experimental.noalias.scope.decl(metadata !30)
  %9 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"* %t1 to {}*
  br label %bb13

bb13:                                             ; preds = %bb12
  %_43 = load i64, i64* %i, align 8
  %rem = sub i64 %len, %_43
  %10 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"* %t1 to %"core::ptr::swap_nonoverlapping_bytes::UnalignedBlock"*
  br label %bb14

bb14:                                             ; preds = %bb13
  %t5 = bitcast %"core::ptr::swap_nonoverlapping_bytes::UnalignedBlock"* %10 to i8*
  %_49 = load i64, i64* %i, align 8
  %11 = getelementptr inbounds i8, i8* %x, i64 %_49
  store i8* %11, i8** %1, align 8
  %_3.i.i9 = load i8*, i8** %1, align 8
  br label %bb15

bb15:                                             ; preds = %bb14
  %_52 = load i64, i64* %i, align 8
  %12 = getelementptr inbounds i8, i8* %y, i64 %_52
  store i8* %12, i8** %2, align 8
  %_3.i.i8 = load i8*, i8** %2, align 8
  br label %bb16

bb16:                                             ; preds = %bb15
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb984a4318aa516b1E(i8* %_3.i.i9, i8* %t5, i64 %rem)
  br label %bb17

bb17:                                             ; preds = %bb16
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb984a4318aa516b1E(i8* %_3.i.i8, i8* %_3.i.i9, i64 %rem)
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb984a4318aa516b1E(i8* %t5, i8* %_3.i.i8, i64 %rem)
  br label %bb19

bb19:                                             ; preds = %bb18
  br label %bb20
}

; core::ptr::drop_in_place<&str>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h5769bdeb6b7527e7E"({ [0 x i8]*, i64 }* %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::drop_in_place<&usize>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h2f97a526b18e167aE"(i64** %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::drop_in_place<std::fs::File>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17hd5d8e8584b5106e5E"(i32* %_1) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place<std::sys::unix::fs::File>
  call void @"_ZN4core3ptr45drop_in_place$LT$std..sys..unix..fs..File$GT$17h9d64549410e90345E"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::thread::Inner>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr39drop_in_place$LT$std..thread..Inner$GT$17h470b4b3833e11d14E"(%"std::thread::Inner"* %_1) unnamed_addr #0 {
start:
  %0 = bitcast %"std::thread::Inner"* %_1 to { i8*, i64 }*
; call core::ptr::drop_in_place<core::option::Option<std::ffi::c_str::CString>>
  call void @"_ZN4core3ptr73drop_in_place$LT$core..option..Option$LT$std..ffi..c_str..CString$GT$$GT$17h18b279ea4f7ea2d5E"({ i8*, i64 }* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::thread::Thread>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17h2d8562ab941878e6E"(i64** %_1) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Inner>>
  call void @"_ZN4core3ptr63drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Inner$GT$$GT$17h666be2788123b809E"(i64** %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner<alloc::alloc::Global>,hashbrown::raw::RawTable<(std::thread::ThreadId,i32)>::rehash_in_place<hashbrown::map::make_hasher<std::thread::ThreadId,std::thread::ThreadId,i32,std::collections::hash::map::RandomState>::{{closure}}>::{{closure}}>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr413drop_in_place$LT$hashbrown..scopeguard..ScopeGuard$LT$$RF$mut$u20$hashbrown..raw..RawTableInner$LT$alloc..alloc..Global$GT$$C$hashbrown..raw..RawTable$LT$$LP$std..thread..ThreadId$C$i32$RP$$GT$..rehash_in_place$LT$hashbrown..map..make_hasher$LT$std..thread..ThreadId$C$std..thread..ThreadId$C$i32$C$std..collections..hash..map..RandomState$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h477a9b22261f61deE"(i64** %_1) unnamed_addr #0 {
start:
; call <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::drop::Drop>::drop
  call void @"_ZN88_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3fbcdd0e31a7fb26E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::io::error::Repr>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr41drop_in_place$LT$std..io..error..Repr$GT$17h7c310f073cf1cb7dE"(%"std::io::error::Repr"* %_1) unnamed_addr #0 {
start:
  %0 = bitcast %"std::io::error::Repr"* %_1 to i8*
  %1 = load i8, i8* %0, align 8, !range !6
  %_2 = zext i8 %1 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb1
    i64 2, label %bb1
  ]

bb2:                                              ; preds = %start
  %2 = bitcast %"std::io::error::Repr"* %_1 to %"std::io::error::Repr::Custom"*
  %3 = getelementptr inbounds %"std::io::error::Repr::Custom", %"std::io::error::Repr::Custom"* %2, i32 0, i32 1
; call core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
  call void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17hcdc68027753ffe0aE"(%"std::io::error::Custom"** %3)
  br label %bb1

bb1:                                              ; preds = %bb2, %start, %start, %start
  ret void
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h6ede43792275be04E"(%"alloc::string::String"* %_1) unnamed_addr #0 {
start:
  %0 = bitcast %"alloc::string::String"* %_1 to %"alloc::vec::Vec<u8>"*
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hbaa4cfe8c589c7d5E"(%"alloc::vec::Vec<u8>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<probe::_ShuffledOrder>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$probe.._ShuffledOrder$GT$17h616dca8d91bbf8efE"(%_ShuffledOrder* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = bitcast %_ShuffledOrder* %_1 to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*
; invoke core::ptr::drop_in_place<std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>>
  invoke void @"_ZN4core3ptr102drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h208a2ee2999e08b3E"(%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %start
  %2 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<std::sync::rwlock::RwLock<i32>>
  invoke void @"_ZN4core3ptr57drop_in_place$LT$std..sync..rwlock..RwLock$LT$i32$GT$$GT$17h4c1556b8335c0937E"(%"std::sync::rwlock::RwLock<i32>"* %2)
          to label %bb7 unwind label %cleanup1

bb5:                                              ; preds = %cleanup
  %3 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<std::sync::rwlock::RwLock<i32>>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sync..rwlock..RwLock$LT$i32$GT$$GT$17h4c1556b8335c0937E"(%"std::sync::rwlock::RwLock<i32>"* %3) #21
  br label %bb4

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb4:                                              ; preds = %cleanup1, %bb5
  %9 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %_1, i32 0, i32 2
; call core::ptr::drop_in_place<std::sync::condvar::Condvar>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..sync..condvar..Condvar$GT$17h2d257ddeeab9688aE"(%"std::sync::condvar::Condvar"* %9) #21
  br label %bb3

bb7:                                              ; preds = %bb8
  %10 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %_1, i32 0, i32 2
; invoke core::ptr::drop_in_place<std::sync::condvar::Condvar>
  invoke void @"_ZN4core3ptr48drop_in_place$LT$std..sync..condvar..Condvar$GT$17h2d257ddeeab9688aE"(%"std::sync::condvar::Condvar"* %10)
          to label %bb6 unwind label %cleanup2

cleanup1:                                         ; preds = %bb8
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb4

bb3:                                              ; preds = %cleanup2, %bb4
  %16 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<()>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..Mutex$LT$$LP$$RP$$GT$$GT$17h2ff956a75055864eE"(%"std::sync::mutex::Mutex<()>"* %16) #21
  br label %bb1

bb6:                                              ; preds = %bb7
  %17 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<()>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..Mutex$LT$$LP$$RP$$GT$$GT$17h2ff956a75055864eE"(%"std::sync::mutex::Mutex<()>"* %17)
  br label %bb2

cleanup2:                                         ; preds = %bb7
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb2:                                              ; preds = %bb6
  ret void
}

; core::ptr::drop_in_place<std::io::error::Error>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h211456880990b21cE"(%"std::io::error::Error"* %_1) unnamed_addr #0 {
start:
  %0 = bitcast %"std::io::error::Error"* %_1 to %"std::io::error::Repr"*
; call core::ptr::drop_in_place<std::io::error::Repr>
  call void @"_ZN4core3ptr41drop_in_place$LT$std..io..error..Repr$GT$17h7c310f073cf1cb7dE"(%"std::io::error::Repr"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<probe::_ProbeSemaphore>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr43drop_in_place$LT$probe.._ProbeSemaphore$GT$17hb43e876c214f6d0dE"(%_ProbeSemaphore* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = bitcast %_ProbeSemaphore* %_1 to %"std::sync::mutex::Mutex<i32>"*
; invoke core::ptr::drop_in_place<std::sync::mutex::Mutex<i32>>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$std..sync..mutex..Mutex$LT$i32$GT$$GT$17he055f369a53c8fbbE"(%"std::sync::mutex::Mutex<i32>"* %1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %2 = getelementptr inbounds %_ProbeSemaphore, %_ProbeSemaphore* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<std::sync::condvar::Condvar>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..sync..condvar..Condvar$GT$17h2d257ddeeab9688aE"(%"std::sync::condvar::Condvar"* %2)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %3 = getelementptr inbounds %_ProbeSemaphore, %_ProbeSemaphore* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<std::sync::condvar::Condvar>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..sync..condvar..Condvar$GT$17h2d257ddeeab9688aE"(%"std::sync::condvar::Condvar"* %3) #21
  br label %bb1

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<std::io::error::Custom>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h8947934ed6524863E"(%"std::io::error::Custom"* %_1) unnamed_addr #0 {
start:
  %0 = bitcast %"std::io::error::Custom"* %_1 to { {}*, [3 x i64]* }*
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Sync+core::marker::Send>>
  call void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$17hadf2a7e5712b44f7E"({ {}*, [3 x i64]* }* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::ffi::c_str::CString>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr45drop_in_place$LT$std..ffi..c_str..CString$GT$17h27a0203acb11e132E"({ i8*, i64 }* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <std::ffi::c_str::CString as core::ops::drop::Drop>::drop
  invoke void @"_ZN66_$LT$std..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17h83005f1b7bcc5f29E"({ i8*, i64 }* align 8 dereferenceable(16) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*
; call core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17hbd24508baea61ec2E"({ [0 x i8]*, i64 }* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*
; call core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17hbd24508baea61ec2E"({ [0 x i8]*, i64 }* %2) #21
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<std::sys::unix::fs::File>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr45drop_in_place$LT$std..sys..unix..fs..File$GT$17h9d64549410e90345E"(i32* %_1) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place<std::sys::unix::fd::FileDesc>
  call void @"_ZN4core3ptr49drop_in_place$LT$std..sys..unix..fd..FileDesc$GT$17h4bb613269aa76473E"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hbaa4cfe8c589c7d5E"(%"alloc::vec::Vec<u8>"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h45ba1355f62bde06E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hb78cd0a0939609e8E"({ i8*, i64 }* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hb78cd0a0939609e8E"({ i8*, i64 }* %2) #21
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<core::str::error::Utf8Error>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h0f56a84840f10277E"(%"core::str::error::Utf8Error"* %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::drop_in_place<std::os::fd::owned::OwnedFd>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17hc4a5664e9d43851dE"(i32* %_1) unnamed_addr #0 {
start:
; call <std::os::fd::owned::OwnedFd as core::ops::drop::Drop>::drop
  call void @"_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb1d31648f50c3957E"(i32* align 4 dereferenceable(4) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::condvar::Condvar>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr48drop_in_place$LT$std..sync..condvar..Condvar$GT$17h2d257ddeeab9688aE"(%"std::sync::condvar::Condvar"* %_1) unnamed_addr #0 {
start:
  %0 = bitcast %"std::sync::condvar::Condvar"* %_1 to %"std::sys_common::condvar::Condvar"*
; call core::ptr::drop_in_place<std::sys_common::condvar::Condvar>
  call void @"_ZN4core3ptr54drop_in_place$LT$std..sys_common..condvar..Condvar$GT$17hcdc4e56b4954a452E"(%"std::sys_common::condvar::Condvar"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sys::unix::fd::FileDesc>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr49drop_in_place$LT$std..sys..unix..fd..FileDesc$GT$17h4bb613269aa76473E"(i32* %_1) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place<std::os::fd::owned::OwnedFd>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17hc4a5664e9d43851dE"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr4read17h0bd619d5bb9d4209E(i64* %src) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %1 = bitcast i64* %0 to {}*
  %2 = load i64, i64* %0, align 8
  store i64 %2, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i64* %tmp to i8*
  %4 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %_6 = load i64, i64* %tmp, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @_ZN4core3ptr4read17h1046902cc3d06f66E({ i64, i32 }* %src) unnamed_addr #1 {
start:
  %0 = alloca { i64, i32 }, align 8
  %tmp = alloca { i64, i32 }, align 8
  %1 = bitcast { i64, i32 }* %0 to {}*
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i64, i32 } undef, i64 %3, 0
  %7 = insertvalue { i64, i32 } %6, i32 %5, 1
  store { i64, i32 } %7, { i64, i32 }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast { i64, i32 }* %tmp to i8*
  %9 = bitcast { i64, i32 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %tmp, i32 0, i32 0
  %_6.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %tmp, i32 0, i32 1
  %_6.1 = load i32, i32* %11, align 8
  %12 = insertvalue { i64, i32 } undef, i64 %_6.0, 0
  %13 = insertvalue { i64, i32 } %12, i32 %_6.1, 1
  %14 = insertvalue { i64, i32 } undef, i64 %_6.0, 0
  %15 = insertvalue { i64, i32 } %14, i32 %_6.1, 1
  %16 = extractvalue { i64, i32 } %15, 0
  %17 = extractvalue { i64, i32 } %15, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %18 = insertvalue { i64, i32 } undef, i64 %16, 0
  %19 = insertvalue { i64, i32 } %18, i32 %17, 1
  ret { i64, i32 } %19
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3ptr4read17h456bad090857e86bE(i32* %src) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %1 = bitcast i32* %0 to {}*
  %2 = load i32, i32* %0, align 4
  store i32 %2, i32* %tmp, align 4
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i32* %tmp to i8*
  %4 = bitcast i32* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %_6 = load i32, i32* %tmp, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i32 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @_ZN4core3ptr4read17h47799e30fa360176E(i8* %src) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %tmp = alloca i8, align 1
  %1 = bitcast i8* %0 to {}*
  %2 = load i8, i8* %0, align 1
  store i8 %2, i8* %tmp, align 1
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %tmp, i8* align 1 %src, i64 1, i1 false)
  %_6 = load i8, i8* %tmp, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr4read17h6180861ee271f480E({ [0 x i8]*, i64 }* %src) unnamed_addr #1 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %tmp = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  store { i8*, i64 } %7, { i8*, i64 }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %tmp to { [0 x i8]*, i64 }*
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = bitcast { [0 x i8]*, i64 }* %8 to i8*
  %10 = bitcast { [0 x i8]*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 0
  %_6.0 = load i8*, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 1
  %_6.1 = load i64, i64* %12, align 8
  %13 = bitcast i8* %_6.0 to [0 x i8]*
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %_6.1, 1
  %16 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %17 = insertvalue { [0 x i8]*, i64 } %16, i64 %_6.1, 1
  %18 = extractvalue { [0 x i8]*, i64 } %17, 0
  %19 = extractvalue { [0 x i8]*, i64 } %17, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %20 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %18, 0
  %21 = insertvalue { [0 x i8]*, i64 } %20, i64 %19, 1
  ret { [0 x i8]*, i64 } %21
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17h910d59e44b00401aE(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* noalias nocapture sret(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>") dereferenceable(32) %0, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %src) unnamed_addr #1 {
start:
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<hashbrown::raw::RawTableInner<alloc::alloc::Global>>", align 8
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<hashbrown::raw::RawTableInner<alloc::alloc::Global>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<hashbrown::raw::RawTableInner<alloc::alloc::Global>>", align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !33)
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %tmp to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %2 to i8*
  %4 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %_6 to i8*
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 32, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !36)
  call void @llvm.experimental.noalias.scope.decl(metadata !39)
  %7 = bitcast %"core::mem::maybe_uninit::MaybeUninit<hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %_6 to %"core::mem::manually_drop::ManuallyDrop<hashbrown::raw::RawTableInner<alloc::alloc::Global>>"*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %_3.i to i8*
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false), !noalias !36
  call void @llvm.experimental.noalias.scope.decl(metadata !41)
  call void @llvm.experimental.noalias.scope.decl(metadata !44)
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %_3.i to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
  %11 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %0 to i8*
  %12 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false), !alias.scope !46, !noalias !39
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17ha289abc907d566c1E(%"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture sret(%"core::option::Option<core::cell::Cell<(u64, u64)>>") dereferenceable(24) %0, %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %src) unnamed_addr #1 {
start:
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::Cell<(u64, u64)>>>", align 8
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::Cell<(u64, u64)>>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::Cell<(u64, u64)>>>", align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !47)
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::Cell<(u64, u64)>>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::Cell<(u64, u64)>>>"* %tmp to %"core::option::Option<core::cell::Cell<(u64, u64)>>"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %2 to i8*
  %4 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::Cell<(u64, u64)>>>"* %_6 to i8*
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::Cell<(u64, u64)>>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !50)
  call void @llvm.experimental.noalias.scope.decl(metadata !53)
  %7 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::Cell<(u64, u64)>>>"* %_6 to %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::Cell<(u64, u64)>>>"*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::Cell<(u64, u64)>>>"* %_3.i to i8*
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::Cell<(u64, u64)>>>"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !noalias !50
  call void @llvm.experimental.noalias.scope.decl(metadata !55)
  call void @llvm.experimental.noalias.scope.decl(metadata !58)
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::Cell<(u64, u64)>>>"* %_3.i to %"core::option::Option<core::cell::Cell<(u64, u64)>>"*
  %11 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %0 to i8*
  %12 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false), !alias.scope !60, !noalias !53
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17hbce6ceabb48c7425E(%"alloc::alloc::Global"* %src) unnamed_addr #1 {
start:
  %0 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %0 to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp to %"alloc::alloc::Global"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"alloc::alloc::Global"* %2 to i8*
  %4 = bitcast %"alloc::alloc::Global"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 0, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core3ptr4read17he69f1ad32c914bc5E({ i64, i64 }* %src) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %tmp = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %0 to {}*
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  store { i64, i64 } %7, { i64, i64 }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast { i64, i64 }* %tmp to i8*
  %9 = bitcast { i64, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %tmp, i32 0, i32 0
  %_6.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %tmp, i32 0, i32 1
  %_6.1 = load i64, i64* %11, align 8
  %12 = insertvalue { i64, i64 } undef, i64 %_6.0, 0
  %13 = insertvalue { i64, i64 } %12, i64 %_6.1, 1
  %14 = insertvalue { i64, i64 } undef, i64 %_6.0, 0
  %15 = insertvalue { i64, i64 } %14, i64 %_6.1, 1
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = extractvalue { i64, i64 } %15, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %18 = insertvalue { i64, i64 } undef, i64 %16, 0
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1
  ret { i64, i64 } %19
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @_ZN4core3ptr4read17he9e7053f8250e710E({ i8*, i64 }* %src) unnamed_addr #1 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %tmp = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  store { i8*, i64 } %7, { i8*, i64 }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast { i8*, i64 }* %tmp to i8*
  %9 = bitcast { i8*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 0
  %_6.0 = load i8*, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 1
  %_6.1 = load i64, i64* %11, align 8
  %12 = insertvalue { i8*, i64 } undef, i8* %_6.0, 0
  %13 = insertvalue { i8*, i64 } %12, i64 %_6.1, 1
  %14 = insertvalue { i8*, i64 } undef, i8* %_6.0, 0
  %15 = insertvalue { i8*, i64 } %14, i64 %_6.1, 1
  %16 = extractvalue { i8*, i64 } %15, 0
  %17 = extractvalue { i8*, i64 } %15, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %18 = insertvalue { i8*, i64 } undef, i8* %16, 0
  %19 = insertvalue { i8*, i64 } %18, i64 %17, 1
  ret { i8*, i64 } %19
}

; core::ptr::drop_in_place<alloc::vec::Vec<&str>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17h79d85d6a9dea6092E"(%"alloc::vec::Vec<&str>"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb76d5bbd2f3f7460E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast %"alloc::vec::Vec<&str>"* %_1 to { i64*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17hb848d67a7d0929eeE"({ i64*, i64 }* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast %"alloc::vec::Vec<&str>"* %_1 to { i64*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17hb848d67a7d0929eeE"({ i64*, i64 }* %2) #21
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<core::num::error::ParseIntError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr52drop_in_place$LT$core..num..error..ParseIntError$GT$17h6048539c6b3dd394E"(i8* %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::drop_in_place<std::thread::local::AccessError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr52drop_in_place$LT$std..thread..local..AccessError$GT$17ha95bfb5dce17b15cE"(%"std::thread::local::AccessError"* %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hb78cd0a0939609e8E"({ i8*, i64 }* %_1) unnamed_addr #0 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hba6279c0fe769a8bE"({ i8*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::alloc::layout::LayoutError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17h73173610c2420e90E"(%"core::alloc::layout::LayoutError"* %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17h99b6d3c2e9b0ac64E"({ i32*, i64 }* %_1) unnamed_addr #0 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he2b94a1e78ebdd8cE"({ i32*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::num::error::TryFromIntError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr54drop_in_place$LT$core..num..error..TryFromIntError$GT$17h13e63c3b0605de1eE"(%"core::num::error::TryFromIntError"* %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::drop_in_place<std::sys_common::condvar::Condvar>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr54drop_in_place$LT$std..sys_common..condvar..Condvar$GT$17hcdc4e56b4954a452E"(%"std::sys_common::condvar::Condvar"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <std::sys_common::condvar::Condvar as core::ops::drop::Drop>::drop
  invoke void @"_ZN75_$LT$std..sys_common..condvar..Condvar$u20$as$u20$core..ops..drop..Drop$GT$4drop17h83b8ba3d0c35aabaE"(%"std::sys_common::condvar::Condvar"* align 8 dereferenceable(16) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast %"std::sys_common::condvar::Condvar"* %_1 to %"std::sys::unix::condvar::Condvar"**
; call core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::condvar::Condvar>>
  call void @"_ZN4core3ptr78drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..condvar..Condvar$GT$$GT$17h4ab0dc5f7f596778E"(%"std::sys::unix::condvar::Condvar"** %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast %"std::sys_common::condvar::Condvar"* %_1 to %"std::sys::unix::condvar::Condvar"**
; call core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::condvar::Condvar>>
  call void @"_ZN4core3ptr78drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..condvar..Condvar$GT$$GT$17h4ab0dc5f7f596778E"(%"std::sys::unix::condvar::Condvar"** %2) #21
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::Mutex<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr55drop_in_place$LT$std..sync..mutex..Mutex$LT$i32$GT$$GT$17he055f369a53c8fbbE"(%"std::sync::mutex::Mutex<i32>"* %_1) unnamed_addr #0 {
start:
  %0 = bitcast %"std::sync::mutex::Mutex<i32>"* %_1 to i64**
; call core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h391195306a5ba975E"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::rwlock::RwLock<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr57drop_in_place$LT$std..sync..rwlock..RwLock$LT$i32$GT$$GT$17h4c1556b8335c0937E"(%"std::sync::rwlock::RwLock<i32>"* %_1) unnamed_addr #0 {
start:
  %0 = bitcast %"std::sync::rwlock::RwLock<i32>"* %_1 to i64**
; call core::ptr::drop_in_place<std::sys_common::rwlock::MovableRWLock>
  call void @"_ZN4core3ptr59drop_in_place$LT$std..sys_common..rwlock..MovableRWLock$GT$17h8cad6df13dcf7acbE"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h391195306a5ba975E"(i64** %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <std::sys_common::mutex::MovableMutex as core::ops::drop::Drop>::drop
  invoke void @"_ZN78_$LT$std..sys_common..mutex..MovableMutex$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha55fce36199af4d5E"(i64** align 8 dereferenceable(8) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast i64** %_1 to %"std::sys::unix::mutex::Mutex"**
; call core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::mutex::Mutex>>
  call void @"_ZN4core3ptr74drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..mutex..Mutex$GT$$GT$17hc06296fdbbd59c6dE"(%"std::sys::unix::mutex::Mutex"** %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast i64** %_1 to %"std::sys::unix::mutex::Mutex"**
; call core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::mutex::Mutex>>
  call void @"_ZN4core3ptr74drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..mutex..Mutex$GT$$GT$17hc06296fdbbd59c6dE"(%"std::sys::unix::mutex::Mutex"** %2) #21
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<&core::option::Option<usize>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr58drop_in_place$LT$$RF$core..option..Option$LT$usize$GT$$GT$17h3d652b8008633118E"({ i64, i64 }** %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17hbd24508baea61ec2E"({ [0 x i8]*, i64 }* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  br label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast { [0 x i8]*, i64 }* %_1 to { i8*, i64 }*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8, !nonnull !3
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h404f68aca775681dE(i8* nonnull %3, i64 %5)
  br label %bb1

bb4:                                              ; No predecessors!
  %6 = bitcast { [0 x i8]*, i64 }* %_1 to { i8*, i64 }*
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !nonnull !3
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h404f68aca775681dE(i8* nonnull %8, i64 %10) #21
  br label %bb2

bb2:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17hb848d67a7d0929eeE"({ i64*, i64 }* %_1) unnamed_addr #0 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc46af5cb0d4213a7E"({ i64*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sys_common::rwlock::MovableRWLock>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr59drop_in_place$LT$std..sys_common..rwlock..MovableRWLock$GT$17h8cad6df13dcf7acbE"(i64** %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <std::sys_common::rwlock::MovableRWLock as core::ops::drop::Drop>::drop
  invoke void @"_ZN80_$LT$std..sys_common..rwlock..MovableRWLock$u20$as$u20$core..ops..drop..Drop$GT$4drop17haffd3c1b234564a3E"(i64** align 8 dereferenceable(8) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast i64** %_1 to %"std::sys::unix::rwlock::RWLock"**
; call core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::rwlock::RWLock>>
  call void @"_ZN4core3ptr76drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..rwlock..RWLock$GT$$GT$17h8e6e78999d572353E"(%"std::sys::unix::rwlock::RWLock"** %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast i64** %_1 to %"std::sys::unix::rwlock::RWLock"**
; call core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::rwlock::RWLock>>
  call void @"_ZN4core3ptr76drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..rwlock..RWLock$GT$$GT$17h8e6e78999d572353E"(%"std::sys::unix::rwlock::RWLock"** %2) #21
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h12269151b3b1f705E(%"core::option::Option<core::cell::Cell<(u64, u64)>>"* %dst, %"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture dereferenceable(24) %src) unnamed_addr #1 {
start:
  %0 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %dst to i8*
  %1 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h2e0980a69e8d4666E({ i8*, i64 }* %dst, i8* align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %src = alloca { i8*, i64 }, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 0
  store i8* %0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = bitcast { i8*, i64 }* %dst to i8*
  %5 = bitcast { i8*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h326761242312cb15E(%"alloc::vec::Vec<_ProbeNode>"* %dst, %"alloc::vec::Vec<_ProbeNode>"* noalias nocapture dereferenceable(24) %src) unnamed_addr #1 {
start:
  %0 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %dst to i8*
  %1 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h6c2b7fb957ce2bd5E({ [0 x i8]*, i64 }* %dst, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %src = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = bitcast { [0 x i8]*, i64 }* %dst to i8*
  %5 = bitcast { [0 x i8]*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h6f80eff0d4ad82feE(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %dst, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* noalias nocapture dereferenceable(32) %src) unnamed_addr #1 {
start:
  %0 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %dst to i8*
  %1 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 32, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h840ec610b8e83b35E({ i64, i64 }* %dst, i64 %0, i64 %1) unnamed_addr #1 {
start:
  %src = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %src, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %src, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = bitcast { i64, i64 }* %dst to i8*
  %5 = bitcast { i64, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hac31ff096f16c309E(i32* %dst, i32 %0) unnamed_addr #1 {
start:
  %src = alloca i32, align 4
  store i32 %0, i32* %src, align 4
  %1 = bitcast i32* %dst to i8*
  %2 = bitcast i32* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 4, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hcaa0fc1afee3a217E(%_ProbeNode* %dst, %_ProbeNode* noalias nocapture dereferenceable(48) %src) unnamed_addr #1 {
start:
  %0 = bitcast %_ProbeNode* %dst to i8*
  %1 = bitcast %_ProbeNode* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 48, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hd64c74f5dc8e377bE(i8* %dst, i8 %0) unnamed_addr #1 {
start:
  %src = alloca i8, align 1
  store i8 %0, i8* %src, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 1, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hde134d7063bc0725E({ i64, i32 }* %dst, i64 %0, i32 %1) unnamed_addr #1 {
start:
  %src = alloca { i64, i32 }, align 8
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %src, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %src, i32 0, i32 1
  store i32 %1, i32* %3, align 8
  %4 = bitcast { i64, i32 }* %dst to i8*
  %5 = bitcast { i64, i32 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17he3b6925f354062a8E(i64* %dst, i64 %0) unnamed_addr #1 {
start:
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
  %1 = bitcast i64* %dst to i8*
  %2 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::Mutex<()>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..Mutex$LT$$LP$$RP$$GT$$GT$17h2ff956a75055864eE"(%"std::sync::mutex::Mutex<()>"* %_1) unnamed_addr #0 {
start:
  %0 = bitcast %"std::sync::mutex::Mutex<()>"* %_1 to i64**
; call core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h391195306a5ba975E"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h8a0966216e5866c0E"({ i64*, i8 }* %_1) unnamed_addr #0 {
start:
; call <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf4654e8a5c47604cE"({ i64*, i8 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<probe::_ProbeNode>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr61drop_in_place$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$17hb53d16845f929a0bE"(%"alloc::vec::Vec<_ProbeNode>"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb9a92bae182aff15E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %_1 to { i64*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<probe::_ProbeNode>>
  call void @"_ZN4core3ptr68drop_in_place$LT$alloc..raw_vec..RawVec$LT$probe.._ProbeNode$GT$$GT$17h253cc7b10fe186a6E"({ i64*, i64 }* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %_1 to { i64*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<probe::_ProbeNode>>
  call void @"_ZN4core3ptr68drop_in_place$LT$alloc..raw_vec..RawVec$LT$probe.._ProbeNode$GT$$GT$17h253cc7b10fe186a6E"({ i64*, i64 }* %2) #21
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Inner>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr63drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Inner$GT$$GT$17h666be2788123b809E"(i64** %_1) unnamed_addr #0 {
start:
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf1f45f5f403d408cE"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Weak<std::thread::Inner>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr64drop_in_place$LT$alloc..sync..Weak$LT$std..thread..Inner$GT$$GT$17h78bf51cfcf8f4e94E"(i64** %_1) unnamed_addr #0 {
start:
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf7adc847d42516dfE"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<std::fs::File>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr64drop_in_place$LT$core..cell..UnsafeCell$LT$std..fs..File$GT$$GT$17h5d06bd495a16630eE"(i32* %_1) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17hd5d8e8584b5106e5E"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::Mutex<std::fs::File>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$17h89c9ec421ac4ddbcE"(%"std::sync::mutex::Mutex<std::fs::File>"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %_1 to i64**
; invoke core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  invoke void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h391195306a5ba975E"(i64** %1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %2 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<core::cell::UnsafeCell<std::fs::File>>
  call void @"_ZN4core3ptr64drop_in_place$LT$core..cell..UnsafeCell$LT$std..fs..File$GT$$GT$17h5d06bd495a16630eE"(i32* %2)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %3 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<core::cell::UnsafeCell<std::fs::File>>
  call void @"_ZN4core3ptr64drop_in_place$LT$core..cell..UnsafeCell$LT$std..fs..File$GT$$GT$17h5d06bd495a16630eE"(i32* %3) #21
  br label %bb1

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::MutexGuard<()>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$17haacb45849dcb6ae5E"({ i64*, i8 }* %_1) unnamed_addr #0 {
start:
; call <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6600a60b9acf87f2E"({ i64*, i8 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Arc<probe::_ShuffledOrder>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr66drop_in_place$LT$alloc..sync..Arc$LT$probe.._ShuffledOrder$GT$$GT$17h8d37564d209b2d2eE"(i64** %_1) unnamed_addr #0 {
start:
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h42dc7b456d17af06E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<dyn core::any::Any+core::marker::Send>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr66drop_in_place$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$17h809ca918a7ceeeecE"({}* %_1.0, [3 x i64]* align 8 dereferenceable(24) %_1.1) unnamed_addr #0 {
start:
  %0 = bitcast [3 x i64]* %_1.1 to void ({}*)**
  %1 = getelementptr inbounds void ({}*)*, void ({}*)** %0, i64 0
  %2 = load void ({}*)*, void ({}*)** %1, align 8, !invariant.load !3, !nonnull !3
  call void %2({}* %_1.0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::rwlock::RwLockReadGuard<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr66drop_in_place$LT$std..sync..rwlock..RwLockReadGuard$LT$i32$GT$$GT$17hc4e57e7e0691015aE"(i64** %_1) unnamed_addr #0 {
start:
; call <std::sync::rwlock::RwLockReadGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN85_$LT$std..sync..rwlock..RwLockReadGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he5cf986a8749f41fE"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Arc<probe::_ProbeSemaphore>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr67drop_in_place$LT$alloc..sync..Arc$LT$probe.._ProbeSemaphore$GT$$GT$17h7c7adcd3b2b980bdE"(i64** %_1) unnamed_addr #0 {
start:
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7fb5f0d172f0bbcaE"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Weak<probe::_ShuffledOrder>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr67drop_in_place$LT$alloc..sync..Weak$LT$probe.._ShuffledOrder$GT$$GT$17h1284eb7f545ad543E"(i64** %_1) unnamed_addr #0 {
start:
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha783e36fae91efc1E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<&str>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr67drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$17hf4700a368b2d4e61E"(%"alloc::vec::into_iter::IntoIter<&str>"* %_1) unnamed_addr #0 {
start:
; call <alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN86_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1731518202d05efbE"(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::rwlock::RwLockWriteGuard<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr67drop_in_place$LT$std..sync..rwlock..RwLockWriteGuard$LT$i32$GT$$GT$17h0571f2f9628123b1E"({ i64*, i8 }* %_1) unnamed_addr #0 {
start:
; call <std::sync::rwlock::RwLockWriteGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN86_$LT$std..sync..rwlock..RwLockWriteGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h80914379c238eeb7E"({ i64*, i8 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17hcdc68027753ffe0aE"(%"std::io::error::Custom"** %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %_1, align 8, !nonnull !3
; invoke core::ptr::drop_in_place<std::io::error::Custom>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h8947934ed6524863E"(%"std::io::error::Custom"* %1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %start
  %2 = bitcast %"std::io::error::Custom"** %_1 to i64**
  %3 = load i64*, i64** %2, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hc0af9f1f20db982aE(i64* nonnull %3)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %4 = bitcast %"std::io::error::Custom"** %_1 to i64**
  %5 = load i64*, i64** %4, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hc0af9f1f20db982aE(i64* nonnull %5) #21
  br label %bb2

cleanup:                                          ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb2:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<probe::_ProbeNode>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr68drop_in_place$LT$alloc..raw_vec..RawVec$LT$probe.._ProbeNode$GT$$GT$17h253cc7b10fe186a6E"({ i64*, i64 }* %_1) unnamed_addr #0 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8513c41b32041964E"({ i64*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Weak<probe::_ProbeSemaphore>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr68drop_in_place$LT$alloc..sync..Weak$LT$probe.._ProbeSemaphore$GT$$GT$17hfbe06cb997e4bfdcE"(i64** %_1) unnamed_addr #0 {
start:
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbcfaf3263cf86095E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h00d4c33faf98d2e3E"(%_ProbeNode* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %_ProbeNode**
  store %_ProbeNode* %ptr, %_ProbeNode** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !3
  ret i8* %1
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h2050e68da173ad23E"({ [0 x i8]*, i64 }* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h778f02408095d330E"(i32* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i32*, align 8
  store i32* %ptr, i32** %0, align 8
  %1 = load i32*, i32** %0, align 8, !nonnull !3
  ret i32* %1
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hf5d342009eb2b870E"(%"alloc::vec::Vec<_ProbeNode>"* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::vec::Vec<_ProbeNode>"**
  store %"alloc::vec::Vec<_ProbeNode>"* %ptr, %"alloc::vec::Vec<_ProbeNode>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h1016864a5f4f9939E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf395dd6cfd744a20E"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h13b286389e531740E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf5ab5b0b3e884722E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1)
  %_3.0 = extractvalue { {}*, [3 x i64]* } %0, 0
  %_3.1 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast {}* %_3.0 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h1850f4fcd7c8bb81E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcf26cc93c944360dE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h1cb888b8a9ff151aE"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcebbaf04ff561bd6E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1)
  %_3.0 = extractvalue { {}*, [3 x i64]* } %0, 0
  %_3.1 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast {}* %_3.0 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h1e847e221c87484aE"(i32* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h17404fb8c88a2b64E"(i32* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast i32* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h242dbd266fba8ff0E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"std::sys::unix::condvar::Condvar"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hb4e260d221e7d6e4E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"std::sys::unix::condvar::Condvar"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h4b5e4da05eb7b745E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call { [0 x i8]*, i64 }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h7f040bf57892ff28E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast { [0 x i8]*, i64 }* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h54d0817549aa038cE"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h2a6a16bd958e6a65E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h709d522373a78936E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h2482d2c3b55ec7c8E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h9d94b7bdb72afc68E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %_ProbeNode* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17haee3b61c57e019ddE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %_ProbeNode* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hc649d5f091579d75E"(i8* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17he98f1f261e87a8bdE"(i8* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hc74ae711b2115e99E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hdd780c6d30b47f8bE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hc9adac091e9e0771E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6248a8c505ba3fceE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hce20c4eb9af55744E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hbb9d17816a155fc5E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"std::io::error::Custom"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hcecf9f78fc3dcc95E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"std::sys::unix::rwlock::RWLock"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hb71b9cf4030dfc6bE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"std::sys::unix::rwlock::RWLock"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hcf09ba3b1de98c95E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h3c15fdc0c00db9dcE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hd38a460303308123E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf25f2b9ded32a257E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hfef3c3959d6e2d54E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"std::sys::unix::mutex::Mutex"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h41dac3f2bd26b6d6E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"std::sys::unix::mutex::Mutex"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h138f1cb12e5a7411E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h17404fb8c88a2b64E"(i32* nonnull %self) unnamed_addr #1 {
start:
  ret i32* %self
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h2482d2c3b55ec7c8E"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"*
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h2a6a16bd958e6a65E"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"*
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h3c15fdc0c00db9dcE"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"*
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"std::sys::unix::mutex::Mutex"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h41dac3f2bd26b6d6E"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"std::sys::unix::mutex::Mutex"*
  ret %"std::sys::unix::mutex::Mutex"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6248a8c505ba3fceE"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<_ProbeSemaphore>"*
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h7f040bf57892ff28E"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to { [0 x i8]*, i64 }*
  ret { [0 x i8]*, i64 }* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %_ProbeNode* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17haee3b61c57e019ddE"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %_ProbeNode*
  ret %_ProbeNode* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"std::sys::unix::condvar::Condvar"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hb4e260d221e7d6e4E"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"std::sys::unix::condvar::Condvar"*
  ret %"std::sys::unix::condvar::Condvar"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"std::sys::unix::rwlock::RWLock"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hb71b9cf4030dfc6bE"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"std::sys::unix::rwlock::RWLock"*
  ret %"std::sys::unix::rwlock::RWLock"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hbb9d17816a155fc5E"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"std::io::error::Custom"*
  ret %"std::io::error::Custom"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcebbaf04ff561bd6E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #1 {
start:
  %_2.0 = bitcast i8* %self.0 to {}*
  %_2.1 = bitcast i64* %self.1 to [3 x i64]*
  %0 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %1 = insertvalue { {}*, [3 x i64]* } %0, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcf26cc93c944360dE"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"alloc::vec::Vec<_ProbeNode>"*
  ret %"alloc::vec::Vec<_ProbeNode>"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hdd780c6d30b47f8bE"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"*
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17he98f1f261e87a8bdE"(i8* nonnull %self) unnamed_addr #1 {
start:
  ret i8* %self
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf25f2b9ded32a257E"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<_ShuffledOrder>"*
  ret %"alloc::sync::ArcInner<_ShuffledOrder>"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf395dd6cfd744a20E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %_2.0 = bitcast i8* %self.0 to [0 x i8]*
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %self.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf5ab5b0b3e884722E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #1 {
start:
  %_2.0 = bitcast i8* %self.0 to {}*
  %_2.1 = bitcast i64* %self.1 to [3 x i64]*
  %0 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %1 = insertvalue { {}*, [3 x i64]* } %0, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %1
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(56) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h20021e762d261d3fE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h2a6a16bd958e6a65E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(24) %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h5d2ef60c613b156fE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hbb9d17816a155fc5E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::io::error::Custom"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h605b1b0e8aecdc36E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !3
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_3.1 = load i64, i64* %1, align 8
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf395dd6cfd744a20E"(i8* nonnull %_3.0, i64 %_3.1)
  %_2.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_2.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %_2.1, 1
  ret { [0 x i8]*, i64 } %4
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(80) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h6c385f1eb60ac8c4E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h2482d2c3b55ec7c8E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h7010f1eccf948b64E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf25f2b9ded32a257E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<_ShuffledOrder>"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(48) %"std::sys::unix::condvar::Condvar"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h740cc00071c4ad14E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"std::sys::unix::condvar::Condvar"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hb4e260d221e7d6e4E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::sys::unix::condvar::Condvar"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h9bdd6b8868b54b42E"({ i8*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !3
  %1 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 1
  %_3.1 = load i64*, i64** %1, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcebbaf04ff561bd6E"(i8* nonnull %_3.0, i64* align 8 dereferenceable(24) %_3.1)
  %_2.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_2.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hae74a84c60e0ee14E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hdd780c6d30b47f8bE"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(72) %"std::sys::unix::rwlock::RWLock"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hbba4ffdc55d30d0eE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"std::sys::unix::rwlock::RWLock"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hb71b9cf4030dfc6bE"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::sys::unix::rwlock::RWLock"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(40) %"std::sys::unix::mutex::Mutex"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hc424187d4a8cf610E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"std::sys::unix::mutex::Mutex"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h41dac3f2bd26b6d6E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::sys::unix::mutex::Mutex"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17he36590aebbd787a9E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6248a8c505ba3fceE"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hf83f4c4aba4e51f1E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h3c15fdc0c00db9dcE"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hfb2b2609348a8d90E"({ i8*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !3
  %1 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 1
  %_3.1 = load i64*, i64** %1, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf5ab5b0b3e884722E"(i8* nonnull %_3.0, i64* align 8 dereferenceable(24) %_3.1)
  %_2.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_2.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17hb643edb95f0d2ad0E"() unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_1 = inttoptr i64 8 to { [0 x i8]*, i64 }*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h2050e68da173ad23E"({ [0 x i8]*, i64 }* %_1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17hbce10c6349675003E"() unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_1 = inttoptr i64 4 to i32*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h778f02408095d330E"(i32* %_1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32* %0
}

; core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %_1) unnamed_addr #0 {
start:
; call <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h4f19f00edf299eb1E"({ i64*, i8 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<[alloc::vec::Vec<probe::_ProbeNode>]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr71drop_in_place$LT$$u5b$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$u5d$$GT$17hf0896cf91432abb8E"([0 x %"alloc::vec::Vec<_ProbeNode>"]* %_1.0, i64 %_1.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_9 = alloca %"alloc::vec::Vec<_ProbeNode>"*, align 8
  %_4 = alloca i64, align 8
  br i1 false, label %bb7, label %bb12

bb7:                                              ; preds = %start
  store i64 0, i64* %_4, align 8
  br label %bb6

bb12:                                             ; preds = %start
  %1 = bitcast [0 x %"alloc::vec::Vec<_ProbeNode>"]* %_1.0 to %"alloc::vec::Vec<_ProbeNode>"*
  store %"alloc::vec::Vec<_ProbeNode>"* %1, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %2 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %_10 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %2, i64 %_1.1
  br label %bb11

bb11:                                             ; preds = %bb10, %bb12
  %3 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %_14 = icmp eq %"alloc::vec::Vec<_ProbeNode>"* %3, %_10
  br i1 %_14, label %bb1, label %bb10

bb10:                                             ; preds = %bb11
  %_13 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %4 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %5 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %4, i64 1
  store %"alloc::vec::Vec<_ProbeNode>"* %5, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<probe::_ProbeNode>>
  invoke void @"_ZN4core3ptr61drop_in_place$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$17hb53d16845f929a0bE"(%"alloc::vec::Vec<_ProbeNode>"* %_13)
          to label %bb11 unwind label %cleanup

bb1:                                              ; preds = %bb6, %bb11
  ret void

bb9:                                              ; preds = %bb8, %cleanup
  %6 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %_12 = icmp eq %"alloc::vec::Vec<_ProbeNode>"* %6, %_10
  br i1 %_12, label %bb2, label %bb8

cleanup:                                          ; preds = %bb10
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb9

bb8:                                              ; preds = %bb9
  %_11 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %12 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %13 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %12, i64 1
  store %"alloc::vec::Vec<_ProbeNode>"* %13, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
; call core::ptr::drop_in_place<alloc::vec::Vec<probe::_ProbeNode>>
  call void @"_ZN4core3ptr61drop_in_place$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$17hb53d16845f929a0bE"(%"alloc::vec::Vec<_ProbeNode>"* %_11) #21
  br label %bb9

bb2:                                              ; preds = %bb4, %bb9
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb6:                                              ; preds = %bb5, %bb7
  %20 = load i64, i64* %_4, align 8
  %_8 = icmp eq i64 %20, %_1.1
  br i1 %_8, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %21 = load i64, i64* %_4, align 8
  %_7 = getelementptr inbounds [0 x %"alloc::vec::Vec<_ProbeNode>"], [0 x %"alloc::vec::Vec<_ProbeNode>"]* %_1.0, i64 0, i64 %21
  %22 = load i64, i64* %_4, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %_4, align 8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<probe::_ProbeNode>>
  invoke void @"_ZN4core3ptr61drop_in_place$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$17hb53d16845f929a0bE"(%"alloc::vec::Vec<_ProbeNode>"* %_7)
          to label %bb6 unwind label %cleanup1

bb4:                                              ; preds = %bb3, %cleanup1
  %24 = load i64, i64* %_4, align 8
  %_6 = icmp eq i64 %24, %_1.1
  br i1 %_6, label %bb2, label %bb3

cleanup1:                                         ; preds = %bb5
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %30 = load i64, i64* %_4, align 8
  %_5 = getelementptr inbounds [0 x %"alloc::vec::Vec<_ProbeNode>"], [0 x %"alloc::vec::Vec<_ProbeNode>"]* %_1.0, i64 0, i64 %30
  %31 = load i64, i64* %_4, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %_4, align 8
; call core::ptr::drop_in_place<alloc::vec::Vec<probe::_ProbeNode>>
  call void @"_ZN4core3ptr61drop_in_place$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$17hb53d16845f929a0bE"(%"alloc::vec::Vec<_ProbeNode>"* %_5) #21
  br label %bb4
}

; core::ptr::drop_in_place<alloc::collections::vec_deque::VecDeque<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr71drop_in_place$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$17h8b92a4cead11df23E"(%"alloc::collections::vec_deque::VecDeque<i32>"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN94_$LT$alloc..collections..vec_deque..VecDeque$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc22e9dce84abf36aE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %_1, i32 0, i32 2
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<i32>>
  call void @"_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17h99b6d3c2e9b0ac64E"({ i32*, i64 }* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %_1, i32 0, i32 2
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<i32>>
  call void @"_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17h99b6d3c2e9b0ac64E"({ i32*, i64 }* %2) #21
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<core::option::Option<std::ffi::c_str::CString>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr73drop_in_place$LT$core..option..Option$LT$std..ffi..c_str..CString$GT$$GT$17h18b279ea4f7ea2d5E"({ i8*, i64 }* %_1) unnamed_addr #0 {
start:
  %0 = bitcast { i8*, i64 }* %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<std::ffi::c_str::CString>
  call void @"_ZN4core3ptr45drop_in_place$LT$std..ffi..c_str..CString$GT$17h27a0203acb11e132E"({ i8*, i64 }* %_1)
  br label %bb1
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::mutex::Mutex>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr74drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..mutex..Mutex$GT$$GT$17hc06296fdbbd59c6dE"(%"std::sys::unix::mutex::Mutex"** %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  br label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast %"std::sys::unix::mutex::Mutex"** %_1 to i64**
  %2 = load i64*, i64** %1, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h58d52de620c1d389E(i64* nonnull %2)
  br label %bb1

bb4:                                              ; No predecessors!
  %3 = bitcast %"std::sys::unix::mutex::Mutex"** %_1 to i64**
  %4 = load i64*, i64** %3, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h58d52de620c1d389E(i64* nonnull %4) #21
  br label %bb2

bb2:                                              ; preds = %bb4
  %5 = bitcast { i8*, i32 }* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::rwlock::RWLock>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr76drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..rwlock..RWLock$GT$$GT$17h8e6e78999d572353E"(%"std::sys::unix::rwlock::RWLock"** %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  br label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast %"std::sys::unix::rwlock::RWLock"** %_1 to i64**
  %2 = load i64*, i64** %1, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h2b8bcc8c79fdfe8bE(i64* nonnull %2)
  br label %bb1

bb4:                                              ; No predecessors!
  %3 = bitcast %"std::sys::unix::rwlock::RWLock"** %_1 to i64**
  %4 = load i64*, i64** %3, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h2b8bcc8c79fdfe8bE(i64* nonnull %4) #21
  br label %bb2

bb2:                                              ; preds = %bb4
  %5 = bitcast { i8*, i32 }* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<std::io::Write::write_fmt::Adapter<std::fs::File>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr76drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..fs..File$GT$$GT$17hcdc823dc7b0aab2cE"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* %_1) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  call void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h676bc739b61a0c43E"(%"core::result::Result<(), std::io::error::Error>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::panicking::begin_panic::PanicPayload<&str>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr77drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$$RF$str$GT$$GT$17hacb5b8cb32d3adc8E"({ i8*, i64 }* %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::condvar::Condvar>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr78drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..condvar..Condvar$GT$$GT$17h4ab0dc5f7f596778E"(%"std::sys::unix::condvar::Condvar"** %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  br label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast %"std::sys::unix::condvar::Condvar"** %_1 to i64**
  %2 = load i64*, i64** %1, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hb36a4dd42a114811E(i64* nonnull %2)
  br label %bb1

bb4:                                              ; No predecessors!
  %3 = bitcast %"std::sys::unix::condvar::Condvar"** %_1 to i64**
  %4 = load i64*, i64** %3, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hb36a4dd42a114811E(i64* nonnull %4) #21
  br label %bb2

bb2:                                              ; preds = %bb4
  %5 = bitcast { i8*, i32 }* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr79drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$i32$GT$$GT$$GT$17hb264f581f405e15aE"(i64** %_1) unnamed_addr #0 {
start:
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h24d0aade7e1b56f2E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h83ff0ba99b24d2f2E"(i8* %self, i8* %other) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::mut_ptr::<impl *mut T>::sub
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h0f60f8b2430773d3E"(i8* %self, i64 %count) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = sub i64 0, %count
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, i8* %self, i64 %1
  store i8* %2, i8** %0, align 8
  %_3.i = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %_3.i
}

; core::ptr::mut_ptr::<impl *mut T>::sub
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 }* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h997a0b8798986204E"({ i64, i32 }* %self, i64 %count) unnamed_addr #1 {
start:
  %0 = alloca { i64, i32 }*, align 8
  %1 = sub i64 0, %count
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i64 %1
  store { i64, i32 }* %2, { i64, i32 }** %0, align 8
  %_3.i = load { i64, i32 }*, { i64, i32 }** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret { i64, i32 }* %_3.i
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h418ff4f5e7b4bba7E"({ [0 x i8]*, i64 }* %self) unnamed_addr #1 {
start:
  %_2 = bitcast { [0 x i8]*, i64 }* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h83ff0ba99b24d2f2E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h5d5d9a22cd470a43E"(%"alloc::vec::Vec<_ProbeNode>"* %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h83ff0ba99b24d2f2E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7521696f5c8d2f92E"(i8* %self) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h83ff0ba99b24d2f2E"(i8* %self, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he7755547226c5e87E"(%_ProbeNode* %self) unnamed_addr #1 {
start:
  %_2 = bitcast %_ProbeNode* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h83ff0ba99b24d2f2E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr80drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$i32$GT$$GT$$GT$17h6d1a67b8c0bf90acE"(i64** %_1) unnamed_addr #0 {
start:
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc90b406ca3480d24E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h676bc739b61a0c43E"(%"core::result::Result<(), std::io::error::Error>"* %_1) unnamed_addr #0 {
start:
  %0 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_1 to i8*
  %1 = load i8, i8* %0, align 8, !range !7
  %2 = sub i8 %1, 4
  %3 = icmp eq i8 %2, 0
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_1 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %6 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %5 to %"std::io::error::Error"*
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h211456880990b21cE"(%"std::io::error::Error"* %6)
  br label %bb1
}

; core::ptr::drop_in_place<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr84drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$17h1433181a53c1f073E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2267ba8035591134E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_1 to { i64*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::vec::Vec<probe::_ProbeNode>>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$17h501d33d4034793c0E"({ i64*, i64 }* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_1 to { i64*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::vec::Vec<probe::_ProbeNode>>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$17h501d33d4034793c0E"({ i64*, i64 }* %2) #21
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<core::result::Result<std::fs::File,std::io::error::Error>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr86drop_in_place$LT$core..result..Result$LT$std..fs..File$C$std..io..error..Error$GT$$GT$17h5ea95de40defd105E"(%"core::result::Result<std::fs::File, std::io::error::Error>"* %_1) unnamed_addr #0 {
start:
  %0 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %_1 to i32*
  %1 = load i32, i32* %0, align 8, !range !61
  %_2 = zext i32 %1 to i64
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %_1 to %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Ok", %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"* %3, i32 0, i32 1
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17hd5d8e8584b5106e5E"(i32* %4)
  br label %bb1

bb3:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %_1 to %"core::result::Result<std::fs::File, std::io::error::Error>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Err", %"core::result::Result<std::fs::File, std::io::error::Error>::Err"* %5, i32 0, i32 1
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h211456880990b21cE"(%"std::io::error::Error"* %6)
  br label %bb1

bb1:                                              ; preds = %bb2, %bb3
  ret void
}

; core::ptr::drop_in_place<&mut std::io::Write::write_fmt::Adapter<std::fs::File>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr88drop_in_place$LT$$RF$mut$u20$std..io..Write..write_fmt..Adapter$LT$std..fs..File$GT$$GT$17h9a475963423fe632E"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"** %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::drop_in_place<hashbrown::raw::RawTable<(std::thread::ThreadId,i32)>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr88drop_in_place$LT$hashbrown..raw..RawTable$LT$$LP$std..thread..ThreadId$C$i32$RP$$GT$$GT$17h43555655faa6cfe7E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %_1) unnamed_addr #0 {
start:
; call <hashbrown::raw::RawTable<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$hashbrown..raw..RawTable$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf91254cae9ffe662E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<std::fs::File>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr89drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$17h5be5a3470f202d4aE"(i64** %_1) unnamed_addr #0 {
start:
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hde4ba7558b0dc35eE"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h26443a8632726afeE({}* %data_address, i64 %metadata) unnamed_addr #1 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<_ProbeNode>]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<_ProbeNode>]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<_ProbeNode>]>"* %_3 to { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }*
  %10 = getelementptr inbounds { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }, { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %"alloc::vec::Vec<_ProbeNode>"]*, [0 x %"alloc::vec::Vec<_ProbeNode>"]** %10, align 8
  %12 = getelementptr inbounds { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }, { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %11, 0
  %15 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %14, i64 %13, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h3e0ed8ab55d4a5ebE({}* %data_address, i64 %metadata) unnamed_addr #1 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[_ProbeNode]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[_ProbeNode]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[_ProbeNode]>"* %_3 to { [0 x %_ProbeNode]*, i64 }*
  %10 = getelementptr inbounds { [0 x %_ProbeNode]*, i64 }, { [0 x %_ProbeNode]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %_ProbeNode]*, [0 x %_ProbeNode]** %10, align 8
  %12 = getelementptr inbounds { [0 x %_ProbeNode]*, i64 }, { [0 x %_ProbeNode]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %_ProbeNode]*, i64 } undef, [0 x %_ProbeNode]* %11, 0
  %15 = insertvalue { [0 x %_ProbeNode]*, i64 } %14, i64 %13, 1
  ret { [0 x %_ProbeNode]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h7b33a36447fac036E({}* %data_address, i64 %metadata) unnamed_addr #1 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h0b1ca24d430e4aa4E({}* %data_address, i64 %metadata) unnamed_addr #1 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[&str]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[&str]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[&str]>"* %_3 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %10 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %10, align 8
  %12 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } undef, [0 x { [0 x i8]*, i64 }]* %11, 0
  %15 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %14, i64 %13, 1
  ret { [0 x { [0 x i8]*, i64 }]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h1cca9366fb87c6ecE({}* %data_address, i64 %metadata) unnamed_addr #1 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<_ProbeNode>]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<_ProbeNode>]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<_ProbeNode>]>"* %_3 to { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }*
  %10 = getelementptr inbounds { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }, { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %"alloc::vec::Vec<_ProbeNode>"]*, [0 x %"alloc::vec::Vec<_ProbeNode>"]** %10, align 8
  %12 = getelementptr inbounds { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }, { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %11, 0
  %15 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %14, i64 %13, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h857d938ba19f725cE({}* %data_address, i64 %metadata) unnamed_addr #1 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[i32]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[i32]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[i32]>"* %_3 to { [0 x i32]*, i64 }*
  %10 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i32]*, [0 x i32]** %10, align 8
  %12 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %11, 0
  %15 = insertvalue { [0 x i32]*, i64 } %14, i64 %13, 1
  ret { [0 x i32]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17ha497f754f8613813E({}* %data_address, i64 %metadata) unnamed_addr #1 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hfbf59d9737eba442E({}* %data_address, i64 %metadata) unnamed_addr #1 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[_ProbeNode]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[_ProbeNode]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[_ProbeNode]>"* %_3 to { [0 x %_ProbeNode]*, i64 }*
  %10 = getelementptr inbounds { [0 x %_ProbeNode]*, i64 }, { [0 x %_ProbeNode]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %_ProbeNode]*, [0 x %_ProbeNode]** %10, align 8
  %12 = getelementptr inbounds { [0 x %_ProbeNode]*, i64 }, { [0 x %_ProbeNode]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %_ProbeNode]*, i64 } undef, [0 x %_ProbeNode]* %11, 0
  %15 = insertvalue { [0 x %_ProbeNode]*, i64 } %14, i64 %13, 1
  ret { [0 x %_ProbeNode]*, i64 } %15
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr8metadata8metadata17ha1b5c811d7a2cfa2E([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #1 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %ptr.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !3
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h32d51dbbd22eb744E"({ [0 x i8]*, i64 }* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4bfc4dc2049e2d65E"(%_ProbeNode* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %_ProbeNode**
  store %_ProbeNode* %ptr, %_ProbeNode** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h51554824ecc99032E"({ i64, i32 }* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to { i64, i32 }**
  store { i64, i32 }* %ptr, { i64, i32 }** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h746b529d5d4cb833E"(%"alloc::vec::Vec<_ProbeNode>"* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::vec::Vec<_ProbeNode>"**
  store %"alloc::vec::Vec<_ProbeNode>"* %ptr, %"alloc::vec::Vec<_ProbeNode>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hde659184f5a1cdbeE"(i32* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i32*, align 8
  store i32* %ptr, i32** %0, align 8
  %1 = load i32*, i32** %0, align 8, !nonnull !3
  ret i32* %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17he7e10cb147f929d6E"([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #1 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %ptr.1, i64* %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hedb6990ce3412e2aE"(i8* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7521696f5c8d2f92E"(i8* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  %1 = bitcast i8** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_5 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %ptr)
  br label %bb3

bb3:                                              ; preds = %bb2
  store i8* %_5, i8** %0, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %2 = load i8*, i8** %0, align 8
  ret i8* %2
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h02ca1d4d4f55afebE"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::thread::Inner>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2e842de11dd0669E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<std::thread::Inner>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h130c61525e13be89E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h704b8dd402217635E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h28e2b6e988196884E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfc0766754e9ef31aE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3aebe3ab6d6023feE"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h872f7f01d67858c8E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h43f19d0652051b78E"(i8* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5c3d6459bdf78797E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc4770d86511dec59E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6b2b7b4814cbf1a8E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h305a2360d33cc6c0E"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to %"alloc::vec::Vec<_ProbeNode>"*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h746b529d5d4cb833E"(%"alloc::vec::Vec<_ProbeNode>"* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6ebbb6d58afb88ecE"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hde19dc7ef38947acE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7002ac7ab8dbf6f5E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h305a2360d33cc6c0E"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to i32*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hde659184f5a1cdbeE"(i32* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h9d0f10d89664ca79E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h866f1319c178a983E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hc00fe8b539a79701E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h305a2360d33cc6c0E"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to %_ProbeNode*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4bfc4dc2049e2d65E"(%_ProbeNode* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17he2c59d869764309fE"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h305a2360d33cc6c0E"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to { [0 x i8]*, i64 }*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h32d51dbbd22eb744E"({ [0 x i8]*, i64 }* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %_ProbeNode* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h153227e741c58ebdE"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %_ProbeNode*
  ret %_ProbeNode* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h305a2360d33cc6c0E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %_2.0 = bitcast i8* %self.0 to [0 x i8]*
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %self.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %self) unnamed_addr #1 {
start:
  ret i8* %self
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4aae345c468315fdE"(i32* nonnull %self) unnamed_addr #1 {
start:
  ret i32* %self
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6191cd23f8e44eacE"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to { [0 x i8]*, i64 }*
  ret { [0 x i8]*, i64 }* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h704b8dd402217635E"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<_ProbeSemaphore>"*
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h85d7d009a2386b45E"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"alloc::vec::Vec<_ProbeNode>"*
  ret %"alloc::vec::Vec<_ProbeNode>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h866f1319c178a983E"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"*
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h872f7f01d67858c8E"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"*
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc4770d86511dec59E"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"*
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hde19dc7ef38947acE"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<_ShuffledOrder>"*
  ret %"alloc::sync::ArcInner<_ShuffledOrder>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<std::thread::Inner>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2e842de11dd0669E"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<std::thread::Inner>"*
  ret %"alloc::sync::ArcInner<std::thread::Inner>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfc0766754e9ef31aE"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"*
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfe45183e9a9f4942E"(i64* nonnull %self) unnamed_addr #1 {
start:
  %_2 = bitcast i64* %self to { i64, i32 }*
  ret { i64, i32 }* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(48) %"alloc::sync::ArcInner<std::thread::Inner>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h243238f4f41b3061E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<std::thread::Inner>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2e842de11dd0669E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::thread::Inner>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h650020f77966e249E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc4770d86511dec59E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h658ae350fac57424E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfc0766754e9ef31aE"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h6de7b88e086a8cb8E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h704b8dd402217635E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hc4491d588e25de7dE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hde19dc7ef38947acE"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<_ShuffledOrder>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(56) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hdd285de3a190b397E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h866f1319c178a983E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(80) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17he6cf5e9aa5b116d4E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h872f7f01d67858c8E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_2
}

; core::ptr::non_null::NonNull<[T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h7bc91b32bf505548E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %_2 = call nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17hc232b0a3a4545788E"(i8* nonnull %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17hc232b0a3a4545788E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h305a2360d33cc6c0E"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast [0 x i8]* %_3.0 to i8*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %2 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %2
}

; core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h3c187e7e0ecd81c2E"(i8* nonnull %data, i64 %len) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h2a23878c8d823489E(i8* %_4, i64 %len)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17he7e10cb147f929d6E"([0 x i8]* %_3.0, i64 %_3.1)
  %2 = extractvalue { i8*, i64 } %1, 0
  %3 = extractvalue { i8*, i64 } %1, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { i8*, i64 } undef, i8* %2, 0
  %5 = insertvalue { i8*, i64 } %4, i64 %3, 1
  ret { i8*, i64 } %5
}

; core::ptr::non_null::NonNull<[T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h4236610cbe77fbd3E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h305a2360d33cc6c0E"(i8* nonnull %self.0, i64 %self.1)
  %_2.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_2.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::metadata
  %1 = call i64 @_ZN4core3ptr8metadata8metadata17ha1b5c811d7a2cfa2E([0 x i8]* %_2.0, i64 %_2.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %1
}

; core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<std::fs::File>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr90drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$17h6816a806a440e90eE"(i64** %_1) unnamed_addr #0 {
start:
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hdce3ae28bbae451fE"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17ha7e6e1532ea13046E"({ {}*, [3 x i64]* }* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 0
  %2 = load {}*, {}** %1, align 8, !nonnull !3
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 1
  %4 = load [3 x i64]*, [3 x i64]** %3, align 8, !nonnull !3
  %5 = bitcast [3 x i64]* %4 to void ({}*)**
  %6 = getelementptr inbounds void ({}*)*, void ({}*)** %5, i64 0
  %7 = load void ({}*)*, void ({}*)** %6, align 8, !invariant.load !3, !nonnull !3
  invoke void %7({}* %2)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %start
  %8 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !nonnull !3
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h70deaa3272da159bE(i8* nonnull %10, i64* align 8 dereferenceable(24) %12)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %13 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8, !nonnull !3
  %16 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 1
  %17 = load i64*, i64** %16, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h70deaa3272da159bE(i8* nonnull %15, i64* align 8 dereferenceable(24) %17) #21
  br label %bb2

cleanup:                                          ; preds = %start
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb4

bb2:                                              ; preds = %bb4
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::vec::Vec<probe::_ProbeNode>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr91drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$17h501d33d4034793c0E"({ i64*, i64 }* %_1) unnamed_addr #0 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h744e49ed6dea80aeE"({ i64*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<dyn std::error::Error+core::marker::Sync+core::marker::Send>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr92drop_in_place$LT$dyn$u20$std..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$17hda231a64b2fe7c18E"({}* %_1.0, [3 x i64]* align 8 dereferenceable(24) %_1.1) unnamed_addr #0 {
start:
  %0 = bitcast [3 x i64]* %_1.1 to void ({}*)**
  %1 = getelementptr inbounds void ({}*)*, void ({}*)** %0, i64 0
  %2 = load void ({}*)*, void ({}*)** %1, align 8, !invariant.load !3, !nonnull !3
  call void %2({}* %_1.0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr92drop_in_place$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$17h90fac0c67f71ecceE"(%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* %_1) unnamed_addr #0 {
start:
  %0 = bitcast %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* %_1 to %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"*
; call core::ptr::drop_in_place<hashbrown::map::HashMap<std::thread::ThreadId,i32,std::collections::hash::map::RandomState>>
  call void @"_ZN4core3ptr122drop_in_place$LT$hashbrown..map..HashMap$LT$std..thread..ThreadId$C$i32$C$std..collections..hash..map..RandomState$GT$$GT$17h58b555f7c18f10acE"(%"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<probe::_ShuffledOrder>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr94drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$probe.._ShuffledOrder$GT$$GT$$GT$17hc7e7596d13740161E"(i64** %_1) unnamed_addr #0 {
start:
  %0 = bitcast i64** %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::sync::Arc<probe::_ShuffledOrder>>
  call void @"_ZN4core3ptr66drop_in_place$LT$alloc..sync..Arc$LT$probe.._ShuffledOrder$GT$$GT$17h8d37564d209b2d2eE"(i64** %_1)
  br label %bb1
}

; core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<probe::_ProbeSemaphore>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$probe.._ProbeSemaphore$GT$$GT$$GT$17h4cc3c18c1de1178fE"(i64** %_1) unnamed_addr #0 {
start:
  %0 = bitcast i64** %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::sync::Arc<probe::_ProbeSemaphore>>
  call void @"_ZN4core3ptr67drop_in_place$LT$alloc..sync..Arc$LT$probe.._ProbeSemaphore$GT$$GT$17h7c7adcd3b2b980bdE"(i64** %_1)
  br label %bb1
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr98drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$$GT$17hd5d867184074250cE"({ i64*, i8 }* %_1) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h8a0966216e5866c0E"({ i64*, i8 }* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::const_ptr::<impl *const T>::offset_from
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$11offset_from17h56ac58c52849cb49E"({ [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }* %origin) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %_5 = alloca i8, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %_6 = icmp ult i64 0, 16
  br i1 %_6, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_5, align 1
  br label %bb4

bb3:                                              ; preds = %bb1
  %_8 = icmp ule i64 16, 9223372036854775807
  %1 = zext i1 %_8 to i8
  store i8 %1, i8* %_5, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %2 = load i8, i8* %_5, align 1, !range !4
  %3 = trunc i8 %2 to i1
  %_4 = xor i1 %3, true
  br i1 %_4, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  %4 = ptrtoint { [0 x i8]*, i64 }* %self to i64
  %5 = ptrtoint { [0 x i8]*, i64 }* %origin to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 16
  store i64 %7, i64* %0, align 8
  %8 = load i64, i64* %0, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [73 x i8] }>* @alloc520 to [0 x i8]*), i64 73, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc522 to %"core::panic::location::Location"*)) #20
  unreachable

bb7:                                              ; preds = %bb6
  ret i64 %8
}

; core::ptr::const_ptr::<impl *const T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h8d5fca67e82d32bdE"(i8* %self, i8* %other) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h19aa413bfd28d4bcE"(%"alloc::vec::Vec<_ProbeNode>"* %self) unnamed_addr #1 {
start:
  %0 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define <2 x i64>* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h704235c7bda62736E"(i8* %self) unnamed_addr #1 {
start:
  %0 = bitcast i8* %self to <2 x i64>*
  ret <2 x i64>* %0
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hc39600cfbec4ebadE"(i8* %self) unnamed_addr #1 {
start:
  %0 = bitcast i8* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hc6653f5fdadc5867E"(%_ProbeNode* %self) unnamed_addr #1 {
start:
  %0 = bitcast %_ProbeNode* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h4f38c0f62e494063E"(i8* %self) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h8d5fca67e82d32bdE"(i8* %self, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h55919b542ca613b1E"(%_ProbeNode* %self) unnamed_addr #1 {
start:
  %_2 = bitcast %_ProbeNode* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h8d5fca67e82d32bdE"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h8e82d9e889c225b0E"(%"alloc::vec::Vec<_ProbeNode>"* %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h8d5fca67e82d32bdE"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h09b58e9b0c38ed9dE"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::ptr::metadata::metadata
  %0 = call i64 @_ZN4core3ptr8metadata8metadata17ha1b5c811d7a2cfa2E([0 x i8]* %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h33c8fef928034592E"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::str::validations::unwrap_or_0
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core3str11validations11unwrap_or_017hf62d1cc539940fedE(i8* align 1 dereferenceable_or_null(1) %0) unnamed_addr #1 {
start:
  %1 = alloca i8, align 1
  %opt = alloca i8*, align 8
  store i8* %0, i8** %opt, align 8
  %2 = bitcast i8** %opt to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %start
  %5 = load i8*, i8** %opt, align 8, !nonnull !3
  %byte = load i8, i8* %5, align 1
  store i8 %byte, i8* %1, align 1
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i8, i8* %1, align 1
  ret i8 %6
}

; core::str::validations::next_code_point
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @_ZN4core3str11validations15next_code_point17hb8a28c746cca027cE({ i8*, i8* }* align 8 dereferenceable(16) %bytes) unnamed_addr #1 {
start:
  %ch = alloca i32, align 4
  %_4 = alloca i8*, align 8
  %0 = alloca { i32, i32 }, align 4
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_5 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7811a27fda48a1aaE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %1 = call align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h482fcc0318b0b11bE"(i8* align 1 dereferenceable_or_null(1) %_5)
  store i8* %1, i8** %_4, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast i8** %_4 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_7 = select i1 %4, i64 1, i64 0
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %val = load i8*, i8** %_4, align 8, !nonnull !3
  %x = load i8, i8* %val, align 1
  %_11 = icmp ult i8 %x, -128
  br i1 %_11, label %bb7, label %bb8

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %5 = call { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h49180e935a82419aE"()
  store { i32, i32 } %5, { i32, i32 }* %0, align 4
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb23

bb23:                                             ; preds = %bb7, %bb6
  br label %bb24

bb8:                                              ; preds = %bb3
; call core::str::validations::utf8_first_byte
  %init = call i32 @_ZN4core3str11validations15utf8_first_byte17h0c3caaad683f2c5dE(i8 %x, i32 2)
  br label %bb9

bb7:                                              ; preds = %bb3
  %_13 = zext i8 %x to i32
  %6 = bitcast { i32, i32 }* %0 to %"core::option::Option<u32>::Some"*
  %7 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %6, i32 0, i32 1
  store i32 %_13, i32* %7, align 4
  %8 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %8, align 4
  br label %bb23

bb24:                                             ; preds = %bb22, %bb23
  %9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4, !range !61
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = insertvalue { i32, i32 } undef, i32 %10, 0
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1
  ret { i32, i32 } %14

bb9:                                              ; preds = %bb8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_18 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7811a27fda48a1aaE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::str::validations::unwrap_or_0
  %y = call i8 @_ZN4core3str11validations11unwrap_or_017hf62d1cc539940fedE(i8* align 1 dereferenceable_or_null(1) %_18)
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::str::validations::utf8_acc_cont_byte
  %15 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h04f0406567e1375eE(i32 %init, i8 %y)
  store i32 %15, i32* %ch, align 4
  br label %bb12

bb12:                                             ; preds = %bb11
  %_23 = icmp uge i8 %x, -32
  br i1 %_23, label %bb13, label %bb22

bb22:                                             ; preds = %bb21, %bb12
  %_47 = load i32, i32* %ch, align 4
  %16 = bitcast { i32, i32 }* %0 to %"core::option::Option<u32>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %16, i32 0, i32 1
  store i32 %_47, i32* %17, align 4
  %18 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %18, align 4
  br label %bb24

bb13:                                             ; preds = %bb12
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_26 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7811a27fda48a1aaE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::str::validations::unwrap_or_0
  %z = call i8 @_ZN4core3str11validations11unwrap_or_017hf62d1cc539940fedE(i8* align 1 dereferenceable_or_null(1) %_26)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_30 = and i8 %y, 63
  %_29 = zext i8 %_30 to i32
; call core::str::validations::utf8_acc_cont_byte
  %y_z = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h04f0406567e1375eE(i32 %_29, i8 %z)
  br label %bb16

bb16:                                             ; preds = %bb15
  %_33 = shl i32 %init, 12
  %19 = or i32 %_33, %y_z
  store i32 %19, i32* %ch, align 4
  %_36 = icmp uge i8 %x, -16
  br i1 %_36, label %bb17, label %bb21

bb21:                                             ; preds = %bb20, %bb16
  br label %bb22

bb17:                                             ; preds = %bb16
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_39 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7811a27fda48a1aaE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::str::validations::unwrap_or_0
  %w = call i8 @_ZN4core3str11validations11unwrap_or_017hf62d1cc539940fedE(i8* align 1 dereferenceable_or_null(1) %_39)
  br label %bb19

bb19:                                             ; preds = %bb18
  %_42 = and i32 %init, 7
  %_41 = shl i32 %_42, 18
; call core::str::validations::utf8_acc_cont_byte
  %_44 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h04f0406567e1375eE(i32 %y_z, i8 %w)
  br label %bb20

bb20:                                             ; preds = %bb19
  %20 = or i32 %_41, %_44
  store i32 %20, i32* %ch, align 4
  br label %bb21
}

; core::str::validations::utf8_first_byte
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3str11validations15utf8_first_byte17h0c3caaad683f2c5dE(i8 %byte, i32 %width) unnamed_addr #1 {
start:
  %0 = trunc i32 %width to i8
  %1 = and i8 %0, 7
  %_5 = lshr i8 127, %1
  %_3 = and i8 %byte, %_5
  %2 = zext i8 %_3 to i32
  ret i32 %2
}

; core::str::validations::utf8_acc_cont_byte
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h04f0406567e1375eE(i32 %ch, i8 %byte) unnamed_addr #1 {
start:
  %_3 = shl i32 %ch, 6
  %_6 = and i8 %byte, 63
  %_5 = zext i8 %_6 to i32
  %0 = or i32 %_3, %_5
  ret i32 %0
}

; core::str::<impl str>::char_indices
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hf8d8cd40d191094dE"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::str::<impl str>::chars
  %1 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h01fe605a92ad3e9eE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %_2.0 = extractvalue { i8*, i8* } %1, 0
  %_2.1 = extractvalue { i8*, i8* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::str::iter::CharIndices"* %0 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %0, i32 0, i32 1
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 0
  store i8* %_2.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1
  store i8* %_2.1, i8** %5, align 8
  ret void
}

; core::str::<impl str>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17hee8e9aee6fb2c84dE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %i.0, i64 %i.1) unnamed_addr #1 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h0ec4a993e7332a17E"(i64 %i.0, i64 %i.1, [0 x i8]* %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::str::<impl str>::split_whitespace
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$16split_whitespace17h2df7a096f59df582E"(%"core::str::iter::SplitWhitespace"* noalias nocapture sret(%"core::str::iter::SplitWhitespace") dereferenceable(64) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %_3 = alloca %"core::str::iter::Split<core::str::IsWhitespace>", align 8
  %_2 = alloca %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>", align 8
; call core::str::<impl str>::split
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h7957ea01c991c461E"(%"core::str::iter::Split<core::str::IsWhitespace>"* noalias nocapture sret(%"core::str::iter::Split<core::str::IsWhitespace>") dereferenceable(64) %_3, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::filter
  call void @_ZN4core4iter6traits8iterator8Iterator6filter17h9d9f813a4b87d060E(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* noalias nocapture sret(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>") dereferenceable(64) %_2, %"core::str::iter::Split<core::str::IsWhitespace>"* noalias nocapture dereferenceable(64) %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::str::iter::SplitWhitespace"* %0 to %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"*
  %2 = bitcast %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* %1 to i8*
  %3 = bitcast %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 64, i1 false)
  ret void
}

; core::str::<impl str>::len
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17haf760ebd14424848E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !3
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %_3.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %_3.1
}

; core::str::<impl str>::chars
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h01fe605a92ad3e9eE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %10 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h94f6c1fc4be486b2E"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  %_2.0 = extractvalue { i8*, i8* } %10, 0
  %_2.1 = extractvalue { i8*, i8* } %10, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  store i8* %_2.0, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  store i8* %_2.1, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = insertvalue { i8*, i8* } undef, i8* %14, 0
  %18 = insertvalue { i8*, i8* } %17, i8* %16, 1
  ret { i8*, i8* } %18
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17hfbd10a7820b4037aE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca %"core::result::Result<i32, core::num::error::ParseIntError>", align 4
; call core::num::<impl core::str::traits::FromStr for i32>::from_str
  %2 = call i64 @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$i32$GT$8from_str17h501abcb150b3d434E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  store i64 %2, i64* %0, align 8
  %3 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %1 to i8*
  %4 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %1 to i64*
  %6 = load i64, i64* %5, align 4
  ret i64 %6
}

; core::str::<impl str>::split
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h7957ea01c991c461E"(%"core::str::iter::Split<core::str::IsWhitespace>"* noalias nocapture sret(%"core::str::iter::Split<core::str::IsWhitespace>") dereferenceable(64) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_6 = alloca %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>", align 8
  %_3 = alloca %"core::str::iter::SplitInternal<core::str::IsWhitespace>", align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
; invoke core::str::<impl str>::len
  %_4 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17haf760ebd14424848E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; invoke <F as core::str::pattern::Pattern>::into_searcher
  invoke void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hd3a926e6550934b8E"(%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* noalias nocapture sret(%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>") dereferenceable(40) %_6, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_9, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  %9 = bitcast %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %_3 to i64*
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %_3, i32 0, i32 1
  store i64 %_4, i64* %10, align 8
  %11 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %_3, i32 0, i32 2
  %12 = bitcast %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* %11 to i8*
  %13 = bitcast %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %_3, i32 0, i32 3
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %_3, i32 0, i32 4
  store i8 0, i8* %15, align 1
  %16 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %0 to %"core::str::iter::SplitInternal<core::str::IsWhitespace>"*
  %17 = bitcast %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %16 to i8*
  %18 = bitcast %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 64, i1 false)
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %19 = bitcast { i8*, i32 }* %1 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::str::<impl str>::is_empty
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h1547e666babf134bE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::str::<impl str>::len
  %_2 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17haf760ebd14424848E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i64 %_2, 0
  ret i1 %0
}

; core::str::iter::SplitInternal<P>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h282cbe746b36a351E"(%"core::str::iter::SplitInternal<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self) unnamed_addr #1 {
start:
  %_12 = alloca { i64, i64 }, align 8
  %_5 = alloca %"core::option::Option<(usize, usize)>", align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 4
  %2 = load i8, i8* %1, align 1, !range !4
  %_2 = trunc i8 %2 to i1
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_4 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 2
; call <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::haystack
  %3 = call { [0 x i8]*, i64 } @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h3d05a3726b62bdcaE"(%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %_4)
  %haystack.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %haystack.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb1:                                              ; preds = %start
  %4 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %4, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb1
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10

bb3:                                              ; preds = %bb2
  %_6 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 2
; call <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_match
  call void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h56d9da20a7d1a48cE"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %_5, %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %_6)
  br label %bb4

bb4:                                              ; preds = %bb3
  %11 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to i64*
  %_7 = load i64, i64* %11, align 8, !range !2
  switch i64 %_7, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
; call core::str::iter::SplitInternal<P>::get_end
  %12 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17ha109d0349a2a066aE"(%"core::str::iter::SplitInternal<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self)
  store { i8*, i64 } %12, { i8*, i64 }* %0, align 8
  br label %bb9

bb7:                                              ; preds = %bb4
  %13 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %13, i32 0, i32 1
  %15 = bitcast { i64, i64 }* %14 to i64*
  %a = load i64, i64* %15, align 8
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %16, i32 0, i32 1
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  %b = load i64, i64* %18, align 8
  %19 = bitcast %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self to i64*
  %_13 = load i64, i64* %19, align 8
  %20 = bitcast { i64, i64 }* %_12 to i64*
  store i64 %_13, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1
  store i64 %a, i64* %21, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
; call core::str::<impl str>::get_unchecked
  %26 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17hee8e9aee6fb2c84dE"([0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, i64 %23, i64 %25)
  %elt.0 = extractvalue { [0 x i8]*, i64 } %26, 0
  %elt.1 = extractvalue { [0 x i8]*, i64 } %26, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %27 = bitcast %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self to i64*
  store i64 %b, i64* %27, align 8
  %28 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0
  store [0 x i8]* %elt.0, [0 x i8]** %29, align 8
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1
  store i64 %elt.1, i64* %30, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  br label %bb11

bb9:                                              ; preds = %bb5
  br label %bb10
}

; core::str::iter::SplitInternal<P>::get_end
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17ha109d0349a2a066aE"(%"core::str::iter::SplitInternal<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self) unnamed_addr #1 {
start:
  %_15 = alloca { i64, i64 }, align 8
  %_5 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 4
  %2 = load i8, i8* %1, align 1, !range !4
  %_4 = trunc i8 %2 to i1
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !4
  %_6 = trunc i8 %4 to i1
  br i1 %_6, label %bb4, label %bb5

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %5, align 8
  %6 = bitcast %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self to i64*
  %_10 = load i64, i64* %6, align 8
  %_8 = sub i64 %_9, %_10
  %_7 = icmp ugt i64 %_8, 0
  %7 = zext i1 %_7 to i8
  store i8 %7, i8* %_5, align 1
  br label %bb6

bb4:                                              ; preds = %bb2
  store i8 1, i8* %_5, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %8 = load i8, i8* %_5, align 1, !range !4
  %9 = trunc i8 %8 to i1
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb6
  %11 = load i8, i8* %_2, align 1, !range !4
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb7, label %bb10

bb10:                                             ; preds = %bb3
  %13 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %13, align 8
  br label %bb11

bb7:                                              ; preds = %bb3
  %14 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 4
  store i8 1, i8* %14, align 1
  %_14 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 2
; call <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::haystack
  %15 = call { [0 x i8]*, i64 } @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h3d05a3726b62bdcaE"(%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %_14)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %15, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %15, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %16 = bitcast %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self to i64*
  %_16 = load i64, i64* %16, align 8
  %17 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 1
  %_17 = load i64, i64* %17, align 8
  %18 = bitcast { i64, i64 }* %_15 to i64*
  store i64 %_16, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1
  store i64 %_17, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
; call core::str::<impl str>::get_unchecked
  %24 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17hee8e9aee6fb2c84dE"([0 x i8]* nonnull align 1 %_13.0, i64 %_13.1, i64 %21, i64 %23)
  %string.0 = extractvalue { [0 x i8]*, i64 } %24, 0
  %string.1 = extractvalue { [0 x i8]*, i64 } %24, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %25 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %25, i32 0, i32 0
  store [0 x i8]* %string.0, [0 x i8]** %26, align 8
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %25, i32 0, i32 1
  store i64 %string.1, i64* %27, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = insertvalue { i8*, i64 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i64 } %32, i64 %31, 1
  ret { i8*, i64 } %33
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h0ec4a993e7332a17E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h33c8fef928034592E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_6, i64 %self.0
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %len = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hf5bb20055aa66712E(i8* %2, i64 %len)
  %_12.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_12.0, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_12.1, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::pattern::Searcher::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern8Searcher10next_match17h674b14c28feaf3fbE(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_7 = alloca { i64, i64 }, align 8
  %_2 = alloca %"core::str::pattern::SearchStep", align 8
  br label %bb1

bb1:                                              ; preds = %bb5, %start
; call <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
  call void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17hf81117f4b1aafc33E"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %_2, %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::str::pattern::SearchStep"* %_2 to i64*
  %_4 = load i64, i64* %1, align 8, !range !62
  switch i64 %_4, label %bb5 [
    i64 0, label %bb3
    i64 2, label %bb4
  ]

bb5:                                              ; preds = %bb2
  br label %bb1

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Match"*
  %3 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %2, i32 0, i32 1
  %a = load i64, i64* %3, align 8
  %4 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Match"*
  %5 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %4, i32 0, i32 2
  %b = load i64, i64* %5, align 8
  %6 = bitcast { i64, i64 }* %_7 to i64*
  store i64 %a, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  store i64 %b, i64* %7, align 8
  %8 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*
  %9 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %11, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %13, i64* %15, align 8
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 1, i64* %16, align 8
  br label %bb6

bb4:                                              ; preds = %bb2
  %17 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %17, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb4
  ret void
}

; core::str::converts::from_utf8_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17hd2bbf80249c84051E([0 x i8]* nonnull align 1 %v.0, i64 %v.1) unnamed_addr #1 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %v.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %v.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !3
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  ret { [0 x i8]*, i64 } %8
}

; core::str::converts::from_utf8_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17h0237d4f6dc55f6fdE([0 x i8]* nonnull align 1 %v.0, i64 %v.1) unnamed_addr #1 {
start:
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %v.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %v.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::cell::Cell<T>::get
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4cell13Cell$LT$T$GT$3get17h4ce5ac50e5413e3bE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %1 = load i64, i64* %0, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = insertvalue { i64, i64 } undef, i64 %1, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::cell::Cell<T>::get
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN4core4cell13Cell$LT$T$GT$3get17h8303ff7f9598c9bdE"(i8* align 1 dereferenceable(1) %self) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %0 = load i8, i8* %self, align 1, !range !24
  ret i8 %0
}

; core::cell::Cell<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4cell13Cell$LT$T$GT$3new17h70ae99796dfa92e2E"(i64 %value.0, i64 %value.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %value.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %value.1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  %_2.0 = extractvalue { i64, i64 } %9, 0
  %_2.1 = extractvalue { i64, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  store i64 %_2.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 %_2.1, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { i64, i64 } undef, i64 %13, 0
  %17 = insertvalue { i64, i64 } %16, i64 %15, 1
  ret { i64, i64 } %17
}

; core::cell::Cell<T>::set
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4cell13Cell$LT$T$GT$3set17h6806daddfacb5892E"(i8* align 1 dereferenceable(1) %self, i8 %val) unnamed_addr #1 {
start:
; call core::cell::Cell<T>::replace
  %old = call i8 @"_ZN4core4cell13Cell$LT$T$GT$7replace17he8b43c670f170427E"(i8* align 1 dereferenceable(1) %self, i8 %val), !range !24
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::drop
  call void @_ZN4core3mem4drop17h96484a4ace896235E(i8 %old)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::cell::Cell<T>::set
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4cell13Cell$LT$T$GT$3set17h76c672d251d71af1E"({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %val.0, i64 %val.1) unnamed_addr #1 {
start:
; call core::cell::Cell<T>::replace
  %0 = call { i64, i64 } @"_ZN4core4cell13Cell$LT$T$GT$7replace17h08a760b6b25112c6E"({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %val.0, i64 %val.1)
  %old.0 = extractvalue { i64, i64 } %0, 0
  %old.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::drop
  call void @_ZN4core3mem4drop17hd072c28420660d65E(i64 %old.0, i64 %old.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::cell::Cell<T>::replace
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN4core4cell13Cell$LT$T$GT$7replace17h08a760b6b25112c6E"({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %val.0, i64 %val.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; invoke core::mem::replace
  %1 = invoke { i64, i64 } @_ZN4core3mem7replace17h7b33b6f5ccde236eE({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %val.0, i64 %val.1)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_9, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  %9 = extractvalue { i64, i64 } %1, 0
  %10 = extractvalue { i64, i64 } %1, 1
  %11 = insertvalue { i64, i64 } undef, i64 %9, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12

bb3:                                              ; preds = %bb4, %bb5
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::cell::Cell<T>::replace
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN4core4cell13Cell$LT$T$GT$7replace17he8b43c670f170427E"(i8* align 1 dereferenceable(1) %self, i8 %val) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; invoke core::mem::replace
  %1 = invoke i8 @_ZN4core3mem7replace17h96fbff8a1bd3755dE(i8* align 1 dereferenceable(1) %self, i8 %val)
          to label %bb2 unwind label %cleanup, !range !24

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_9, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  ret i8 %1

bb3:                                              ; preds = %bb4, %bb5
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::char::convert::from_u32_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4char7convert18from_u32_unchecked17h73f38b153fb1649bE(i32 %i) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  store i32 %i, i32* %0, align 4
  %1 = load i32, i32* %0, align 4, !range !63
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %1
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17hb4594810e8d39c6dE(i32 %0, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1) unnamed_addr #1 {
start:
  %_97 = alloca i64, align 8
  %_80 = alloca i64, align 8
  %_76 = alloca { i64*, i32*, i64* }, align 8
  %_75 = alloca [3 x { i8*, i64* }], align 8
  %_68 = alloca %"core::fmt::Arguments", align 8
  %_6 = alloca { i64, { [0 x i8]*, i64 } }, align 8
  %len = alloca i64, align 8
  %code = alloca i32, align 4
  store i32 %0, i32* %code, align 4
  %_5 = load i32, i32* %code, align 4
; call core::char::methods::len_utf8
  %1 = call i64 @_ZN4core4char7methods8len_utf817h499f73383ea89449E(i32 %_5)
  store i64 %1, i64* %len, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %len, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %2 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h618345473e502b08E"([0 x i8]* nonnull align 1 %dst.0, i64 %dst.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc524 to %"core::panic::location::Location"*))
  %_9.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_9.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*
  store i64 %_7, i64* %3, align 8
  %4 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  store [0 x i8]* %_9.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  store i64 %_9.1, i64* %6, align 8
  %7 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*
  %8 = load i64, i64* %7, align 8
  switch i64 %8, label %bb4 [
    i64 1, label %bb3
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
  ]

bb4:                                              ; preds = %bb3, %bb5, %bb6, %bb7, %bb2
  store i64 %dst.1, i64* %_80, align 8
  %9 = bitcast { i64*, i32*, i64* }* %_76 to i64**
  store i64* %len, i64** %9, align 8
  %10 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_76, i32 0, i32 1
  store i32* %code, i32** %10, align 8
  %11 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_76, i32 0, i32 2
  store i64* %_80, i64** %11, align 8
  %12 = bitcast { i64*, i32*, i64* }* %_76 to i64**
  %arg0 = load i64*, i64** %12, align 8, !nonnull !3
  %13 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_76, i32 0, i32 1
  %arg1 = load i32*, i32** %13, align 8, !nonnull !3
  %14 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_76, i32 0, i32 2
  %arg2 = load i64*, i64** %14, align 8, !nonnull !3
; call core::fmt::ArgumentV1::new
  %15 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h233601096a17cf05E(i64* align 8 dereferenceable(8) %arg0, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hea1df36702709463E")
  %_85.0 = extractvalue { i8*, i64* } %15, 0
  %_85.1 = extractvalue { i8*, i64* } %15, 1
  br label %bb12

bb3:                                              ; preds = %bb2
  %16 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0
  %18 = load [0 x i8]*, [0 x i8]** %17, align 8, !nonnull !3
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1
  %_12 = load i64, i64* %19, align 8
  %_14 = icmp uge i64 %_12, 1
  br i1 %_14, label %bb8, label %bb4

bb5:                                              ; preds = %bb2
  %20 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0
  %22 = load [0 x i8]*, [0 x i8]** %21, align 8, !nonnull !3
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1
  %_15 = load i64, i64* %23, align 8
  %_17 = icmp uge i64 %_15, 2
  br i1 %_17, label %bb9, label %bb4

bb6:                                              ; preds = %bb2
  %24 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %24, i32 0, i32 0
  %26 = load [0 x i8]*, [0 x i8]** %25, align 8, !nonnull !3
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %24, i32 0, i32 1
  %_18 = load i64, i64* %27, align 8
  %_20 = icmp uge i64 %_18, 3
  br i1 %_20, label %bb10, label %bb4

bb7:                                              ; preds = %bb2
  %28 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0
  %30 = load [0 x i8]*, [0 x i8]** %29, align 8, !nonnull !3
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1
  %_21 = load i64, i64* %31, align 8
  %_23 = icmp uge i64 %_21, 4
  br i1 %_23, label %bb11, label %bb4

bb11:                                             ; preds = %bb7
  %32 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0
  %34 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !3
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %a = getelementptr inbounds [0 x i8], [0 x i8]* %34, i64 0, i64 0
  %37 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 0
  %39 = load [0 x i8]*, [0 x i8]** %38, align 8, !nonnull !3
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %b = getelementptr inbounds [0 x i8], [0 x i8]* %39, i64 0, i64 1
  %42 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 0
  %44 = load [0 x i8]*, [0 x i8]** %43, align 8, !nonnull !3
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %c = getelementptr inbounds [0 x i8], [0 x i8]* %44, i64 0, i64 2
  %47 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 0
  %49 = load [0 x i8]*, [0 x i8]** %48, align 8, !nonnull !3
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %d = getelementptr inbounds [0 x i8], [0 x i8]* %49, i64 0, i64 3
  %_56 = load i32, i32* %code, align 4
  %_55 = lshr i32 %_56, 18
  %_54 = and i32 %_55, 7
  %_53 = trunc i32 %_54 to i8
  %52 = or i8 %_53, -16
  store i8 %52, i8* %a, align 1
  %_60 = load i32, i32* %code, align 4
  %_59 = lshr i32 %_60, 12
  %_58 = and i32 %_59, 63
  %_57 = trunc i32 %_58 to i8
  %53 = or i8 %_57, -128
  store i8 %53, i8* %b, align 1
  %_64 = load i32, i32* %code, align 4
  %_63 = lshr i32 %_64, 6
  %_62 = and i32 %_63, 63
  %_61 = trunc i32 %_62 to i8
  %54 = or i8 %_61, -128
  store i8 %54, i8* %c, align 1
  %_67 = load i32, i32* %code, align 4
  %_66 = and i32 %_67, 63
  %_65 = trunc i32 %_66 to i8
  %55 = or i8 %_65, -128
  store i8 %55, i8* %d, align 1
  br label %bb16

bb16:                                             ; preds = %bb8, %bb9, %bb10, %bb11
  %_98 = load i64, i64* %len, align 8
  store i64 %_98, i64* %_97, align 8
  %56 = load i64, i64* %_97, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %57 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h3ed649c41d686ffaE"([0 x i8]* nonnull align 1 %dst.0, i64 %dst.1, i64 %56, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc526 to %"core::panic::location::Location"*))
  %_95.0 = extractvalue { [0 x i8]*, i64 } %57, 0
  %_95.1 = extractvalue { [0 x i8]*, i64 } %57, 1
  br label %bb17

bb10:                                             ; preds = %bb6
  %58 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 0
  %60 = load [0 x i8]*, [0 x i8]** %59, align 8, !nonnull !3
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %a1 = getelementptr inbounds [0 x i8], [0 x i8]* %60, i64 0, i64 0
  %63 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %63, i32 0, i32 0
  %65 = load [0 x i8]*, [0 x i8]** %64, align 8, !nonnull !3
  %66 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %63, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %b2 = getelementptr inbounds [0 x i8], [0 x i8]* %65, i64 0, i64 1
  %68 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 0
  %70 = load [0 x i8]*, [0 x i8]** %69, align 8, !nonnull !3
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %c3 = getelementptr inbounds [0 x i8], [0 x i8]* %70, i64 0, i64 2
  %_41 = load i32, i32* %code, align 4
  %_40 = lshr i32 %_41, 12
  %_39 = and i32 %_40, 15
  %_38 = trunc i32 %_39 to i8
  %73 = or i8 %_38, -32
  store i8 %73, i8* %a1, align 1
  %_45 = load i32, i32* %code, align 4
  %_44 = lshr i32 %_45, 6
  %_43 = and i32 %_44, 63
  %_42 = trunc i32 %_43 to i8
  %74 = or i8 %_42, -128
  store i8 %74, i8* %b2, align 1
  %_48 = load i32, i32* %code, align 4
  %_47 = and i32 %_48, 63
  %_46 = trunc i32 %_47 to i8
  %75 = or i8 %_46, -128
  store i8 %75, i8* %c3, align 1
  br label %bb16

bb9:                                              ; preds = %bb5
  %76 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %77 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %76, i32 0, i32 0
  %78 = load [0 x i8]*, [0 x i8]** %77, align 8, !nonnull !3
  %79 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %76, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %a4 = getelementptr inbounds [0 x i8], [0 x i8]* %78, i64 0, i64 0
  %81 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %82 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %81, i32 0, i32 0
  %83 = load [0 x i8]*, [0 x i8]** %82, align 8, !nonnull !3
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %81, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %b5 = getelementptr inbounds [0 x i8], [0 x i8]* %83, i64 0, i64 1
  %_31 = load i32, i32* %code, align 4
  %_30 = lshr i32 %_31, 6
  %_29 = and i32 %_30, 31
  %_28 = trunc i32 %_29 to i8
  %86 = or i8 %_28, -64
  store i8 %86, i8* %a4, align 1
  %_34 = load i32, i32* %code, align 4
  %_33 = and i32 %_34, 63
  %_32 = trunc i32 %_33 to i8
  %87 = or i8 %_32, -128
  store i8 %87, i8* %b5, align 1
  br label %bb16

bb8:                                              ; preds = %bb3
  %88 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 0
  %90 = load [0 x i8]*, [0 x i8]** %89, align 8, !nonnull !3
  %91 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %a6 = getelementptr inbounds [0 x i8], [0 x i8]* %90, i64 0, i64 0
  %_25 = load i32, i32* %code, align 4
  %93 = trunc i32 %_25 to i8
  store i8 %93, i8* %a6, align 1
  br label %bb16

bb17:                                             ; preds = %bb16
  %94 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_95.0, 0
  %95 = insertvalue { [0 x i8]*, i64 } %94, i64 %_95.1, 1
  ret { [0 x i8]*, i64 } %95

bb12:                                             ; preds = %bb4
; call core::fmt::ArgumentV1::new
  %96 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h77f14a8e347ace4bE(i32* align 4 dereferenceable(4) %arg1, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h3993b2255ce6d89bE")
  %_88.0 = extractvalue { i8*, i64* } %96, 0
  %_88.1 = extractvalue { i8*, i64* } %96, 1
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::fmt::ArgumentV1::new
  %97 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h233601096a17cf05E(i64* align 8 dereferenceable(8) %arg2, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hea1df36702709463E")
  %_91.0 = extractvalue { i8*, i64* } %97, 0
  %_91.1 = extractvalue { i8*, i64* } %97, 1
  br label %bb14

bb14:                                             ; preds = %bb13
  %98 = bitcast [3 x { i8*, i64* }]* %_75 to { i8*, i64* }*
  %99 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %98, i32 0, i32 0
  store i8* %_85.0, i8** %99, align 8
  %100 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %98, i32 0, i32 1
  store i64* %_85.1, i64** %100, align 8
  %101 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_75, i32 0, i32 1
  %102 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %101, i32 0, i32 0
  store i8* %_88.0, i8** %102, align 8
  %103 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %101, i32 0, i32 1
  store i64* %_88.1, i64** %103, align 8
  %104 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_75, i32 0, i32 2
  %105 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %104, i32 0, i32 0
  store i8* %_91.0, i8** %105, align 8
  %106 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %104, i32 0, i32 1
  store i64* %_91.1, i64** %106, align 8
  %_72.0 = bitcast [3 x { i8*, i64* }]* %_75 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h759598569139005dE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_68, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc95 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* nonnull align 8 %_72.0, i64 3)
  br label %bb15

bb15:                                             ; preds = %bb14
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbfd18ed1d8ed03e1E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_68, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc528 to %"core::panic::location::Location"*)) #20
  unreachable
}

; core::char::methods::<impl char>::encode_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h1af64856c950de94E"(i32 %self, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1) unnamed_addr #1 {
start:
  %0 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %0)
; call core::char::methods::encode_utf8_raw
  %1 = call { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17hb4594810e8d39c6dE(i32 %self, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1)
  %_7.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked_mut
  %2 = call { [0 x i8]*, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17h0237d4f6dc55f6fdE([0 x i8]* nonnull align 1 %_7.0, i64 %_7.1)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_5.0, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %_5.1, 1
  ret { [0 x i8]*, i64 } %4
}

; core::char::methods::<impl char>::is_whitespace
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17h8fed096006e677dbE"(i32 %self) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i32 %self, 32
  br i1 %1, label %bb4, label %bb1

bb4:                                              ; preds = %bb2, %start
  store i8 1, i8* %0, align 1
  br label %bb9

bb1:                                              ; preds = %start
  %_2 = icmp ule i32 9, %self
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %_5 = icmp ugt i32 %self, 127
  br i1 %_5, label %bb6, label %bb5

bb2:                                              ; preds = %bb1
  %_3 = icmp ule i32 %self, 13
  br i1 %_3, label %bb4, label %bb3

bb5:                                              ; preds = %bb3
  store i8 0, i8* %0, align 1
  br label %bb7

bb6:                                              ; preds = %bb3
; call core::unicode::unicode_data::white_space::lookup
  %_7 = call zeroext i1 @_ZN4core7unicode12unicode_data11white_space6lookup17hd6f8b9b07e22cd88E(i32 %self)
  br label %bb8

bb8:                                              ; preds = %bb6
  %2 = zext i1 %_7 to i8
  store i8 %2, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb5, %bb8
  br label %bb9

bb9:                                              ; preds = %bb4, %bb7
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4char7methods8len_utf817h499f73383ea89449E(i32 %code) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %_2 = icmp ult i32 %code, 128
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_4 = icmp ult i32 %code, 2048
  br i1 %_4, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i64 1, i64* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb1
  %1 = load i64, i64* %0, align 8
  ret i64 %1

bb4:                                              ; preds = %bb2
  %_6 = icmp ult i32 %code, 65536
  br i1 %_6, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  store i64 2, i64* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb3
  br label %bb9

bb6:                                              ; preds = %bb4
  store i64 4, i64* %0, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
  store i64 3, i64* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  br label %bb8
}

; core::hash::sip::SipHasher13::new_with_keys
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core4hash3sip11SipHasher1313new_with_keys17hd359563a6340d130E(%"core::hash::sip::SipHasher13"* noalias nocapture sret(%"core::hash::sip::SipHasher13") dereferenceable(72) %0, i64 %key0, i64 %key1) unnamed_addr #1 {
start:
  %_3 = alloca %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", align 8
; call core::hash::sip::Hasher<S>::new_with_keys
  call void @"_ZN4core4hash3sip15Hasher$LT$S$GT$13new_with_keys17hc5aa83563ffd5434E"(%"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* noalias nocapture sret(%"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>") dereferenceable(72) %_3, i64 %key0, i64 %key1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"core::hash::sip::SipHasher13"* %0 to %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"*
  %2 = bitcast %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %1 to i8*
  %3 = bitcast %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 72, i1 false)
  ret void
}

; core::hash::sip::Hasher<S>::new_with_keys
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4hash3sip15Hasher$LT$S$GT$13new_with_keys17hc5aa83563ffd5434E"(%"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* noalias nocapture sret(%"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>") dereferenceable(72) %state, i64 %key0, i64 %key1) unnamed_addr #1 {
start:
  %_5 = alloca %"core::hash::sip::State", align 8
  %0 = bitcast %"core::hash::sip::State"* %_5 to i64*
  store i64 0, i64* %0, align 8
  %1 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %_5, i32 0, i32 1
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %_5, i32 0, i32 2
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %_5, i32 0, i32 3
  store i64 0, i64* %3, align 8
  %4 = bitcast %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %state to i64*
  store i64 %key0, i64* %4, align 8
  %5 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %state, i32 0, i32 2
  store i64 %key1, i64* %5, align 8
  %6 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %state, i32 0, i32 3
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %state, i32 0, i32 4
  %8 = bitcast %"core::hash::sip::State"* %7 to i8*
  %9 = bitcast %"core::hash::sip::State"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  %10 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %state, i32 0, i32 5
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %state, i32 0, i32 6
  store i64 0, i64* %11, align 8
; call core::hash::sip::Hasher<S>::reset
  call void @"_ZN4core4hash3sip15Hasher$LT$S$GT$5reset17h7fb341d15a6b607dE"(%"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* align 8 dereferenceable(72) %state)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::hash::sip::Hasher<S>::reset
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4hash3sip15Hasher$LT$S$GT$5reset17h7fb341d15a6b607dE"(%"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* align 8 dereferenceable(72) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 3
  store i64 0, i64* %0, align 8
  %1 = bitcast %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self to i64*
  %_2 = load i64, i64* %1, align 8
  %2 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 4
  %3 = bitcast %"core::hash::sip::State"* %2 to i64*
  %4 = xor i64 %_2, 8317987319222330741
  store i64 %4, i64* %3, align 8
  %5 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 2
  %_3 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 4
  %7 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %6, i32 0, i32 2
  %8 = xor i64 %_3, 7237128888997146477
  store i64 %8, i64* %7, align 8
  %9 = bitcast %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self to i64*
  %_4 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 4
  %11 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %10, i32 0, i32 1
  %12 = xor i64 %_4, 7816392313619706465
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 2
  %_5 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 4
  %15 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %14, i32 0, i32 3
  %16 = xor i64 %_5, 8387220255154660723
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 6
  store i64 0, i64* %17, align 8
  ret void
}

; core::hash::sip::u8to64_le
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4hash3sip9u8to64_le17h0630f87be5cb25afE([0 x i8]* nonnull align 1 %buf.0, i64 %buf.1, i64 %start1, i64 %len) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %data2 = alloca i16, align 2
  %data = alloca i32, align 4
  %i = alloca i64, align 8
  %out = alloca i64, align 8
  store i64 0, i64* %i, align 8
  store i64 0, i64* %out, align 8
  %_7 = load i64, i64* %i, align 8
  %_6 = add i64 %_7, 3
  %_5 = icmp ult i64 %_6, %len
  br i1 %_5, label %bb1, label %bb7

bb7:                                              ; preds = %bb6, %start
  %_26 = load i64, i64* %i, align 8
  %_25 = add i64 %_26, 1
  %_24 = icmp ult i64 %_25, %len
  br i1 %_24, label %bb8, label %bb14

bb1:                                              ; preds = %start
  store i32 0, i32* %data, align 4
; call core::slice::<impl [T]>::as_ptr
  %_13 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hac9eb96ca88beecdE"([0 x i8]* nonnull align 1 %buf.0, i64 %buf.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_17 = load i64, i64* %i, align 8
  %_15 = add i64 %start1, %_17
  %2 = getelementptr inbounds i8, i8* %_13, i64 %_15
  store i8* %2, i8** %1, align 8
  %3 = load i8*, i8** %1, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_18 = bitcast i32* %data to i8*
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb984a4318aa516b1E(i8* %3, i8* %_18, i64 4)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_23 = load i32, i32* %data, align 4
  br label %bb6

bb6:                                              ; preds = %bb5
  %4 = zext i32 %_23 to i64
  store i64 %4, i64* %out, align 8
  %5 = load i64, i64* %i, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %i, align 8
  br label %bb7

bb14:                                             ; preds = %bb13, %bb7
  %_48 = load i64, i64* %i, align 8
  %_47 = icmp ult i64 %_48, %len
  br i1 %_47, label %bb15, label %bb17

bb8:                                              ; preds = %bb7
  store i16 0, i16* %data2, align 2
; call core::slice::<impl [T]>::as_ptr
  %_34 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hac9eb96ca88beecdE"([0 x i8]* nonnull align 1 %buf.0, i64 %buf.1)
  br label %bb9

bb9:                                              ; preds = %bb8
  %_38 = load i64, i64* %i, align 8
  %_36 = add i64 %start1, %_38
  %7 = getelementptr inbounds i8, i8* %_34, i64 %_36
  store i8* %7, i8** %0, align 8
  %8 = load i8*, i8** %0, align 8
  br label %bb10

bb10:                                             ; preds = %bb9
  %_39 = bitcast i16* %data2 to i8*
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb984a4318aa516b1E(i8* %8, i8* %_39, i64 2)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_44 = load i16, i16* %data2, align 2
  br label %bb13

bb13:                                             ; preds = %bb12
  %_29 = zext i16 %_44 to i64
  %_46 = load i64, i64* %i, align 8
  %_45 = mul i64 %_46, 8
  %9 = and i64 %_45, 63
  %_28 = shl i64 %_29, %9
  %10 = load i64, i64* %out, align 8
  %11 = or i64 %10, %_28
  store i64 %11, i64* %out, align 8
  %12 = load i64, i64* %i, align 8
  %13 = add i64 %12, 2
  store i64 %13, i64* %i, align 8
  br label %bb14

bb17:                                             ; preds = %bb16, %bb14
  %14 = load i64, i64* %out, align 8
  ret i64 %14

bb15:                                             ; preds = %bb14
  %_57 = load i64, i64* %i, align 8
  %_55 = add i64 %start1, %_57
; call core::slice::<impl [T]>::get_unchecked
  %_53 = call align 1 dereferenceable(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h8da3d1406a92b1a1E"([0 x i8]* nonnull align 1 %buf.0, i64 %buf.1, i64 %_55)
  br label %bb16

bb16:                                             ; preds = %bb15
  %_52 = load i8, i8* %_53, align 1
  %_51 = zext i8 %_52 to i64
  %_59 = load i64, i64* %i, align 8
  %_58 = mul i64 %_59, 8
  %15 = and i64 %_58, 63
  %_50 = shl i64 %_51, %15
  %16 = load i64, i64* %out, align 8
  %17 = or i64 %16, %_50
  store i64 %17, i64* %out, align 8
  %18 = load i64, i64* %i, align 8
  %19 = add i64 %18, 1
  store i64 %19, i64* %i, align 8
  br label %bb17
}

; core::hash::impls::<impl core::hash::Hash for u64>::hash
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4hash5impls50_$LT$impl$u20$core..hash..Hash$u20$for$u20$u64$GT$4hash17ha1b7684cfa0945eeE"(i64* align 8 dereferenceable(8) %self, %"std::collections::hash::map::DefaultHasher"* align 8 dereferenceable(72) %state) unnamed_addr #1 {
start:
  %_4 = load i64, i64* %self, align 8
; call core::hash::Hasher::write_u64
  call void @_ZN4core4hash6Hasher9write_u6417hf019d3b600640eafE(%"std::collections::hash::map::DefaultHasher"* align 8 dereferenceable(72) %state, i64 %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::hash::Hasher::write_u64
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4hash6Hasher9write_u6417hf019d3b600640eafE(%"std::collections::hash::map::DefaultHasher"* align 8 dereferenceable(72) %self, i64 %i) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %_7 = alloca [8 x i8], align 1
; call core::num::<impl u64>::to_ne_bytes
  %1 = call i64 @"_ZN4core3num21_$LT$impl$u20$u64$GT$11to_ne_bytes17h6e465664b5ea699eE"(i64 %i)
  store i64 %1, i64* %0, align 8
  %2 = bitcast [8 x i8]* %_7 to i8*
  %3 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 8 %3, i64 8, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %_4.0 = bitcast [8 x i8]* %_7 to [0 x i8]*
; call <std::collections::hash::map::DefaultHasher as core::hash::Hasher>::write
  call void @"_ZN81_$LT$std..collections..hash..map..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$5write17h65b10371470a39abE"(%"std::collections::hash::map::DefaultHasher"* align 8 dereferenceable(72) %self, [0 x i8]* nonnull align 1 %_4.0, i64 8)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::hint::unreachable_unchecked
; Function Attrs: inlinehint noreturn nonlazybind uwtable
define internal void @_ZN4core4hint21unreachable_unchecked17h12171fe7a3ebae5cE() unnamed_addr #5 {
start:
  unreachable
}

; core::hint::black_box
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4hint9black_box17h4c7df2e865018a98E() unnamed_addr #1 {
start:
  call void asm sideeffect "", "r,~{memory}"({}* undef), !srcloc !64
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::nth
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$3nth17h4f99d1afb93cd51cE"({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %n) unnamed_addr #1 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_nth
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$8spec_nth17h25b487325a45a68aE"({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %n)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h0e85e17e0284a4dfE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h7feb2885a6e4c3b9E"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::exact_size::ExactSizeIterator::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17he18a0dc88ddab848E(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_22 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_8 = alloca { i64, i64 }, align 8
  %_5 = alloca { i64*, i64* }, align 8
  %_3 = alloca { i64, { i64, i64 } }, align 8
  %upper = alloca { i64, i64 }, align 8
; call <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h3517c4953fce235fE"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_3, %"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast { i64, { i64, i64 } }* %_3 to i64*
  %lower = load i64, i64* %0, align 8
  %1 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %_3, i32 0, i32 1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8, !range !2
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %upper, i32 0, i32 0
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %upper, i32 0, i32 1
  store i64 %5, i64* %7, align 8
  %8 = bitcast { i64, i64 }* %_8 to %"core::option::Option<usize>::Some"*
  %9 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %8, i32 0, i32 1
  store i64 %lower, i64* %9, align 8
  %10 = bitcast { i64, i64 }* %_8 to i64*
  store i64 1, i64* %10, align 8
  %11 = bitcast { i64*, i64* }* %_5 to { i64, i64 }**
  store { i64, i64 }* %upper, { i64, i64 }** %11, align 8
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %13 = bitcast i64** %12 to { i64, i64 }**
  store { i64, i64 }* %_8, { i64, i64 }** %13, align 8
  %14 = bitcast { i64*, i64* }* %_5 to { i64, i64 }**
  %left_val = load { i64, i64 }*, { i64, i64 }** %14, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %16 = bitcast i64** %15 to { i64, i64 }**
  %right_val = load { i64, i64 }*, { i64, i64 }** %16, align 8, !nonnull !3
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_13 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2d6ab0336729dae4E"({ i64, i64 }* align 8 dereferenceable(16) %left_val, { i64, i64 }* align 8 dereferenceable(16) %right_val)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_12 = xor i1 %_13, true
  br i1 %_12, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  ret i64 %lower

bb3:                                              ; preds = %bb2
  store i8 0, i8* %kind, align 1
  %17 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_22 to {}**
  store {}* null, {}** %17, align 8
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hbbf872c449fe4a97E(i8 0, { i64, i64 }* align 8 dereferenceable(16) %left_val, { i64, i64 }* align 8 dereferenceable(16) %right_val, %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48) %_22, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc530 to %"core::panic::location::Location"*)) #20
  unreachable
}

; core::iter::traits::iterator::Iterator::find
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @_ZN4core4iter6traits8iterator8Iterator4find17h836272c70930cc58E(%"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self, %"core::str::IsNotEmpty"* nonnull align 1 %predicate) unnamed_addr #1 {
start:
; call core::iter::traits::iterator::Iterator::find::check
  %_6 = call nonnull align 1 i8* @_ZN4core4iter6traits8iterator8Iterator4find5check17ha94f093bd94409c1E(%"core::str::IsNotEmpty"* nonnull align 1 %predicate)
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::try_fold
  %0 = call { i8*, i64 } @_ZN4core4iter6traits8iterator8Iterator8try_fold17h4bb97c4c6e9563feE(%"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self, i8* nonnull align 1 %_6)
  %_3.0 = extractvalue { i8*, i64 } %0, 0
  %_3.1 = extractvalue { i8*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ops::control_flow::ControlFlow<B,C>::break_value
  %1 = call { i8*, i64 } @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17hc5844284a53d3902E"(i8* align 1 %_3.0, i64 %_3.1)
  %2 = extractvalue { i8*, i64 } %1, 0
  %3 = extractvalue { i8*, i64 } %1, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { i8*, i64 } undef, i8* %2, 0
  %5 = insertvalue { i8*, i64 } %4, i64 %3, 1
  ret { i8*, i64 } %5
}

; core::iter::traits::iterator::Iterator::find::check
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull align 1 i8* @_ZN4core4iter6traits8iterator8Iterator4find5check17ha94f093bd94409c1E(%"core::str::IsNotEmpty"* nonnull align 1 %predicate) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = bitcast i8** %0 to %"core::str::IsNotEmpty"**
  store %"core::str::IsNotEmpty"* %predicate, %"core::str::IsNotEmpty"** %1, align 8
  %2 = load i8*, i8** %0, align 8, !nonnull !3
  ret i8* %2
}

; core::iter::traits::iterator::Iterator::find::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core4iter6traits8iterator8Iterator4find5check28_$u7b$$u7b$closure$u7d$$u7d$17h0a39778b6a24bd65E"(i8** align 8 dereferenceable(8) %_1, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_6 = alloca i64*, align 8
  %3 = alloca { i8*, i64 }, align 8
  %x = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %_5 = bitcast i8** %_1 to %"core::str::IsNotEmpty"**
  %6 = bitcast i64** %_6 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %6, align 8
  %7 = load i64*, i64** %_6, align 8, !nonnull !3
  %8 = bitcast i64* %7 to { [0 x i8]*, i64 }*
; invoke core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_4 = invoke zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h64da3d63a941444aE"(%"core::str::IsNotEmpty"** align 8 dereferenceable(8) %_5, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %8)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3

bb6:                                              ; preds = %cleanup
  br label %bb7

cleanup:                                          ; preds = %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb6

bb7:                                              ; preds = %bb6
  %14 = bitcast { i8*, i32 }* %2 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb3:                                              ; preds = %bb1
  %20 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 0), align 8
  %21 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 1), align 8
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  store i64 %21, i64* %23, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_10, align 1
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x, i32 0, i32 0
  %_9.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !nonnull !3
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x, i32 0, i32 1
  %_9.1 = load i64, i64* %25, align 8
  %26 = bitcast { i8*, i64 }* %3 to { [0 x i8]*, i64 }*
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0
  store [0 x i8]* %_9.0, [0 x i8]** %27, align 8
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1
  store i64 %_9.1, i64* %28, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %29 = load i8, i8* %_10, align 1, !range !4
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb8, label %bb5

bb5:                                              ; preds = %bb8, %bb4
  %31 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = insertvalue { i8*, i64 } undef, i8* %32, 0
  %36 = insertvalue { i8*, i64 } %35, i64 %34, 1
  ret { i8*, i64 } %36

bb8:                                              ; preds = %bb4
  br label %bb5
}

; core::iter::traits::iterator::Iterator::filter
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator6filter17h9d9f813a4b87d060E(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* noalias nocapture sret(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>") dereferenceable(64) %0, %"core::str::iter::Split<core::str::IsWhitespace>"* noalias nocapture dereferenceable(64) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"core::str::iter::Split<core::str::IsWhitespace>", align 8
  %1 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %_3 to i8*
  %2 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 64, i1 false)
; call core::iter::adapters::filter::Filter<I,P>::new
  call void @"_ZN4core4iter8adapters6filter19Filter$LT$I$C$P$GT$3new17h972733ed7618c680E"(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* noalias nocapture sret(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>") dereferenceable(64) %0, %"core::str::iter::Split<core::str::IsWhitespace>"* noalias nocapture dereferenceable(64) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator7collect17h82f4f9d6313649b3E(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::str::iter::SplitWhitespace", align 8
  %1 = bitcast %"core::str::iter::SplitWhitespace"* %_2 to i8*
  %2 = bitcast %"core::str::iter::SplitWhitespace"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 64, i1 false)
; call <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
  call void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h605779213a31cd1eE"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::step_by
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator7step_by17h2ca3dd7ab9c6befeE(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* noalias nocapture sret(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>") dereferenceable(32) %0, i64 %self.0, i64 %self.1, i64 %step) unnamed_addr #1 {
start:
; call core::iter::adapters::step_by::StepBy<I>::new
  call void @"_ZN4core4iter8adapters7step_by15StepBy$LT$I$GT$3new17h37613444cc8feb94E"(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* noalias nocapture sret(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>") dereferenceable(32) %0, i64 %self.0, i64 %self.1, i64 %step)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @_ZN4core4iter6traits8iterator8Iterator8try_fold17h4bb97c4c6e9563feE(%"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self, i8* nonnull align 1 %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca { i8*, i64 }, align 8
  %_10 = alloca { i8*, i64 }, align 8
  %_5 = alloca { i8*, i64 }, align 8
  %2 = alloca { i8*, i64 }, align 8
  %f = alloca i8*, align 8
  store i8* %0, i8** %f, align 8
  store i8 0, i8* %_21, align 1
  store i8 1, i8* %_21, align 1
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haa34ed96882d9bd4E"(%"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store { i8*, i64 } %3, { i8*, i64 }* %_5, align 8
  %4 = bitcast { i8*, i64 }* %_5 to {}**
  %5 = load {}*, {}** %4, align 8
  %6 = icmp eq {}* %5, null
  %_7 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_7, 1
  br i1 %7, label %bb3, label %bb10

bb19:                                             ; preds = %bb17, %cleanup
  %8 = load i8, i8* %_21, align 1, !range !4
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb18, label %bb14

cleanup:                                          ; preds = %bb11, %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb19

bb3:                                              ; preds = %bb2
  %15 = bitcast { i8*, i64 }* %_5 to { [0 x i8]*, i64 }*
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 0
  %x.0 = load [0 x i8]*, [0 x i8]** %16, align 8, !nonnull !3
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 1
  %x.1 = load i64, i64* %17, align 8
  store i8 0, i8* %_21, align 1
  %18 = bitcast { i8*, i64 }* %_13 to {}*
  %19 = bitcast { i8*, i64 }* %_13 to { [0 x i8]*, i64 }*
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 0
  store [0 x i8]* %x.0, [0 x i8]** %20, align 8
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 1
  store i64 %x.1, i64* %21, align 8
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_13, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !nonnull !3
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_13, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = bitcast i8* %23 to [0 x i8]*
; invoke core::iter::traits::iterator::Iterator::find::check::{{closure}}
  %27 = invoke { i8*, i64 } @"_ZN4core4iter6traits8iterator8Iterator4find5check28_$u7b$$u7b$closure$u7d$$u7d$17h0a39778b6a24bd65E"(i8** align 8 dereferenceable(8) %f, [0 x i8]* nonnull align 1 %26, i64 %25)
          to label %bb4 unwind label %cleanup1

bb10:                                             ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_21, align 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %28 = invoke { i8*, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h9a01870c82d733ddE"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  store { i8*, i64 } %28, { i8*, i64 }* %2, align 8
  store i8 0, i8* %_21, align 1
  br label %bb13

bb13:                                             ; preds = %bb9, %bb12
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = insertvalue { i8*, i64 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i64 } %33, i64 %32, 1
  ret { i8*, i64 } %34

bb4:                                              ; preds = %bb3
  %_11.0 = extractvalue { i8*, i64 } %27, 0
  %_11.1 = extractvalue { i8*, i64 } %27, 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %35 = invoke { i8*, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5c20a5badf6b1a0aE"(i8* align 1 %_11.0, i64 %_11.1)
          to label %bb5 unwind label %cleanup1

bb17:                                             ; preds = %bb16, %cleanup1
  br label %bb19

cleanup1:                                         ; preds = %bb4, %bb3
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  %38 = extractvalue { i8*, i32 } %36, 1
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %38, i32* %40, align 8
  br label %bb17

bb5:                                              ; preds = %bb4
  store { i8*, i64 } %35, { i8*, i64 }* %_10, align 8
  %41 = bitcast { i8*, i64 }* %_10 to {}**
  %42 = load {}*, {}** %41, align 8
  %43 = icmp eq {}* %42, null
  %_16 = select i1 %43, i64 0, i64 1
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  store i8 1, i8* %_21, align 1
  br label %bb1

bb8:                                              ; preds = %bb5
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_10, i32 0, i32 0
  %residual.0 = load i8*, i8** %44, align 8, !nonnull !3
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_10, i32 0, i32 1
  %residual.1 = load i64, i64* %45, align 8
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %46 = invoke { i8*, i64 } @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h28cf73313e086464E"(i8* nonnull align 1 %residual.0, i64 %residual.1)
          to label %bb9 unwind label %cleanup2

bb9:                                              ; preds = %bb8
  store { i8*, i64 } %46, { i8*, i64 }* %2, align 8
  store i8 0, i8* %_21, align 1
  br label %bb13

bb16:                                             ; preds = %cleanup2
  br label %bb17

cleanup2:                                         ; preds = %bb8
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  %49 = extractvalue { i8*, i32 } %47, 1
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %49, i32* %51, align 8
  br label %bb16

bb14:                                             ; preds = %bb18, %bb19
  br label %bb15

bb18:                                             ; preds = %bb19
  br label %bb14

bb15:                                             ; preds = %bb14
  %52 = bitcast { i8*, i32 }* %1 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  resume { i8*, i32 } %57
}

; core::iter::traits::iterator::Iterator::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator9size_hint17he9c72383f4646d51E({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, %"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self) unnamed_addr #1 {
start:
  %_2 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_2 to i64*
  store i64 0, i64* %1, align 8
  %2 = bitcast { i64, { i64, i64 } }* %0 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !range !2
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %7, i64* %9, align 8
  ret void
}

; core::iter::adapters::filter::Filter<I,P>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters6filter19Filter$LT$I$C$P$GT$3new17h972733ed7618c680E"(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* noalias nocapture sret(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>") dereferenceable(64) %0, %"core::str::iter::Split<core::str::IsWhitespace>"* noalias nocapture dereferenceable(64) %iter) unnamed_addr #0 {
start:
  %_3 = alloca %"core::str::iter::Split<core::str::IsWhitespace>", align 8
  %1 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %_3 to i8*
  %2 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 64, i1 false)
  %3 = bitcast %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* %0 to %"core::str::iter::Split<core::str::IsWhitespace>"*
  %4 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %3 to i8*
  %5 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 64, i1 false)
  %6 = bitcast %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* %0 to %"core::str::IsNotEmpty"*
  ret void
}

; core::iter::adapters::step_by::StepBy<I>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters7step_by15StepBy$LT$I$GT$3new17h37613444cc8feb94E"(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* noalias nocapture sret(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>") dereferenceable(32) %0, i64 %iter.0, i64 %iter.1, i64 %step) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_4 = icmp ne i64 %step, 0
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = sub i64 %step, 1
  %2 = bitcast %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* %0 to { i64, i64 }*
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  store i64 %iter.0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %iter.1, i64* %4, align 8
  %5 = getelementptr inbounds %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>", %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* %0, i32 0, i32 1
  store i64 %_7, i64* %5, align 8
  %6 = getelementptr inbounds %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>", %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* %0, i32 0, i32 2
  store i8 1, i8* %6, align 8
  ret void

bb1:                                              ; preds = %start
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [27 x i8] }>* @alloc531 to [0 x i8]*), i64 27, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc533 to %"core::panic::location::Location"*)) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %12 = bitcast { i8*, i32 }* %1 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17
}

; core::sync::atomic::AtomicBool::load
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core4sync6atomic10AtomicBool4load17h9d3c0d586579c5e2E(%"core::sync::atomic::AtomicBool"* align 1 dereferenceable(1) %self, i8 %order) unnamed_addr #1 {
start:
  %_6 = bitcast %"core::sync::atomic::AtomicBool"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_load
  %_3 = call i8 @_ZN4core4sync6atomic11atomic_load17h0427b22259597bfcE(i8* %_6, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = icmp ne i8 %_3, 0
  ret i1 %0
}

; core::sync::atomic::AtomicBool::store
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core4sync6atomic10AtomicBool5store17h5fb03db410a3034cE(%"core::sync::atomic::AtomicBool"* align 1 dereferenceable(1) %self, i1 zeroext %val, i8 %order) unnamed_addr #1 {
start:
  %_6 = bitcast %"core::sync::atomic::AtomicBool"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp ule i1 %val, true
  call void @llvm.assume(i1 %0)
  %_7 = zext i1 %val to i8
; call core::sync::atomic::atomic_store
  call void @_ZN4core4sync6atomic12atomic_store17h6d083854c4af7dddE(i8* %_6, i8 %_7, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::sync::atomic::atomic_add
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4sync6atomic10atomic_add17h15986e0ebcc06349E(i64* %dst, i64 %val, i8 %0) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %2 = load i8, i8* %order, align 1, !range !7
  %_4 = zext i8 %2 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb9
    i64 1, label %bb5
    i64 2, label %bb3
    i64 3, label %bb7
    i64 4, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb9:                                              ; preds = %start
  %3 = atomicrmw add i64* %dst, i64 %val monotonic, align 8
  store i64 %3, i64* %1, align 8
  br label %bb10

bb5:                                              ; preds = %start
  %4 = atomicrmw add i64* %dst, i64 %val release, align 8
  store i64 %4, i64* %1, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %5 = atomicrmw add i64* %dst, i64 %val acquire, align 8
  store i64 %5, i64* %1, align 8
  br label %bb4

bb7:                                              ; preds = %start
  %6 = atomicrmw add i64* %dst, i64 %val acq_rel, align 8
  store i64 %6, i64* %1, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %7 = atomicrmw add i64* %dst, i64 %val seq_cst, align 8
  store i64 %7, i64* %1, align 8
  br label %bb11

bb11:                                             ; preds = %bb1
  br label %bb12

bb12:                                             ; preds = %bb10, %bb6, %bb4, %bb8, %bb11
  %8 = load i64, i64* %1, align 8
  ret i64 %8

bb8:                                              ; preds = %bb7
  br label %bb12

bb4:                                              ; preds = %bb3
  br label %bb12

bb6:                                              ; preds = %bb5
  br label %bb12

bb10:                                             ; preds = %bb9
  br label %bb12
}

; core::sync::atomic::atomic_sub
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4sync6atomic10atomic_sub17h4d936bcda3d42661E(i64* %dst, i64 %val, i8 %0) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %2 = load i8, i8* %order, align 1, !range !7
  %_4 = zext i8 %2 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb9
    i64 1, label %bb5
    i64 2, label %bb3
    i64 3, label %bb7
    i64 4, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb9:                                              ; preds = %start
  %3 = atomicrmw sub i64* %dst, i64 %val monotonic, align 8
  store i64 %3, i64* %1, align 8
  br label %bb10

bb5:                                              ; preds = %start
  %4 = atomicrmw sub i64* %dst, i64 %val release, align 8
  store i64 %4, i64* %1, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %5 = atomicrmw sub i64* %dst, i64 %val acquire, align 8
  store i64 %5, i64* %1, align 8
  br label %bb4

bb7:                                              ; preds = %start
  %6 = atomicrmw sub i64* %dst, i64 %val acq_rel, align 8
  store i64 %6, i64* %1, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %7 = atomicrmw sub i64* %dst, i64 %val seq_cst, align 8
  store i64 %7, i64* %1, align 8
  br label %bb11

bb11:                                             ; preds = %bb1
  br label %bb12

bb12:                                             ; preds = %bb10, %bb6, %bb4, %bb8, %bb11
  %8 = load i64, i64* %1, align 8
  ret i64 %8

bb8:                                              ; preds = %bb7
  br label %bb12

bb4:                                              ; preds = %bb3
  br label %bb12

bb6:                                              ; preds = %bb5
  br label %bb12

bb10:                                             ; preds = %bb9
  br label %bb12
}

; core::sync::atomic::AtomicUsize::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0cffde5d32d76b65E(i64 %v) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca %"core::sync::atomic::AtomicUsize", align 8
  store i64 %v, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast %"core::sync::atomic::AtomicUsize"* %1 to i64*
  store i64 %2, i64* %3, align 8
  %4 = bitcast %"core::sync::atomic::AtomicUsize"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::sync::atomic::AtomicUsize::load
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic11AtomicUsize4load17hb942a0364fa6d354E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %self, i8 %order) unnamed_addr #1 {
start:
  %_5 = bitcast %"core::sync::atomic::AtomicUsize"* %self to i64*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_load
  %0 = call i64 @_ZN4core4sync6atomic11atomic_load17h9eda3f635451efa4E(i64* %_5, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %0
}

; core::sync::atomic::AtomicUsize::fetch_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_add17h1b161b556bcddfe8E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %self, i64 %val, i8 %order) unnamed_addr #1 {
start:
  %_5 = bitcast %"core::sync::atomic::AtomicUsize"* %self to i64*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_add
  %0 = call i64 @_ZN4core4sync6atomic10atomic_add17h15986e0ebcc06349E(i64* %_5, i64 %val, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %0
}

; core::sync::atomic::AtomicUsize::fetch_sub
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %self, i64 %val, i8 %order) unnamed_addr #1 {
start:
  %_5 = bitcast %"core::sync::atomic::AtomicUsize"* %self to i64*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_sub
  %0 = call i64 @_ZN4core4sync6atomic10atomic_sub17h4d936bcda3d42661E(i64* %_5, i64 %val, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %0
}

; core::sync::atomic::atomic_load
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @_ZN4core4sync6atomic11atomic_load17h0427b22259597bfcE(i8* %dst, i8 %0) unnamed_addr #1 {
start:
  %1 = alloca i8, align 1
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %2 = load i8, i8* %order, align 1, !range !7
  %_3 = zext i8 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb9
    i64 2, label %bb3
    i64 3, label %bb1
    i64 4, label %bb7
  ]

bb2:                                              ; preds = %start
  unreachable

bb5:                                              ; preds = %start
  %3 = load atomic i8, i8* %dst monotonic, align 1
  store i8 %3, i8* %1, align 1
  br label %bb6

bb9:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc541 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc539 to %"core::panic::location::Location"*)) #20
  unreachable

bb3:                                              ; preds = %start
  %4 = load atomic i8, i8* %dst acquire, align 1
  store i8 %4, i8* %1, align 1
  br label %bb4

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [49 x i8] }>* @alloc540 to [0 x i8]*), i64 49, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc536 to %"core::panic::location::Location"*)) #20
  unreachable

bb7:                                              ; preds = %start
  %5 = load atomic i8, i8* %dst seq_cst, align 1
  store i8 %5, i8* %1, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb10:                                             ; preds = %bb6, %bb4, %bb8
  %6 = load i8, i8* %1, align 1
  ret i8 %6

bb4:                                              ; preds = %bb3
  br label %bb10

bb6:                                              ; preds = %bb5
  br label %bb10
}

; core::sync::atomic::atomic_load
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4sync6atomic11atomic_load17h9eda3f635451efa4E(i64* %dst, i8 %0) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %2 = load i8, i8* %order, align 1, !range !7
  %_3 = zext i8 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb9
    i64 2, label %bb3
    i64 3, label %bb1
    i64 4, label %bb7
  ]

bb2:                                              ; preds = %start
  unreachable

bb5:                                              ; preds = %start
  %3 = load atomic i64, i64* %dst monotonic, align 8
  store i64 %3, i64* %1, align 8
  br label %bb6

bb9:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc541 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc539 to %"core::panic::location::Location"*)) #20
  unreachable

bb3:                                              ; preds = %start
  %4 = load atomic i64, i64* %dst acquire, align 8
  store i64 %4, i64* %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [49 x i8] }>* @alloc540 to [0 x i8]*), i64 49, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc536 to %"core::panic::location::Location"*)) #20
  unreachable

bb7:                                              ; preds = %start
  %5 = load atomic i64, i64* %dst seq_cst, align 8
  store i64 %5, i64* %1, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb10:                                             ; preds = %bb6, %bb4, %bb8
  %6 = load i64, i64* %1, align 8
  ret i64 %6

bb4:                                              ; preds = %bb3
  br label %bb10

bb6:                                              ; preds = %bb5
  br label %bb10
}

; core::sync::atomic::atomic_store
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4sync6atomic12atomic_store17h6d083854c4af7dddE(i8* %dst, i8 %val, i8 %0) unnamed_addr #1 {
start:
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %1 = load i8, i8* %order, align 1, !range !7
  %_4 = zext i8 %1 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb3
    i64 2, label %bb9
    i64 3, label %bb1
    i64 4, label %bb7
  ]

bb2:                                              ; preds = %start
  unreachable

bb5:                                              ; preds = %start
  store atomic i8 %val, i8* %dst monotonic, align 1
  br label %bb6

bb3:                                              ; preds = %start
  store atomic i8 %val, i8* %dst release, align 1
  br label %bb4

bb9:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [42 x i8] }>* @alloc545 to [0 x i8]*), i64 42, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc547 to %"core::panic::location::Location"*)) #20
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [50 x i8] }>* @alloc542 to [0 x i8]*), i64 50, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc544 to %"core::panic::location::Location"*)) #20
  unreachable

bb7:                                              ; preds = %start
  store atomic i8 %val, i8* %dst seq_cst, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb10:                                             ; preds = %bb6, %bb4, %bb8
  ret void

bb4:                                              ; preds = %bb3
  br label %bb10

bb6:                                              ; preds = %bb5
  br label %bb10
}

; core::sync::atomic::fence
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core4sync6atomic5fence17h361441ad26f502bcE(i8 %0) unnamed_addr #1 {
start:
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %1 = load i8, i8* %order, align 1, !range !7
  %_2 = zext i8 %1 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb4
    i64 2, label %bb3
    i64 3, label %bb5
    i64 4, label %bb6
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [41 x i8] }>* @alloc548 to [0 x i8]*), i64 41, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc550 to %"core::panic::location::Location"*)) #20
  unreachable

bb4:                                              ; preds = %start
  fence release
  br label %bb7

bb3:                                              ; preds = %start
  fence acquire
  br label %bb7

bb5:                                              ; preds = %start
  fence acq_rel
  br label %bb7

bb6:                                              ; preds = %start
  fence seq_cst
  br label %bb7

bb7:                                              ; preds = %bb4, %bb3, %bb5, %bb6
  ret void
}

; core::time::Duration::from_millis
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @_ZN4core4time8Duration11from_millis17heb330d5b4d994c52E(i64 %millis) unnamed_addr #1 {
start:
  %0 = alloca { i64, i32 }, align 8
  %_2 = udiv i64 %millis, 1000
  %_6 = urem i64 %millis, 1000
  %_5 = trunc i64 %_6 to i32
  %_4 = mul i32 %_5, 1000000
  %1 = bitcast { i64, i32 }* %0 to i64*
  store i64 %_2, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %_4, i32* %2, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i64, i32 } undef, i64 %4, 0
  %8 = insertvalue { i64, i32 } %7, i32 %6, 1
  ret { i64, i32 } %8
}

; core::alloc::layout::size_align
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout10size_align17h04e382962f6ba3a1E() unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 16, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 8, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::size_align
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout10size_align17h1c18c02ad6d258e3E() unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 24, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 8, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::size_align
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout10size_align17h26a37442571b0d93E() unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 16, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 8, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::size_align
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout10size_align17h3051a3a0c6f5e4f4E() unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 48, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 8, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::size_align
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout10size_align17hcc408afefc311e22E() unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 4, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 4, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::pad_to_align
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17hb3590fb237114c7eE({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h3a06a07a4e9354b3E({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::padding_needed_for
  %pad = call i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17he2d71fa0a75a635fE({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::alloc::layout::Layout::size
  %_7 = call i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb3

bb3:                                              ; preds = %bb2
  %new_size = add i64 %_7, %pad
; call core::alloc::layout::Layout::align
  %_12 = call i64 @_ZN4core5alloc6layout6Layout5align17h3a06a07a4e9354b3E({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::alloc::layout::Layout::from_size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout15from_size_align17h53772a0d78463805E(i64 %new_size, i64 %_12)
  %_10.0 = extractvalue { i64, i64 } %0, 0
  %_10.1 = extractvalue { i64, i64 } %0, 1
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::result::Result<T,E>::unwrap
  %1 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h9b1b551c43272b05E"(i64 %_10.0, i64 %_10.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc552 to %"core::panic::location::Location"*))
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb6

bb6:                                              ; preds = %bb5
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h4c97f9c7eec626d7E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %t) unnamed_addr #0 {
start:
  %_4 = alloca { i64, i64 }, align 8
; call core::mem::size_of_val_raw
  %_5 = call i64 @_ZN4core3mem15size_of_val_raw17hac6ee92ae622a627E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %t)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::align_of_val_raw
  %_7 = call i64 @_ZN4core3mem16align_of_val_raw17h0e681e378c77d698E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %t)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = bitcast { i64, i64 }* %_4 to i64*
  store i64 %_5, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %_4 to i64*
  %size = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %align = load i64, i64* %3, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %4 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h966577777876b9c7E(%"alloc::sync::ArcInner<_ShuffledOrder>"* %t) unnamed_addr #0 {
start:
  %_4 = alloca { i64, i64 }, align 8
; call core::mem::size_of_val_raw
  %_5 = call i64 @_ZN4core3mem15size_of_val_raw17h4e883c390b3faadeE(%"alloc::sync::ArcInner<_ShuffledOrder>"* %t)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::align_of_val_raw
  %_7 = call i64 @_ZN4core3mem16align_of_val_raw17h3d55794cf47b7106E(%"alloc::sync::ArcInner<_ShuffledOrder>"* %t)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = bitcast { i64, i64 }* %_4 to i64*
  store i64 %_5, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %_4 to i64*
  %size = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %align = load i64, i64* %3, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %4 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hbf0cc7824d03e225E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %t) unnamed_addr #0 {
start:
  %_4 = alloca { i64, i64 }, align 8
; call core::mem::size_of_val_raw
  %_5 = call i64 @_ZN4core3mem15size_of_val_raw17hed65faed75ab6466E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %t)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::align_of_val_raw
  %_7 = call i64 @_ZN4core3mem16align_of_val_raw17h6c130ff641a84946E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %t)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = bitcast { i64, i64 }* %_4 to i64*
  store i64 %_5, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %_4 to i64*
  %size = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %align = load i64, i64* %3, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %4 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hcc05ebd9a729acbeE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %t) unnamed_addr #0 {
start:
  %_4 = alloca { i64, i64 }, align 8
; call core::mem::size_of_val_raw
  %_5 = call i64 @_ZN4core3mem15size_of_val_raw17hd0d36ee81f15f405E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %t)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::align_of_val_raw
  %_7 = call i64 @_ZN4core3mem16align_of_val_raw17h9449e18d6b288cacE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %t)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = bitcast { i64, i64 }* %_4 to i64*
  store i64 %_5, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %_4 to i64*
  %size = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %align = load i64, i64* %3, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %4 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hd34aa81edbd56ee0E(%"alloc::sync::ArcInner<std::thread::Inner>"* %t) unnamed_addr #0 {
start:
  %_4 = alloca { i64, i64 }, align 8
; call core::mem::size_of_val_raw
  %_5 = call i64 @_ZN4core3mem15size_of_val_raw17h7d76e3ae5a4fd5b5E(%"alloc::sync::ArcInner<std::thread::Inner>"* %t)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::align_of_val_raw
  %_7 = call i64 @_ZN4core3mem16align_of_val_raw17h787a67f28fa8a23fE(%"alloc::sync::ArcInner<std::thread::Inner>"* %t)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = bitcast { i64, i64 }* %_4 to i64*
  store i64 %_5, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %_4 to i64*
  %size = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %align = load i64, i64* %3, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %4 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hed09f202e802608bE(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %t) unnamed_addr #0 {
start:
  %_4 = alloca { i64, i64 }, align 8
; call core::mem::size_of_val_raw
  %_5 = call i64 @_ZN4core3mem15size_of_val_raw17h44b855fd4c1377a7E(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %t)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::align_of_val_raw
  %_7 = call i64 @_ZN4core3mem16align_of_val_raw17h2c2a5bfe9e0eb18fE(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %t)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = bitcast { i64, i64 }* %_4 to i64*
  store i64 %_5, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %_4 to i64*
  %size = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %align = load i64, i64* %3, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %4 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hf73eb1b8c446d741E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %t) unnamed_addr #0 {
start:
  %_4 = alloca { i64, i64 }, align 8
; call core::mem::size_of_val_raw
  %_5 = call i64 @_ZN4core3mem15size_of_val_raw17h3d2763de9db74286E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %t)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::align_of_val_raw
  %_7 = call i64 @_ZN4core3mem16align_of_val_raw17h4d08ef1255b2ec43E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %t)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = bitcast { i64, i64 }* %_4 to i64*
  store i64 %_5, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %_4 to i64*
  %size = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %align = load i64, i64* %3, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %4 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::from_size_align
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout15from_size_align17h53772a0d78463805E(i64 %size, i64 %align) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  %2 = call i64 @llvm.ctpop.i64(i64 %align)
  store i64 %2, i64* %0, align 8
  %_2.i.i = load i64, i64* %0, align 8
  %3 = trunc i64 %_2.i.i to i32
  %4 = icmp eq i32 %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = xor i1 %4, true
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_9 = sub i64 %align, 1
  %_8 = sub i64 -1, %_9
  %_6 = icmp ugt i64 %size, %_8
  br i1 %_6, label %bb4, label %bb5

bb2:                                              ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %5, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb4, %bb2
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i64, i64 } undef, i64 %7, 0
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1
  ret { i64, i64 } %11

bb5:                                              ; preds = %bb3
; call core::alloc::layout::Layout::from_size_align_unchecked
  %12 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
  %_11.0 = extractvalue { i64, i64 } %12, 0
  %_11.1 = extractvalue { i64, i64 } %12, 1
  br label %bb6

bb4:                                              ; preds = %bb3
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %13, align 8
  br label %bb7

bb6:                                              ; preds = %bb5
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  store i64 %_11.0, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 %_11.1, i64* %15, align 8
  br label %bb7
}

; core::alloc::layout::Layout::padding_needed_for
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17he2d71fa0a75a635fE({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %align) unnamed_addr #1 {
start:
; call core::alloc::layout::Layout::size
  %len = call i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = add i64 %len, %align
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = sub i64 %0, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = sub i64 %align, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = xor i64 %2, -1
  %len_rounded_up = and i64 %1, %_10
  %3 = sub i64 %len_rounded_up, %len
  br label %bb5

bb5:                                              ; preds = %bb4
  ret i64 %3
}

; core::alloc::layout::Layout::from_size_align_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
; call core::num::nonzero::NonZeroUsize::new_unchecked
  %_4 = call i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h8f702eaeef65e280E(i64 %align), !range !26
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 %size, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_4, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !26
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h46e733f5231225c4E() unnamed_addr #1 {
start:
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17h1c18c02ad6d258e3E()
  %_3.0 = extractvalue { i64, i64 } %0, 0
  %_3.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %_3.0, i64 %_3.1)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h73f1f0f3213de690E() unnamed_addr #1 {
start:
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17hcc408afefc311e22E()
  %_3.0 = extractvalue { i64, i64 } %0, 0
  %_3.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %_3.0, i64 %_3.1)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h97a91f1b9df7c137E() unnamed_addr #1 {
start:
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17h3051a3a0c6f5e4f4E()
  %_3.0 = extractvalue { i64, i64 } %0, 0
  %_3.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %_3.0, i64 %_3.1)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout3new17hb9ec08469874f4f4E() unnamed_addr #1 {
start:
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17h26a37442571b0d93E()
  %_3.0 = extractvalue { i64, i64 } %0, 0
  %_3.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %_3.0, i64 %_3.1)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout3new17he176f4036ccf6227E() unnamed_addr #1 {
start:
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17h04e382962f6ba3a1E()
  %_3.0 = extractvalue { i64, i64 } %0, 0
  %_3.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %_3.0, i64 %_3.1)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::alloc::layout::Layout::size
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64, i64 }* %self to i64*
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; core::alloc::layout::Layout::align
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout5align17h3a06a07a4e9354b3E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %_2 = load i64, i64* %0, align 8, !range !26
; call core::num::nonzero::NonZeroUsize::get
  %1 = call i64 @_ZN4core3num7nonzero12NonZeroUsize3get17ha028078fd33be2beE(i64 %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h08f6c0dd13c2e705E(i64 %n) unnamed_addr #1 {
start:
  %val = alloca { { i64, i64 }, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_6 = alloca %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", align 8
  %_4 = alloca { { i64, i64 }, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
; call core::alloc::layout::Layout::new
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h46e733f5231225c4E()
  store { i64, i64 } %1, { i64, i64 }* %_8, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::repeat
  call void @_ZN4core5alloc6layout6Layout6repeat17h0bc97ba3fffb88d6E(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") dereferenceable(24) %_6, { i64, i64 }* align 8 dereferenceable(16) %_8, i64 %n)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4e168b8fa5adb32eE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>") dereferenceable(24) %_5, %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %_5, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  %_10 = select i1 %4, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %5 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"*
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"* %5 to { { i64, i64 }, i64 }*
  %7 = bitcast { { i64, i64 }, i64 }* %val to i8*
  %8 = bitcast { { i64, i64 }, i64 }* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = bitcast { { i64, i64 }, i64 }* %_4 to i8*
  %10 = bitcast { { i64, i64 }, i64 }* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = bitcast { { i64, i64 }, i64 }* %_4 to { i64, i64 }*
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !range !26
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_4, i32 0, i32 1
  %offset = load i64, i64* %18, align 8
; call core::alloc::layout::Layout::pad_to_align
  %19 = call { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17hb3590fb237114c7eE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  %_17.0 = extractvalue { i64, i64 } %19, 0
  %_17.1 = extractvalue { i64, i64 } %19, 1
  br label %bb8

bb6:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h745729f705e7f875E"()
  store { i64, i64 } %20, { i64, i64 }* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = insertvalue { i64, i64 } undef, i64 %22, 0
  %26 = insertvalue { i64, i64 } %25, i64 %24, 1
  ret { i64, i64 } %26

bb8:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_17.0, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_17.1, i64* %28, align 8
  br label %bb9
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h4ee5455e4aa895f9E(i64 %n) unnamed_addr #1 {
start:
  %val = alloca { { i64, i64 }, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_6 = alloca %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", align 8
  %_4 = alloca { { i64, i64 }, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
; call core::alloc::layout::Layout::new
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h97a91f1b9df7c137E()
  store { i64, i64 } %1, { i64, i64 }* %_8, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::repeat
  call void @_ZN4core5alloc6layout6Layout6repeat17h0bc97ba3fffb88d6E(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") dereferenceable(24) %_6, { i64, i64 }* align 8 dereferenceable(16) %_8, i64 %n)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4e168b8fa5adb32eE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>") dereferenceable(24) %_5, %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %_5, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  %_10 = select i1 %4, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %5 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"*
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"* %5 to { { i64, i64 }, i64 }*
  %7 = bitcast { { i64, i64 }, i64 }* %val to i8*
  %8 = bitcast { { i64, i64 }, i64 }* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = bitcast { { i64, i64 }, i64 }* %_4 to i8*
  %10 = bitcast { { i64, i64 }, i64 }* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = bitcast { { i64, i64 }, i64 }* %_4 to { i64, i64 }*
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !range !26
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_4, i32 0, i32 1
  %offset = load i64, i64* %18, align 8
; call core::alloc::layout::Layout::pad_to_align
  %19 = call { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17hb3590fb237114c7eE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  %_17.0 = extractvalue { i64, i64 } %19, 0
  %_17.1 = extractvalue { i64, i64 } %19, 1
  br label %bb8

bb6:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h745729f705e7f875E"()
  store { i64, i64 } %20, { i64, i64 }* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = insertvalue { i64, i64 } undef, i64 %22, 0
  %26 = insertvalue { i64, i64 } %25, i64 %24, 1
  ret { i64, i64 } %26

bb8:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_17.0, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_17.1, i64* %28, align 8
  br label %bb9
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h5505a8aa8e4252edE(i64 %n) unnamed_addr #1 {
start:
  %val = alloca { { i64, i64 }, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_6 = alloca %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", align 8
  %_4 = alloca { { i64, i64 }, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
; call core::alloc::layout::Layout::new
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h73f1f0f3213de690E()
  store { i64, i64 } %1, { i64, i64 }* %_8, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::repeat
  call void @_ZN4core5alloc6layout6Layout6repeat17h0bc97ba3fffb88d6E(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") dereferenceable(24) %_6, { i64, i64 }* align 8 dereferenceable(16) %_8, i64 %n)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4e168b8fa5adb32eE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>") dereferenceable(24) %_5, %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %_5, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  %_10 = select i1 %4, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %5 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"*
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"* %5 to { { i64, i64 }, i64 }*
  %7 = bitcast { { i64, i64 }, i64 }* %val to i8*
  %8 = bitcast { { i64, i64 }, i64 }* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = bitcast { { i64, i64 }, i64 }* %_4 to i8*
  %10 = bitcast { { i64, i64 }, i64 }* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = bitcast { { i64, i64 }, i64 }* %_4 to { i64, i64 }*
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !range !26
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_4, i32 0, i32 1
  %offset = load i64, i64* %18, align 8
; call core::alloc::layout::Layout::pad_to_align
  %19 = call { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17hb3590fb237114c7eE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  %_17.0 = extractvalue { i64, i64 } %19, 0
  %_17.1 = extractvalue { i64, i64 } %19, 1
  br label %bb8

bb6:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h745729f705e7f875E"()
  store { i64, i64 } %20, { i64, i64 }* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = insertvalue { i64, i64 } undef, i64 %22, 0
  %26 = insertvalue { i64, i64 } %25, i64 %24, 1
  ret { i64, i64 } %26

bb8:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_17.0, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_17.1, i64* %28, align 8
  br label %bb9
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h8de2915e13c95be3E(i64 %n) unnamed_addr #1 {
start:
  %val = alloca { { i64, i64 }, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_6 = alloca %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", align 8
  %_4 = alloca { { i64, i64 }, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
; call core::alloc::layout::Layout::new
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17he176f4036ccf6227E()
  store { i64, i64 } %1, { i64, i64 }* %_8, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::repeat
  call void @_ZN4core5alloc6layout6Layout6repeat17h0bc97ba3fffb88d6E(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") dereferenceable(24) %_6, { i64, i64 }* align 8 dereferenceable(16) %_8, i64 %n)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4e168b8fa5adb32eE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>") dereferenceable(24) %_5, %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %_5, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  %_10 = select i1 %4, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %5 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"*
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"* %5 to { { i64, i64 }, i64 }*
  %7 = bitcast { { i64, i64 }, i64 }* %val to i8*
  %8 = bitcast { { i64, i64 }, i64 }* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = bitcast { { i64, i64 }, i64 }* %_4 to i8*
  %10 = bitcast { { i64, i64 }, i64 }* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = bitcast { { i64, i64 }, i64 }* %_4 to { i64, i64 }*
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !range !26
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_4, i32 0, i32 1
  %offset = load i64, i64* %18, align 8
; call core::alloc::layout::Layout::pad_to_align
  %19 = call { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17hb3590fb237114c7eE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  %_17.0 = extractvalue { i64, i64 } %19, 0
  %_17.1 = extractvalue { i64, i64 } %19, 1
  br label %bb8

bb6:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h745729f705e7f875E"()
  store { i64, i64 } %20, { i64, i64 }* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = insertvalue { i64, i64 } undef, i64 %22, 0
  %26 = insertvalue { i64, i64 } %25, i64 %24, 1
  ret { i64, i64 } %26

bb8:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_17.0, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_17.1, i64* %28, align 8
  br label %bb9
}

; core::alloc::layout::Layout::repeat
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core5alloc6layout6Layout6repeat17h0bc97ba3fffb88d6E(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") dereferenceable(24) %0, { i64, i64 }* align 8 dereferenceable(16) %self, i64 %n) unnamed_addr #1 {
start:
  %_21 = alloca { { i64, i64 }, i64 }, align 8
  %_11 = alloca { i64, i64 }, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_8 = call i64 @_ZN4core5alloc6layout6Layout5align17h3a06a07a4e9354b3E({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::alloc::layout::Layout::padding_needed_for
  %_6 = call i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17he2d71fa0a75a635fE({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %_8)
  br label %bb3

bb3:                                              ; preds = %bb2
  %padded_size = add i64 %_4, %_6
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h16b05a09bfdc27b1E"(i64 %padded_size, i64 %n)
  %_13.0 = extractvalue { i64, i64 } %1, 0
  %_13.1 = extractvalue { i64, i64 } %1, 1
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::option::Option<T>::ok_or
  %2 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h5d81dcf529105454E"(i64 %_13.0, i64 %_13.1)
  %_12.0 = extractvalue { i64, i64 } %2, 0
  %_12.1 = extractvalue { i64, i64 } %2, 1
  br label %bb5

bb5:                                              ; preds = %bb4
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc97826571f29d2aeE"(i64 %_12.0, i64 %_12.1)
  store { i64, i64 } %3, { i64, i64 }* %_11, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %4 = bitcast { i64, i64 }* %_11 to i64*
  %_17 = load i64, i64* %4, align 8, !range !2
  switch i64 %_17, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ]

bb8:                                              ; preds = %bb6
  unreachable

bb7:                                              ; preds = %bb6
  %5 = bitcast { i64, i64 }* %_11 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"* %5, i32 0, i32 1
  %val = load i64, i64* %6, align 8
; call core::alloc::layout::Layout::align
  %_24 = call i64 @_ZN4core5alloc6layout6Layout5align17h3a06a07a4e9354b3E({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb11

bb9:                                              ; preds = %bb6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h5885b61392823b10E"(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") dereferenceable(24) %0)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb13

bb13:                                             ; preds = %bb12, %bb10
  ret void

bb11:                                             ; preds = %bb7
; call core::alloc::layout::Layout::from_size_align_unchecked
  %7 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %val, i64 %_24)
  %_22.0 = extractvalue { i64, i64 } %7, 0
  %_22.1 = extractvalue { i64, i64 } %7, 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %8 = bitcast { { i64, i64 }, i64 }* %_21 to { i64, i64 }*
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0
  store i64 %_22.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1
  store i64 %_22.1, i64* %10, align 8
  %11 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_21, i32 0, i32 1
  store i64 %padded_size, i64* %11, align 8
  %12 = bitcast %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* %0 to %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Ok"*
  %13 = bitcast %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Ok"* %12 to { { i64, i64 }, i64 }*
  %14 = bitcast { { i64, i64 }, i64 }* %13 to i8*
  %15 = bitcast { { i64, i64 }, i64 }* %_21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
  br label %bb13
}

; core::alloc::layout::Layout::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define internal nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17heb7d89ef707a3360E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::alloc::layout::Layout::align
  %_3 = call i64 @_ZN4core5alloc6layout6Layout5align17h3a06a07a4e9354b3E({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = inttoptr i64 %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::clone::Clone::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core5clone5Clone5clone17hac26cd983bd01c94E({}* nonnull align 1 %_1) unnamed_addr #1 {
start:
  ret void
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17he684b50783c1b703E"(i64* align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = load i64, i64* %self, align 8
  ret i64 %0
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h3c3329fe84e22c0cE"([0 x i32]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = bitcast [0 x i32]* %self.0 to i32*
  ret i32* %0
}

; core::slice::<impl [T]>::split_at_mut
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h5f88f0336c987e47E"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, [0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %mid) unnamed_addr #1 {
start:
  %_4 = icmp ule i64 %mid, %self.1
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::split_at_mut_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h376feafe5d5942acE"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, [0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %mid)
  br label %bb3

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [35 x i8] }>* @alloc553 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc555 to %"core::panic::location::Location"*)) #20
  unreachable

bb3:                                              ; preds = %bb2
  ret void
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h8da3d1406a92b1a1E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #1 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_3 = call i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h5f5030e380ca2e64E"(i64 %index, [0 x i8]* %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %_3
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hf9730e2aa1380090E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #1 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %_6 = call i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h8416acf7f5e8888aE"(i64 %index, [0 x i8]* %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %_6
}

; core::slice::<impl [T]>::split_at_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h376feafe5d5942acE"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, [0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %mid) unnamed_addr #1 {
start:
  %1 = alloca i32*, align 8
; call core::slice::<impl [T]>::as_mut_ptr
  %ptr = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h3c3329fe84e22c0cE"([0 x i32]* nonnull align 4 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::raw::from_raw_parts_mut
  %2 = call { [0 x i32]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h06850e1640adb2f0E(i32* %ptr, i64 %mid)
  %_8.0 = extractvalue { [0 x i32]*, i64 } %2, 0
  %_8.1 = extractvalue { [0 x i32]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = getelementptr inbounds i32, i32* %ptr, i64 %mid
  store i32* %3, i32** %1, align 8
  %_3.i.i = load i32*, i32** %1, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_16 = sub i64 %self.1, %mid
; call core::slice::raw::from_raw_parts_mut
  %4 = call { [0 x i32]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h06850e1640adb2f0E(i32* %_3.i.i, i64 %_16)
  %_12.0 = extractvalue { [0 x i32]*, i64 } %4, 0
  %_12.1 = extractvalue { [0 x i32]*, i64 } %4, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %5 = bitcast { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %0 to { [0 x i32]*, i64 }*
  %6 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %5, i32 0, i32 0
  store [0 x i32]* %_8.0, [0 x i32]** %6, align 8
  %7 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %5, i32 0, i32 1
  store i64 %_8.1, i64* %7, align 8
  %8 = getelementptr inbounds { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %0, i32 0, i32 1
  %9 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %8, i32 0, i32 0
  store [0 x i32]* %_12.0, [0 x i32]** %9, align 8
  %10 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %8, i32 0, i32 1
  store i64 %_12.1, i64* %10, align 8
  ret void
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h03a6387f8a7970a0E"([0 x %"alloc::vec::Vec<_ProbeNode>"]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h52bd9fe90d95bce8E"([0 x %"alloc::vec::Vec<_ProbeNode>"]* nonnull align 8 %self.0, i64 %self.1)
  %1 = extractvalue { i64*, i64* } %0, 0
  %2 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64* } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64* } %3, i64* %2, 1
  ret { i64*, i64* } %4
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h94f6c1fc4be486b2E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h778fa75b0b66379bE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %1 = extractvalue { i8*, i8* } %0, 0
  %2 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1
  ret { i8*, i8* } %4
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hefea60f1b39032cdE"([0 x %_ProbeNode]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h1a2b15cef155d71dE"([0 x %_ProbeNode]* nonnull align 8 %self.0, i64 %self.1)
  %1 = extractvalue { i64*, i64* } %0, 0
  %2 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64* } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64* } %3, i64* %2, 1
  ret { i64*, i64* } %4
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h2ea63167c453fc12E"([0 x %"alloc::vec::Vec<_ProbeNode>"]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = bitcast [0 x %"alloc::vec::Vec<_ProbeNode>"]* %self.0 to %"alloc::vec::Vec<_ProbeNode>"*
  ret %"alloc::vec::Vec<_ProbeNode>"* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %_ProbeNode* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h31c6de782e452ce4E"([0 x %_ProbeNode]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = bitcast [0 x %_ProbeNode]* %self.0 to %_ProbeNode*
  ret %_ProbeNode* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hac9eb96ca88beecdE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hd5917bb55b00e93fE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = icmp eq i64 %self.1, 0
  ret i1 %0
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core5slice3raw14from_raw_parts17ha9a94773761b3d29E(%"alloc::vec::Vec<_ProbeNode>"* %data, i64 %len) unnamed_addr #1 {
start:
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h00d36fc3ed11ebc5E(%"alloc::vec::Vec<_ProbeNode>"* %data, i64 %len)
  %_3.0 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %_3.0, 0
  %2 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %2
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hc5d75867e8ad8b37E(i8* %data, i64 %len) unnamed_addr #1 {
start:
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hf5bb20055aa66712E(i8* %data, i64 %len)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %_ProbeNode]*, i64 } @_ZN4core5slice3raw14from_raw_parts17he439788e175b7106E(%_ProbeNode* %data, i64 %len) unnamed_addr #1 {
start:
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h786b8f8f376b8079E(%_ProbeNode* %data, i64 %len)
  %_3.0 = extractvalue { [0 x %_ProbeNode]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x %_ProbeNode]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x %_ProbeNode]*, i64 } undef, [0 x %_ProbeNode]* %_3.0, 0
  %2 = insertvalue { [0 x %_ProbeNode]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x %_ProbeNode]*, i64 } %2
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h06850e1640adb2f0E(i32* %data, i64 %len) unnamed_addr #1 {
start:
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i32]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h5ccde716743148f3E(i32* %data, i64 %len)
  %_6.0 = extractvalue { [0 x i32]*, i64 } %0, 0
  %_6.1 = extractvalue { [0 x i32]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %_6.0, 0
  %2 = insertvalue { [0 x i32]*, i64 } %1, i64 %_6.1, 1
  ret { [0 x i32]*, i64 } %2
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h684c505b49f22892E(%"alloc::vec::Vec<_ProbeNode>"* %data, i64 %len) unnamed_addr #1 {
start:
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h798a9bb69b4846afE(%"alloc::vec::Vec<_ProbeNode>"* %data, i64 %len)
  %_6.0 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 0
  %_6.1 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %_6.0, 0
  %2 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, i64 %_6.1, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %2
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h1a2b15cef155d71dE"([0 x %_ProbeNode]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca %_ProbeNode*, align 8
  %1 = alloca i8*, align 8
  %end = alloca %_ProbeNode*, align 8
  %2 = alloca { i64*, i64* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call %_ProbeNode* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h31c6de782e452ce4E"([0 x %_ProbeNode]* nonnull align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h55919b542ca613b1E"(%_ProbeNode* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 48, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast %_ProbeNode* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %ptr, i64 %slice.1
  store %_ProbeNode* %6, %_ProbeNode** %0, align 8
  %7 = load %_ProbeNode*, %_ProbeNode** %0, align 8
  store %_ProbeNode* %7, %_ProbeNode** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4bfc4dc2049e2d65E"(%_ProbeNode* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %8 = bitcast i8* %5 to %_ProbeNode*
  store %_ProbeNode* %8, %_ProbeNode** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load %_ProbeNode*, %_ProbeNode** %end, align 8
  %9 = bitcast { i64*, i64* }* %2 to i64**
  store i64* %_18, i64** %9, align 8
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %11 = bitcast i64** %10 to %_ProbeNode**
  store %_ProbeNode* %_21, %_ProbeNode** %11, align 8
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = insertvalue { i64*, i64* } undef, i64* %13, 0
  %17 = insertvalue { i64*, i64* } %16, i64* %15, 1
  ret { i64*, i64* } %17
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h52bd9fe90d95bce8E"([0 x %"alloc::vec::Vec<_ProbeNode>"]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca %"alloc::vec::Vec<_ProbeNode>"*, align 8
  %1 = alloca i8*, align 8
  %end = alloca %"alloc::vec::Vec<_ProbeNode>"*, align 8
  %2 = alloca { i64*, i64* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h2ea63167c453fc12E"([0 x %"alloc::vec::Vec<_ProbeNode>"]* nonnull align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h8e82d9e889c225b0E"(%"alloc::vec::Vec<_ProbeNode>"* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 24, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %ptr, i64 %slice.1
  store %"alloc::vec::Vec<_ProbeNode>"* %6, %"alloc::vec::Vec<_ProbeNode>"** %0, align 8
  %7 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %0, align 8
  store %"alloc::vec::Vec<_ProbeNode>"* %7, %"alloc::vec::Vec<_ProbeNode>"** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h746b529d5d4cb833E"(%"alloc::vec::Vec<_ProbeNode>"* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %8 = bitcast i8* %5 to %"alloc::vec::Vec<_ProbeNode>"*
  store %"alloc::vec::Vec<_ProbeNode>"* %8, %"alloc::vec::Vec<_ProbeNode>"** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %end, align 8
  %9 = bitcast { i64*, i64* }* %2 to i64**
  store i64* %_18, i64** %9, align 8
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %11 = bitcast i64** %10 to %"alloc::vec::Vec<_ProbeNode>"**
  store %"alloc::vec::Vec<_ProbeNode>"* %_21, %"alloc::vec::Vec<_ProbeNode>"** %11, align 8
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = insertvalue { i64*, i64* } undef, i64* %13, 0
  %17 = insertvalue { i64*, i64* } %16, i64* %15, 1
  ret { i64*, i64* } %17
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h778fa75b0b66379bE"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %end = alloca i8*, align 8
  %2 = alloca { i8*, i8* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hac9eb96ca88beecdE"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h4f38c0f62e494063E"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 1, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %4 = getelementptr i8, i8* %ptr, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds i8, i8* %ptr, i64 %slice.1
  store i8* %6, i8** %0, align 8
  %7 = load i8*, i8** %0, align 8
  store i8* %7, i8** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  store i8* %5, i8** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load i8*, i8** %end, align 8
  %8 = bitcast { i8*, i8* }* %2 to i8**
  store i8* %_18, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  store i8* %_21, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8, !nonnull !3
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = insertvalue { i8*, i8* } undef, i8* %11, 0
  %15 = insertvalue { i8*, i8* } %14, i8* %13, 1
  ret { i8*, i8* } %15
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h741bc83631f22e6cE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h1f27fe3d8735d746E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h3ed649c41d686ffaE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hdb8aa586d2fbfc24E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h618345473e502b08E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
; call <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h832d0ea284dd5e71E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h6fea5ddf4c8b12a5E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hc2d640440e7d18dcE"(i64 %index.0, i64 %index.1, [0 x i32]* nonnull align 4 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i32]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i32]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %_4.0, 0
  %3 = insertvalue { [0 x i32]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i32]*, i64 } %3
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(24) %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h92830a6f6c23b93bE"([0 x %"alloc::vec::Vec<_ProbeNode>"]* nonnull align 8 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::index_mut
  %_4 = call align 8 dereferenceable(24) %"alloc::vec::Vec<_ProbeNode>"* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h11bad39c270350c8E"(i64 %index, [0 x %"alloc::vec::Vec<_ProbeNode>"]* nonnull align 8 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::vec::Vec<_ProbeNode>"* %_4
}

; core::option::Option<T>::ok_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$10ok_or_else17h79ad4441c81b5997E"(%"core::result::Result<usize, hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<usize, hashbrown::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2, i8* align 1 dereferenceable(1) %err) unnamed_addr #1 {
start:
  %_9 = alloca i8, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; call hashbrown::raw::RawTableInner<A>::fallible_with_capacity::{{closure}}
  %6 = call { i64, i64 } @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$22fallible_with_capacity28_$u7b$$u7b$closure$u7d$$u7d$17h86e4dea54b204664E"(i8* align 1 dereferenceable(1) %err)
  %_6.0 = extractvalue { i64, i64 } %6, 0
  %_6.1 = extractvalue { i64, i64 } %6, 1
  br label %bb4

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  %v = load i64, i64* %8, align 8
  %9 = bitcast %"core::result::Result<usize, hashbrown::TryReserveError>"* %0 to %"core::result::Result<usize, hashbrown::TryReserveError>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<usize, hashbrown::TryReserveError>::Ok", %"core::result::Result<usize, hashbrown::TryReserveError>::Ok"* %9, i32 0, i32 1
  store i64 %v, i64* %10, align 8
  %11 = bitcast %"core::result::Result<usize, hashbrown::TryReserveError>"* %0 to i64*
  store i64 0, i64* %11, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %12 = load i8, i8* %_9, align 1, !range !4
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb7, label %bb6

bb4:                                              ; preds = %bb1
  %14 = bitcast %"core::result::Result<usize, hashbrown::TryReserveError>"* %0 to %"core::result::Result<usize, hashbrown::TryReserveError>::Err"*
  %15 = getelementptr inbounds %"core::result::Result<usize, hashbrown::TryReserveError>::Err", %"core::result::Result<usize, hashbrown::TryReserveError>::Err"* %14, i32 0, i32 1
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0
  store i64 %_6.0, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1
  store i64 %_6.1, i64* %17, align 8
  %18 = bitcast %"core::result::Result<usize, hashbrown::TryReserveError>"* %0 to i64*
  store i64 1, i64* %18, align 8
  br label %bb5

bb6:                                              ; preds = %bb7, %bb5
  ret void

bb7:                                              ; preds = %bb5
  br label %bb6
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$3map17hedf65f258095d873E"(i32 %0, i32 %1) unnamed_addr #1 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i32, i32 }* %self to i32*
  %6 = load i32, i32* %5, align 4, !range !61
  %_3 = zext i32 %6 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i32, i32 }* %self to %"core::option::Option<u32>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %7, i32 0, i32 1
  %x = load i32, i32* %8, align 4
  store i8 0, i8* %_9, align 1
  store i32 %x, i32* %_7, align 4
  %9 = load i32, i32* %_7, align 4
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
  %_5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hfbfbcfb62b93899fE"(i32 %9), !range !63
  br label %bb4

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %10 = load i8, i8* %_9, align 1, !range !4
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %12 = load i32, i32* %2, align 4, !range !65
  ret i32 %12

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$4take17h5244fae8d1b0f359E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_3 = alloca { i8*, i64 }, align 8
  %0 = bitcast { i8*, i64 }* %_3 to {}**
  store {}* null, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 0
  %2 = load i8*, i8** %1, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
; call core::mem::replace
  %5 = call { i8*, i64 } @_ZN4core3mem7replace17h978bb6626fa1bb68E({ i8*, i64 }* align 8 dereferenceable(16) %self, i8* align 1 %2, i64 %4)
  %6 = extractvalue { i8*, i64 } %5, 0
  %7 = extractvalue { i8*, i64 } %5, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$4take17h756d96f76829226dE"(%"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture sret(%"core::option::Option<core::cell::Cell<(u64, u64)>>") dereferenceable(24) %0, %"core::option::Option<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"core::option::Option<core::cell::Cell<(u64, u64)>>", align 8
  %1 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %_3 to i64*
  store i64 0, i64* %1, align 8
; call core::mem::replace
  call void @_ZN4core3mem7replace17h09495c46fb371866E(%"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture sret(%"core::option::Option<core::cell::Cell<(u64, u64)>>") dereferenceable(24) %0, %"core::option::Option<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(24) %self, %"core::option::Option<core::cell::Cell<(u64, u64)>>"* noalias nocapture dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h08c4e71381198b57E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %0, i64 %1, i64 %2, i64 %err.0, i64 %err.1) unnamed_addr #1 {
start:
  %_7 = alloca i8, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %6 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0
  store i64 %err.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1
  store i64 %err.1, i64* %9, align 8
  %10 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 1, i64* %10, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %11 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %12 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %11, i32 0, i32 1
  %v = load i64, i64* %12, align 8
  %13 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*
  %14 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %13, i32 0, i32 1
  store i64 %v, i64* %14, align 8
  %15 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 0, i64* %15, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %16 = load i8, i8* %_7, align 1, !range !4
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb4
  ret void

bb6:                                              ; preds = %bb4
  br label %bb5
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h5d81dcf529105454E"(i64 %0, i64 %1) unnamed_addr #1 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %6 = bitcast { i64, i64 }* %2 to %"core::result::Result<usize, core::alloc::layout::LayoutError>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<usize, core::alloc::layout::LayoutError>::Err", %"core::result::Result<usize, core::alloc::layout::LayoutError>::Err"* %6, i32 0, i32 1
  %8 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %8, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %10 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %9, i32 0, i32 1
  %v = load i64, i64* %10, align 8
  %11 = bitcast { i64, i64 }* %2 to %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok", %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"* %11, i32 0, i32 1
  store i64 %v, i64* %12, align 8
  %13 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %13, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %14 = load i8, i8* %_7, align 1, !range !4
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb4
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8, !range !2
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1
  ret { i64, i64 } %21

bb6:                                              ; preds = %bb4
  br label %bb5
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17hac8c6c2f6e37b61eE"(i8* %0) unnamed_addr #1 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i8** %1 to %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err"*
  %6 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err"* %5 to %"core::alloc::AllocError"*
  %7 = bitcast i8** %1 to {}**
  store {}* null, {}** %7, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !3
  store i8* %v, i8** %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %8 = load i8, i8* %_7, align 1, !range !4
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb4
  %10 = load i8*, i8** %1, align 8
  ret i8* %10

bb6:                                              ; preds = %bb4
  br label %bb5
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17hef8c2dc72ffeb95aE"(i64* align 8 dereferenceable_or_null(16) %0) unnamed_addr #1 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i64** %1 to %"core::result::Result<&core::cell::Cell<(u64, u64)>, std::thread::local::AccessError>::Err"*
  %6 = bitcast %"core::result::Result<&core::cell::Cell<(u64, u64)>, std::thread::local::AccessError>::Err"* %5 to %"std::thread::local::AccessError"*
  %7 = bitcast i64** %1 to {}**
  store {}* null, {}** %7, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %8 = bitcast i64** %self to { i64, i64 }**
  %v = load { i64, i64 }*, { i64, i64 }** %8, align 8, !nonnull !3
  %9 = bitcast i64** %1 to { i64, i64 }**
  store { i64, i64 }* %v, { i64, i64 }** %9, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %10 = load i8, i8* %_7, align 1, !range !4
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb4
  %12 = load i64*, i64** %1, align 8
  ret i64* %12

bb6:                                              ; preds = %bb4
  br label %bb5
}

; core::option::Option<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h5f5f38039388dfb5E"(%"core::option::Option<core::cell::Cell<(u64, u64)>>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %2 = bitcast i64** %0 to {}**
  store {}* null, {}** %2, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<core::cell::Cell<(u64, u64)>>"* %self to %"core::option::Option<core::cell::Cell<(u64, u64)>>::Some"*
  %x = getelementptr inbounds %"core::option::Option<core::cell::Cell<(u64, u64)>>::Some", %"core::option::Option<core::cell::Cell<(u64, u64)>>::Some"* %3, i32 0, i32 1
  %4 = bitcast i64** %0 to { i64, i64 }**
  store { i64, i64 }* %x, { i64, i64 }** %4, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %5 = load i64*, i64** %0, align 8
  ret i64* %5
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h6ec028b62e171dc2E"(i32 %0, i32 %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #1 {
start:
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  %5 = bitcast { i32, i32 }* %self to i32*
  %6 = load i32, i32* %5, align 4, !range !61
  %_2 = zext i32 %6 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc557 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #20
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast { i32, i32 }* %self to %"core::option::Option<i32>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %7, i32 0, i32 1
  %val = load i32, i32* %8, align 4
  ret i32 %val
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17he21008910e553a5fE"(i64 %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #1 {
start:
  %self = alloca i64, align 8
  store i64 %0, i64* %self, align 8
  %2 = load i64, i64* %self, align 8
  %3 = icmp eq i64 %2, 0
  %_2 = select i1 %3, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc557 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #20
  unreachable

bb3:                                              ; preds = %start
  %val = load i64, i64* %self, align 8, !range !26
  ret i64 %val
}

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h658e907e01926af5E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::option::Option<T>::is_some
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h869816884b878827E"({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_2, true
  ret i1 %0
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h869816884b878827E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  %2 = icmp eq i64 %_2, 1
  br i1 %2, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hb34c9b3908998e8aE"(i8* %0, i64 %1) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_7 = alloca { i8*, i64 }, align 8
  %2 = alloca i8*, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_3 = select i1 %7, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  %t.0 = load i8*, i8** %8, align 8, !nonnull !3
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %9, align 8
  store i8 0, i8* %_11, align 1
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 0
  store i8* %t.0, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 1
  store i64 %t.1, i64* %11, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8, !nonnull !3
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
; call hashbrown::raw::alloc::inner::do_alloc::{{closure}}
  %_5 = call nonnull i8* @"_ZN9hashbrown3raw5alloc5inner8do_alloc28_$u7b$$u7b$closure$u7d$$u7d$17hf8cdfb87f2d48793E"(i8* nonnull %13, i64 %15)
  br label %bb4

bb1:                                              ; preds = %start
  %16 = bitcast i8** %2 to %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err"*
  %17 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err"* %16 to %"core::alloc::AllocError"*
  %18 = bitcast i8** %2 to {}**
  store {}* null, {}** %18, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb1
  %19 = load i8, i8* %_11, align 1, !range !4
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb7, label %bb6

bb4:                                              ; preds = %bb3
  store i8* %_5, i8** %2, align 8
  br label %bb5

bb6:                                              ; preds = %bb7, %bb5
  %21 = load i8*, i8** %2, align 8
  ret i8* %21

bb7:                                              ; preds = %bb5
  br label %bb6
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hbb2338f03e47d8d1E"(%"core::result::Result<(), hashbrown::TryReserveError>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"core::result::Result<(), hashbrown::TryReserveError>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17headbce6f44ee0f17E"(%"core::result::Result<(), std::io::error::Error>"* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"core::result::Result<(), std::io::error::Error>"* %self to i8*
  %2 = load i8, i8* %1, align 8, !range !7
  %3 = sub i8 %2, 4
  %4 = icmp eq i8 %3, 0
  %_2 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_2, 0
  br i1 %5, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %0, align 1, !range !4
  %7 = trunc i8 %6 to i1
  ret i1 %7
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1c5271af24cef938E"(i128 %0, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca %"std::io::error::Error", align 8
  %3 = alloca i128, align 8
  %self = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  store i128 %0, i128* %3, align 8
  %4 = bitcast %"core::result::Result<(), std::io::error::Error>"* %self to i8*
  %5 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = bitcast %"core::result::Result<(), std::io::error::Error>"* %self to i8*
  %7 = load i8, i8* %6, align 8, !range !7
  %8 = sub i8 %7, 4
  %9 = icmp eq i8 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  ret void

bb1:                                              ; preds = %start
  %10 = bitcast %"core::result::Result<(), std::io::error::Error>"* %self to %"core::result::Result<(), std::io::error::Error>::Err"*
  %11 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %10 to %"std::io::error::Error"*
  %12 = bitcast %"std::io::error::Error"* %e to i8*
  %13 = bitcast %"std::io::error::Error"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false)
  %_6.0 = bitcast %"std::io::error::Error"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.5 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h211456880990b21cE"(%"std::io::error::Error"* %e) #21
  br label %bb5

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %2 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h6d979bc5c989e7d9E"(%"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>"* noalias nocapture dereferenceable(24) %self, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca %"std::thread::local::AccessError", align 1
  %2 = bitcast %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>"* %self to i64*
  %_3 = load i64, i64* %2, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>"* %self to %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>::Ok", %"core::result::Result<std::collections::hash::map::RandomState, std::thread::local::AccessError>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0
  %t.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  %t.1 = load i64, i64* %6, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %t.0, 0
  %8 = insertvalue { i64, i64 } %7, i64 %t.1, 1
  ret { i64, i64 } %8

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"std::thread::local::AccessError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.6 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %14 = bitcast { i8*, i32 }* %1 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hd871c09aa576b56bE"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture dereferenceable(24) %self, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca %"std::io::error::Error", align 8
  %2 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %self to i64*
  %_3 = load i64, i64* %2, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %self to %"core::result::Result<usize, std::io::error::Error>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Ok", %"core::result::Result<usize, std::io::error::Error>::Ok"* %3, i32 0, i32 1
  %t = load i64, i64* %4, align 8
  ret i64 %t

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %self to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %5, i32 0, i32 1
  %7 = bitcast %"std::io::error::Error"* %e to i8*
  %8 = bitcast %"std::io::error::Error"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  %_6.0 = bitcast %"std::io::error::Error"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.5 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h211456880990b21cE"(%"std::io::error::Error"* %e) #21
  br label %bb5

cleanup:                                          ; preds = %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %14 = bitcast { i8*, i32 }* %1 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19
}

; core::result::Result<T,E>::is_err
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hbf4242f5832da1c1E"(%"core::result::Result<(), std::io::error::Error>"* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::result::Result<T,E>::is_ok
  %_2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17headbce6f44ee0f17E"(%"core::result::Result<(), std::io::error::Error>"* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_2, true
  ret i1 %0
}

; core::result::Result<T,E>::is_err
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hf1699100bee93131E"(%"core::result::Result<(), hashbrown::TryReserveError>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call core::result::Result<T,E>::is_ok
  %_2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hbb2338f03e47d8d1E"(%"core::result::Result<(), hashbrown::TryReserveError>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_2, true
  ret i1 %0
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(16) i64* @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h0f9aa9d41e4e1452E"(i64 %0, i8* %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca i64*, align 8
  %self = alloca { i64, i8* }, align 8
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self, i32 0, i32 1
  store i8* %1, i8** %5, align 8
  %6 = bitcast { i64, i8* }* %self to i64*
  %_2 = load i64, i64* %6, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i8* }* %self to %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Ok"*
  %8 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Ok", %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Ok"* %7, i32 0, i32 1
  %t = load i64*, i64** %8, align 8, !nonnull !3
  ret i64* %t

bb1:                                              ; preds = %start
  %9 = bitcast { i64, i8* }* %self to %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Err", %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Err"* %9, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  store i64* %11, i64** %e, align 8
  %_6.0 = bitcast i64** %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc610 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.7 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>
  call void @"_ZN4core3ptr104drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..rwlock..RwLockReadGuard$LT$i32$GT$$GT$$GT$17had4b19d075e98758E"(i64** %e) #21
  br label %bb5

cleanup:                                          ; preds = %bb1
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %17 = bitcast { i8*, i32 }* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h1e60228dd5dda1bcE"(i64 %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca i8, align 1
  %3 = alloca i64, align 8
  %self = alloca %"core::result::Result<i32, core::num::error::ParseIntError>", align 4
  store i64 %0, i64* %3, align 8
  %4 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %self to i8*
  %5 = bitcast i64* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 8, i1 false)
  %6 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %self to i8*
  %7 = load i8, i8* %6, align 4, !range !4
  %8 = trunc i8 %7 to i1
  %_2 = zext i1 %8 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %self to %"core::result::Result<i32, core::num::error::ParseIntError>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<i32, core::num::error::ParseIntError>::Ok", %"core::result::Result<i32, core::num::error::ParseIntError>::Ok"* %9, i32 0, i32 1
  %t = load i32, i32* %10, align 4
  ret i32 %t

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %self to %"core::result::Result<i32, core::num::error::ParseIntError>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<i32, core::num::error::ParseIntError>::Err", %"core::result::Result<i32, core::num::error::ParseIntError>::Err"* %11, i32 0, i32 1
  %13 = load i8, i8* %12, align 1, !range !7
  store i8 %13, i8* %e, align 1
  %_6.0 = bitcast i8* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc610 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.8 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %2 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h2e2cb0b099b862afE"(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca %"std::io::error::Error", align 8
  %2 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %self to i32*
  %3 = load i32, i32* %2, align 8, !range !61
  %_2 = zext i32 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %self to %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"*
  %5 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Ok", %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"* %4, i32 0, i32 1
  %t = load i32, i32* %5, align 4, !range !13
  ret i32 %t

bb1:                                              ; preds = %start
  %6 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %self to %"core::result::Result<std::fs::File, std::io::error::Error>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Err", %"core::result::Result<std::fs::File, std::io::error::Error>::Err"* %6, i32 0, i32 1
  %8 = bitcast %"std::io::error::Error"* %e to i8*
  %9 = bitcast %"std::io::error::Error"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %_6.0 = bitcast %"std::io::error::Error"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc610 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.5 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h211456880990b21cE"(%"std::io::error::Error"* %e) #21
  br label %bb5

cleanup:                                          ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %15 = bitcast { i8*, i32 }* %1 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3cc83867fd03f091E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i64*, i8 }, align 8
  %2 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 0
  %t.0 = load i64*, i64** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %t.1 = trunc i8 %7 to i1
  %8 = zext i1 %t.1 to i8
  %9 = insertvalue { i64*, i8 } undef, i64* %t.0, 0
  %10 = insertvalue { i64*, i8 } %9, i8 %8, 1
  ret { i64*, i8 } %10

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 0
  store i64* %14, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 1
  %20 = zext i1 %17 to i8
  store i8 %20, i8* %19, align 8
  %_6.0 = bitcast { i64*, i8 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc610 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.9 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>>
  call void @"_ZN4core3ptr166drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$$GT$17h7bad0bc74b47c879E"({ i64*, i8 }* %e) #21
  br label %bb5

cleanup:                                          ; preds = %bb1
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %1 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3f53b0b3da020188E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i64*, i8 }, align 8
  %2 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 0
  %t.0 = load i64*, i64** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %t.1 = trunc i8 %7 to i1
  %8 = zext i1 %t.1 to i8
  %9 = insertvalue { i64*, i8 } undef, i64* %t.0, 0
  %10 = insertvalue { i64*, i8 } %9, i8 %8, 1
  ret { i64*, i8 } %10

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 0
  store i64* %14, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 1
  %20 = zext i1 %17 to i8
  store i8 %20, i8* %19, align 8
  %_6.0 = bitcast { i64*, i8 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc610 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.a to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>
  call void @"_ZN4core3ptr145drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$$GT$17h3397bb728e8477b1E"({ i64*, i8 }* %e) #21
  br label %bb5

cleanup:                                          ; preds = %bb1
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %1 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h4a29824094f3d1e0E"(i64 %0, i64 %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::num::error::TryFromIntError", align 1
  %self = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %6, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::result::Result<u64, core::num::error::TryFromIntError>::Ok"*
  %8 = getelementptr inbounds %"core::result::Result<u64, core::num::error::TryFromIntError>::Ok", %"core::result::Result<u64, core::num::error::TryFromIntError>::Ok"* %7, i32 0, i32 1
  %t = load i64, i64* %8, align 8
  ret i64 %t

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"core::num::error::TryFromIntError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc610 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.b to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %14 = bitcast { i8*, i32 }* %3 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h5e40491ab103111cE"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i64*, i8 }, align 8
  %2 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 0
  %t.0 = load i64*, i64** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %t.1 = trunc i8 %7 to i1
  %8 = zext i1 %t.1 to i8
  %9 = insertvalue { i64*, i8 } undef, i64* %t.0, 0
  %10 = insertvalue { i64*, i8 } %9, i8 %8, 1
  ret { i64*, i8 } %10

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 0
  store i64* %14, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 1
  %20 = zext i1 %17 to i8
  store i8 %20, i8* %19, align 8
  %_6.0 = bitcast { i64*, i8 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc610 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.c to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>>
  call void @"_ZN4core3ptr158drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$$GT$17haf22541e72c1e95fE"({ i64*, i8 }* %e) #21
  br label %bb5

cleanup:                                          ; preds = %bb1
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %1 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h64d23646540b2296E"(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i64*, i8 }, align 8
  %2 = bitcast %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* %self to %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Ok", %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 0
  %t.0 = load i64*, i64** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %t.1 = trunc i8 %7 to i1
  %8 = zext i1 %t.1 to i8
  %9 = insertvalue { i64*, i8 } undef, i64* %t.0, 0
  %10 = insertvalue { i64*, i8 } %9, i8 %8, 1
  ret { i64*, i8 } %10

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* %self to %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Err", %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 0
  store i64* %14, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 1
  %20 = zext i1 %17 to i8
  store i8 %20, i8* %19, align 8
  %_6.0 = bitcast { i64*, i8 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc610 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.d to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>
  call void @"_ZN4core3ptr105drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..rwlock..RwLockWriteGuard$LT$i32$GT$$GT$$GT$17had3e1b0792cd9ffbE"({ i64*, i8 }* %e) #21
  br label %bb5

cleanup:                                          ; preds = %bb1
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %1 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h9b1b551c43272b05E"(i64 %0, i64 %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::alloc::layout::LayoutError", align 1
  %self = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %_2 = select i1 %8, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %t.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %10, align 8, !range !26
  %11 = insertvalue { i64, i64 } undef, i64 %t.0, 0
  %12 = insertvalue { i64, i64 } %11, i64 %t.1, 1
  ret { i64, i64 } %12

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"core::alloc::layout::LayoutError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc610 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.e to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %18 = bitcast { i8*, i32 }* %3 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hcfed7405cbba1500E"(i32 %0, i32 %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::num::error::TryFromIntError", align 1
  %self = alloca { i32, i32 }, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %4, align 4
  %5 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %5, align 4
  %6 = bitcast { i32, i32 }* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !61
  %_2 = zext i32 %7 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast { i32, i32 }* %self to %"core::result::Result<u32, core::num::error::TryFromIntError>::Ok"*
  %9 = getelementptr inbounds %"core::result::Result<u32, core::num::error::TryFromIntError>::Ok", %"core::result::Result<u32, core::num::error::TryFromIntError>::Ok"* %8, i32 0, i32 1
  %t = load i32, i32* %9, align 4
  ret i32 %t

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"core::num::error::TryFromIntError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc610 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.b to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %15 = bitcast { i8*, i32 }* %3 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hd05e2fd2cc177441E"(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i64*, i8 }, align 8
  %2 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 0
  %t.0 = load i64*, i64** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %t.1 = trunc i8 %7 to i1
  %8 = zext i1 %t.1 to i8
  %9 = insertvalue { i64*, i8 } undef, i64* %t.0, 0
  %10 = insertvalue { i64*, i8 } %9, i8 %8, 1
  ret { i64*, i8 } %10

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 0
  store i64* %14, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 1
  %20 = zext i1 %17 to i8
  store i8 %20, i8* %19, align 8
  %_6.0 = bitcast { i64*, i8 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc610 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.f to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>
  call void @"_ZN4core3ptr103drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$$GT$17h72d26074c19c85aeE"({ i64*, i8 }* %e) #21
  br label %bb5

cleanup:                                          ; preds = %bb1
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %1 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hdb8f59693056e8c1E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i64*, i8 }, align 8
  %2 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 0
  %t.0 = load i64*, i64** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %t.1 = trunc i8 %7 to i1
  %8 = zext i1 %t.1 to i8
  %9 = insertvalue { i64*, i8 } undef, i64* %t.0, 0
  %10 = insertvalue { i64*, i8 } %9, i8 %8, 1
  ret { i64*, i8 } %10

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 0
  store i64* %14, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 1
  %20 = zext i1 %17 to i8
  store i8 %20, i8* %19, align 8
  %_6.0 = bitcast { i64*, i8 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc610 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.g to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>
  call void @"_ZN4core3ptr108drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$$GT$17h1abf9ea40254334aE"({ i64*, i8 }* %e) #21
  br label %bb5

cleanup:                                          ; preds = %bb1
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %1 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17he9515649a8b3536bE"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i64*, i8 }, align 8
  %2 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 0
  %t.0 = load i64*, i64** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %t.1 = trunc i8 %7 to i1
  %8 = zext i1 %t.1 to i8
  %9 = insertvalue { i64*, i8 } undef, i64* %t.0, 0
  %10 = insertvalue { i64*, i8 } %9, i8 %8, 1
  ret { i64*, i8 } %10

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 0
  store i64* %14, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 1
  %20 = zext i1 %17 to i8
  store i8 %20, i8* %19, align 8
  %_6.0 = bitcast { i64*, i8 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc610 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.h to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>
  call void @"_ZN4core3ptr98drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$$GT$17hd5d867184074250cE"({ i64*, i8 }* %e) #21
  br label %bb5

cleanup:                                          ; preds = %bb1
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %1 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf42f716f00c0b51fE"(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::str::error::Utf8Error", align 8
  %2 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to %"core::result::Result<&str, core::str::error::Utf8Error>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Ok", %"core::result::Result<&str, core::str::error::Utf8Error>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  %t.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  %t.1 = load i64, i64* %6, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %t.0, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %t.1, 1
  ret { [0 x i8]*, i64 } %8

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to %"core::result::Result<&str, core::str::error::Utf8Error>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Err", %"core::result::Result<&str, core::str::error::Utf8Error>::Err"* %9, i32 0, i32 1
  %11 = bitcast %"core::str::error::Utf8Error"* %e to i8*
  %12 = bitcast %"core::str::error::Utf8Error"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  %_6.0 = bitcast %"core::str::error::Utf8Error"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc610 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.i to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %18 = bitcast { i8*, i32 }* %1 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h09e594382b13a4faE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i8* %1, i64 %2, i64* align 8 dereferenceable(16) %op) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_3 = select i1 %7, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  %t.0 = load i8*, i8** %8, align 8, !nonnull !3
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %9, align 8
  %10 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %11, i32 0, i32 0
  store i8* %t.0, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %11, i32 0, i32 1
  store i64 %t.1, i64* %13, align 8
  %14 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %14, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %15 = bitcast { %"core::alloc::AllocError" }* %_9 to %"core::alloc::AllocError"*
; call alloc::raw_vec::finish_grow::{{closure}}
  %16 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h734f63c8a05f5b93E"(i64* align 8 dereferenceable(16) %op)
  %_7.0 = extractvalue { i64, i64 } %16, 0
  %_7.1 = extractvalue { i64, i64 } %16, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %17 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %_7.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %_7.1, i64* %20, align 8
  %21 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %22 = load i8, i8* %_11, align 1, !range !4
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb7, label %bb6

bb6:                                              ; preds = %bb7, %bb5
  ret void

bb7:                                              ; preds = %bb5
  br label %bb6
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h52a6d2503279509cE"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::layout::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %_3 = select i1 %7, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %t.0 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %9, align 8, !range !26
  %10 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %t.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %t.1, i64* %13, align 8
  %14 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 0, i64* %14, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %15 = bitcast { %"core::alloc::layout::LayoutError" }* %_9 to %"core::alloc::layout::LayoutError"*
; call alloc::raw_vec::finish_grow::{{closure}}
  %16 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h2c0073926e994d80E"()
  %_7.0 = extractvalue { i64, i64 } %16, 0
  %_7.1 = extractvalue { i64, i64 } %16, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %17 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %_7.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %_7.1, i64* %20, align 8
  %21 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %22 = load i8, i8* %_11, align 1, !range !4
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb7, label %bb6

bb6:                                              ; preds = %bb7, %bb5
  ret void

bb7:                                              ; preds = %bb5
  br label %bb6
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h5404c78c329f3730E"(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>") dereferenceable(24) %0, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to i64*
  %_3 = load i64, i64* %1, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1
  %4 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 0, i64* %4, align 8
  br label %bb5

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %5, i32 0, i32 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0
  %e.0 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1
  %e.1 = load i64, i64* %8, align 8
  store i8 0, i8* %_11, align 1
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0
  store i64 %e.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  store i64 %e.1, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
; call alloc::raw_vec::handle_reserve::{{closure}}
  %15 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h97c716fe881513d7E"(i64 %12, i64 %14)
  %_7.0 = extractvalue { i64, i64 } %15, 0
  %_7.1 = extractvalue { i64, i64 } %15, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %16 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"*
  %17 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"* %16, i32 0, i32 1
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  store i64 %_7.0, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  store i64 %_7.1, i64* %19, align 8
  %20 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 1, i64* %20, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %21 = load i8, i8* %_11, align 1, !range !4
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb7, label %bb6

bb6:                                              ; preds = %bb7, %bb5
  ret void

bb7:                                              ; preds = %bb5
  br label %bb6
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h76aef3f46897b8eaE"(i8* %0) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::AllocError" }, align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %t = load i8*, i8** %self, align 8, !nonnull !3
  store i8* %t, i8** %1, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %5 = bitcast { %"core::alloc::AllocError" }* %_9 to %"core::alloc::AllocError"*
; call hashbrown::raw::alloc::inner::do_alloc::{{closure}}
  call void @"_ZN9hashbrown3raw5alloc5inner8do_alloc28_$u7b$$u7b$closure$u7d$$u7d$17h89c0d8a15c60659cE"()
  br label %bb4

bb4:                                              ; preds = %bb1
  %6 = bitcast i8** %1 to %"core::result::Result<core::ptr::non_null::NonNull<u8>, ()>::Err"*
  %7 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<u8>, ()>::Err"* %6 to {}*
  %8 = bitcast i8** %1 to {}**
  store {}* null, {}** %8, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %9 = load i8, i8* %_11, align 1, !range !4
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb7, label %bb6

bb6:                                              ; preds = %bb7, %bb5
  %11 = load i8*, i8** %1, align 8
  ret i8* %11

bb7:                                              ; preds = %bb5
  br label %bb6
}

; core::convert::num::<impl core::convert::TryFrom<i32> for u64>::try_from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core7convert3num67_$LT$impl$u20$core..convert..TryFrom$LT$i32$GT$$u20$for$u20$u64$GT$8try_from17h7bb3e09eef14a140E"(i32 %u) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %_2 = icmp sge i32 %u, 0
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %1, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %_4 = sext i32 %u to i64
  %2 = bitcast { i64, i64 }* %0 to %"core::result::Result<u64, core::num::error::TryFromIntError>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<u64, core::num::error::TryFromIntError>::Ok", %"core::result::Result<u64, core::num::error::TryFromIntError>::Ok"* %2, i32 0, i32 1
  store i64 %_4, i64* %3, align 8
  %4 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %4, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8, !range !2
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; core::convert::num::<impl core::convert::TryFrom<i64> for u32>::try_from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @"_ZN4core7convert3num67_$LT$impl$u20$core..convert..TryFrom$LT$i64$GT$$u20$for$u20$u32$GT$8try_from17hf9695a814066f28eE"(i64 %u) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
  %0 = alloca { i32, i32 }, align 4
  %_5 = icmp slt i64 %u, 0
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_8 = icmp sgt i64 %u, 4294967295
  %1 = zext i1 %_8 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %_4, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i8, i8* %_4, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %_11 = trunc i64 %u to i32
  %4 = bitcast { i32, i32 }* %0 to %"core::result::Result<u32, core::num::error::TryFromIntError>::Ok"*
  %5 = getelementptr inbounds %"core::result::Result<u32, core::num::error::TryFromIntError>::Ok", %"core::result::Result<u32, core::num::error::TryFromIntError>::Ok"* %4, i32 0, i32 1
  store i32 %_11, i32* %5, align 4
  %6 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %6, align 4
  br label %bb6

bb4:                                              ; preds = %bb3
  %7 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %7, align 4
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %8 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4, !range !61
  %10 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = insertvalue { i32, i32 } undef, i32 %9, 0
  %13 = insertvalue { i32, i32 } %12, i32 %11, 1
  ret { i32, i32 } %13
}

; core::core_arch::x86::sse2::_mm_or_si128
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse212_mm_or_si12817h0fe632573683f204E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, <2 x i64>* noalias nocapture dereferenceable(16) %a, <2 x i64>* noalias nocapture dereferenceable(16) %b) unnamed_addr #6 {
start:
  %_3 = load <2 x i64>, <2 x i64>* %a, align 16
  %_4 = load <2 x i64>, <2 x i64>* %b, align 16
  %1 = or <2 x i64> %_3, %_4
  store <2 x i64> %1, <2 x i64>* %0, align 16
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::core_arch::x86::sse2::_mm_set_epi8
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse212_mm_set_epi817h50a43ac30a5e9e7aE(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, i8 %e15, i8 %e14, i8 %e13, i8 %e12, i8 %e11, i8 %e10, i8 %e9, i8 %e8, i8 %e7, i8 %e6, i8 %e5, i8 %e4, i8 %e3, i8 %e2, i8 %e1, i8 %e0) unnamed_addr #6 {
start:
  %1 = alloca <16 x i8>, align 16
; call core::core_arch::simd::i8x16::new
  call void @_ZN4core9core_arch4simd5i8x163new17hd154dfe4f8745eeeE(<16 x i8>* noalias nocapture sret(<16 x i8>) dereferenceable(16) %1, i8 %e0, i8 %e1, i8 %e2, i8 %e3, i8 %e4, i8 %e5, i8 %e6, i8 %e7, i8 %e8, i8 %e9, i8 %e10, i8 %e11, i8 %e12, i8 %e13, i8 %e14, i8 %e15)
  %_17 = load <16 x i8>, <16 x i8>* %1, align 16
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast <2 x i64>* %0 to <16 x i8>*
  store <16 x i8> %_17, <16 x i8>* %2, align 16
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::core_arch::x86::sse2::_mm_set1_epi8
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse213_mm_set1_epi817h3f41c99697ed5bb3E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, i8 %a) unnamed_addr #6 {
start:
; call core::core_arch::x86::sse2::_mm_set_epi8
  call void @_ZN4core9core_arch3x864sse212_mm_set_epi817h50a43ac30a5e9e7aE(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, i8 %a, i8 %a, i8 %a, i8 %a, i8 %a, i8 %a, i8 %a, i8 %a, i8 %a, i8 %a, i8 %a, i8 %a, i8 %a, i8 %a, i8 %a, i8 %a)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::core_arch::x86::sse2::_mm_cmpeq_epi8
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse214_mm_cmpeq_epi817h69857efc966f9d56E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, <2 x i64>* noalias nocapture dereferenceable(16) %a, <2 x i64>* noalias nocapture dereferenceable(16) %b) unnamed_addr #6 {
start:
  %1 = alloca <16 x i8>, align 16
  %2 = alloca <2 x i64>, align 16
  %3 = alloca <16 x i8>, align 16
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <16 x i8>, align 16
  %_5 = load <2 x i64>, <2 x i64>* %a, align 16
  store <2 x i64> %_5, <2 x i64>* %4, align 16
; call core::core_arch::x86::m128iExt::as_i8x16
  call void @_ZN4core9core_arch3x868m128iExt8as_i8x1617h2ec3c074cc7f2d5bE(<16 x i8>* noalias nocapture sret(<16 x i8>) dereferenceable(16) %5, <2 x i64>* noalias nocapture dereferenceable(16) %4)
  %_4 = load <16 x i8>, <16 x i8>* %5, align 16
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = load <2 x i64>, <2 x i64>* %b, align 16
  store <2 x i64> %_7, <2 x i64>* %2, align 16
; call core::core_arch::x86::m128iExt::as_i8x16
  call void @_ZN4core9core_arch3x868m128iExt8as_i8x1617h2ec3c074cc7f2d5bE(<16 x i8>* noalias nocapture sret(<16 x i8>) dereferenceable(16) %3, <2 x i64>* noalias nocapture dereferenceable(16) %2)
  %_6 = load <16 x i8>, <16 x i8>* %3, align 16
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = icmp eq <16 x i8> %_4, %_6
  %7 = sext <16 x i1> %6 to <16 x i8>
  store <16 x i8> %7, <16 x i8>* %1, align 16
  %_3 = load <16 x i8>, <16 x i8>* %1, align 16
  br label %bb3

bb3:                                              ; preds = %bb2
  %8 = bitcast <2 x i64>* %0 to <16 x i8>*
  store <16 x i8> %_3, <16 x i8>* %8, align 16
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; core::core_arch::x86::sse2::_mm_cmpgt_epi8
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse214_mm_cmpgt_epi817he91d6d8a2dc27ebfE(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, <2 x i64>* noalias nocapture dereferenceable(16) %a, <2 x i64>* noalias nocapture dereferenceable(16) %b) unnamed_addr #6 {
start:
  %1 = alloca <16 x i8>, align 16
  %2 = alloca <2 x i64>, align 16
  %3 = alloca <16 x i8>, align 16
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <16 x i8>, align 16
  %_5 = load <2 x i64>, <2 x i64>* %a, align 16
  store <2 x i64> %_5, <2 x i64>* %4, align 16
; call core::core_arch::x86::m128iExt::as_i8x16
  call void @_ZN4core9core_arch3x868m128iExt8as_i8x1617h2ec3c074cc7f2d5bE(<16 x i8>* noalias nocapture sret(<16 x i8>) dereferenceable(16) %5, <2 x i64>* noalias nocapture dereferenceable(16) %4)
  %_4 = load <16 x i8>, <16 x i8>* %5, align 16
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = load <2 x i64>, <2 x i64>* %b, align 16
  store <2 x i64> %_7, <2 x i64>* %2, align 16
; call core::core_arch::x86::m128iExt::as_i8x16
  call void @_ZN4core9core_arch3x868m128iExt8as_i8x1617h2ec3c074cc7f2d5bE(<16 x i8>* noalias nocapture sret(<16 x i8>) dereferenceable(16) %3, <2 x i64>* noalias nocapture dereferenceable(16) %2)
  %_6 = load <16 x i8>, <16 x i8>* %3, align 16
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = icmp sgt <16 x i8> %_4, %_6
  %7 = sext <16 x i1> %6 to <16 x i8>
  store <16 x i8> %7, <16 x i8>* %1, align 16
  %_3 = load <16 x i8>, <16 x i8>* %1, align 16
  br label %bb3

bb3:                                              ; preds = %bb2
  %8 = bitcast <2 x i64>* %0 to <16 x i8>*
  store <16 x i8> %_3, <16 x i8>* %8, align 16
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; core::core_arch::x86::sse2::_mm_load_si128
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse214_mm_load_si12817h8a4964c3aa1c0a90E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, <2 x i64>* %mem_addr) unnamed_addr #6 {
start:
  %1 = load <2 x i64>, <2 x i64>* %mem_addr, align 16
  store <2 x i64> %1, <2 x i64>* %0, align 16
  ret void
}

; core::core_arch::x86::sse2::_mm_set_epi64x
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse214_mm_set_epi64x17h5e2b7c19e3707f52E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, i64 %e1, i64 %e0) unnamed_addr #6 {
start:
  %1 = alloca <2 x i64>, align 16
; call core::core_arch::simd::i64x2::new
  call void @_ZN4core9core_arch4simd5i64x23new17h1133e5fb6b17da5dE(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %1, i64 %e0, i64 %e1)
  %_3 = load <2 x i64>, <2 x i64>* %1, align 16
  br label %bb1

bb1:                                              ; preds = %start
  store <2 x i64> %_3, <2 x i64>* %0, align 16
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::core_arch::x86::sse2::_mm_loadu_si128
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse215_mm_loadu_si12817h02d4e740f8af9bffE(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %dst, <2 x i64>* %mem_addr) unnamed_addr #6 {
start:
; call core::core_arch::x86::sse2::_mm_undefined_si128
  call void @_ZN4core9core_arch3x864sse219_mm_undefined_si12817h4515708e6e36a237E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %dst)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast <2 x i64>* %mem_addr to i8*
  %_5 = bitcast <2 x i64>* %dst to i8*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb984a4318aa516b1E(i8* %_3, i8* %_5, i64 16)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::core_arch::x86::sse2::_mm_set1_epi64x
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse215_mm_set1_epi64x17h4527e0312e5acc17E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, i64 %a) unnamed_addr #6 {
start:
; call core::core_arch::x86::sse2::_mm_set_epi64x
  call void @_ZN4core9core_arch3x864sse214_mm_set_epi64x17h5e2b7c19e3707f52E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, i64 %a, i64 %a)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::core_arch::x86::sse2::_mm_store_si128
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse215_mm_store_si12817hf1be0a1dfc55aeffE(<2 x i64>* %mem_addr, <2 x i64>* noalias nocapture dereferenceable(16) %a) unnamed_addr #6 {
start:
  %_3 = load <2 x i64>, <2 x i64>* %a, align 16
  store <2 x i64> %_3, <2 x i64>* %mem_addr, align 16
  ret void
}

; core::core_arch::x86::sse2::_mm_movemask_epi8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core9core_arch3x864sse217_mm_movemask_epi817hb33ea44ba9951b61E(<2 x i64>* noalias nocapture dereferenceable(16) %a) unnamed_addr #6 {
start:
  %0 = alloca <2 x i64>, align 16
  %1 = alloca <16 x i8>, align 16
  %_3 = load <2 x i64>, <2 x i64>* %a, align 16
  store <2 x i64> %_3, <2 x i64>* %0, align 16
; call core::core_arch::x86::m128iExt::as_i8x16
  call void @_ZN4core9core_arch3x868m128iExt8as_i8x1617h2ec3c074cc7f2d5bE(<16 x i8>* noalias nocapture sret(<16 x i8>) dereferenceable(16) %1, <2 x i64>* noalias nocapture dereferenceable(16) %0)
  %_2 = load <16 x i8>, <16 x i8>* %1, align 16
  br label %bb1

bb1:                                              ; preds = %start
  %2 = call i32 @llvm.x86.sse2.pmovmskb.128(<16 x i8> %_2) #22
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %2
}

; core::core_arch::x86::sse2::_mm_setzero_si128
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse217_mm_setzero_si12817h265c6792c5b44cd8E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0) unnamed_addr #6 {
start:
; call core::core_arch::x86::sse2::_mm_set1_epi64x
  call void @_ZN4core9core_arch3x864sse215_mm_set1_epi64x17h4527e0312e5acc17E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, i64 0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::core_arch::x86::sse2::_mm_undefined_si128
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse219_mm_undefined_si12817h4515708e6e36a237E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0) unnamed_addr #6 {
start:
  %1 = alloca <2 x i64>, align 16
  %2 = alloca <2 x i64>, align 16
  %3 = alloca <2 x i64>, align 16
  call void @llvm.experimental.noalias.scope.decl(metadata !66)
  %4 = bitcast <2 x i64>* %3 to {}*
  %_1 = load <2 x i64>, <2 x i64>* %3, align 16
  br label %bb1

bb1:                                              ; preds = %start
  store <2 x i64> %_1, <2 x i64>* %2, align 16
  call void @llvm.experimental.noalias.scope.decl(metadata !69)
  call void @llvm.experimental.noalias.scope.decl(metadata !72)
  %_3.i = load <2 x i64>, <2 x i64>* %2, align 16, !alias.scope !72, !noalias !69
  store <2 x i64> %_3.i, <2 x i64>* %1, align 16, !noalias !74
  call void @llvm.experimental.noalias.scope.decl(metadata !75)
  call void @llvm.experimental.noalias.scope.decl(metadata !78)
  %5 = load <2 x i64>, <2 x i64>* %1, align 16, !alias.scope !78, !noalias !80
  store <2 x i64> %5, <2 x i64>* %0, align 16, !alias.scope !81, !noalias !82
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::core_arch::x86::m128iExt::as_i8x16
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core9core_arch3x868m128iExt8as_i8x1617h2ec3c074cc7f2d5bE(<16 x i8>* noalias nocapture sret(<16 x i8>) dereferenceable(16) %0, <2 x i64>* noalias nocapture dereferenceable(16) %self) unnamed_addr #1 {
start:
  %1 = alloca <2 x i64>, align 16
  %2 = alloca <2 x i64>, align 16
  %_3 = load <2 x i64>, <2 x i64>* %self, align 16
  store <2 x i64> %_3, <2 x i64>* %1, align 16
; call <core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt>::as_m128i
  call void @"_ZN80_$LT$core..core_arch..x86..__m128i$u20$as$u20$core..core_arch..x86..m128iExt$GT$8as_m128i17hf13d203d2c1495a6E"(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %2, <2 x i64>* noalias nocapture dereferenceable(16) %1)
  %_2 = load <2 x i64>, <2 x i64>* %2, align 16
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast <16 x i8>* %0 to <2 x i64>*
  store <2 x i64> %_2, <2 x i64>* %3, align 16
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::core_arch::simd::i64x2::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch4simd5i64x23new17h1133e5fb6b17da5dE(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, i64 %x0, i64 %x1) unnamed_addr #1 {
start:
  %1 = bitcast <2 x i64>* %0 to i64*
  store i64 %x0, i64* %1, align 16
  %2 = getelementptr inbounds <2 x i64>, <2 x i64>* %0, i32 0, i32 1
  store i64 %x1, i64* %2, align 8
  ret void
}

; core::core_arch::simd::i8x16::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch4simd5i8x163new17hd154dfe4f8745eeeE(<16 x i8>* noalias nocapture sret(<16 x i8>) dereferenceable(16) %0, i8 %x0, i8 %x1, i8 %x2, i8 %x3, i8 %x4, i8 %x5, i8 %x6, i8 %x7, i8 %x8, i8 %x9, i8 %x10, i8 %x11, i8 %x12, i8 %x13, i8 %x14, i8 %x15) unnamed_addr #1 {
start:
  %1 = bitcast <16 x i8>* %0 to i8*
  store i8 %x0, i8* %1, align 16
  %2 = getelementptr inbounds <16 x i8>, <16 x i8>* %0, i32 0, i32 1
  store i8 %x1, i8* %2, align 1
  %3 = getelementptr inbounds <16 x i8>, <16 x i8>* %0, i32 0, i32 2
  store i8 %x2, i8* %3, align 2
  %4 = getelementptr inbounds <16 x i8>, <16 x i8>* %0, i32 0, i32 3
  store i8 %x3, i8* %4, align 1
  %5 = getelementptr inbounds <16 x i8>, <16 x i8>* %0, i32 0, i32 4
  store i8 %x4, i8* %5, align 4
  %6 = getelementptr inbounds <16 x i8>, <16 x i8>* %0, i32 0, i32 5
  store i8 %x5, i8* %6, align 1
  %7 = getelementptr inbounds <16 x i8>, <16 x i8>* %0, i32 0, i32 6
  store i8 %x6, i8* %7, align 2
  %8 = getelementptr inbounds <16 x i8>, <16 x i8>* %0, i32 0, i32 7
  store i8 %x7, i8* %8, align 1
  %9 = getelementptr inbounds <16 x i8>, <16 x i8>* %0, i32 0, i32 8
  store i8 %x8, i8* %9, align 8
  %10 = getelementptr inbounds <16 x i8>, <16 x i8>* %0, i32 0, i32 9
  store i8 %x9, i8* %10, align 1
  %11 = getelementptr inbounds <16 x i8>, <16 x i8>* %0, i32 0, i32 10
  store i8 %x10, i8* %11, align 2
  %12 = getelementptr inbounds <16 x i8>, <16 x i8>* %0, i32 0, i32 11
  store i8 %x11, i8* %12, align 1
  %13 = getelementptr inbounds <16 x i8>, <16 x i8>* %0, i32 0, i32 12
  store i8 %x12, i8* %13, align 4
  %14 = getelementptr inbounds <16 x i8>, <16 x i8>* %0, i32 0, i32 13
  store i8 %x13, i8* %14, align 1
  %15 = getelementptr inbounds <16 x i8>, <16 x i8>* %0, i32 0, i32 14
  store i8 %x14, i8* %15, align 2
  %16 = getelementptr inbounds <16 x i8>, <16 x i8>* %0, i32 0, i32 15
  store i8 %x15, i8* %16, align 1
  ret void
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define void @_ZN4core9panicking13assert_failed17hbbf872c449fe4a97E(i8 %kind, { i64, i64 }* align 8 dereferenceable(16) %0, { i64, i64 }* align 8 dereferenceable(16) %1, %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48) %args, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #7 {
start:
  %_12 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca { i64, i64 }*, align 8
  %left = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %0, { i64, i64 }** %left, align 8
  store { i64, i64 }* %1, { i64, i64 }** %right, align 8
  %_6.0 = bitcast { i64, i64 }** %left to {}*
  %_9.0 = bitcast { i64, i64 }** %right to {}*
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_12 to i8*
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false)
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h53988bbf3ad10cb2E(i8 %kind, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.j to [3 x i64]*), {}* nonnull align 1 %_9.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.j to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48) %_12, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #20
  unreachable
}

; <*mut T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h772d4af48b21ffd4E"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
; call <*mut T as core::fmt::Pointer>::fmt
  %0 = call zeroext i1 @"_ZN52_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h88478b840b88a3e3E"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&mut W as core::fmt::Write>::write_char
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h2fe8ac81821fc6afE"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"** align 8 dereferenceable(8) %self, i32 %c) unnamed_addr #0 {
start:
  %_3 = load %"std::io::Write::write_fmt::Adapter<std::fs::File>"*, %"std::io::Write::write_fmt::Adapter<std::fs::File>"** %self, align 8, !nonnull !3
; call core::fmt::Write::write_char
  %0 = call zeroext i1 @_ZN4core3fmt5Write10write_char17h1743d30a643fa6daE(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* align 8 dereferenceable(24) %_3, i32 %c)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&mut W as core::fmt::Write>::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h482e9ea236e0f641E"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"** align 8 dereferenceable(8) %self, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %args) unnamed_addr #0 {
start:
  %_4 = alloca %"core::fmt::Arguments", align 8
  %_3 = load %"std::io::Write::write_fmt::Adapter<std::fs::File>"*, %"std::io::Write::write_fmt::Adapter<std::fs::File>"** %self, align 8, !nonnull !3
  %0 = bitcast %"core::fmt::Arguments"* %_4 to i8*
  %1 = bitcast %"core::fmt::Arguments"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 48, i1 false)
; call core::fmt::Write::write_fmt
  %2 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17h01cd695cc9e778c4E(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* align 8 dereferenceable(24) %_3, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <&mut W as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hba729fff3869aee0E"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"** align 8 dereferenceable(8) %self, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %_3 = load %"std::io::Write::write_fmt::Adapter<std::fs::File>"*, %"std::io::Write::write_fmt::Adapter<std::fs::File>"** %self, align 8, !nonnull !3
; call <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str
  %0 = call zeroext i1 @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h2b21fc3b5653bd2aE"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* align 8 dereferenceable(24) %_3, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h360839fe85a6fb25E"(i64 %t.0, i64 %t.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %t.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %t.1, 1
  ret { i64, i64 } %1
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h4e66fd1ad434bf3bE"() unnamed_addr #0 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h904b03d5beac2a2aE"(i64 %t.0, i64 %t.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %t.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %t.1, 1
  ret { i64, i64 } %1
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haa770ee7b04eb7dfE"(i64 %t) unnamed_addr #0 {
start:
  ret i64 %t
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haf4bffc006f7a99cE"() unnamed_addr #0 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc6c8826c50f47c04E"() unnamed_addr #0 {
start:
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h315a009f07720020E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* align 8 dereferenceable(56) %self) unnamed_addr #0 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %0 = call nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h6e849932aa6bca43E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* align 8 dereferenceable(56) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h4173fd3d0ad51ae0E"(i64 %self) unnamed_addr #0 {
start:
; call <T as core::convert::From<T>>::from
  %0 = call i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haa770ee7b04eb7dfE"(i64 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5297ffa3ca6260f9E"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %0 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h85904ef05060d28aE"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h585344ce46fd1001E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* align 8 dereferenceable(80) %self) unnamed_addr #0 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %0 = call nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hfeca19f684bf70d2E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* align 8 dereferenceable(80) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h6f1e7dacadd1d509E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %0 = call nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hc8c466e4d4a9764aE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h81c2c491daa17a97E"(%"alloc::sync::ArcInner<_ShuffledOrder>"* align 8 dereferenceable(112) %self) unnamed_addr #0 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %0 = call nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h3cf4640816094dddE"(%"alloc::sync::ArcInner<_ShuffledOrder>"* align 8 dereferenceable(112) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h997b43fcaeac141cE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %0 = call nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h215ff5592f6a212fE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %self) unnamed_addr #0 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hd46ef77552d5e21bE"(i8* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hef70f0486f9251d2E"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* align 8 dereferenceable(48) %self) unnamed_addr #0 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %0 = call nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h4490d64d7825c234E"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* align 8 dereferenceable(48) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <*const T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN52_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3b226f65c3ff7f07E"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
; call <*const T as core::fmt::Pointer>::fmt
  %0 = call zeroext i1 @"_ZN54_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h66cdcfba00b4547bE"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <*mut T as core::fmt::Pointer>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN52_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h88478b840b88a3e3E"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %_5 = alloca i64*, align 8
  %_6 = load i64*, i64** %self, align 8
  store i64* %_6, i64** %_5, align 8
; call <*const T as core::fmt::Pointer>::fmt
  %0 = call zeroext i1 @"_ZN54_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h66cdcfba00b4547bE"(i64** align 8 dereferenceable(8) %_5, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <F as core::str::pattern::MultiCharEq>::matches
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17h5748b3a2bdeb99ecE"(%"core::str::IsWhitespace"* nonnull align 1 %self, i32 %c) unnamed_addr #1 {
start:
  %_4 = alloca i32, align 4
  store i32 %c, i32* %_4, align 4
  %0 = load i32, i32* %_4, align 4, !range !63
; call <core::str::IsWhitespace as core::ops::function::FnMut<(char,)>>::call_mut
  %1 = call zeroext i1 @"_ZN93_$LT$core..str..IsWhitespace$u20$as$u20$core..ops..function..FnMut$LT$$LP$char$C$$RP$$GT$$GT$8call_mut17h234030e62051c337E"(%"core::str::IsWhitespace"* nonnull align 1 %self, i32 %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; <T as core::convert::TryFrom<U>>::try_from
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17h828544bdb290f692E"(i64 %value) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
; call <T as core::convert::Into<U>>::into
  %_2 = call i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h4173fd3d0ad51ae0E"(i64 %value)
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %_2, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; <T as core::convert::TryInto<U>>::try_into
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h3ddad06d30b40430E"(i32 %self) unnamed_addr #0 {
start:
; call core::convert::num::<impl core::convert::TryFrom<i32> for u64>::try_from
  %0 = call { i64, i64 } @"_ZN4core7convert3num67_$LT$impl$u20$core..convert..TryFrom$LT$i32$GT$$u20$for$u20$u64$GT$8try_from17h7bb3e09eef14a140E"(i32 %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <T as core::convert::TryInto<U>>::try_into
; Function Attrs: nonlazybind uwtable
define { i32, i32 } @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17hbd036edaca9e8b8dE"(i64 %self) unnamed_addr #0 {
start:
; call core::convert::num::<impl core::convert::TryFrom<i64> for u32>::try_from
  %0 = call { i32, i32 } @"_ZN4core7convert3num67_$LT$impl$u20$core..convert..TryFrom$LT$i64$GT$$u20$for$u20$u32$GT$8try_from17hf9695a814066f28eE"(i64 %self)
  %1 = extractvalue { i32, i32 } %0, 0
  %2 = extractvalue { i32, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i32, i32 } undef, i32 %1, 0
  %4 = insertvalue { i32, i32 } %3, i32 %2, 1
  ret { i32, i32 } %4
}

; <*const T as core::fmt::Pointer>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN54_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h66cdcfba00b4547bE"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %_14 = alloca i64, align 8
  %_10 = alloca { i64, i64 }, align 8
  %0 = bitcast %"core::fmt::Formatter"* %f to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %old_width.0 = load i64, i64* %1, align 8, !range !2
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %old_width.1 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds %"core::fmt::Formatter", %"core::fmt::Formatter"* %f, i32 0, i32 3
  %old_flags = load i32, i32* %3, align 8
; call core::fmt::Formatter::alternate
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter9alternate17h38ef9de37e051e79E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_5, label %bb2, label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %4 = getelementptr inbounds %"core::fmt::Formatter", %"core::fmt::Formatter"* %f, i32 0, i32 3
  %5 = getelementptr inbounds %"core::fmt::Formatter", %"core::fmt::Formatter"* %f, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = or i32 %6, 4
  store i32 %7, i32* %4, align 8
  %_16 = load i64*, i64** %self, align 8
  %_15 = bitcast i64* %_16 to {}*
  %8 = ptrtoint {}* %_15 to i64
  store i64 %8, i64* %_14, align 8
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %ret = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17hd38ace2d8b112396E"(i64* align 8 dereferenceable(8) %_14, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb7

bb2:                                              ; preds = %bb1
  %9 = getelementptr inbounds %"core::fmt::Formatter", %"core::fmt::Formatter"* %f, i32 0, i32 3
  %10 = getelementptr inbounds %"core::fmt::Formatter", %"core::fmt::Formatter"* %f, i32 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = or i32 %11, 8
  store i32 %12, i32* %9, align 8
  %_9 = bitcast %"core::fmt::Formatter"* %f to { i64, i64 }*
; call core::option::Option<T>::is_none
  %_8 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h658e907e01926af5E"({ i64, i64 }* align 8 dereferenceable(16) %_9)
  br label %bb3

bb3:                                              ; preds = %bb2
  br i1 %_8, label %bb4, label %bb5

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6

bb4:                                              ; preds = %bb3
  %13 = bitcast { i64, i64 }* %_10 to %"core::option::Option<usize>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %13, i32 0, i32 1
  store i64 18, i64* %14, align 8
  %15 = bitcast { i64, i64 }* %_10 to i64*
  store i64 1, i64* %15, align 8
  %16 = bitcast %"core::fmt::Formatter"* %f to { i64, i64 }*
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0
  %18 = load i64, i64* %17, align 8, !range !2
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0
  store i64 %18, i64* %21, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1
  store i64 %20, i64* %22, align 8
  br label %bb5

bb7:                                              ; preds = %bb6
  %23 = bitcast %"core::fmt::Formatter"* %f to { i64, i64 }*
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i32 0, i32 0
  store i64 %old_width.0, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i32 0, i32 1
  store i64 %old_width.1, i64* %25, align 8
  %26 = getelementptr inbounds %"core::fmt::Formatter", %"core::fmt::Formatter"* %f, i32 0, i32 3
  store i32 %old_flags, i32* %26, align 8
  ret i1 %ret
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: nonlazybind uwtable
define { %"std::path::Path"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17hcd92eae36b9b473dE"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_2.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !3
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_2.1 = load i64, i64* %1, align 8
; call std::path::<impl core::convert::AsRef<std::path::Path> for str>::as_ref
  %2 = call { %"std::path::Path"*, i64 } @"_ZN3std4path77_$LT$impl$u20$core..convert..AsRef$LT$std..path..Path$GT$$u20$for$u20$str$GT$6as_ref17he636b2d37ce78798E"([0 x i8]* nonnull align 1 %_2.0, i64 %_2.1)
  %3 = extractvalue { %"std::path::Path"*, i64 } %2, 0
  %4 = extractvalue { %"std::path::Path"*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { %"std::path::Path"*, i64 } undef, %"std::path::Path"* %3, 0
  %6 = insertvalue { %"std::path::Path"*, i64 } %5, i64 %4, 1
  ret { %"std::path::Path"*, i64 } %6
}

; <std::thread::ThreadId as core::hash::Hash>::hash
; Function Attrs: nonlazybind uwtable
define void @"_ZN58_$LT$std..thread..ThreadId$u20$as$u20$core..hash..Hash$GT$4hash17h6dfae6f3b6f7ea8aE"(i64* align 8 dereferenceable(8) %self, %"std::collections::hash::map::DefaultHasher"* align 8 dereferenceable(72) %state) unnamed_addr #0 {
start:
; call <core::num::nonzero::NonZeroU64 as core::hash::Hash>::hash
  call void @"_ZN67_$LT$core..num..nonzero..NonZeroU64$u20$as$u20$core..hash..Hash$GT$4hash17h54464a008da11cb8E"(i64* align 8 dereferenceable(8) %self, %"std::collections::hash::map::DefaultHasher"* align 8 dereferenceable(72) %state)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::alloc::Global as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h8185b200e245bd86E"(%"alloc::alloc::Global"* nonnull align 1 %self) unnamed_addr #1 {
start:
  ret void
}

; alloc::collections::TryReserveError::kind
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h56370c8e71ed6647E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
  %0 = call { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h29adf101cbc6a6f8E"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; alloc::collections::vec_deque::wrap_index
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN5alloc11collections9vec_deque10wrap_index17h909d7b98d962443aE(i64 %index, i64 %size) unnamed_addr #1 {
start:
  %_4 = sub i64 %size, 1
  %0 = and i64 %index, %_4
  ret i64 %0
}

; alloc::collections::vec_deque::ring_slices::RingSlices::ring_slices
; Function Attrs: nonlazybind uwtable
define void @_ZN5alloc11collections9vec_deque11ring_slices10RingSlices11ring_slices17h717baa4788680befE({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, [0 x i32]* nonnull align 4 %buf.0, i64 %buf.1, i64 %head, i64 %tail) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_29 = alloca i8, align 1
  %_28 = alloca i8, align 1
  %_23 = alloca { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, align 8
  %_19 = alloca { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, align 8
  %_10 = alloca { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, align 8
  store i8 0, i8* %_28, align 1
  store i8 0, i8* %_29, align 1
  %contiguous = icmp ule i64 %tail, %head
  br i1 %contiguous, label %bb1, label %bb4

bb4:                                              ; preds = %start
; call <&mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices>::split_at
  call void @"_ZN98_$LT$$RF$mut$u20$$u5b$T$u5d$$u20$as$u20$alloc..collections..vec_deque..ring_slices..RingSlices$GT$8split_at17hec75ea3db4121ae9E"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %_19, [0 x i32]* nonnull align 4 %buf.0, i64 %buf.1, i64 %tail)
  br label %bb5

bb1:                                              ; preds = %start
; call <&mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices>::split_at
  call void @"_ZN98_$LT$$RF$mut$u20$$u5b$T$u5d$$u20$as$u20$alloc..collections..vec_deque..ring_slices..RingSlices$GT$8split_at17hec75ea3db4121ae9E"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %_10, [0 x i32]* nonnull align 4 %buf.0, i64 %buf.1, i64 0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %_10 to { [0 x i32]*, i64 }*
  %3 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %2, i32 0, i32 0
  %empty.0 = load [0 x i32]*, [0 x i32]** %3, align 8, !nonnull !3
  %4 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %2, i32 0, i32 1
  %empty.1 = load i64, i64* %4, align 8
  store i8 1, i8* %_29, align 1
  %5 = getelementptr inbounds { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %_10, i32 0, i32 1
  %6 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %5, i32 0, i32 0
  %buf.01 = load [0 x i32]*, [0 x i32]** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %5, i32 0, i32 1
  %buf.12 = load i64, i64* %7, align 8
  store i8 0, i8* %_29, align 1
; invoke <&mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices>::slice
  %8 = invoke { [0 x i32]*, i64 } @"_ZN98_$LT$$RF$mut$u20$$u5b$T$u5d$$u20$as$u20$alloc..collections..vec_deque..ring_slices..RingSlices$GT$5slice17hf257221c7ed8202eE"([0 x i32]* nonnull align 4 %buf.01, i64 %buf.12, i64 %tail, i64 %head)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_12.0 = extractvalue { [0 x i32]*, i64 } %8, 0
  %_12.1 = extractvalue { [0 x i32]*, i64 } %8, 1
  %9 = bitcast { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %0 to { [0 x i32]*, i64 }*
  %10 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %9, i32 0, i32 0
  store [0 x i32]* %_12.0, [0 x i32]** %10, align 8
  %11 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %9, i32 0, i32 1
  store i64 %_12.1, i64* %11, align 8
  %12 = getelementptr inbounds { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %0, i32 0, i32 1
  %13 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %12, i32 0, i32 0
  store [0 x i32]* %empty.0, [0 x i32]** %13, align 8
  %14 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %12, i32 0, i32 1
  store i64 %empty.1, i64* %14, align 8
  store i8 0, i8* %_29, align 1
  br label %bb7

bb10:                                             ; preds = %cleanup
  %15 = load i8, i8* %_29, align 1, !range !4
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb16, label %bb11

cleanup:                                          ; preds = %bb2
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb10

bb11:                                             ; preds = %bb16, %bb10
  br label %bb12

bb16:                                             ; preds = %bb10
  br label %bb11

bb12:                                             ; preds = %bb14, %bb15, %bb11
  %22 = bitcast { i8*, i32 }* %1 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27

bb7:                                              ; preds = %bb13, %bb3
  ret void

bb5:                                              ; preds = %bb4
  store i8 1, i8* %_28, align 1
  %28 = bitcast { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %_19 to { [0 x i32]*, i64 }*
  %29 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %28, i32 0, i32 0
  %mid.0 = load [0 x i32]*, [0 x i32]** %29, align 8, !nonnull !3
  %30 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %28, i32 0, i32 1
  %mid.1 = load i64, i64* %30, align 8
  %31 = getelementptr inbounds { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %_19, i32 0, i32 1
  %32 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %31, i32 0, i32 0
  %right.0 = load [0 x i32]*, [0 x i32]** %32, align 8, !nonnull !3
  %33 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %31, i32 0, i32 1
  %right.1 = load i64, i64* %33, align 8
  store i8 0, i8* %_28, align 1
; invoke <&mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices>::split_at
  invoke void @"_ZN98_$LT$$RF$mut$u20$$u5b$T$u5d$$u20$as$u20$alloc..collections..vec_deque..ring_slices..RingSlices$GT$8split_at17hec75ea3db4121ae9E"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %_23, [0 x i32]* nonnull align 4 %mid.0, i64 %mid.1, i64 %head)
          to label %bb6 unwind label %cleanup3

bb6:                                              ; preds = %bb5
  %34 = bitcast { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %_23 to { [0 x i32]*, i64 }*
  %35 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %34, i32 0, i32 0
  %left.0 = load [0 x i32]*, [0 x i32]** %35, align 8, !nonnull !3
  %36 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %34, i32 0, i32 1
  %left.1 = load i64, i64* %36, align 8
  br label %bb13

bb9:                                              ; preds = %bb8, %cleanup3
  br label %bb15

cleanup3:                                         ; preds = %bb5
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  %39 = extractvalue { i8*, i32 } %37, 1
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %39, i32* %41, align 8
  br label %bb9

bb13:                                             ; preds = %bb6
  %42 = bitcast { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %0 to { [0 x i32]*, i64 }*
  %43 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %42, i32 0, i32 0
  store [0 x i32]* %right.0, [0 x i32]** %43, align 8
  %44 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %42, i32 0, i32 1
  store i64 %right.1, i64* %44, align 8
  %45 = getelementptr inbounds { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %0, i32 0, i32 1
  %46 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %45, i32 0, i32 0
  store [0 x i32]* %left.0, [0 x i32]** %46, align 8
  %47 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %45, i32 0, i32 1
  store i64 %left.1, i64* %47, align 8
  store i8 0, i8* %_28, align 1
  br label %bb7

bb8:                                              ; No predecessors!
  br label %bb9

bb15:                                             ; preds = %bb9
  %48 = load i8, i8* %_28, align 1, !range !4
  %49 = trunc i8 %48 to i1
  br i1 %49, label %bb14, label %bb12

bb14:                                             ; preds = %bb15
  br label %bb12
}

; alloc::collections::vec_deque::VecDeque<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque17VecDeque$LT$T$GT$3new17hbc1e5c15c23a133aE"(%"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture sret(%"alloc::collections::vec_deque::VecDeque<i32>") dereferenceable(32) %0) unnamed_addr #1 {
start:
; call alloc::collections::vec_deque::VecDeque<T,A>::new_in
  call void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$6new_in17h10cf73298abb8f82E"(%"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture sret(%"alloc::collections::vec_deque::VecDeque<i32>") dereferenceable(32) %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::collections::vec_deque::VecDeque<T,A>::buffer_read
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$11buffer_read17h444cbb02290a8addE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %off) unnamed_addr #1 {
start:
  %0 = alloca i32*, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::ptr
  %_5 = call i32* @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3ptr17hdd8e5bfe8e5937cbE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i32, i32* %_5, i64 %off
  store i32* %1, i32** %0, align 8
  %_3.i.i = load i32*, i32** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::read
  %2 = call i32 @_ZN4core3ptr4read17h456bad090857e86bE(i32* %_3.i.i)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i32 %2
}

; alloc::collections::vec_deque::VecDeque<T,A>::buffer_write
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$12buffer_write17he08f55c7c0a9d722E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %off, i32 %value) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i32*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
; invoke alloc::collections::vec_deque::VecDeque<T,A>::ptr
  %_6 = invoke i32* @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3ptr17hdd8e5bfe8e5937cbE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i32, i32* %_6, i64 %off
  store i32* %2, i32** %0, align 8
  %_3.i.i = load i32*, i32** %0, align 8
  br label %bb2

bb6:                                              ; preds = %cleanup
  %3 = load i8, i8* %_10, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb5, label %bb4

cleanup:                                          ; preds = %bb2, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_10, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hac31ff096f16c309E(i32* %_3.i.i, i32 %value)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  ret void

bb4:                                              ; preds = %bb5, %bb6
  %10 = bitcast { i8*, i32 }* %1 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb5:                                              ; preds = %bb6
  br label %bb4
}

; alloc::collections::vec_deque::VecDeque<T,A>::as_mut_slices
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$13as_mut_slices17h3a0de2c22ec9241aE"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, %"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %1 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %head = load i64, i64* %1, align 8
  %2 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %tail = load i64, i64* %2, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::buffer_as_mut_slice
  %3 = call { [0 x i32]*, i64 } @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$19buffer_as_mut_slice17h746b3e19f36344beE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  %buf.0 = extractvalue { [0 x i32]*, i64 } %3, 0
  %buf.1 = extractvalue { [0 x i32]*, i64 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::vec_deque::ring_slices::RingSlices::ring_slices
  call void @_ZN5alloc11collections9vec_deque11ring_slices10RingSlices11ring_slices17h717baa4788680befE({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, [0 x i32]* nonnull align 4 %buf.0, i64 %buf.1, i64 %head, i64 %tail)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::collections::vec_deque::VecDeque<T,A>::with_capacity_in
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$16with_capacity_in17h46da1b03af15f7daE"(%"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture sret(%"alloc::collections::vec_deque::VecDeque<i32>") dereferenceable(32) %0, i64 %capacity) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_15 = alloca i8, align 1
  store i8 0, i8* %_15, align 1
  store i8 1, i8* %_15, align 1
  %_5 = add i64 %capacity, 1
; invoke core::cmp::max
  %_4 = invoke i64 @_ZN4core3cmp3max17hd4dddf8168eaa5f5E(i64 %_5, i64 2)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke core::num::<impl usize>::next_power_of_two
  %cap = invoke i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17ha90e5d4f46918584E"(i64 %_4)
          to label %bb2 unwind label %cleanup

bb8:                                              ; preds = %cleanup
  %2 = load i8, i8* %_15, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb7, label %bb6

cleanup:                                          ; preds = %bb4, %bb3, %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb8

bb2:                                              ; preds = %bb1
  %_9 = icmp ugt i64 %cap, %capacity
  %_8 = xor i1 %_9, true
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  store i8 0, i8* %_15, align 1
; invoke alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %9 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h9c04ede60a409e3aE"(i64 %cap)
          to label %bb5 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [17 x i8] }>* @alloc619 to [0 x i8]*), i64 17, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc621 to %"core::panic::location::Location"*)) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb3
  unreachable

bb5:                                              ; preds = %bb4
  %_12.0 = extractvalue { i32*, i64 } %9, 0
  %_12.1 = extractvalue { i32*, i64 } %9, 1
  %10 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %0 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %0, i32 0, i32 1
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %0, i32 0, i32 2
  %13 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %12, i32 0, i32 0
  store i32* %_12.0, i32** %13, align 8
  %14 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %12, i32 0, i32 1
  store i64 %_12.1, i64* %14, align 8
  ret void

bb6:                                              ; preds = %bb7, %bb8
  %15 = bitcast { i8*, i32 }* %1 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb7:                                              ; preds = %bb8
  br label %bb6
}

; alloc::collections::vec_deque::VecDeque<T,A>::buffer_as_mut_slice
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$19buffer_as_mut_slice17h746b3e19f36344beE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
; call alloc::collections::vec_deque::VecDeque<T,A>::ptr
  %_5 = call i32* @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3ptr17hdd8e5bfe8e5937cbE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::vec_deque::VecDeque<T,A>::cap
  %_7 = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h42611ce19bbc50edE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::slice::raw::from_raw_parts_mut
  %0 = call { [0 x i32]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h06850e1640adb2f0E(i32* %_5, i64 %_7)
  %_4.0 = extractvalue { [0 x i32]*, i64 } %0, 0
  %_4.1 = extractvalue { [0 x i32]*, i64 } %0, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %1 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %_4.0, 0
  %2 = insertvalue { [0 x i32]*, i64 } %1, i64 %_4.1, 1
  ret { [0 x i32]*, i64 } %2
}

; alloc::collections::vec_deque::VecDeque<T,A>::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$19copy_nonoverlapping17h7c4ada2b1c2348a0E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %dst, i64 %src, i64 %len) unnamed_addr #1 {
start:
  %0 = alloca i32*, align 8
  %1 = alloca i32*, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::ptr
  %_16 = call i32* @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3ptr17hdd8e5bfe8e5937cbE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i32, i32* %_16, i64 %src
  store i32* %2, i32** %1, align 8
  %_3.i.i = load i32*, i32** %1, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::collections::vec_deque::VecDeque<T,A>::ptr
  %_20 = call i32* @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3ptr17hdd8e5bfe8e5937cbE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = getelementptr inbounds i32, i32* %_20, i64 %dst
  store i32* %3, i32** %0, align 8
  %_3.i.i1 = load i32*, i32** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h9f2894b20e788521E(i32* %_3.i.i, i32* %_3.i.i1, i64 %len)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret void
}

; alloc::collections::vec_deque::VecDeque<T,A>::handle_capacity_increase
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$24handle_capacity_increase17h1ef4f41a367cd953E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %old_capacity) unnamed_addr #1 {
start:
; call alloc::collections::vec_deque::VecDeque<T,A>::cap
  %new_capacity = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h42611ce19bbc50edE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_6 = load i64, i64* %0, align 8
  %1 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %_7 = load i64, i64* %1, align 8
  %_5 = icmp ule i64 %_6, %_7
  br i1 %_5, label %bb8, label %bb2

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %2, align 8
  %3 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_12 = load i64, i64* %3, align 8
  %_10 = sub i64 %old_capacity, %_12
  %_8 = icmp ult i64 %_9, %_10
  br i1 %_8, label %bb3, label %bb5

bb8:                                              ; preds = %bb7, %bb1
  ret void

bb5:                                              ; preds = %bb2
  %4 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_22 = load i64, i64* %4, align 8
  %_20 = sub i64 %old_capacity, %_22
  %new_tail = sub i64 %new_capacity, %_20
  %5 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_26 = load i64, i64* %5, align 8
  %6 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_29 = load i64, i64* %6, align 8
  %_27 = sub i64 %old_capacity, %_29
; call alloc::collections::vec_deque::VecDeque<T,A>::copy_nonoverlapping
  call void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$19copy_nonoverlapping17h7c4ada2b1c2348a0E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %new_tail, i64 %_26, i64 %_27)
  br label %bb6

bb3:                                              ; preds = %bb2
  %7 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %_16 = load i64, i64* %7, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::copy_nonoverlapping
  call void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$19copy_nonoverlapping17h7c4ada2b1c2348a0E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %old_capacity, i64 0, i64 %_16)
  br label %bb4

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %9 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %old_capacity
  store i64 %11, i64* %8, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb4
  br label %bb8

bb6:                                              ; preds = %bb5
  %12 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  store i64 %new_tail, i64* %12, align 8
  br label %bb7
}

; alloc::collections::vec_deque::VecDeque<T,A>::cap
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h42611ce19bbc50edE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = icmp eq i64 4, 0
  br i1 %2, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i64 -9223372036854775808, i64* %1, align 8
  br label %bb5

bb3:                                              ; preds = %bb1
  %_3 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 2
  %3 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %_3, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  store i64 %4, i64* %0, align 8
  %5 = load i64, i64* %0, align 8
  store i64 %5, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4
  %6 = load i64, i64* %1, align 8
  ret i64 %6
}

; alloc::collections::vec_deque::VecDeque<T,A>::len
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3len17hb2a64a1454a7208aE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_2 = load i64, i64* %0, align 8
  %1 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %_3 = load i64, i64* %1, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::cap
  %_4 = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h42611ce19bbc50edE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::vec_deque::count
  %2 = call i64 @_ZN5alloc11collections9vec_deque5count17h89ce3e2e8adf9118E(i64 %_2, i64 %_3, i64 %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %2
}

; alloc::collections::vec_deque::VecDeque<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3ptr17hdd8e5bfe8e5937cbE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_2 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 2
; call alloc::raw_vec::RawVec<T,A>::ptr
  %0 = call i32* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h2813706079f70524E"({ i32*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %0
}

; alloc::collections::vec_deque::VecDeque<T,A>::grow
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$4grow17hca6a8fe7c781f839E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #3 {
start:
; call alloc::collections::vec_deque::VecDeque<T,A>::is_full
  %_2 = call zeroext i1 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$7is_full17h12b3811a3fcd349bE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb9

bb9:                                              ; preds = %bb8, %bb1
  ret void

bb2:                                              ; preds = %bb1
; call alloc::collections::vec_deque::VecDeque<T,A>::cap
  %old_cap = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h42611ce19bbc50edE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_7 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 2
; call alloc::raw_vec::RawVec<T,A>::reserve_exact
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13reserve_exact17h6b32af0fb464dbbeE"({ i32*, i64 }* align 8 dereferenceable(16) %_7, i64 %old_cap, i64 %old_cap)
  br label %bb4

bb4:                                              ; preds = %bb3
; call alloc::collections::vec_deque::VecDeque<T,A>::cap
  %_12 = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h42611ce19bbc50edE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_14 = mul i64 %old_cap, 2
  %_11 = icmp eq i64 %_12, %_14
  %_10 = xor i1 %_11, true
  br i1 %_10, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
; call alloc::collections::vec_deque::VecDeque<T,A>::handle_capacity_increase
  call void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$24handle_capacity_increase17h1ef4f41a367cd953E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %old_cap)
  br label %bb8

bb6:                                              ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc622 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc624 to %"core::panic::location::Location"*)) #20
  unreachable

bb8:                                              ; preds = %bb7
  br label %bb9
}

; alloc::collections::vec_deque::VecDeque<T,A>::new_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$6new_in17h10cf73298abb8f82E"(%"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture sret(%"alloc::collections::vec_deque::VecDeque<i32>") dereferenceable(32) %0) unnamed_addr #1 {
start:
; call alloc::collections::vec_deque::VecDeque<T,A>::with_capacity_in
  call void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$16with_capacity_in17h46da1b03af15f7daE"(%"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture sret(%"alloc::collections::vec_deque::VecDeque<i32>") dereferenceable(32) %0, i64 7)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::collections::vec_deque::VecDeque<T,A>::is_full
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$7is_full17h12b3811a3fcd349bE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
; call alloc::collections::vec_deque::VecDeque<T,A>::cap
  %_3 = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h42611ce19bbc50edE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::vec_deque::VecDeque<T,A>::len
  %_5 = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3len17hb2a64a1454a7208aE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_2 = sub i64 %_3, %_5
  %0 = icmp eq i64 %_2, 1
  ret i1 %0
}

; alloc::collections::vec_deque::VecDeque<T,A>::is_empty
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$8is_empty17h275b30950da8cbb9E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_2 = load i64, i64* %0, align 8
  %1 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %_3 = load i64, i64* %1, align 8
  %2 = icmp eq i64 %_2, %_3
  ret i1 %2
}

; alloc::collections::vec_deque::VecDeque<T,A>::wrap_add
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$8wrap_add17h185e623dadd42f12E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %idx, i64 %addend) unnamed_addr #1 {
start:
  %0 = add i64 %idx, %addend
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::vec_deque::VecDeque<T,A>::cap
  %_7 = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h42611ce19bbc50edE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::collections::vec_deque::wrap_index
  %1 = call i64 @_ZN5alloc11collections9vec_deque10wrap_index17h909d7b98d962443aE(i64 %0, i64 %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %1
}

; alloc::collections::vec_deque::VecDeque<T,A>::pop_front
; Function Attrs: nonlazybind uwtable
define { i32, i32 } @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$9pop_front17h72e3770e59225659E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = alloca { i32, i32 }, align 4
; call alloc::collections::vec_deque::VecDeque<T,A>::is_empty
  %_2 = call zeroext i1 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$8is_empty17h275b30950da8cbb9E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %1 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %tail = load i64, i64* %1, align 8
  %2 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_7 = load i64, i64* %2, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::wrap_add
  %_5 = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$8wrap_add17h185e623dadd42f12E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %_7, i64 1)
  br label %bb4

bb2:                                              ; preds = %bb1
  %3 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %3, align 4
  br label %bb6

bb6:                                              ; preds = %bb5, %bb2
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4, !range !61
  %6 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = insertvalue { i32, i32 } undef, i32 %5, 0
  %9 = insertvalue { i32, i32 } %8, i32 %7, 1
  ret { i32, i32 } %9

bb4:                                              ; preds = %bb3
  %10 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  store i64 %_5, i64* %10, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::buffer_read
  %_8 = call i32 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$11buffer_read17h444cbb02290a8addE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %tail)
  br label %bb5

bb5:                                              ; preds = %bb4
  %11 = bitcast { i32, i32 }* %0 to %"core::option::Option<i32>::Some"*
  %12 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %11, i32 0, i32 1
  store i32 %_8, i32* %12, align 4
  %13 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %13, align 4
  br label %bb6
}

; alloc::collections::vec_deque::VecDeque<T,A>::push_back
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$9push_back17h3e7b987af523ec8cE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i32 %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
; invoke alloc::collections::vec_deque::VecDeque<T,A>::is_full
  %_3 = invoke zeroext i1 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$7is_full17h12b3811a3fcd349bE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb9:                                              ; preds = %cleanup
  %1 = load i8, i8* %_14, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb8, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb2, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb9

bb4:                                              ; preds = %bb3, %bb1
  %8 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %head = load i64, i64* %8, align 8
  %9 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %_10 = load i64, i64* %9, align 8
; invoke alloc::collections::vec_deque::VecDeque<T,A>::wrap_add
  %_8 = invoke i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$8wrap_add17h185e623dadd42f12E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %_10, i64 1)
          to label %bb5 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke alloc::collections::vec_deque::VecDeque<T,A>::grow
  invoke void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$4grow17hca6a8fe7c781f839E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br label %bb4

bb5:                                              ; preds = %bb4
  %10 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  store i64 %_8, i64* %10, align 8
  store i8 0, i8* %_14, align 1
; invoke alloc::collections::vec_deque::VecDeque<T,A>::buffer_write
  invoke void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$12buffer_write17he08f55c7c0a9d722E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %head, i32 %value)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  ret void

bb7:                                              ; preds = %bb8, %bb9
  %11 = bitcast { i8*, i32 }* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb8:                                              ; preds = %bb9
  br label %bb7
}

; alloc::collections::vec_deque::count
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN5alloc11collections9vec_deque5count17h89ce3e2e8adf9118E(i64 %tail, i64 %head, i64 %size) unnamed_addr #1 {
start:
  %0 = sub i64 %head, %tail
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = sub i64 %size, 1
  %1 = and i64 %0, %_7
  ret i64 %1
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN5alloc2rc11is_dangling17h07969d082db96a8bE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %ptr) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %ptr to {}*
  %address = ptrtoint {}* %_3 to i64
  %0 = icmp eq i64 %address, -1
  ret i1 %0
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN5alloc2rc11is_dangling17h0ec41a9c70d0b41dE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %ptr) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %ptr to {}*
  %address = ptrtoint {}* %_3 to i64
  %0 = icmp eq i64 %address, -1
  ret i1 %0
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN5alloc2rc11is_dangling17h3f7f2b285d04ab36E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %ptr) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %ptr to {}*
  %address = ptrtoint {}* %_3 to i64
  %0 = icmp eq i64 %address, -1
  ret i1 %0
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN5alloc2rc11is_dangling17h8913c71ffb6883f7E(%"alloc::sync::ArcInner<std::thread::Inner>"* %ptr) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::sync::ArcInner<std::thread::Inner>"* %ptr to {}*
  %address = ptrtoint {}* %_3 to i64
  %0 = icmp eq i64 %address, -1
  ret i1 %0
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN5alloc2rc11is_dangling17h917b409f24fe1ae9E(%"alloc::sync::ArcInner<_ShuffledOrder>"* %ptr) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"* %ptr to {}*
  %address = ptrtoint {}* %_3 to i64
  %0 = icmp eq i64 %address, -1
  ret i1 %0
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN5alloc2rc11is_dangling17ha0ed97a679796c2cE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %ptr) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %ptr to {}*
  %address = ptrtoint {}* %_3 to i64
  %0 = icmp eq i64 %address, -1
  ret i1 %0
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN5alloc2rc11is_dangling17hf39d54d07c9612e7E(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %ptr) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %ptr to {}*
  %address = ptrtoint {}* %_3 to i64
  %0 = icmp eq i64 %address, -1
  ret i1 %0
}

; alloc::vec::Vec<T>::with_capacity
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h334d68fe986639a5E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, i64 %capacity) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::with_capacity_in
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h6367e63980e9519aE"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, i64 %capacity)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h61c0c20f3da59db7E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0) unnamed_addr #1 {
start:
  %1 = bitcast %"alloc::vec::Vec<&str>"* %0 to { i64*, i64 }*
  %2 = load i64*, i64** getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i64*, i64 }*), i32 0, i32 0), align 8, !nonnull !3
  %3 = load i64, i64* getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i64*, i64 }*), i32 0, i32 1), align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  store i64* %2, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h90f73329dbd0eaf4E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0) unnamed_addr #1 {
start:
  %1 = bitcast %"alloc::vec::Vec<u8>"* %0 to { i8*, i64 }*
  %2 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @2 to { i8*, i64 }*), i32 0, i32 0), align 8, !nonnull !3
  %3 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @2 to { i8*, i64 }*), i32 0, i32 1), align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hac3d51c04ae6b72fE"(%"alloc::vec::Vec<_ProbeNode>"* noalias nocapture sret(%"alloc::vec::Vec<_ProbeNode>") dereferenceable(24) %0) unnamed_addr #1 {
start:
  %1 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %0 to { i64*, i64 }*
  %2 = load i64*, i64** getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i64*, i64 }*), i32 0, i32 0), align 8, !nonnull !3
  %3 = load i64, i64* getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i64*, i64 }*), i32 0, i32 1), align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  store i64* %2, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hac4933d5ed8c4dd5E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* noalias nocapture sret(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>") dereferenceable(24) %0) unnamed_addr #1 {
start:
  %1 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %0 to { i64*, i64 }*
  %2 = load i64*, i64** getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i64*, i64 }*), i32 0, i32 0), align 8, !nonnull !3
  %3 = load i64, i64* getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i64*, i64 }*), i32 0, i32 1), align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  store i64* %2, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  ret void
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h077409901e46bab2E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hc8cc31f7a73e0763E"({ i64*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h5d5d9a22cd470a43E"(%"alloc::vec::Vec<_ProbeNode>"* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::vec::Vec<_ProbeNode>"* %ptr
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h0a9babc4cf2e66cdE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h8f94d0d8fedff5b8E"({ i8*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7521696f5c8d2f92E"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %ptr
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h80f2d9979e978176E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call { [0 x i8]*, i64 }* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h889e8fd3ea6c99e8E"({ i64*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h418ff4f5e7b4bba7E"({ [0 x i8]*, i64 }* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret { [0 x i8]*, i64 }* %ptr
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %_ProbeNode* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hcd537bfdbcc97474E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call %_ProbeNode* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hc7de19d5484eeac5E"({ i64*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he7755547226c5e87E"(%_ProbeNode* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %_ProbeNode* %ptr
}

; alloc::vec::Vec<T,A>::extend_desugared
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17hf16d97cd4ef4f28fE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %iterator) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_30 = alloca i8, align 1
  %_14 = alloca { i64, { i64, i64 } }, align 8
  %_3 = alloca { i8*, i64 }, align 8
  store i8 0, i8* %_30, align 1
  br label %bb1

bb1:                                              ; preds = %bb14, %start
; invoke <core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator>::next
  %3 = invoke { i8*, i64 } @"_ZN91_$LT$core..str..iter..SplitWhitespace$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50da6162aa518711E"(%"core::str::iter::SplitWhitespace"* align 8 dereferenceable(64) %iterator)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store { i8*, i64 } %3, { i8*, i64 }* %_3, align 8
  %4 = bitcast { i8*, i64 }* %_3 to {}**
  %5 = load {}*, {}** %4, align 8
  %6 = icmp eq {}* %5, null
  %_5 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_5, 1
  br i1 %7, label %bb3, label %bb15

bb19:                                             ; preds = %bb18, %cleanup
  br label %bb20

cleanup:                                          ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb19

bb3:                                              ; preds = %bb2
  store i8 1, i8* %_30, align 1
  %13 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 0
  %element.0 = load [0 x i8]*, [0 x i8]** %14, align 8, !nonnull !3
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 1
  %element.1 = load i64, i64* %15, align 8
; invoke alloc::vec::Vec<T,A>::len
  %len = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hc27cd16412d07b15E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self)
          to label %bb4 unwind label %cleanup1

bb15:                                             ; preds = %bb2
  br label %bb16

bb16:                                             ; preds = %bb15
  br label %bb17

bb17:                                             ; preds = %bb16
  ret void

bb4:                                              ; preds = %bb3
; invoke alloc::vec::Vec<T,A>::capacity
  %_11 = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17h4190f7015d2615faE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self)
          to label %bb5 unwind label %cleanup1

bb22:                                             ; preds = %cleanup1
  %16 = load i8, i8* %_30, align 1, !range !4
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb21, label %bb18

cleanup1:                                         ; preds = %bb13, %bb12, %bb10, %bb8, %bb6, %bb4, %bb3
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb22

bb5:                                              ; preds = %bb4
  %_9 = icmp eq i64 %len, %_11
  br i1 %_9, label %bb6, label %bb10

bb10:                                             ; preds = %bb9, %bb5
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_22 = invoke { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h80f2d9979e978176E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self)
          to label %bb11 unwind label %cleanup1

bb6:                                              ; preds = %bb5
; invoke <core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN91_$LT$core..str..iter..SplitWhitespace$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4088af0cda2b2972E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_14, %"core::str::iter::SplitWhitespace"* align 8 dereferenceable(64) %iterator)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
  %23 = bitcast { i64, { i64, i64 } }* %_14 to i64*
  %lower = load i64, i64* %23, align 8
  %24 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1)
  store i64 %24, i64* %1, align 8
  %25 = load i64, i64* %1, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17ha780d27437cc8368E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self, i64 %25)
          to label %bb9 unwind label %cleanup1

bb9:                                              ; preds = %bb8
  br label %bb10

bb11:                                             ; preds = %bb10
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_22, i64 %len
  store { [0 x i8]*, i64 }* %26, { [0 x i8]*, i64 }** %0, align 8
  %_3.i.i = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %0, align 8
  br label %bb12

bb12:                                             ; preds = %bb11
  store i8 0, i8* %_30, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h6c2b7fb957ce2bd5E({ [0 x i8]*, i64 }* %_3.i.i, [0 x i8]* nonnull align 1 %element.0, i64 %element.1)
          to label %bb13 unwind label %cleanup1

bb13:                                             ; preds = %bb12
  %_28 = add i64 %len, 1
; invoke alloc::vec::Vec<T,A>::set_len
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h89201302637a2f5fE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self, i64 %_28)
          to label %bb14 unwind label %cleanup1

bb14:                                             ; preds = %bb13
  store i8 0, i8* %_30, align 1
  br label %bb1

bb18:                                             ; preds = %bb21, %bb22
  br label %bb19

bb21:                                             ; preds = %bb22
  br label %bb18

bb20:                                             ; preds = %bb19
  %27 = bitcast { i8*, i32 }* %2 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = insertvalue { i8*, i32 } undef, i8* %28, 0
  %32 = insertvalue { i8*, i32 } %31, i32 %30, 1
  resume { i8*, i32 } %32
}

; alloc::vec::Vec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h6367e63980e9519aE"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, i64 %capacity) unnamed_addr #1 {
start:
; call alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %1 = call { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h0381018cf4e1418eE"(i64 %capacity)
  %_3.0 = extractvalue { i64*, i64 } %1, 0
  %_3.1 = extractvalue { i64*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"alloc::vec::Vec<&str>"* %0 to { i64*, i64 }*
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  store i64* %_3.0, i64** %3, align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %_3.1, i64* %4, align 8
  %5 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  ret void
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hc27cd16412d07b15E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hc7bd20c65ce1ffc1E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hba27a2738773ba46E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 dereferenceable(24) %self, %_ProbeNode* noalias nocapture dereferenceable(48) %value) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca %_ProbeNode*, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_16 = alloca i8, align 1
  %_15 = alloca %_ProbeNode, align 8
  store i8 0, i8* %_16, align 1
  store i8 1, i8* %_16, align 1
  %3 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %3, align 8
  %_6 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %self to { i64*, i64 }*
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %1, align 8
  %6 = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp eq i64 %_4, %6
  br i1 %_3, label %bb2, label %bb4

bb10:                                             ; preds = %cleanup
  %7 = load i8, i8* %_16, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb8

cleanup:                                          ; preds = %bb6, %bb4, %bb2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb10

bb4:                                              ; preds = %bb3, %bb1
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_10 = invoke %_ProbeNode* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hcd537bfdbcc97474E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 dereferenceable(24) %self)
          to label %bb5 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h01b28b92cf69b569E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 dereferenceable(24) %self, i64 1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br label %bb4

bb5:                                              ; preds = %bb4
  %14 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %self, i32 0, i32 1
  %_12 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %_10, i64 %_12
  store %_ProbeNode* %15, %_ProbeNode** %0, align 8
  %_3.i.i = load %_ProbeNode*, %_ProbeNode** %0, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_16, align 1
  %16 = bitcast %_ProbeNode* %_15 to i8*
  %17 = bitcast %_ProbeNode* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 48, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hcaa0fc1afee3a217E(%_ProbeNode* %_3.i.i, %_ProbeNode* noalias nocapture dereferenceable(48) %_15)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %18 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %self, i32 0, i32 1
  %19 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %self, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %18, align 8
  ret void

bb8:                                              ; preds = %bb9, %bb10
  %22 = bitcast { i8*, i32 }* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27

bb9:                                              ; preds = %bb10
  br label %bb8
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hd50270fb45f3f664E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self, %"alloc::vec::Vec<_ProbeNode>"* noalias nocapture dereferenceable(24) %value) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca %"alloc::vec::Vec<_ProbeNode>"*, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_16 = alloca i8, align 1
  %_15 = alloca %"alloc::vec::Vec<_ProbeNode>", align 8
  store i8 0, i8* %_16, align 1
  store i8 1, i8* %_16, align 1
  %3 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %3, align 8
  %_6 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self to { i64*, i64 }*
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %1, align 8
  %6 = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp eq i64 %_4, %6
  br i1 %_3, label %bb2, label %bb4

bb10:                                             ; preds = %cleanup
  %7 = load i8, i8* %_16, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb8

cleanup:                                          ; preds = %bb6, %bb4, %bb2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb10

bb4:                                              ; preds = %bb3, %bb1
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_10 = invoke %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h077409901e46bab2E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self)
          to label %bb5 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hcef34f0b36b35197E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self, i64 1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br label %bb4

bb5:                                              ; preds = %bb4
  %14 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %_12 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %_10, i64 %_12
  store %"alloc::vec::Vec<_ProbeNode>"* %15, %"alloc::vec::Vec<_ProbeNode>"** %0, align 8
  %_3.i.i = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %0, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_16, align 1
  %16 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %_15 to i8*
  %17 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h326761242312cb15E(%"alloc::vec::Vec<_ProbeNode>"* %_3.i.i, %"alloc::vec::Vec<_ProbeNode>"* noalias nocapture dereferenceable(24) %_15)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %18 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %19 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %18, align 8
  ret void

bb8:                                              ; preds = %bb9, %bb10
  %22 = bitcast { i8*, i32 }* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<alloc::vec::Vec<probe::_ProbeNode>>
  call void @"_ZN4core3ptr61drop_in_place$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$17hb53d16845f929a0bE"(%"alloc::vec::Vec<_ProbeNode>"* %value) #21
  br label %bb8
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %_ProbeNode* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h132dcc88242aa219E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call %_ProbeNode* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hc7de19d5484eeac5E"({ i64*, i64 }* align 8 dereferenceable(16) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he7755547226c5e87E"(%_ProbeNode* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %_ProbeNode* %ptr
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h928d4ea5844e7b72E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h8f94d0d8fedff5b8E"({ i8*, i64 }* align 8 dereferenceable(16) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7521696f5c8d2f92E"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %ptr
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hb426edd68b186961E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hc8cc31f7a73e0763E"({ i64*, i64 }* align 8 dereferenceable(16) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h5d5d9a22cd470a43E"(%"alloc::vec::Vec<_ProbeNode>"* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::vec::Vec<_ProbeNode>"* %ptr
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h01b28b92cf69b569E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 dereferenceable(24) %self, i64 %additional) unnamed_addr #0 {
start:
  %_4 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %self to { i64*, i64 }*
  %0 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hb1d5e09706cb03abE"({ i64*, i64 }* align 8 dereferenceable(16) %_4, i64 %_5, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17ha780d27437cc8368E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self, i64 %additional) unnamed_addr #0 {
start:
  %_4 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17he4f9c955c311eee6E"({ i64*, i64 }* align 8 dereferenceable(16) %_4, i64 %_5, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hcef34f0b36b35197E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self, i64 %additional) unnamed_addr #0 {
start:
  %_4 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self to { i64*, i64 }*
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h5f8d07dcca347e9aE"({ i64*, i64 }* align 8 dereferenceable(16) %_4, i64 %_5, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T,A>::set_len
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h89201302637a2f5fE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self, i64 %new_len) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1
  store i64 %new_len, i64* %0, align 8
  ret void
}

; alloc::vec::Vec<T,A>::capacity
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17h4190f7015d2615faE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %_2 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_2, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %3
}

; alloc::vec::Vec<T,A>::allocator
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17h4e6a616f8e2940e9E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::allocator
  %0 = call nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17he9522bed611e8f24E"({ i64*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::alloc::Global"* %0
}

; alloc::vec::into_iter::IntoIter<T,A>::as_raw_mut_slice
; Function Attrs: nonlazybind uwtable
define { [0 x { [0 x i8]*, i64 }]*, i64 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$16as_raw_mut_slice17hff1180c0fc999618E"(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %0) unnamed_addr #0 {
start:
  %self = alloca %"alloc::vec::into_iter::IntoIter<&str>"*, align 8
  store %"alloc::vec::into_iter::IntoIter<&str>"* %0, %"alloc::vec::into_iter::IntoIter<&str>"** %self, align 8
  %1 = load %"alloc::vec::into_iter::IntoIter<&str>"*, %"alloc::vec::into_iter::IntoIter<&str>"** %self, align 8, !nonnull !3
  %2 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %1, i32 0, i32 4
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %2, align 8
; call <&mut I as core::iter::traits::exact_size::ExactSizeIterator>::len
  %_4 = call i64 @"_ZN83_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17haa9ff13aca1c8332E"(%"alloc::vec::into_iter::IntoIter<&str>"** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %3 = call { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hb54d7315376a0ca5E({ [0 x i8]*, i64 }* %_3, i64 %_4)
  %4 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %3, 0
  %5 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %3, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } undef, [0 x { [0 x i8]*, i64 }]* %4, 0
  %7 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %6, i64 %5, 1
  ret { [0 x { [0 x i8]*, i64 }]*, i64 } %7
}

; alloc::sync::Arc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h354c0303e186beabE"(i64* nonnull %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %1
}

; alloc::sync::Arc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h49ee03c3292eae07E"(i64* nonnull %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %1
}

; alloc::sync::Arc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h6270433c17b958d8E"(i64* nonnull %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %1
}

; alloc::sync::Arc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h8689ea27ee34c249E"(i64* nonnull %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %1
}

; alloc::sync::Arc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h8ca3733706dd8307E"(i64* nonnull %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %1
}

; alloc::sync::Arc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h9f98e47ac918afd7E"(i64* nonnull %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %1
}

; alloc::sync::Arc<T>::get_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(16) %"std::sync::mutex::Mutex<i32>"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h42f735e27a9da3ddE"(i64** align 8 dereferenceable(8) %this) unnamed_addr #1 {
start:
  %_6 = load i64*, i64** %this, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfc0766754e9ef31aE"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_5, i32 0, i32 2
  ret %"std::sync::mutex::Mutex<i32>"* %_4
}

; alloc::sync::Arc<T>::get_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(64) %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h8f4eb41716877c3cE"(i64** align 8 dereferenceable(8) %this) unnamed_addr #1 {
start:
  %_6 = load i64*, i64** %this, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h872f7f01d67858c8E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_5, i32 0, i32 2
  ret %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %_4
}

; alloc::sync::Arc<T>::get_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h9a7af1800bf083c6E"(i64** align 8 dereferenceable(8) %this) unnamed_addr #1 {
start:
  %_6 = load i64*, i64** %this, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc4770d86511dec59E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_5, i32 0, i32 2
  ret %"std::sync::mutex::Mutex<std::fs::File>"* %_4
}

; alloc::sync::Arc<T>::get_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(96) %_ShuffledOrder* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17hbd7ad4c2ecefe74eE"(i64** align 8 dereferenceable(8) %this) unnamed_addr #1 {
start:
  %_6 = load i64*, i64** %this, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hde19dc7ef38947acE"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds %"alloc::sync::ArcInner<_ShuffledOrder>", %"alloc::sync::ArcInner<_ShuffledOrder>"* %_5, i32 0, i32 2
  ret %_ShuffledOrder* %_4
}

; alloc::sync::Arc<T>::get_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %"std::thread::Inner"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17hc0b8135be316b894E"(i64** align 8 dereferenceable(8) %this) unnamed_addr #1 {
start:
  %_6 = load i64*, i64** %this, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<std::thread::Inner>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2e842de11dd0669E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::Inner>", %"alloc::sync::ArcInner<std::thread::Inner>"* %_5, i32 0, i32 2
  ret %"std::thread::Inner"* %_4
}

; alloc::sync::Arc<T>::get_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(40) %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17hc3e797e5fa44f1cbE"(i64** align 8 dereferenceable(8) %this) unnamed_addr #1 {
start:
  %_6 = load i64*, i64** %this, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h866f1319c178a983E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_5, i32 0, i32 2
  ret %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_4
}

; alloc::sync::Arc<T>::get_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %_ProbeSemaphore* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17hce00a1c93f42c426E"(i64** align 8 dereferenceable(8) %this) unnamed_addr #1 {
start:
  %_6 = load i64*, i64** %this, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h704b8dd402217635E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds %"alloc::sync::ArcInner<_ProbeSemaphore>", %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_5, i32 0, i32 2
  ret %_ProbeSemaphore* %_4
}

; alloc::sync::Arc<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h154cb68e20c954f4E"(%_ShuffledOrder* noalias nocapture dereferenceable(96) %data) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_9 = alloca %_ShuffledOrder, align 8
  %_8 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_7 = alloca %"core::sync::atomic::AtomicUsize", align 8
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
; invoke alloc::alloc::exchange_malloc
  %_5 = invoke i8* @_ZN5alloc5alloc15exchange_malloc17h57a613d82b8ec97bE(i64 112, i64 8)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_6 = bitcast i8* %_5 to %"alloc::sync::ArcInner<_ShuffledOrder>"*
; invoke core::sync::atomic::AtomicUsize::new
  %3 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0cffde5d32d76b65E(i64 1)
          to label %bb2 unwind label %cleanup1

bb10:                                             ; preds = %bb8, %cleanup
  %4 = load i8, i8* %_14, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb9, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
  store i64 %3, i64* %1, align 8
  %11 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  %12 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false)
; invoke core::sync::atomic::AtomicUsize::new
  %13 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0cffde5d32d76b65E(i64 1)
          to label %bb3 unwind label %cleanup1

bb8:                                              ; preds = %cleanup1
  %14 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"* %_6 to i64*
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17he333175ffa2c3209E(i64* nonnull %14) #21
  br label %bb10

cleanup1:                                         ; preds = %bb2, %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb8

bb3:                                              ; preds = %bb2
  store i64 %13, i64* %0, align 8
  %20 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  %21 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 8, i1 false)
  store i8 0, i8* %_14, align 1
  %22 = bitcast %_ShuffledOrder* %_9 to i8*
  %23 = bitcast %_ShuffledOrder* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 96, i1 false)
  %24 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"* %_6 to %"core::sync::atomic::AtomicUsize"*
  %25 = bitcast %"core::sync::atomic::AtomicUsize"* %24 to i8*
  %26 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 8, i1 false)
  %27 = getelementptr inbounds %"alloc::sync::ArcInner<_ShuffledOrder>", %"alloc::sync::ArcInner<_ShuffledOrder>"* %_6, i32 0, i32 1
  %28 = bitcast %"core::sync::atomic::AtomicUsize"* %27 to i8*
  %29 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 8, i1 false)
  %30 = getelementptr inbounds %"alloc::sync::ArcInner<_ShuffledOrder>", %"alloc::sync::ArcInner<_ShuffledOrder>"* %_6, i32 0, i32 2
  %31 = bitcast %_ShuffledOrder* %30 to i8*
  %32 = bitcast %_ShuffledOrder* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 96, i1 false)
; invoke alloc::boxed::Box<T,A>::leak
  %_12 = invoke align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h4ae920099949d1efE"(%"alloc::sync::ArcInner<_ShuffledOrder>"* noalias nonnull align 8 %_6)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke <T as core::convert::Into<U>>::into
  %_10 = invoke nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h81c2c491daa17a97E"(%"alloc::sync::ArcInner<_ShuffledOrder>"* align 8 dereferenceable(112) %_12)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke alloc::sync::Arc<T>::from_inner
  %33 = invoke nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h8689ea27ee34c249E"(i64* nonnull %_10)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  ret i64* %33

bb7:                                              ; preds = %bb9, %bb10
  %34 = bitcast { i8*, i32 }* %2 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<probe::_ShuffledOrder>
  call void @"_ZN4core3ptr42drop_in_place$LT$probe.._ShuffledOrder$GT$17h616dca8d91bbf8efE"(%_ShuffledOrder* %data) #21
  br label %bb7
}

; alloc::sync::Arc<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h316493d06dc9d257E"(i128 %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_9 = alloca %"std::sync::mutex::Mutex<std::fs::File>", align 8
  %_8 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_7 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %4 = alloca i128, align 8
  %data = alloca %"std::sync::mutex::Mutex<std::fs::File>", align 8
  store i128 %0, i128* %4, align 8
  %5 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %data to i8*
  %6 = bitcast i128* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false)
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
; invoke alloc::alloc::exchange_malloc
  %_5 = invoke i8* @_ZN5alloc5alloc15exchange_malloc17h57a613d82b8ec97bE(i64 32, i64 8)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_6 = bitcast i8* %_5 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"*
; invoke core::sync::atomic::AtomicUsize::new
  %7 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0cffde5d32d76b65E(i64 1)
          to label %bb2 unwind label %cleanup1

bb10:                                             ; preds = %bb8, %cleanup
  %8 = load i8, i8* %_14, align 1, !range !4
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb9, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
  store i64 %7, i64* %2, align 8
  %15 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  %16 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 8, i1 false)
; invoke core::sync::atomic::AtomicUsize::new
  %17 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0cffde5d32d76b65E(i64 1)
          to label %bb3 unwind label %cleanup1

bb8:                                              ; preds = %cleanup1
  %18 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_6 to i64*
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h425ce378e3bc3298E(i64* nonnull %18) #21
  br label %bb10

cleanup1:                                         ; preds = %bb2, %bb1
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %21, i32* %23, align 8
  br label %bb8

bb3:                                              ; preds = %bb2
  store i64 %17, i64* %1, align 8
  %24 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  %25 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 8, i1 false)
  store i8 0, i8* %_14, align 1
  %26 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %_9 to i8*
  %27 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_6 to %"core::sync::atomic::AtomicUsize"*
  %29 = bitcast %"core::sync::atomic::AtomicUsize"* %28 to i8*
  %30 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 8, i1 false)
  %31 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_6, i32 0, i32 1
  %32 = bitcast %"core::sync::atomic::AtomicUsize"* %31 to i8*
  %33 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 8, i1 false)
  %34 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_6, i32 0, i32 2
  %35 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %34 to i8*
  %36 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false)
; invoke alloc::boxed::Box<T,A>::leak
  %_12 = invoke align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hdda854841a575df1E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* noalias nonnull align 8 %_6)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke <T as core::convert::Into<U>>::into
  %_10 = invoke nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h6f1e7dacadd1d509E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* align 8 dereferenceable(32) %_12)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke alloc::sync::Arc<T>::from_inner
  %37 = invoke nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h6270433c17b958d8E"(i64* nonnull %_10)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  ret i64* %37

bb7:                                              ; preds = %bb9, %bb10
  %38 = bitcast { i8*, i32 }* %3 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = insertvalue { i8*, i32 } undef, i8* %39, 0
  %43 = insertvalue { i8*, i32 } %42, i32 %41, 1
  resume { i8*, i32 } %43

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<std::fs::File>>
  call void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$17h89c9ec421ac4ddbcE"(%"std::sync::mutex::Mutex<std::fs::File>"* %data) #21
  br label %bb7
}

; alloc::sync::Arc<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h594516a9034e590bE"(%_ProbeSemaphore* noalias nocapture dereferenceable(32) %data) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_9 = alloca %_ProbeSemaphore, align 8
  %_8 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_7 = alloca %"core::sync::atomic::AtomicUsize", align 8
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
; invoke alloc::alloc::exchange_malloc
  %_5 = invoke i8* @_ZN5alloc5alloc15exchange_malloc17h57a613d82b8ec97bE(i64 48, i64 8)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_6 = bitcast i8* %_5 to %"alloc::sync::ArcInner<_ProbeSemaphore>"*
; invoke core::sync::atomic::AtomicUsize::new
  %3 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0cffde5d32d76b65E(i64 1)
          to label %bb2 unwind label %cleanup1

bb10:                                             ; preds = %bb8, %cleanup
  %4 = load i8, i8* %_14, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb9, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
  store i64 %3, i64* %1, align 8
  %11 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  %12 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false)
; invoke core::sync::atomic::AtomicUsize::new
  %13 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0cffde5d32d76b65E(i64 1)
          to label %bb3 unwind label %cleanup1

bb8:                                              ; preds = %cleanup1
  %14 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_6 to i64*
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17he9daf7b50ff3b4c4E(i64* nonnull %14) #21
  br label %bb10

cleanup1:                                         ; preds = %bb2, %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb8

bb3:                                              ; preds = %bb2
  store i64 %13, i64* %0, align 8
  %20 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  %21 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 8, i1 false)
  store i8 0, i8* %_14, align 1
  %22 = bitcast %_ProbeSemaphore* %_9 to i8*
  %23 = bitcast %_ProbeSemaphore* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false)
  %24 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_6 to %"core::sync::atomic::AtomicUsize"*
  %25 = bitcast %"core::sync::atomic::AtomicUsize"* %24 to i8*
  %26 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 8, i1 false)
  %27 = getelementptr inbounds %"alloc::sync::ArcInner<_ProbeSemaphore>", %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_6, i32 0, i32 1
  %28 = bitcast %"core::sync::atomic::AtomicUsize"* %27 to i8*
  %29 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 8, i1 false)
  %30 = getelementptr inbounds %"alloc::sync::ArcInner<_ProbeSemaphore>", %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_6, i32 0, i32 2
  %31 = bitcast %_ProbeSemaphore* %30 to i8*
  %32 = bitcast %_ProbeSemaphore* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 32, i1 false)
; invoke alloc::boxed::Box<T,A>::leak
  %_12 = invoke align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hd47190b8be19ac8aE"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* noalias nonnull align 8 %_6)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke <T as core::convert::Into<U>>::into
  %_10 = invoke nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hef70f0486f9251d2E"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* align 8 dereferenceable(48) %_12)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke alloc::sync::Arc<T>::from_inner
  %33 = invoke nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h9f98e47ac918afd7E"(i64* nonnull %_10)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  ret i64* %33

bb7:                                              ; preds = %bb9, %bb10
  %34 = bitcast { i8*, i32 }* %2 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<probe::_ProbeSemaphore>
  call void @"_ZN4core3ptr43drop_in_place$LT$probe.._ProbeSemaphore$GT$17hb43e876c214f6d0dE"(%_ProbeSemaphore* %data) #21
  br label %bb7
}

; alloc::sync::Arc<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17haa7e3e030d35ba9aE"(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* noalias nocapture dereferenceable(40) %data) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_9 = alloca %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", align 8
  %_8 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_7 = alloca %"core::sync::atomic::AtomicUsize", align 8
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
; invoke alloc::alloc::exchange_malloc
  %_5 = invoke i8* @_ZN5alloc5alloc15exchange_malloc17h57a613d82b8ec97bE(i64 56, i64 8)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_6 = bitcast i8* %_5 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"*
; invoke core::sync::atomic::AtomicUsize::new
  %3 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0cffde5d32d76b65E(i64 1)
          to label %bb2 unwind label %cleanup1

bb10:                                             ; preds = %bb8, %cleanup
  %4 = load i8, i8* %_14, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb9, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
  store i64 %3, i64* %1, align 8
  %11 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  %12 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false)
; invoke core::sync::atomic::AtomicUsize::new
  %13 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0cffde5d32d76b65E(i64 1)
          to label %bb3 unwind label %cleanup1

bb8:                                              ; preds = %cleanup1
  %14 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_6 to i64*
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h0dca797bf98e628eE(i64* nonnull %14) #21
  br label %bb10

cleanup1:                                         ; preds = %bb2, %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb8

bb3:                                              ; preds = %bb2
  store i64 %13, i64* %0, align 8
  %20 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  %21 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 8, i1 false)
  store i8 0, i8* %_14, align 1
  %22 = bitcast %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_9 to i8*
  %23 = bitcast %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 40, i1 false)
  %24 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_6 to %"core::sync::atomic::AtomicUsize"*
  %25 = bitcast %"core::sync::atomic::AtomicUsize"* %24 to i8*
  %26 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 8, i1 false)
  %27 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_6, i32 0, i32 1
  %28 = bitcast %"core::sync::atomic::AtomicUsize"* %27 to i8*
  %29 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 8, i1 false)
  %30 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_6, i32 0, i32 2
  %31 = bitcast %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %30 to i8*
  %32 = bitcast %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 40, i1 false)
; invoke alloc::boxed::Box<T,A>::leak
  %_12 = invoke align 8 dereferenceable(56) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hf37c179566d8fa83E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* noalias nonnull align 8 %_6)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke <T as core::convert::Into<U>>::into
  %_10 = invoke nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h315a009f07720020E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* align 8 dereferenceable(56) %_12)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke alloc::sync::Arc<T>::from_inner
  %33 = invoke nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h8ca3733706dd8307E"(i64* nonnull %_10)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  ret i64* %33

bb7:                                              ; preds = %bb9, %bb10
  %34 = bitcast { i8*, i32 }* %2 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>
  call void @"_ZN4core3ptr115drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$17h00da6a240cade04aE"(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %data) #21
  br label %bb7
}

; alloc::sync::Arc<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17haebb950ed951d03aE"(i128 %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_9 = alloca %"std::sync::mutex::Mutex<i32>", align 8
  %_8 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_7 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %4 = alloca i128, align 8
  %data = alloca %"std::sync::mutex::Mutex<i32>", align 8
  store i128 %0, i128* %4, align 8
  %5 = bitcast %"std::sync::mutex::Mutex<i32>"* %data to i8*
  %6 = bitcast i128* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false)
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
; invoke alloc::alloc::exchange_malloc
  %_5 = invoke i8* @_ZN5alloc5alloc15exchange_malloc17h57a613d82b8ec97bE(i64 32, i64 8)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_6 = bitcast i8* %_5 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"*
; invoke core::sync::atomic::AtomicUsize::new
  %7 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0cffde5d32d76b65E(i64 1)
          to label %bb2 unwind label %cleanup1

bb10:                                             ; preds = %bb8, %cleanup
  %8 = load i8, i8* %_14, align 1, !range !4
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb9, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
  store i64 %7, i64* %2, align 8
  %15 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  %16 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 8, i1 false)
; invoke core::sync::atomic::AtomicUsize::new
  %17 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0cffde5d32d76b65E(i64 1)
          to label %bb3 unwind label %cleanup1

bb8:                                              ; preds = %cleanup1
  %18 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_6 to i64*
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hd00f59f4f6ec39daE(i64* nonnull %18) #21
  br label %bb10

cleanup1:                                         ; preds = %bb2, %bb1
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %21, i32* %23, align 8
  br label %bb8

bb3:                                              ; preds = %bb2
  store i64 %17, i64* %1, align 8
  %24 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  %25 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 8, i1 false)
  store i8 0, i8* %_14, align 1
  %26 = bitcast %"std::sync::mutex::Mutex<i32>"* %_9 to i8*
  %27 = bitcast %"std::sync::mutex::Mutex<i32>"* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_6 to %"core::sync::atomic::AtomicUsize"*
  %29 = bitcast %"core::sync::atomic::AtomicUsize"* %28 to i8*
  %30 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 8, i1 false)
  %31 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_6, i32 0, i32 1
  %32 = bitcast %"core::sync::atomic::AtomicUsize"* %31 to i8*
  %33 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 8, i1 false)
  %34 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_6, i32 0, i32 2
  %35 = bitcast %"std::sync::mutex::Mutex<i32>"* %34 to i8*
  %36 = bitcast %"std::sync::mutex::Mutex<i32>"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false)
; invoke alloc::boxed::Box<T,A>::leak
  %_12 = invoke align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hd4475cf2f4dec23dE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* noalias nonnull align 8 %_6)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke <T as core::convert::Into<U>>::into
  %_10 = invoke nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h997b43fcaeac141cE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* align 8 dereferenceable(32) %_12)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke alloc::sync::Arc<T>::from_inner
  %37 = invoke nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h354c0303e186beabE"(i64* nonnull %_10)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  ret i64* %37

bb7:                                              ; preds = %bb9, %bb10
  %38 = bitcast { i8*, i32 }* %3 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = insertvalue { i8*, i32 } undef, i8* %39, 0
  %43 = insertvalue { i8*, i32 } %42, i32 %41, 1
  resume { i8*, i32 } %43

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<i32>>
  call void @"_ZN4core3ptr55drop_in_place$LT$std..sync..mutex..Mutex$LT$i32$GT$$GT$17he055f369a53c8fbbE"(%"std::sync::mutex::Mutex<i32>"* %data) #21
  br label %bb7
}

; alloc::sync::Arc<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17hdaa2466a72be110aE"(%"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* noalias nocapture dereferenceable(64) %data) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_9 = alloca %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>", align 8
  %_8 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_7 = alloca %"core::sync::atomic::AtomicUsize", align 8
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
; invoke alloc::alloc::exchange_malloc
  %_5 = invoke i8* @_ZN5alloc5alloc15exchange_malloc17h57a613d82b8ec97bE(i64 80, i64 8)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_6 = bitcast i8* %_5 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"*
; invoke core::sync::atomic::AtomicUsize::new
  %3 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0cffde5d32d76b65E(i64 1)
          to label %bb2 unwind label %cleanup1

bb10:                                             ; preds = %bb8, %cleanup
  %4 = load i8, i8* %_14, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb9, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
  store i64 %3, i64* %1, align 8
  %11 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  %12 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false)
; invoke core::sync::atomic::AtomicUsize::new
  %13 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0cffde5d32d76b65E(i64 1)
          to label %bb3 unwind label %cleanup1

bb8:                                              ; preds = %cleanup1
  %14 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_6 to i64*
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h2430b622fe1bb6f3E(i64* nonnull %14) #21
  br label %bb10

cleanup1:                                         ; preds = %bb2, %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb8

bb3:                                              ; preds = %bb2
  store i64 %13, i64* %0, align 8
  %20 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  %21 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 8, i1 false)
  store i8 0, i8* %_14, align 1
  %22 = bitcast %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %_9 to i8*
  %23 = bitcast %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 64, i1 false)
  %24 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_6 to %"core::sync::atomic::AtomicUsize"*
  %25 = bitcast %"core::sync::atomic::AtomicUsize"* %24 to i8*
  %26 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 8, i1 false)
  %27 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_6, i32 0, i32 1
  %28 = bitcast %"core::sync::atomic::AtomicUsize"* %27 to i8*
  %29 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 8, i1 false)
  %30 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_6, i32 0, i32 2
  %31 = bitcast %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %30 to i8*
  %32 = bitcast %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 64, i1 false)
; invoke alloc::boxed::Box<T,A>::leak
  %_12 = invoke align 8 dereferenceable(80) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hc19dc55a3771fb9cE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* noalias nonnull align 8 %_6)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke <T as core::convert::Into<U>>::into
  %_10 = invoke nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h585344ce46fd1001E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* align 8 dereferenceable(80) %_12)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke alloc::sync::Arc<T>::from_inner
  %33 = invoke nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h49ee03c3292eae07E"(i64* nonnull %_10)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  ret i64* %33

bb7:                                              ; preds = %bb9, %bb10
  %34 = bitcast { i8*, i32 }* %2 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>
  call void @"_ZN4core3ptr123drop_in_place$LT$std..sync..mutex..Mutex$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$17hb49b018df8ca0356E"(%"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %data) #21
  br label %bb7
}

; alloc::sync::Arc<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h124341822c55de09E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h658ae350fac57424E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %0
}

; alloc::sync::Arc<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(48) %"alloc::sync::ArcInner<std::thread::Inner>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h1d7ab8989ecae8c3E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 dereferenceable(48) %"alloc::sync::ArcInner<std::thread::Inner>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h243238f4f41b3061E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::thread::Inner>"* %0
}

; alloc::sync::Arc<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h6eca7f2a2849cebfE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hc4491d588e25de7dE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<_ShuffledOrder>"* %0
}

; alloc::sync::Arc<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17ha46566dcf72aa1cdE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h6de7b88e086a8cb8E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %0
}

; alloc::sync::Arc<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17hcb973b638a4d1956E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h650020f77966e249E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %0
}

; alloc::sync::Arc<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(80) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17hdb923bc1e0c71d43E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 dereferenceable(80) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17he6cf5e9aa5b116d4E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %0
}

; alloc::sync::Arc<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(56) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17hdccac49e0dbd3294E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 dereferenceable(56) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hdd285de3a190b397E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %0
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h5dd15e1c15577d76E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #3 {
start:
  %_7 = alloca i64*, align 8
; call alloc::sync::Arc<T>::get_mut_unchecked
  %_4 = call align 8 dereferenceable(16) %"std::sync::mutex::Mutex<i32>"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h42f735e27a9da3ddE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<i32>>
  call void @"_ZN4core3ptr55drop_in_place$LT$std..sync..mutex..Mutex$LT$i32$GT$$GT$17he055f369a53c8fbbE"(%"std::sync::mutex::Mutex<i32>"* %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = load i64*, i64** %self, align 8, !nonnull !3
  store i64* %_8, i64** %_7, align 8
  %0 = load i64*, i64** %_7, align 8, !nonnull !3
; call core::mem::drop
  call void @_ZN4core3mem4drop17ha29366189bce7364E(i64* nonnull %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h91116168056012bdE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #3 {
start:
  %_7 = alloca i64*, align 8
; call alloc::sync::Arc<T>::get_mut_unchecked
  %_4 = call align 8 dereferenceable(96) %_ShuffledOrder* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17hbd7ad4c2ecefe74eE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<probe::_ShuffledOrder>
  call void @"_ZN4core3ptr42drop_in_place$LT$probe.._ShuffledOrder$GT$17h616dca8d91bbf8efE"(%_ShuffledOrder* %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = load i64*, i64** %self, align 8, !nonnull !3
  store i64* %_8, i64** %_7, align 8
  %0 = load i64*, i64** %_7, align 8, !nonnull !3
; call core::mem::drop
  call void @_ZN4core3mem4drop17he591a75830c85f49E(i64* nonnull %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h95f37a3a8d402a49E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #3 {
start:
  %_7 = alloca i64*, align 8
; call alloc::sync::Arc<T>::get_mut_unchecked
  %_4 = call align 8 dereferenceable(64) %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h8f4eb41716877c3cE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>
  call void @"_ZN4core3ptr123drop_in_place$LT$std..sync..mutex..Mutex$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$17hb49b018df8ca0356E"(%"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = load i64*, i64** %self, align 8, !nonnull !3
  store i64* %_8, i64** %_7, align 8
  %0 = load i64*, i64** %_7, align 8, !nonnull !3
; call core::mem::drop
  call void @_ZN4core3mem4drop17hacb47c8f9fd65165E(i64* nonnull %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17ha00ebf553855c456E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #3 {
start:
  %_7 = alloca i64*, align 8
; call alloc::sync::Arc<T>::get_mut_unchecked
  %_4 = call align 8 dereferenceable(40) %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17hc3e797e5fa44f1cbE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>
  call void @"_ZN4core3ptr115drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$17h00da6a240cade04aE"(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = load i64*, i64** %self, align 8, !nonnull !3
  store i64* %_8, i64** %_7, align 8
  %0 = load i64*, i64** %_7, align 8, !nonnull !3
; call core::mem::drop
  call void @_ZN4core3mem4drop17h043cba090ce1d3a0E(i64* nonnull %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17he33c99f4a40a2080E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #3 {
start:
  %_7 = alloca i64*, align 8
; call alloc::sync::Arc<T>::get_mut_unchecked
  %_4 = call align 8 dereferenceable(32) %_ProbeSemaphore* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17hce00a1c93f42c426E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<probe::_ProbeSemaphore>
  call void @"_ZN4core3ptr43drop_in_place$LT$probe.._ProbeSemaphore$GT$17hb43e876c214f6d0dE"(%_ProbeSemaphore* %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = load i64*, i64** %self, align 8, !nonnull !3
  store i64* %_8, i64** %_7, align 8
  %0 = load i64*, i64** %_7, align 8, !nonnull !3
; call core::mem::drop
  call void @_ZN4core3mem4drop17h8e8c97d2cb448404E(i64* nonnull %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17he9858cc0c388a199E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #3 {
start:
  %_7 = alloca i64*, align 8
; call alloc::sync::Arc<T>::get_mut_unchecked
  %_4 = call align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h9a7af1800bf083c6E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<std::fs::File>>
  call void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$17h89c9ec421ac4ddbcE"(%"std::sync::mutex::Mutex<std::fs::File>"* %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = load i64*, i64** %self, align 8, !nonnull !3
  store i64* %_8, i64** %_7, align 8
  %0 = load i64*, i64** %_7, align 8, !nonnull !3
; call core::mem::drop
  call void @_ZN4core3mem4drop17hf01d2244c09443eaE(i64* nonnull %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf2ad74cb58a330eaE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #3 {
start:
  %_7 = alloca i64*, align 8
; call alloc::sync::Arc<T>::get_mut_unchecked
  %_4 = call align 8 dereferenceable(32) %"std::thread::Inner"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17hc0b8135be316b894E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<std::thread::Inner>
  call void @"_ZN4core3ptr39drop_in_place$LT$std..thread..Inner$GT$17h470b4b3833e11d14E"(%"std::thread::Inner"* %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = load i64*, i64** %self, align 8, !nonnull !3
  store i64* %_8, i64** %_7, align 8
  %0 = load i64*, i64** %_7, align 8, !nonnull !3
; call core::mem::drop
  call void @_ZN4core3mem4drop17h243edcfcd53af04fE(i64* nonnull %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h0254dc2a2a19794cE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  %_4 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h704b8dd402217635E"(i64* nonnull %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17hf39d54d07c9612e7E(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_7 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %ptr = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h704b8dd402217635E"(i64* nonnull %_7)
  br label %bb5

bb3:                                              ; preds = %bb2
  %1 = bitcast { i64*, i8* }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %2 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64*, i8* } undef, i64* %3, 0
  %7 = insertvalue { i64*, i8* } %6, i8* %5, 1
  ret { i64*, i8* } %7

bb5:                                              ; preds = %bb4
  %_9 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %ptr to %"core::sync::atomic::AtomicUsize"*
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<_ProbeSemaphore>", %"alloc::sync::ArcInner<_ProbeSemaphore>"* %ptr, i32 0, i32 1
  %8 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %10 = bitcast i64** %9 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %10, align 8
  %11 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8, !nonnull !3
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 0
  store i64* %13, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 1
  store i64* %15, i64** %17, align 8
  br label %bb6
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h61d3168f826bc8abE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  %_4 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc4770d86511dec59E"(i64* nonnull %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17h07969d082db96a8bE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_7 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %ptr = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc4770d86511dec59E"(i64* nonnull %_7)
  br label %bb5

bb3:                                              ; preds = %bb2
  %1 = bitcast { i64*, i8* }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %2 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64*, i8* } undef, i64* %3, 0
  %7 = insertvalue { i64*, i8* } %6, i8* %5, 1
  ret { i64*, i8* } %7

bb5:                                              ; preds = %bb4
  %_9 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %ptr to %"core::sync::atomic::AtomicUsize"*
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %ptr, i32 0, i32 1
  %8 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %10 = bitcast i64** %9 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %10, align 8
  %11 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8, !nonnull !3
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 0
  store i64* %13, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 1
  store i64* %15, i64** %17, align 8
  br label %bb6
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h8812c7f399e508f2E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  %_4 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::thread::Inner>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2e842de11dd0669E"(i64* nonnull %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17h8913c71ffb6883f7E(%"alloc::sync::ArcInner<std::thread::Inner>"* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_7 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %ptr = call %"alloc::sync::ArcInner<std::thread::Inner>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2e842de11dd0669E"(i64* nonnull %_7)
  br label %bb5

bb3:                                              ; preds = %bb2
  %1 = bitcast { i64*, i8* }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %2 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64*, i8* } undef, i64* %3, 0
  %7 = insertvalue { i64*, i8* } %6, i8* %5, 1
  ret { i64*, i8* } %7

bb5:                                              ; preds = %bb4
  %_9 = bitcast %"alloc::sync::ArcInner<std::thread::Inner>"* %ptr to %"core::sync::atomic::AtomicUsize"*
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::Inner>", %"alloc::sync::ArcInner<std::thread::Inner>"* %ptr, i32 0, i32 1
  %8 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %10 = bitcast i64** %9 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %10, align 8
  %11 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8, !nonnull !3
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 0
  store i64* %13, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 1
  store i64* %15, i64** %17, align 8
  br label %bb6
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17ha83cca3d571fd010E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  %_4 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h866f1319c178a983E"(i64* nonnull %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17ha0ed97a679796c2cE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_7 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %ptr = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h866f1319c178a983E"(i64* nonnull %_7)
  br label %bb5

bb3:                                              ; preds = %bb2
  %1 = bitcast { i64*, i8* }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %2 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64*, i8* } undef, i64* %3, 0
  %7 = insertvalue { i64*, i8* } %6, i8* %5, 1
  ret { i64*, i8* } %7

bb5:                                              ; preds = %bb4
  %_9 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %ptr to %"core::sync::atomic::AtomicUsize"*
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %ptr, i32 0, i32 1
  %8 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %10 = bitcast i64** %9 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %10, align 8
  %11 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8, !nonnull !3
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 0
  store i64* %13, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 1
  store i64* %15, i64** %17, align 8
  br label %bb6
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17hab8732675bda275eE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  %_4 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfc0766754e9ef31aE"(i64* nonnull %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17h3f7f2b285d04ab36E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_7 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %ptr = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfc0766754e9ef31aE"(i64* nonnull %_7)
  br label %bb5

bb3:                                              ; preds = %bb2
  %1 = bitcast { i64*, i8* }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %2 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64*, i8* } undef, i64* %3, 0
  %7 = insertvalue { i64*, i8* } %6, i8* %5, 1
  ret { i64*, i8* } %7

bb5:                                              ; preds = %bb4
  %_9 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %ptr to %"core::sync::atomic::AtomicUsize"*
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %ptr, i32 0, i32 1
  %8 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %10 = bitcast i64** %9 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %10, align 8
  %11 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8, !nonnull !3
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 0
  store i64* %13, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 1
  store i64* %15, i64** %17, align 8
  br label %bb6
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17hacdc7e909555c83cE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  %_4 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hde19dc7ef38947acE"(i64* nonnull %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17h917b409f24fe1ae9E(%"alloc::sync::ArcInner<_ShuffledOrder>"* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_7 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %ptr = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hde19dc7ef38947acE"(i64* nonnull %_7)
  br label %bb5

bb3:                                              ; preds = %bb2
  %1 = bitcast { i64*, i8* }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %2 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64*, i8* } undef, i64* %3, 0
  %7 = insertvalue { i64*, i8* } %6, i8* %5, 1
  ret { i64*, i8* } %7

bb5:                                              ; preds = %bb4
  %_9 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"* %ptr to %"core::sync::atomic::AtomicUsize"*
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<_ShuffledOrder>", %"alloc::sync::ArcInner<_ShuffledOrder>"* %ptr, i32 0, i32 1
  %8 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %10 = bitcast i64** %9 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %10, align 8
  %11 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8, !nonnull !3
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 0
  store i64* %13, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 1
  store i64* %15, i64** %17, align 8
  br label %bb6
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17hea7a8ff65b68cef8E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  %_4 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h872f7f01d67858c8E"(i64* nonnull %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17h0ec41a9c70d0b41dE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_7 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %ptr = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h872f7f01d67858c8E"(i64* nonnull %_7)
  br label %bb5

bb3:                                              ; preds = %bb2
  %1 = bitcast { i64*, i8* }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %2 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64*, i8* } undef, i64* %3, 0
  %7 = insertvalue { i64*, i8* } %6, i8* %5, 1
  ret { i64*, i8* } %7

bb5:                                              ; preds = %bb4
  %_9 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %ptr to %"core::sync::atomic::AtomicUsize"*
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %ptr, i32 0, i32 1
  %8 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %10 = bitcast i64** %9 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %10, align 8
  %11 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8, !nonnull !3
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 0
  store i64* %13, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 1
  store i64* %15, i64** %17, align 8
  br label %bb6
}

; alloc::alloc::alloc_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc12alloc_zeroed17hff5f7584bc156d55E(i64 %0, i64 %1) unnamed_addr #1 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h3a06a07a4e9354b3E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc_zeroed(i64 %_2, i64 %_4) #22
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc15exchange_malloc17h57a613d82b8ec97bE(i64 %size, i64 %align) unnamed_addr #1 {
start:
  %_6 = alloca { i8*, i64 }, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
  %layout.0 = extractvalue { i64, i64 } %0, 0
  %layout.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %1 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h513321190ee97a91E"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc446 to %"alloc::alloc::Global"*), i64 %layout.0, i64 %layout.1)
  store { i8*, i64 } %1, { i8*, i64 }* %_6, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast { i8*, i64 }* %_6 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_9 = select i1 %4, i64 1, i64 0
  switch i64 %_9, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0
  %ptr.0 = load i8*, i8** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1
  %ptr.1 = load i64, i64* %6, align 8
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %7 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h7bc91b32bf505548E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb6

bb3:                                              ; preds = %bb2
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h4346a7dd05d4a0b2E(i64 %layout.0, i64 %layout.1) #23
  unreachable

bb6:                                              ; preds = %bb5
  ret i8* %7
}

; alloc::alloc::alloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc5alloc17h44c341ad1eb22769E(i64 %0, i64 %1) unnamed_addr #1 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h3a06a07a4e9354b3E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc(i64 %_2, i64 %_4) #22
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hdd2a7dc4cea9935bE(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #1 {
start:
  %_15 = alloca i8*, align 8
  %raw_ptr = alloca i8*, align 8
  %2 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = icmp eq i64 %_4, 0
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
; call core::alloc::layout::Layout::dangling
  %_7 = call nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17heb7d89ef707a3360E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb4

bb2:                                              ; preds = %bb1
  br i1 %zeroed, label %bb6, label %bb8

bb8:                                              ; preds = %bb2
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_13.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_13.1 = load i64, i64* %7, align 8, !range !26
; call alloc::alloc::alloc
  %8 = call i8* @_ZN5alloc5alloc5alloc17h44c341ad1eb22769E(i64 %_13.0, i64 %_13.1)
  store i8* %8, i8** %raw_ptr, align 8
  br label %bb9

bb6:                                              ; preds = %bb2
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_12.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_12.1 = load i64, i64* %10, align 8, !range !26
; call alloc::alloc::alloc_zeroed
  %11 = call i8* @_ZN5alloc5alloc12alloc_zeroed17hff5f7584bc156d55E(i64 %_12.0, i64 %_12.1)
  store i8* %11, i8** %raw_ptr, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  %_18 = load i8*, i8** %raw_ptr, align 8
; call core::ptr::non_null::NonNull<T>::new
  %_17 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hedb6990ce3412e2aE"(i8* %_18)
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10

bb11:                                             ; preds = %bb10
; call core::option::Option<T>::ok_or
  %_16 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17hac8c6c2f6e37b61eE"(i8* %_17)
  br label %bb12

bb12:                                             ; preds = %bb11
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6e158601a516dd81E"(i8* %_16)
  store i8* %12, i8** %_15, align 8
  br label %bb13

bb13:                                             ; preds = %bb12
  %13 = bitcast i8** %_15 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_20 = select i1 %15, i64 1, i64 0
  switch i64 %_20, label %bb15 [
    i64 0, label %bb14
    i64 1, label %bb16
  ]

bb15:                                             ; preds = %bb13
  unreachable

bb14:                                             ; preds = %bb13
  %val = load i8*, i8** %_15, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %16 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h3c187e7e0ecd81c2E"(i8* nonnull %val, i64 %_4)
  %_24.0 = extractvalue { i8*, i64 } %16, 0
  %_24.1 = extractvalue { i8*, i64 } %16, 1
  br label %bb18

bb16:                                             ; preds = %bb13
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %17 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h62dd9c26bfa1f216E"()
  store { i8*, i64 } %17, { i8*, i64 }* %2, align 8
  br label %bb17

bb17:                                             ; preds = %bb16
  br label %bb20

bb20:                                             ; preds = %bb19, %bb17
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = insertvalue { i8*, i64 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i64 } %22, i64 %21, 1
  ret { i8*, i64 } %23

bb18:                                             ; preds = %bb14
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_24.0, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_24.1, i64* %25, align 8
  br label %bb19

bb19:                                             ; preds = %bb5, %bb18
  br label %bb20

bb4:                                              ; preds = %bb3
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %26 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h3c187e7e0ecd81c2E"(i8* nonnull %_7, i64 0)
  %_6.0 = extractvalue { i8*, i64 } %26, 0
  %_6.1 = extractvalue { i8*, i64 } %26, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_6.0, i8** %27, align 8
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_6.1, i64* %28, align 8
  br label %bb19
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17hdc2e95a80e1f753dE(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #1 {
start:
  %4 = alloca i8*, align 8
  %_53 = alloca { i8*, i64 }, align 8
  %_31 = alloca i8*, align 8
  %_6 = alloca i64, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
; call core::alloc::layout::Layout::size
  %10 = call i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  store i64 %10, i64* %_6, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %11 = load i64, i64* %_6, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_9.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_9.1 = load i64, i64* %14, align 8, !range !26
; call alloc::alloc::Global::alloc_impl
  %15 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hdd2a7dc4cea9935bE(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %_9.0, i64 %_9.1, i1 zeroext %zeroed)
  store { i8*, i64 } %15, { i8*, i64 }* %5, align 8
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::alloc::layout::Layout::align
  %_14 = call i64 @_ZN4core5alloc6layout6Layout5align17h3a06a07a4e9354b3E({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::alloc::layout::Layout::align
  %_16 = call i64 @_ZN4core5alloc6layout6Layout5align17h3a06a07a4e9354b3E({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_13 = icmp eq i64 %_14, %_16
  br i1 %_13, label %bb7, label %bb8

bb8:                                              ; preds = %bb6
  %old_size1 = load i64, i64* %_6, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_56.0 = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_56.1 = load i64, i64* %17, align 8, !range !26
; call alloc::alloc::Global::alloc_impl
  %18 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hdd2a7dc4cea9935bE(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %_56.0, i64 %_56.1, i1 zeroext %zeroed)
  %_54.0 = extractvalue { i8*, i64 } %18, 0
  %_54.1 = extractvalue { i8*, i64 } %18, 1
  br label %bb26

bb7:                                              ; preds = %bb6
  %old_size = load i64, i64* %_6, align 8
; call core::alloc::layout::Layout::size
  %new_size = call i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb9

bb9:                                              ; preds = %bb7
; call core::alloc::layout::Layout::size
  %_23 = call i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  br label %bb10

bb10:                                             ; preds = %bb9
  %_21 = icmp uge i64 %new_size, %_23
  call void @llvm.assume(i1 %_21)
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %ptr)
  br label %bb12

bb12:                                             ; preds = %bb11
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  %_28.0 = load i64, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  %_28.1 = load i64, i64* %20, align 8, !range !26
; call alloc::alloc::realloc
  %raw_ptr = call i8* @_ZN5alloc5alloc7realloc17h5901dcdb55052a3dE(i8* %_26, i64 %_28.0, i64 %_28.1, i64 %new_size)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::ptr::non_null::NonNull<T>::new
  %_33 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hedb6990ce3412e2aE"(i8* %raw_ptr)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::option::Option<T>::ok_or
  %_32 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17hac8c6c2f6e37b61eE"(i8* %_33)
  br label %bb15

bb15:                                             ; preds = %bb14
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %21 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6e158601a516dd81E"(i8* %_32)
  store i8* %21, i8** %_31, align 8
  br label %bb16

bb16:                                             ; preds = %bb15
  %22 = bitcast i8** %_31 to {}**
  %23 = load {}*, {}** %22, align 8
  %24 = icmp eq {}* %23, null
  %_36 = select i1 %24, i64 1, i64 0
  switch i64 %_36, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ]

bb18:                                             ; preds = %bb16
  unreachable

bb17:                                             ; preds = %bb16
  %val = load i8*, i8** %_31, align 8, !nonnull !3
  br i1 %zeroed, label %bb21, label %bb24

bb19:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %25 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h62dd9c26bfa1f216E"()
  store { i8*, i64 } %25, { i8*, i64 }* %5, align 8
  br label %bb20

bb20:                                             ; preds = %bb19
  br label %bb37

bb37:                                             ; preds = %bb31, %bb20
  br label %bb38

bb24:                                             ; preds = %bb23, %bb17
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %26 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h3c187e7e0ecd81c2E"(i8* nonnull %val, i64 %new_size)
  %_48.0 = extractvalue { i8*, i64 } %26, 0
  %_48.1 = extractvalue { i8*, i64 } %26, 1
  br label %bb25

bb21:                                             ; preds = %bb17
  %27 = getelementptr inbounds i8, i8* %raw_ptr, i64 %old_size
  store i8* %27, i8** %4, align 8
  %_3.i.i = load i8*, i8** %4, align 8
  br label %bb22

bb22:                                             ; preds = %bb21
  %_45 = sub i64 %new_size, %old_size
; call core::intrinsics::write_bytes
  call void @_ZN4core10intrinsics11write_bytes17he9b94e9742774c94E(i8* %_3.i.i, i8 0, i64 %_45)
  br label %bb23

bb23:                                             ; preds = %bb22
  br label %bb24

bb25:                                             ; preds = %bb24
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0
  store i8* %_48.0, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1
  store i64 %_48.1, i64* %29, align 8
  br label %bb36

bb36:                                             ; preds = %bb3, %bb35, %bb25
  br label %bb38

bb26:                                             ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %30 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h29de4579da351e35E"(i8* %_54.0, i64 %_54.1)
  store { i8*, i64 } %30, { i8*, i64 }* %_53, align 8
  br label %bb27

bb27:                                             ; preds = %bb26
  %31 = bitcast { i8*, i64 }* %_53 to {}**
  %32 = load {}*, {}** %31, align 8
  %33 = icmp eq {}* %32, null
  %_58 = select i1 %33, i64 1, i64 0
  switch i64 %_58, label %bb29 [
    i64 0, label %bb28
    i64 1, label %bb30
  ]

bb29:                                             ; preds = %bb27
  unreachable

bb28:                                             ; preds = %bb27
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 0
  %val.0 = load i8*, i8** %34, align 8, !nonnull !3
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 1
  %val.1 = load i64, i64* %35, align 8
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_64 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %ptr)
  br label %bb32

bb30:                                             ; preds = %bb27
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %36 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h62dd9c26bfa1f216E"()
  store { i8*, i64 } %36, { i8*, i64 }* %5, align 8
  br label %bb31

bb31:                                             ; preds = %bb30
  br label %bb37

bb38:                                             ; preds = %bb36, %bb37
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = insertvalue { i8*, i64 } undef, i8* %38, 0
  %42 = insertvalue { i8*, i64 } %41, i64 %40, 1
  ret { i8*, i64 } %42

bb32:                                             ; preds = %bb28
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_66 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h7bc91b32bf505548E"(i8* nonnull %val.0, i64 %val.1)
  br label %bb33

bb33:                                             ; preds = %bb32
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb984a4318aa516b1E(i8* %_64, i8* %_66, i64 %old_size1)
  br label %bb34

bb34:                                             ; preds = %bb33
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  %_72.0 = load i64, i64* %43, align 8
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  %_72.1 = load i64, i64* %44, align 8, !range !26
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %_72.0, i64 %_72.1)
  br label %bb35

bb35:                                             ; preds = %bb34
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0
  store i8* %val.0, i8** %45, align 8
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1
  store i64 %val.1, i64* %46, align 8
  br label %bb36

bb3:                                              ; preds = %bb2
  br label %bb36
}

; alloc::alloc::dealloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc7dealloc17ha4eec2204bfa1e09E(i8* %ptr, i64 %0, i64 %1) unnamed_addr #1 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_6 = call i64 @_ZN4core5alloc6layout6Layout5align17h3a06a07a4e9354b3E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  call void @__rust_dealloc(i8* %ptr, i64 %_4, i64 %_6) #22
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::alloc::realloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc7realloc17h5901dcdb55052a3dE(i8* %ptr, i64 %0, i64 %1, i64 %new_size) unnamed_addr #1 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_5 = call i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_7 = call i64 @_ZN4core5alloc6layout6Layout5align17h3a06a07a4e9354b3E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_realloc(i8* %ptr, i64 %_5, i64 %_7, i64 %new_size) #22
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h0dca797bf98e628eE(i64* nonnull %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(56) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h20021e762d261d3fE"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 56, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(56) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h20021e762d261d3fE"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h54d0817549aa038cE"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h2430b622fe1bb6f3E(i64* nonnull %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(80) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h6c385f1eb60ac8c4E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 80, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(80) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h6c385f1eb60ac8c4E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h709d522373a78936E"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h2b8bcc8c79fdfe8bE(i64* nonnull %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(72) %"std::sys::unix::rwlock::RWLock"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hbba4ffdc55d30d0eE"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 72, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(72) %"std::sys::unix::rwlock::RWLock"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hbba4ffdc55d30d0eE"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hcecf9f78fc3dcc95E"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h404f68aca775681dE(i8* nonnull %0, i64 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64 }, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1
  store i64 %1, i64* %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { [0 x i8]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h605b1b0e8aecdc36E"({ i8*, i64 }* align 8 dereferenceable(16) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { [0 x i8]*, i64 } %7, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %7, 1
  %8 = mul i64 %_5.1, 1
  store i64 %8, i64* %3, align 8
  %size = load i64, i64* %3, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %14 = invoke { [0 x i8]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h605b1b0e8aecdc36E"({ i8*, i64 }* align 8 dereferenceable(16) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { [0 x i8]*, i64 } %14, 0
  %_9.1 = extractvalue { [0 x i8]*, i64 } %14, 1
  %15 = mul i64 %_9.1, 1
  store i64 1, i64* %2, align 8
  %align = load i64, i64* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %16 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %16, 0
  %layout.1 = extractvalue { i64, i64 } %16, 1
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %17, align 8, !nonnull !3
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1
  %_17.1 = load i64, i64* %18, align 8
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h1016864a5f4f9939E"(i8* nonnull %_17.0, i64 %_17.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %19 = bitcast { i8*, i32 }* %4 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h425ce378e3bc3298E(i64* nonnull %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hae74a84c60e0ee14E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 32, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hae74a84c60e0ee14E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hc74ae711b2115e99E"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h58d52de620c1d389E(i64* nonnull %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(40) %"std::sys::unix::mutex::Mutex"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hc424187d4a8cf610E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 40, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(40) %"std::sys::unix::mutex::Mutex"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hc424187d4a8cf610E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hfef3c3959d6e2d54E"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h70deaa3272da159bE(i8* nonnull %0, i64* align 8 dereferenceable(24) %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h9bdd6b8868b54b42E"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { {}*, [3 x i64]* } %7, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %7, 1
  %8 = bitcast [3 x i64]* %_5.1 to i64*
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = load i64, i64* %9, align 8, !invariant.load !3
  %11 = bitcast [3 x i64]* %_5.1 to i64*
  %12 = getelementptr inbounds i64, i64* %11, i64 2
  %13 = load i64, i64* %12, align 8, !invariant.load !3
  store i64 %10, i64* %3, align 8
  %size = load i64, i64* %3, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %19 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h9bdd6b8868b54b42E"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { {}*, [3 x i64]* } %19, 0
  %_9.1 = extractvalue { {}*, [3 x i64]* } %19, 1
  %20 = bitcast [3 x i64]* %_9.1 to i64*
  %21 = getelementptr inbounds i64, i64* %20, i64 1
  %22 = load i64, i64* %21, align 8, !invariant.load !3
  %23 = bitcast [3 x i64]* %_9.1 to i64*
  %24 = getelementptr inbounds i64, i64* %23, i64 2
  %25 = load i64, i64* %24, align 8, !invariant.load !3
  store i64 %25, i64* %2, align 8
  %align = load i64, i64* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %26 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %26, 0
  %layout.1 = extractvalue { i64, i64 } %26, 1
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %27, align 8, !nonnull !3
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  %_17.1 = load i64*, i64** %28, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h1cb888b8a9ff151aE"(i8* nonnull %_17.0, i64* align 8 dereferenceable(24) %_17.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %29 = bitcast { i8*, i32 }* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17hb36a4dd42a114811E(i64* nonnull %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(48) %"std::sys::unix::condvar::Condvar"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h740cc00071c4ad14E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 48, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(48) %"std::sys::unix::condvar::Condvar"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h740cc00071c4ad14E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h242dbd266fba8ff0E"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17hc0af9f1f20db982aE(i64* nonnull %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(24) %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h5d2ef60c613b156fE"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 24, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(24) %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h5d2ef60c613b156fE"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hce20c4eb9af55744E"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17hd00f59f4f6ec39daE(i64* nonnull %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hf83f4c4aba4e51f1E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 32, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hf83f4c4aba4e51f1E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hcf09ba3b1de98c95E"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17hd5261e32d5ee0931E(i8* nonnull %0, i64* align 8 dereferenceable(24) %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hfb2b2609348a8d90E"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { {}*, [3 x i64]* } %7, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %7, 1
  %8 = bitcast [3 x i64]* %_5.1 to i64*
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = load i64, i64* %9, align 8, !invariant.load !3
  %11 = bitcast [3 x i64]* %_5.1 to i64*
  %12 = getelementptr inbounds i64, i64* %11, i64 2
  %13 = load i64, i64* %12, align 8, !invariant.load !3
  store i64 %10, i64* %3, align 8
  %size = load i64, i64* %3, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %19 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hfb2b2609348a8d90E"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { {}*, [3 x i64]* } %19, 0
  %_9.1 = extractvalue { {}*, [3 x i64]* } %19, 1
  %20 = bitcast [3 x i64]* %_9.1 to i64*
  %21 = getelementptr inbounds i64, i64* %20, i64 1
  %22 = load i64, i64* %21, align 8, !invariant.load !3
  %23 = bitcast [3 x i64]* %_9.1 to i64*
  %24 = getelementptr inbounds i64, i64* %23, i64 2
  %25 = load i64, i64* %24, align 8, !invariant.load !3
  store i64 %25, i64* %2, align 8
  %align = load i64, i64* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %26 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %26, 0
  %layout.1 = extractvalue { i64, i64 } %26, 1
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %27, align 8, !nonnull !3
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  %_17.1 = load i64*, i64** %28, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h13b286389e531740E"(i8* nonnull %_17.0, i64* align 8 dereferenceable(24) %_17.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %29 = bitcast { i8*, i32 }* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17he333175ffa2c3209E(i64* nonnull %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h7010f1eccf948b64E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 112, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h7010f1eccf948b64E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hd38a460303308123E"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17he9daf7b50ff3b4c4E(i64* nonnull %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17he36590aebbd787a9E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 48, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17he36590aebbd787a9E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hc9adac091e9e0771E"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::boxed::Box<T,A>::into_unique
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h7c977d5b0631246aE"({}* noalias nonnull align 1 %0, [3 x i64]* align 8 dereferenceable(24) %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %3 = alloca { i8*, i64* }, align 8
  %b = alloca { {}*, [3 x i64]* }, align 8
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0
  store {}* %0, {}** %4, align 8
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1
  store [3 x i64]* %1, [3 x i64]** %5, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %_4 = bitcast { {}*, [3 x i64]* }* %b to %"alloc::alloc::Global"*
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17hbce6ceabb48c7425E(%"alloc::alloc::Global"* %_4)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0
  %_7.0 = load {}*, {}** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1
  %_7.1 = load [3 x i64]*, [3 x i64]** %7, align 8, !nonnull !3
; invoke alloc::boxed::Box<T,A>::leak
  %8 = invoke { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hcad625bf4831a05fE"({}* noalias nonnull align 1 %_7.0, [3 x i64]* align 8 dereferenceable(24) %_7.1)
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %9 = load i8, i8* %_9, align 1, !range !4
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { {}*, [3 x i64]* } %8, 0
  %_6.1 = extractvalue { {}*, [3 x i64]* } %8, 1
; invoke <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
  %16 = invoke { i8*, i64* } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h82417d591da92bd8E"({}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) %_6.1)
          to label %bb3 unwind label %cleanup1

bb4:                                              ; preds = %cleanup1
  br label %bb7

cleanup1:                                         ; preds = %bb2, %bb1
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { i8*, i64* } %16, 0
  %_5.1 = extractvalue { i8*, i64* } %16, 1
  %22 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_5.0, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_5.1, i64** %23, align 8
  %24 = bitcast { i8*, i64* }* %3 to i8*
  %25 = getelementptr i8, i8* %24, i64 16
  %26 = bitcast i8* %25 to %"alloc::alloc::Global"*
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !nonnull !3
  %29 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  %30 = load i64*, i64** %29, align 8, !nonnull !3
  %31 = insertvalue { i8*, i64* } undef, i8* %28, 0
  %32 = insertvalue { i8*, i64* } %31, i64* %30, 1
  ret { i8*, i64* } %32

bb5:                                              ; preds = %bb6, %bb7
  %33 = bitcast { i8*, i32 }* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17ha7e6e1532ea13046E"({ {}*, [3 x i64]* }* %b) #21
  br label %bb5
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he8874e32b3f3cd03E"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i8*, i64* }, align 8
; call alloc::boxed::Box<T,A>::into_unique
  %2 = call { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17h7c977d5b0631246aE"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1)
  %_4.0 = extractvalue { i8*, i64* } %2, 0
  %_4.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::ptr::unique::Unique<T>::as_ptr
  %3 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcebbaf04ff561bd6E"(i8* nonnull %_4.0, i64* align 8 dereferenceable(24) %_4.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { {}*, [3 x i64]* } %3, 0
  %_6.1 = extractvalue { {}*, [3 x i64]* } %3, 1
  %4 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 0
  store {}* %_6.0, {}** %5, align 8
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 1
  store [3 x i64]* %_6.1, [3 x i64]** %6, align 8
  %7 = bitcast { i8*, i64* }* %1 to i8*
  %8 = getelementptr i8, i8* %7, i64 16
  %9 = bitcast i8* %8 to %"alloc::alloc::Global"*
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %1, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %1, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8, !nonnull !3
  %14 = insertvalue { i8*, i64* } undef, i8* %11, 0
  %15 = insertvalue { i8*, i64* } %14, i64* %13, 1
  ret { i8*, i64* } %15

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %21 = bitcast { i8*, i32 }* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h4ae920099949d1efE"(%"alloc::sync::ArcInner<_ShuffledOrder>"* noalias nonnull align 8 %b) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %_9 = alloca i64*, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !83)
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<_ShuffledOrder>"**
  store %"alloc::sync::ArcInner<_ShuffledOrder>"* %b, %"alloc::sync::ArcInner<_ShuffledOrder>"** %1, align 8, !noalias !83
  %2 = load i64*, i64** %0, align 8, !noalias !83, !nonnull !3
  store i64* %2, i64** %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_9 to %"alloc::sync::ArcInner<_ShuffledOrder>"**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"** %3 to i64**
  %_6 = load i64*, i64** %4, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf25f2b9ded32a257E"(i64* nonnull %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::sync::ArcInner<_ShuffledOrder>"* %_5
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(80) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hc19dc55a3771fb9cE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* noalias nonnull align 8 %b) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %_9 = alloca i64*, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !86)
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"**
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %b, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"** %1, align 8, !noalias !86
  %2 = load i64*, i64** %0, align 8, !noalias !86, !nonnull !3
  store i64* %2, i64** %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_9 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"** %3 to i64**
  %_6 = load i64*, i64** %4, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h2482d2c3b55ec7c8E"(i64* nonnull %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_5
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hcad625bf4831a05fE"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1) unnamed_addr #1 {
start:
  %0 = alloca { i8*, i64* }, align 8
  %_9 = alloca { i8*, i64* }, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !89)
  %1 = bitcast { i8*, i64* }* %0 to { {}*, [3 x i64]* }*
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 0
  store {}* %b.0, {}** %2, align 8, !noalias !89
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 1
  store [3 x i64]* %b.1, [3 x i64]** %3, align 8, !noalias !89
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !noalias !89, !nonnull !3
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !noalias !89, !nonnull !3
  %8 = insertvalue { i8*, i64* } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64* } %8, i64* %7, 1
  store { i8*, i64* } %9, { i8*, i64* }* %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %10 = bitcast { i8*, i64* }* %_9 to { {}*, [3 x i64]* }*
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast { {}*, [3 x i64]* }* %10 to { i8*, i64* }*
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %11, i32 0, i32 0
  %_6.0 = load i8*, i8** %12, align 8, !nonnull !3
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %11, i32 0, i32 1
  %_6.1 = load i64*, i64** %13, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %14 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcebbaf04ff561bd6E"(i8* nonnull %_6.0, i64* align 8 dereferenceable(24) %_6.1)
  %_5.0 = extractvalue { {}*, [3 x i64]* } %14, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %14, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %15 = insertvalue { {}*, [3 x i64]* } undef, {}* %_5.0, 0
  %16 = insertvalue { {}*, [3 x i64]* } %15, [3 x i64]* %_5.1, 1
  ret { {}*, [3 x i64]* } %16
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hd4475cf2f4dec23dE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* noalias nonnull align 8 %b) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %_9 = alloca i64*, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !92)
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"**
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %b, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"** %1, align 8, !noalias !92
  %2 = load i64*, i64** %0, align 8, !noalias !92, !nonnull !3
  store i64* %2, i64** %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_9 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"** %3 to i64**
  %_6 = load i64*, i64** %4, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h3c15fdc0c00db9dcE"(i64* nonnull %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_5
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hd47190b8be19ac8aE"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* noalias nonnull align 8 %b) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %_9 = alloca i64*, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !95)
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<_ProbeSemaphore>"**
  store %"alloc::sync::ArcInner<_ProbeSemaphore>"* %b, %"alloc::sync::ArcInner<_ProbeSemaphore>"** %1, align 8, !noalias !95
  %2 = load i64*, i64** %0, align 8, !noalias !95, !nonnull !3
  store i64* %2, i64** %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_9 to %"alloc::sync::ArcInner<_ProbeSemaphore>"**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"** %3 to i64**
  %_6 = load i64*, i64** %4, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6248a8c505ba3fceE"(i64* nonnull %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_5
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hdda854841a575df1E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* noalias nonnull align 8 %b) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %_9 = alloca i64*, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !98)
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"**
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %b, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"** %1, align 8, !noalias !98
  %2 = load i64*, i64** %0, align 8, !noalias !98, !nonnull !3
  store i64* %2, i64** %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_9 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"** %3 to i64**
  %_6 = load i64*, i64** %4, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hdd780c6d30b47f8bE"(i64* nonnull %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_5
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(56) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hf37c179566d8fa83E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* noalias nonnull align 8 %b) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %_9 = alloca i64*, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !101)
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"**
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %b, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"** %1, align 8, !noalias !101
  %2 = load i64*, i64** %0, align 8, !noalias !101, !nonnull !3
  store i64* %2, i64** %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_9 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"** %3 to i64**
  %_6 = load i64*, i64** %4, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h2a6a16bd958e6a65E"(i64* nonnull %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_5
}

; alloc::boxed::Box<T,A>::into_raw
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17he16df492e6474f2bE"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1) unnamed_addr #1 {
start:
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %0 = call { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17he8874e32b3f3cd03E"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1)
  %_2.0 = extractvalue { i8*, i64* } %0, 0
  %_2.1 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast i8* %_2.0 to {}*
  %2 = bitcast i64* %_2.1 to [3 x i64]*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %1, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %2, 1
  ret { {}*, [3 x i64]* } %4
}

; alloc::string::String::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String3new17h7ba373bb77a1086bE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_1 = alloca %"alloc::vec::Vec<u8>", align 8
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h90f73329dbd0eaf4E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*
  %2 = bitcast %"alloc::vec::Vec<u8>"* %1 to i8*
  %3 = bitcast %"alloc::vec::Vec<u8>"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  ret void
}

; alloc::raw_vec::alloc_guard
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec11alloc_guard17h0d0871e0b7655bc7E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %alloc_size) unnamed_addr #1 {
start:
  %_4 = alloca { i64, i64 }, align 8
  br i1 false, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5297ffa3ca6260f9E"(i64 %4, i64 %6)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  ret void
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nonlazybind uwtable
define void @_ZN5alloc7raw_vec11finish_grow17h4533d374946d4856E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture dereferenceable(24) %current_memory, %"alloc::alloc::Global"* nonnull align 1 %alloc) unnamed_addr #3 {
start:
  %_41 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %_14 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_13 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>", align 8
  %_6 = alloca %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h52a6d2503279509cE"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_6, i64 %new_layout.0, i64 %new_layout.1)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h10af9a7aa9d2285dE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>") dereferenceable(24) %_5, %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*
  %_9 = load i64, i64* %1, align 8, !range !2
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*
  %3 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %val.0 = load i64, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %val.1 = load i64, i64* %5, align 8, !range !26
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %val.0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %val.1, i64* %7, align 8
; call core::alloc::layout::Layout::size
  %_15 = call i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb7

bb5:                                              ; preds = %bb2
  %8 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %residual.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %residual.1 = load i64, i64* %11, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17he85627546bc9d02fE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb23

bb23:                                             ; preds = %bb13, %bb6
  br label %bb24

bb7:                                              ; preds = %bb3
; call alloc::raw_vec::alloc_guard
  call void @_ZN5alloc7raw_vec11alloc_guard17h0d0871e0b7655bc7E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_14, i64 %_15)
  br label %bb8

bb8:                                              ; preds = %bb7
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hbea6b0d7c87d79e3E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>") dereferenceable(24) %_13, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_14)
  br label %bb9

bb9:                                              ; preds = %bb8
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %_13 to i64*
  %_17 = load i64, i64* %12, align 8, !range !2
  switch i64 %_17, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ]

bb11:                                             ; preds = %bb9
  unreachable

bb10:                                             ; preds = %bb9
  %13 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_22 = select i1 %15, i64 0, i64 1
  %16 = icmp eq i64 %_22, 1
  br i1 %16, label %bb15, label %bb14

bb12:                                             ; preds = %bb9
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %_13 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  %residual.01 = load i64, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  %residual.12 = load i64, i64* %20, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h9fe578aa0942f458E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.01, i64 %residual.12)
  br label %bb13

bb13:                                             ; preds = %bb12
  br label %bb23

bb24:                                             ; preds = %bb22, %bb23
  ret void

bb15:                                             ; preds = %bb10
  %21 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %22 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %21 to { i8*, { i64, i64 } }*
  %23 = bitcast { i8*, { i64, i64 } }* %22 to i8**
  %ptr = load i8*, i8** %23, align 8, !nonnull !3
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %25 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %24 to { i8*, { i64, i64 } }*
  %26 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %25, i32 0, i32 1
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1
  %30 = load i64, i64* %29, align 8, !range !26
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %28, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %30, i64* %32, align 8
; call core::alloc::layout::Layout::align
  %_30 = call i64 @_ZN4core5alloc6layout6Layout5align17h3a06a07a4e9354b3E({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  br label %bb16

bb14:                                             ; preds = %bb10
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_39.0 = load i64, i64* %33, align 8
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_39.1 = load i64, i64* %34, align 8, !range !26
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %35 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h513321190ee97a91E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_39.0, i64 %_39.1)
  store { i8*, i64 } %35, { i8*, i64 }* %memory, align 8
  br label %bb20

bb20:                                             ; preds = %bb14
  br label %bb21

bb21:                                             ; preds = %bb19, %bb20
  %36 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0
  %_40.0 = load i8*, i8** %36, align 8
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1
  %_40.1 = load i64, i64* %37, align 8
  %38 = bitcast i64** %_41 to { i64, i64 }**
  store { i64, i64 }* %new_layout, { i64, i64 }** %38, align 8
  %39 = load i64*, i64** %_41, align 8, !nonnull !3
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h09e594382b13a4faE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i8* %_40.0, i64 %_40.1, i64* align 8 dereferenceable(16) %39)
  br label %bb22

bb16:                                             ; preds = %bb15
; call core::alloc::layout::Layout::align
  %_32 = call i64 @_ZN4core5alloc6layout6Layout5align17h3a06a07a4e9354b3E({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb17

bb17:                                             ; preds = %bb16
  %_29 = icmp eq i64 %_30, %_32
  call void @llvm.assume(i1 %_29)
  br label %bb18

bb18:                                             ; preds = %bb17
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  %_36.0 = load i64, i64* %40, align 8
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  %_36.1 = load i64, i64* %41, align 8, !range !26
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_37.0 = load i64, i64* %42, align 8
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_37.1 = load i64, i64* %43, align 8, !range !26
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %44 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17ha9b819e3bbed7914E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %ptr, i64 %_36.0, i64 %_36.1, i64 %_37.0, i64 %_37.1)
  store { i8*, i64 } %44, { i8*, i64 }* %memory, align 8
  br label %bb19

bb19:                                             ; preds = %bb18
  br label %bb21

bb22:                                             ; preds = %bb21
  br label %bb24
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h2c0073926e994d80E"() unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h734f63c8a05f5b93E"(i64* align 8 dereferenceable(16) %_1) unnamed_addr #1 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = bitcast i64* %_1 to { i64, i64 }*
  %1 = bitcast i64* %_1 to { i64, i64 }*
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %_4.0 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %_4.1 = load i64, i64* %3, align 8, !range !26
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  store i64 %_4.0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %_4.1, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
; call <T as core::convert::Into<U>>::into
  %10 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5297ffa3ca6260f9E"(i64 %7, i64 %9)
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  br label %bb1

bb1:                                              ; preds = %start
  %13 = insertvalue { i64, i64 } undef, i64 %11, 0
  %14 = insertvalue { i64, i64 } %13, i64 %12, 1
  ret { i64, i64 } %14
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec14handle_reserve17h58f5b36a195d1494E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %result) unnamed_addr #1 {
start:
  %_3 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_2 = alloca %"core::result::Result<(), alloc::collections::TryReserveErrorKind>", align 8
  %0 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_3 to i8*
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h5404c78c329f3730E"(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_2, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %_2 to i64*
  %_6 = load i64, i64* %2, align 8, !range !2
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb3, %bb1
  unreachable

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %bb1
  %3 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %_2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"*
  %4 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %_5 = select i1 %7, i64 0, i64 1
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hf5949ba689b42eeeE() #20
  unreachable

bb6:                                              ; preds = %bb3
  %8 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %_2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !26
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h4346a7dd05d4a0b2E(i64 %layout.0, i64 %layout.1) #23
  unreachable
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h97c716fe881513d7E"(i64 %0, i64 %1) unnamed_addr #1 {
start:
  %e = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call alloc::collections::TryReserveError::kind
  %4 = call { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h56370c8e71ed6647E({ i64, i64 }* align 8 dereferenceable(16) %e)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; alloc::raw_vec::RawVec<T,A>::grow_exact
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$10grow_exact17h9689e35aaf8c5632E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, { i32*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
  %_24 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_22 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_21 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 4, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5297ffa3ca6260f9E"(i64 %4, i64 %6)
  %_5.0 = extractvalue { i64, i64 } %7, 0
  %_5.1 = extractvalue { i64, i64 } %7, 1
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h0d90790d1c3b3aa6E"(i64 %len, i64 %additional)
  %_10.0 = extractvalue { i64, i64 } %8, 0
  %_10.1 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h08c4e71381198b57E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb1648b5065d6fdb8E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %_8, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*
  %_14 = load i64, i64* %14, align 8, !range !2
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1
  %val = load i64, i64* %16, align 8
; call core::alloc::layout::Layout::array
  %17 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h5505a8aa8e4252edE(i64 %val)
  %new_layout.0 = extractvalue { i64, i64 } %17, 0
  %new_layout.1 = extractvalue { i64, i64 } %17, 1
  br label %bb12

bb10:                                             ; preds = %bb7
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %residual.0 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %residual.1 = load i64, i64* %21, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h562cbd6b1b4ae4b3E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1)
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb21

bb21:                                             ; preds = %bb19, %bb11
  br label %bb22

bb12:                                             ; preds = %bb8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h480f72f2bf998c91E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_24, { i32*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb13

bb13:                                             ; preds = %bb12
  %_27 = bitcast { i32*, i64 }* %self to %"alloc::alloc::Global"*
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h4533d374946d4856E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %_22, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture dereferenceable(24) %_24, %"alloc::alloc::Global"* nonnull align 1 %_27)
  br label %bb14

bb14:                                             ; preds = %bb13
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17had7bed442b747f7dE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") dereferenceable(24) %_21, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_22)
  br label %bb15

bb15:                                             ; preds = %bb14
  %22 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_21 to i64*
  %_28 = load i64, i64* %22, align 8, !range !2
  switch i64 %_28, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ]

bb17:                                             ; preds = %bb15
  unreachable

bb16:                                             ; preds = %bb15
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_21 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %24 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %23, i32 0, i32 1
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %24, i32 0, i32 0
  %val.0 = load i8*, i8** %25, align 8, !nonnull !3
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %24, i32 0, i32 1
  %val.1 = load i64, i64* %26, align 8
; call alloc::raw_vec::RawVec<T,A>::set_ptr
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17h51a1d6804b0157aaE"({ i32*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %val.0, i64 %val.1)
  br label %bb20

bb18:                                             ; preds = %bb15
  %27 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_21 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %28 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0
  %residual.01 = load i64, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1
  %residual.12 = load i64, i64* %30, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha4c61f6986952715E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.01, i64 %residual.12)
  br label %bb19

bb19:                                             ; preds = %bb18
  br label %bb21

bb22:                                             ; preds = %bb3, %bb20, %bb21
  ret void

bb20:                                             ; preds = %bb16
  %31 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %31, align 8
  br label %bb22

bb3:                                              ; preds = %bb2
  %32 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %33 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %32, i32 0, i32 1
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i32 0, i32 0
  store i64 %_5.0, i64* %34, align 8
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i32 0, i32 1
  store i64 %_5.1, i64* %35, align 8
  %36 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %36, align 8
  br label %bb22
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hbd69a29aa347800eE"(i64 %capacity, i1 zeroext %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_33 = alloca i8, align 1
  %result = alloca { i8*, i64 }, align 8
  %_11 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_7 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = alloca { i32*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i8 0, i8* %_33, align 1
  store i8 1, i8* %_33, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = icmp eq i64 4, 0
  br i1 %4, label %bb2, label %bb4

bb31:                                             ; preds = %cleanup
  %5 = load i8, i8* %_33, align 1, !range !4
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb30, label %bb29

cleanup:                                          ; preds = %bb2, %bb26, %bb25, %bb24, %bb23, %bb22, %bb16, %bb14, %bb11, %bb9, %bb8, %bb6, %bb4
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb31

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_33, align 1
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %12 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17he631084860281c4eE"()
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array
  %13 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h5505a8aa8e4252edE(i64 %capacity)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store { i64, i64 } %13, { i64, i64 }* %_7, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %_9 = select i1 %16, i64 1, i64 0
  switch i64 %_9, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb5
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %layout.0 = load i64, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %layout.1 = load i64, i64* %18, align 8, !range !26
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %layout.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %layout.1, i64* %20, align 8
; invoke core::alloc::layout::Layout::size
  %_12 = invoke i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %layout)
          to label %bb9 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hf5949ba689b42eeeE() #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb11, %bb6
  unreachable

bb9:                                              ; preds = %bb8
; invoke alloc::raw_vec::alloc_guard
  invoke void @_ZN5alloc7raw_vec11alloc_guard17h0d0871e0b7655bc7E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_11, i64 %_12)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %21 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_11 to i64*
  %_14 = load i64, i64* %21, align 8, !range !2
  switch i64 %_14, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb13:                                             ; preds = %bb10
  %22 = load i8, i8* %init, align 1, !range !4
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ]

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hf5949ba689b42eeeE() #20
          to label %unreachable unwind label %cleanup

bb15:                                             ; preds = %bb13
  unreachable

bb16:                                             ; preds = %bb13
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_18.0 = load i64, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_18.1 = load i64, i64* %25, align 8, !range !26
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %26 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h513321190ee97a91E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_18.0, i64 %_18.1)
          to label %bb17 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_20.0 = load i64, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_20.1 = load i64, i64* %28, align 8, !range !26
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %29 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h4ce452af588ad6c2E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_20.0, i64 %_20.1)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %29, { i8*, i64 }* %result, align 8
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %30 = bitcast { i8*, i64 }* %result to {}**
  %31 = load {}*, {}** %30, align 8
  %32 = icmp eq {}* %31, null
  %_22 = select i1 %32, i64 1, i64 0
  switch i64 %_22, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ]

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %26, { i8*, i64 }* %result, align 8
  br label %bb19

bb21:                                             ; preds = %bb19
  unreachable

bb22:                                             ; preds = %bb19
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0
  %ptr.0 = load i8*, i8** %33, align 8, !nonnull !3
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1
  %ptr.1 = load i64, i64* %34, align 8
; invoke core::ptr::non_null::NonNull<T>::cast
  %_27 = invoke nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7002ac7ab8dbf6f5E"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb23 unwind label %cleanup

bb20:                                             ; preds = %bb19
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_24.0 = load i64, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_24.1 = load i64, i64* %36, align 8, !range !26
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h4346a7dd05d4a0b2E(i64 %_24.0, i64 %_24.1) #23
  unreachable

bb23:                                             ; preds = %bb22
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = invoke i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4aae345c468315fdE"(i32* nonnull %_27)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb23
; invoke core::ptr::unique::Unique<T>::new_unchecked
  %_25 = invoke nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h778f02408095d330E"(i32* %_26)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
; invoke core::ptr::non_null::NonNull<[T]>::len
  %_30 = invoke i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h4236610cbe77fbd3E"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
; invoke alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_29 = invoke i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h07252e2b6c552f68E"(i64 %_30)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb26
  store i8 0, i8* %_33, align 1
  %37 = bitcast { i32*, i64 }* %2 to i32**
  store i32* %_25, i32** %37, align 8
  %38 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1
  store i64 %_29, i64* %38, align 8
  %39 = bitcast { i32*, i64 }* %2 to %"alloc::alloc::Global"*
  br label %bb28

bb28:                                             ; preds = %bb3, %bb27
  %40 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8, !nonnull !3
  %42 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = insertvalue { i32*, i64 } undef, i32* %41, 0
  %45 = insertvalue { i32*, i64 } %44, i64 %43, 1
  ret { i32*, i64 } %45

bb3:                                              ; preds = %bb2
  store { i32*, i64 } %12, { i32*, i64 }* %2, align 8
  br label %bb28

bb29:                                             ; preds = %bb30, %bb31
  %46 = bitcast { i8*, i32 }* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51

bb30:                                             ; preds = %bb31
  br label %bb29
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hd23e7c6ee88a411fE"(i64 %capacity, i1 zeroext %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_33 = alloca i8, align 1
  %result = alloca { i8*, i64 }, align 8
  %_11 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_7 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = alloca { i64*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i8 0, i8* %_33, align 1
  store i8 1, i8* %_33, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = icmp eq i64 16, 0
  br i1 %4, label %bb2, label %bb4

bb31:                                             ; preds = %cleanup
  %5 = load i8, i8* %_33, align 1, !range !4
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb30, label %bb29

cleanup:                                          ; preds = %bb2, %bb26, %bb25, %bb24, %bb23, %bb22, %bb16, %bb14, %bb11, %bb9, %bb8, %bb6, %bb4
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb31

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_33, align 1
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %12 = invoke { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h955656a8cbf89ac0E"()
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array
  %13 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h8de2915e13c95be3E(i64 %capacity)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store { i64, i64 } %13, { i64, i64 }* %_7, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %_9 = select i1 %16, i64 1, i64 0
  switch i64 %_9, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb5
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %layout.0 = load i64, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %layout.1 = load i64, i64* %18, align 8, !range !26
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %layout.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %layout.1, i64* %20, align 8
; invoke core::alloc::layout::Layout::size
  %_12 = invoke i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %layout)
          to label %bb9 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hf5949ba689b42eeeE() #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb11, %bb6
  unreachable

bb9:                                              ; preds = %bb8
; invoke alloc::raw_vec::alloc_guard
  invoke void @_ZN5alloc7raw_vec11alloc_guard17h0d0871e0b7655bc7E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_11, i64 %_12)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %21 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_11 to i64*
  %_14 = load i64, i64* %21, align 8, !range !2
  switch i64 %_14, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb13:                                             ; preds = %bb10
  %22 = load i8, i8* %init, align 1, !range !4
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ]

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hf5949ba689b42eeeE() #20
          to label %unreachable unwind label %cleanup

bb15:                                             ; preds = %bb13
  unreachable

bb16:                                             ; preds = %bb13
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_18.0 = load i64, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_18.1 = load i64, i64* %25, align 8, !range !26
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %26 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h513321190ee97a91E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_18.0, i64 %_18.1)
          to label %bb17 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_20.0 = load i64, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_20.1 = load i64, i64* %28, align 8, !range !26
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %29 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h4ce452af588ad6c2E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_20.0, i64 %_20.1)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %29, { i8*, i64 }* %result, align 8
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %30 = bitcast { i8*, i64 }* %result to {}**
  %31 = load {}*, {}** %30, align 8
  %32 = icmp eq {}* %31, null
  %_22 = select i1 %32, i64 1, i64 0
  switch i64 %_22, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ]

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %26, { i8*, i64 }* %result, align 8
  br label %bb19

bb21:                                             ; preds = %bb19
  unreachable

bb22:                                             ; preds = %bb19
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0
  %ptr.0 = load i8*, i8** %33, align 8, !nonnull !3
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1
  %ptr.1 = load i64, i64* %34, align 8
; invoke core::ptr::non_null::NonNull<T>::cast
  %_27 = invoke nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17he2c59d869764309fE"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb23 unwind label %cleanup

bb20:                                             ; preds = %bb19
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_24.0 = load i64, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_24.1 = load i64, i64* %36, align 8, !range !26
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h4346a7dd05d4a0b2E(i64 %_24.0, i64 %_24.1) #23
  unreachable

bb23:                                             ; preds = %bb22
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = invoke { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6191cd23f8e44eacE"(i64* nonnull %_27)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb23
; invoke core::ptr::unique::Unique<T>::new_unchecked
  %_25 = invoke nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h2050e68da173ad23E"({ [0 x i8]*, i64 }* %_26)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
; invoke core::ptr::non_null::NonNull<[T]>::len
  %_30 = invoke i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h4236610cbe77fbd3E"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
; invoke alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_29 = invoke i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h18bded6868c8bb30E"(i64 %_30)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb26
  store i8 0, i8* %_33, align 1
  %37 = bitcast { i64*, i64 }* %2 to i64**
  store i64* %_25, i64** %37, align 8
  %38 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %_29, i64* %38, align 8
  %39 = bitcast { i64*, i64 }* %2 to %"alloc::alloc::Global"*
  br label %bb28

bb28:                                             ; preds = %bb3, %bb27
  %40 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  %41 = load i64*, i64** %40, align 8, !nonnull !3
  %42 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = insertvalue { i64*, i64 } undef, i64* %41, 0
  %45 = insertvalue { i64*, i64 } %44, i64 %43, 1
  ret { i64*, i64 } %45

bb3:                                              ; preds = %bb2
  store { i64*, i64 } %12, { i64*, i64 }* %2, align 8
  br label %bb28

bb29:                                             ; preds = %bb30, %bb31
  %46 = bitcast { i8*, i32 }* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51

bb30:                                             ; preds = %bb31
  br label %bb29
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h7c48c080bd2a1975E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %4 = sub i64 %3, %len
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = icmp ugt i64 %additional, %4
  ret i1 %5
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h8d42d4601ad351baE"({ i32*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %4 = sub i64 %3, %len
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = icmp ugt i64 %additional, %4
  ret i1 %5
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hc2be382d95be9a2aE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %4 = sub i64 %3, %len
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = icmp ugt i64 %additional, %4
  ret i1 %5
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hdc5329a0d3412512E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %4 = sub i64 %3, %len
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = icmp ugt i64 %additional, %4
  ret i1 %5
}

; alloc::raw_vec::RawVec<T,A>::reserve_exact
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13reserve_exact17h6b32af0fb464dbbeE"({ i32*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
  %_5 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
; call alloc::raw_vec::RawVec<T,A>::try_reserve_exact
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17h55eb59ed7c44af6aE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_5, { i32*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h58f5b36a195d1494E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h480f72f2bf998c91E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %0, { i32*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 4, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb3
  %6 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to {}**
  store {}* null, {}** %6, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  ret void

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1
  %_9 = load i64, i64* %7, align 8
  %size = mul i64 4, %_9
; call core::alloc::layout::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 4)
  %layout.0 = extractvalue { i64, i64 } %8, 0
  %layout.1 = extractvalue { i64, i64 } %8, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %9 = bitcast { i32*, i64 }* %self to i32**
  %_16 = load i32*, i32** %9, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h1e847e221c87484aE"(i32* nonnull %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, { i64, i64 } }* %_13 to i8**
  store i8* %_14, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %layout.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %layout.1, i64* %13, align 8
  %14 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %14 to { i8*, { i64, i64 } }*
  %16 = bitcast { i8*, { i64, i64 } }* %15 to i8*
  %17 = bitcast { i8*, { i64, i64 } }* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb12
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h488da9539ecd4693E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %0, { i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 16, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb3
  %6 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to {}**
  store {}* null, {}** %6, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  ret void

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_9 = load i64, i64* %7, align 8
  %size = mul i64 16, %_9
; call core::alloc::layout::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 8)
  %layout.0 = extractvalue { i64, i64 } %8, 0
  %layout.1 = extractvalue { i64, i64 } %8, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %9 = bitcast { i64*, i64 }* %self to i64**
  %_16 = load i64*, i64** %9, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h4b5e4da05eb7b745E"(i64* nonnull %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, { i64, i64 } }* %_13 to i8**
  store i8* %_14, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %layout.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %layout.1, i64* %13, align 8
  %14 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %14 to { i8*, { i64, i64 } }*
  %16 = bitcast { i8*, { i64, i64 } }* %15 to i8*
  %17 = bitcast { i8*, { i64, i64 } }* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb12
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h4ffc2d76c208017cE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %0, { i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 24, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb3
  %6 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to {}**
  store {}* null, {}** %6, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  ret void

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_9 = load i64, i64* %7, align 8
  %size = mul i64 24, %_9
; call core::alloc::layout::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 8)
  %layout.0 = extractvalue { i64, i64 } %8, 0
  %layout.1 = extractvalue { i64, i64 } %8, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %9 = bitcast { i64*, i64 }* %self to i64**
  %_16 = load i64*, i64** %9, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h1850f4fcd7c8bb81E"(i64* nonnull %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, { i64, i64 } }* %_13 to i8**
  store i8* %_14, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %layout.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %layout.1, i64* %13, align 8
  %14 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %14 to { i8*, { i64, i64 } }*
  %16 = bitcast { i8*, { i64, i64 } }* %15 to i8*
  %17 = bitcast { i8*, { i64, i64 } }* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb12
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h5d8a526b3f806b6aE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %0, { i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 1, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb3
  %6 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to {}**
  store {}* null, {}** %6, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  ret void

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_9 = load i64, i64* %7, align 8
  %size = mul i64 1, %_9
; call core::alloc::layout::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 1)
  %layout.0 = extractvalue { i64, i64 } %8, 0
  %layout.1 = extractvalue { i64, i64 } %8, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %9 = bitcast { i8*, i64 }* %self to i8**
  %_16 = load i8*, i8** %9, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hc649d5f091579d75E"(i8* nonnull %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, { i64, i64 } }* %_13 to i8**
  store i8* %_14, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %layout.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %layout.1, i64* %13, align 8
  %14 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %14 to { i8*, { i64, i64 } }*
  %16 = bitcast { i8*, { i64, i64 } }* %15 to i8*
  %17 = bitcast { i8*, { i64, i64 } }* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb12
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hedd480001904bda5E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %0, { i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 48, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb3
  %6 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to {}**
  store {}* null, {}** %6, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  ret void

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_9 = load i64, i64* %7, align 8
  %size = mul i64 48, %_9
; call core::alloc::layout::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %size, i64 8)
  %layout.0 = extractvalue { i64, i64 } %8, 0
  %layout.1 = extractvalue { i64, i64 } %8, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %9 = bitcast { i64*, i64 }* %self to i64**
  %_16 = load i64*, i64** %9, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h9d94b7bdb72afc68E"(i64* nonnull %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbea212126d804599E"(i8* nonnull %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, { i64, i64 } }* %_13 to i8**
  store i8* %_14, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %layout.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %layout.1, i64* %13, align 8
  %14 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %14 to { i8*, { i64, i64 } }*
  %16 = bitcast { i8*, { i64, i64 } }* %15 to i8*
  %17 = bitcast { i8*, { i64, i64 } }* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb12
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h2de2f44cbde2175fE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, { i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_28 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 16, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5297ffa3ca6260f9E"(i64 %4, i64 %6)
  %_5.0 = extractvalue { i64, i64 } %7, 0
  %_5.1 = extractvalue { i64, i64 } %7, 1
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h0d90790d1c3b3aa6E"(i64 %len, i64 %additional)
  %_10.0 = extractvalue { i64, i64 } %8, 0
  %_10.1 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h08c4e71381198b57E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb1648b5065d6fdb8E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %_8, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*
  %_14 = load i64, i64* %14, align 8, !range !2
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1
  %val = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_20 = load i64, i64* %17, align 8
  %_19 = mul i64 %_20, 2
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17hd4dddf8168eaa5f5E(i64 %_19, i64 %val)
  br label %bb12

bb10:                                             ; preds = %bb7
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %residual.0 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %residual.1 = load i64, i64* %21, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h562cbd6b1b4ae4b3E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1)
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb23

bb23:                                             ; preds = %bb21, %bb11
  br label %bb24

bb12:                                             ; preds = %bb8
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17hd4dddf8168eaa5f5E(i64 4, i64 %cap)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::alloc::layout::Layout::array
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h8de2915e13c95be3E(i64 %cap1)
  %new_layout.0 = extractvalue { i64, i64 } %22, 0
  %new_layout.1 = extractvalue { i64, i64 } %22, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h488da9539ecd4693E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_30, { i64*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_33 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h4533d374946d4856E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %_28, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture dereferenceable(24) %_30, %"alloc::alloc::Global"* nonnull align 1 %_33)
  br label %bb16

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17had7bed442b747f7dE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") dereferenceable(24) %_27, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_28)
  br label %bb17

bb17:                                             ; preds = %bb16
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*
  %_34 = load i64, i64* %23, align 8, !range !2
  switch i64 %_34, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb18:                                             ; preds = %bb17
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %24, i32 0, i32 1
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 0
  %val.0 = load i8*, i8** %26, align 8, !nonnull !3
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 1
  %val.1 = load i64, i64* %27, align 8
; call alloc::raw_vec::RawVec<T,A>::set_ptr
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17hc2bfadd4e30f9b98E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %val.0, i64 %val.1)
  br label %bb22

bb20:                                             ; preds = %bb17
  %28 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %29 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %28, i32 0, i32 1
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0
  %residual.02 = load i64, i64* %30, align 8
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1
  %residual.13 = load i64, i64* %31, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha4c61f6986952715E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.02, i64 %residual.13)
  br label %bb21

bb21:                                             ; preds = %bb20
  br label %bb23

bb24:                                             ; preds = %bb3, %bb22, %bb23
  ret void

bb22:                                             ; preds = %bb18
  %32 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %32, align 8
  br label %bb24

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %34 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %33, i32 0, i32 1
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0
  store i64 %_5.0, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1
  store i64 %_5.1, i64* %36, align 8
  %37 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %37, align 8
  br label %bb24
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h5a304251cc8e5be1E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, { i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_28 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 24, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5297ffa3ca6260f9E"(i64 %4, i64 %6)
  %_5.0 = extractvalue { i64, i64 } %7, 0
  %_5.1 = extractvalue { i64, i64 } %7, 1
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h0d90790d1c3b3aa6E"(i64 %len, i64 %additional)
  %_10.0 = extractvalue { i64, i64 } %8, 0
  %_10.1 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h08c4e71381198b57E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb1648b5065d6fdb8E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %_8, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*
  %_14 = load i64, i64* %14, align 8, !range !2
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1
  %val = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_20 = load i64, i64* %17, align 8
  %_19 = mul i64 %_20, 2
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17hd4dddf8168eaa5f5E(i64 %_19, i64 %val)
  br label %bb12

bb10:                                             ; preds = %bb7
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %residual.0 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %residual.1 = load i64, i64* %21, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h562cbd6b1b4ae4b3E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1)
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb23

bb23:                                             ; preds = %bb21, %bb11
  br label %bb24

bb12:                                             ; preds = %bb8
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17hd4dddf8168eaa5f5E(i64 4, i64 %cap)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::alloc::layout::Layout::array
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h08f6c0dd13c2e705E(i64 %cap1)
  %new_layout.0 = extractvalue { i64, i64 } %22, 0
  %new_layout.1 = extractvalue { i64, i64 } %22, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h4ffc2d76c208017cE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_30, { i64*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_33 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h4533d374946d4856E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %_28, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture dereferenceable(24) %_30, %"alloc::alloc::Global"* nonnull align 1 %_33)
  br label %bb16

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17had7bed442b747f7dE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") dereferenceable(24) %_27, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_28)
  br label %bb17

bb17:                                             ; preds = %bb16
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*
  %_34 = load i64, i64* %23, align 8, !range !2
  switch i64 %_34, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb18:                                             ; preds = %bb17
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %24, i32 0, i32 1
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 0
  %val.0 = load i8*, i8** %26, align 8, !nonnull !3
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 1
  %val.1 = load i64, i64* %27, align 8
; call alloc::raw_vec::RawVec<T,A>::set_ptr
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17h1a018d4808a63c57E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %val.0, i64 %val.1)
  br label %bb22

bb20:                                             ; preds = %bb17
  %28 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %29 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %28, i32 0, i32 1
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0
  %residual.02 = load i64, i64* %30, align 8
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1
  %residual.13 = load i64, i64* %31, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha4c61f6986952715E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.02, i64 %residual.13)
  br label %bb21

bb21:                                             ; preds = %bb20
  br label %bb23

bb24:                                             ; preds = %bb3, %bb22, %bb23
  ret void

bb22:                                             ; preds = %bb18
  %32 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %32, align 8
  br label %bb24

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %34 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %33, i32 0, i32 1
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0
  store i64 %_5.0, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1
  store i64 %_5.1, i64* %36, align 8
  %37 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %37, align 8
  br label %bb24
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17ha8ac12c11c99a69fE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, { i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_28 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 48, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h5297ffa3ca6260f9E"(i64 %4, i64 %6)
  %_5.0 = extractvalue { i64, i64 } %7, 0
  %_5.1 = extractvalue { i64, i64 } %7, 1
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h0d90790d1c3b3aa6E"(i64 %len, i64 %additional)
  %_10.0 = extractvalue { i64, i64 } %8, 0
  %_10.1 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h08c4e71381198b57E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb1648b5065d6fdb8E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %_8, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*
  %_14 = load i64, i64* %14, align 8, !range !2
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1
  %val = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_20 = load i64, i64* %17, align 8
  %_19 = mul i64 %_20, 2
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17hd4dddf8168eaa5f5E(i64 %_19, i64 %val)
  br label %bb12

bb10:                                             ; preds = %bb7
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %residual.0 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %residual.1 = load i64, i64* %21, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h562cbd6b1b4ae4b3E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1)
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb23

bb23:                                             ; preds = %bb21, %bb11
  br label %bb24

bb12:                                             ; preds = %bb8
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17hd4dddf8168eaa5f5E(i64 4, i64 %cap)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::alloc::layout::Layout::array
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h4ee5455e4aa895f9E(i64 %cap1)
  %new_layout.0 = extractvalue { i64, i64 } %22, 0
  %new_layout.1 = extractvalue { i64, i64 } %22, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hedd480001904bda5E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_30, { i64*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_33 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h4533d374946d4856E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %_28, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture dereferenceable(24) %_30, %"alloc::alloc::Global"* nonnull align 1 %_33)
  br label %bb16

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17had7bed442b747f7dE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") dereferenceable(24) %_27, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_28)
  br label %bb17

bb17:                                             ; preds = %bb16
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*
  %_34 = load i64, i64* %23, align 8, !range !2
  switch i64 %_34, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb18:                                             ; preds = %bb17
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %24, i32 0, i32 1
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 0
  %val.0 = load i8*, i8** %26, align 8, !nonnull !3
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 1
  %val.1 = load i64, i64* %27, align 8
; call alloc::raw_vec::RawVec<T,A>::set_ptr
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17h1af0bf9c1b17c8ecE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %val.0, i64 %val.1)
  br label %bb22

bb20:                                             ; preds = %bb17
  %28 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %29 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %28, i32 0, i32 1
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0
  %residual.02 = load i64, i64* %30, align 8
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1
  %residual.13 = load i64, i64* %31, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha4c61f6986952715E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.02, i64 %residual.13)
  br label %bb21

bb21:                                             ; preds = %bb20
  br label %bb23

bb24:                                             ; preds = %bb3, %bb22, %bb23
  ret void

bb22:                                             ; preds = %bb18
  %32 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %32, align 8
  br label %bb24

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %34 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %33, i32 0, i32 1
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0
  store i64 %_5.0, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1
  store i64 %_5.1, i64* %36, align 8
  %37 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %37, align 8
  br label %bb24
}

; alloc::raw_vec::RawVec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h0381018cf4e1418eE"(i64 %capacity) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
  store i8 0, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !4
  %1 = trunc i8 %0 to i1
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %2 = call { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hd23e7c6ee88a411fE"(i64 %capacity, i1 zeroext %1)
  %3 = extractvalue { i64*, i64 } %2, 0
  %4 = extractvalue { i64*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { i64*, i64 } undef, i64* %3, 0
  %6 = insertvalue { i64*, i64 } %5, i64 %4, 1
  ret { i64*, i64 } %6
}

; alloc::raw_vec::RawVec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h9c04ede60a409e3aE"(i64 %capacity) unnamed_addr #1 {
start:
  %_4 = alloca i8, align 1
  store i8 0, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !4
  %1 = trunc i8 %0 to i1
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %2 = call { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hbd69a29aa347800eE"(i64 %capacity, i1 zeroext %1)
  %3 = extractvalue { i32*, i64 } %2, 0
  %4 = extractvalue { i32*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { i32*, i64 } undef, i32* %3, 0
  %6 = insertvalue { i32*, i64 } %5, i64 %4, 1
  ret { i32*, i64 } %6
}

; alloc::raw_vec::RawVec<T,A>::from_raw_parts_in
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17h7d8428424c1d994aE"({ [0 x i8]*, i64 }* %ptr, i64 %capacity) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i64*, i64 }, align 8
; invoke core::ptr::unique::Unique<T>::new_unchecked
  %_4 = invoke nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h2050e68da173ad23E"({ [0 x i8]*, i64 }* %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i64 }* %1 to i64**
  store i64* %_4, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 %capacity, i64* %3, align 8
  %4 = bitcast { i64*, i64 }* %1 to %"alloc::alloc::Global"*
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8, !nonnull !3
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64*, i64 } undef, i64* %6, 0
  %10 = insertvalue { i64*, i64 } %9, i64 %8, 1
  ret { i64*, i64 } %10

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; alloc::raw_vec::RawVec<T,A>::try_reserve_exact
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17h55eb59ed7c44af6aE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, { i32*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h8d42d4601ad351baE"({ i32*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::grow_exact
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$10grow_exact17h9689e35aaf8c5632E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, { i32*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  ret void
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h07252e2b6c552f68E"(i64 %excess) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 4, 0
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %0, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 4
  ret i64 %1

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.k to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc626 to %"core::panic::location::Location"*)) #20
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h18bded6868c8bb30E"(i64 %excess) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 16, 0
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %0, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 16
  ret i64 %1

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.k to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc626 to %"core::panic::location::Location"*)) #20
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h3a51ed67f9e41a0dE"(i64 %excess) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 48, 0
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %0, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 48
  ret i64 %1

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.k to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc626 to %"core::panic::location::Location"*)) #20
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hcf528f2b08517237E"(i64 %excess) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 24, 0
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %0, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 24
  ret i64 %1

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.k to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc626 to %"core::panic::location::Location"*)) #20
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h2813706079f70524E"({ i32*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i32*, i64 }* %self to i32**
  %_2 = load i32*, i32** %0, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h17404fb8c88a2b64E"(i32* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h889e8fd3ea6c99e8E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i64 }* %self to i64**
  %_2 = load i64*, i64** %0, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call { [0 x i8]*, i64 }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h7f040bf57892ff28E"(i64* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret { [0 x i8]*, i64 }* %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h8f94d0d8fedff5b8E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64 }* %self to i8**
  %_2 = load i8*, i8** %0, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17he98f1f261e87a8bdE"(i8* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %_ProbeNode* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hc7de19d5484eeac5E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i64 }* %self to i64**
  %_2 = load i64*, i64** %0, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call %_ProbeNode* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17haee3b61c57e019ddE"(i64* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %_ProbeNode* %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hc8cc31f7a73e0763E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i64 }* %self to i64**
  %_2 = load i64*, i64** %0, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcf26cc93c944360dE"(i64* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::vec::Vec<_ProbeNode>"* %1
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h955656a8cbf89ac0E"() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i64*, i64 }, align 8
; invoke core::ptr::unique::Unique<T>::dangling
  %_2 = invoke nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17hb643edb95f0d2ad0E"()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i64 }* %1 to i64**
  store i64* %_2, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = bitcast { i64*, i64 }* %1 to %"alloc::alloc::Global"*
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8, !nonnull !3
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64*, i64 } undef, i64* %6, 0
  %10 = insertvalue { i64*, i64 } %9, i64 %8, 1
  ret { i64*, i64 } %10

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17he631084860281c4eE"() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i32*, i64 }, align 8
; invoke core::ptr::unique::Unique<T>::dangling
  %_2 = invoke nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17hbce10c6349675003E"()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast { i32*, i64 }* %1 to i32**
  store i32* %_2, i32** %2, align 8
  %3 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = bitcast { i32*, i64 }* %1 to %"alloc::alloc::Global"*
  %5 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8, !nonnull !3
  %7 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i32*, i64 } undef, i32* %6, 0
  %10 = insertvalue { i32*, i64 } %9, i64 %8, 1
  ret { i32*, i64 } %10

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h5f8d07dcca347e9aE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hc2be382d95be9a2aE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h973a30938a7a3c5bE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hb1d5e09706cb03abE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hdc5329a0d3412512E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17he4b337bc39901939E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17he4f9c955c311eee6E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h7c48c080bd2a1975E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h3f2d6aa989d115d7E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h3f2d6aa989d115d7E"({ i64*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional) unnamed_addr #8 {
start:
  %_5 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h2de2f44cbde2175fE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_5, { i64*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h58f5b36a195d1494E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h973a30938a7a3c5bE"({ i64*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional) unnamed_addr #8 {
start:
  %_5 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h5a304251cc8e5be1E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_5, { i64*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h58f5b36a195d1494E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17he4b337bc39901939E"({ i64*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional) unnamed_addr #8 {
start:
  %_5 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17ha8ac12c11c99a69fE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_5, { i64*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h58f5b36a195d1494E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::set_ptr
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17h1a018d4808a63c57E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_5 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6b2b7b4814cbf1a8E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h85d7d009a2386b45E"(i64* nonnull %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_3 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hf5d342009eb2b870E"(%"alloc::vec::Vec<_ProbeNode>"* %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %0 = bitcast { i64*, i64 }* %self to i64**
  store i64* %_3, i64** %0, align 8
; call core::ptr::non_null::NonNull<[T]>::len
  %_8 = call i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h4236610cbe77fbd3E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_7 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hcf528f2b08517237E"(i64 %_8)
  br label %bb5

bb5:                                              ; preds = %bb4
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  ret void
}

; alloc::raw_vec::RawVec<T,A>::set_ptr
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17h1af0bf9c1b17c8ecE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_5 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hc00fe8b539a79701E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call %_ProbeNode* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h153227e741c58ebdE"(i64* nonnull %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_3 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h00d4c33faf98d2e3E"(%_ProbeNode* %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %0 = bitcast { i64*, i64 }* %self to i64**
  store i64* %_3, i64** %0, align 8
; call core::ptr::non_null::NonNull<[T]>::len
  %_8 = call i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h4236610cbe77fbd3E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_7 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h3a51ed67f9e41a0dE"(i64 %_8)
  br label %bb5

bb5:                                              ; preds = %bb4
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  ret void
}

; alloc::raw_vec::RawVec<T,A>::set_ptr
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17h51a1d6804b0157aaE"({ i32*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_5 = call nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7002ac7ab8dbf6f5E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4aae345c468315fdE"(i32* nonnull %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_3 = call nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h778f02408095d330E"(i32* %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %0 = bitcast { i32*, i64 }* %self to i32**
  store i32* %_3, i32** %0, align 8
; call core::ptr::non_null::NonNull<[T]>::len
  %_8 = call i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h4236610cbe77fbd3E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_7 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h07252e2b6c552f68E"(i64 %_8)
  br label %bb5

bb5:                                              ; preds = %bb4
  %1 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  ret void
}

; alloc::raw_vec::RawVec<T,A>::set_ptr
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17hc2bfadd4e30f9b98E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_5 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17he2c59d869764309fE"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6191cd23f8e44eacE"(i64* nonnull %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_3 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h2050e68da173ad23E"({ [0 x i8]*, i64 }* %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %0 = bitcast { i64*, i64 }* %self to i64**
  store i64* %_3, i64** %0, align 8
; call core::ptr::non_null::NonNull<[T]>::len
  %_8 = call i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h4236610cbe77fbd3E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_7 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h18bded6868c8bb30E"(i64 %_8)
  br label %bb5

bb5:                                              ; preds = %bb4
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  ret void
}

; alloc::raw_vec::RawVec<T,A>::allocator
; Function Attrs: nonlazybind uwtable
define nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17he9522bed611e8f24E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
  ret %"alloc::alloc::Global"* %0
}

; <std::thread::ThreadId as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN62_$LT$std..thread..ThreadId$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9fa20198db0c3e2fE"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #1 {
start:
; call <core::num::nonzero::NonZeroU64 as core::cmp::PartialEq>::eq
  %0 = call zeroext i1 @"_ZN71_$LT$core..num..nonzero..NonZeroU64$u20$as$u20$core..cmp..PartialEq$GT$2eq17h457280c98ed7b1c4E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1d4de25f3af36c17E"(i64 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h729cefbab178bd33E"(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* noalias nocapture sret(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>") dereferenceable(32) %0, %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* %0 to i8*
  %2 = bitcast %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h866eab9abdb89733E"(%"core::str::iter::SplitWhitespace"* noalias nocapture sret(%"core::str::iter::SplitWhitespace") dereferenceable(64) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"core::str::iter::SplitWhitespace"* %0 to i8*
  %2 = bitcast %"core::str::iter::SplitWhitespace"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 64, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hce38a5e45bd29961E"(%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>") dereferenceable(40) %0, %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* %0 to i8*
  %2 = bitcast %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hcf7da22ab103d858E"(%"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>") dereferenceable(48) %0, %"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* noalias nocapture dereferenceable(48) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* %0 to i8*
  %2 = bitcast %"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %1, i8* align 16 %2, i64 48, i1 false)
  ret void
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %0, i64 %1) unnamed_addr #1 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = icmp eq i64 %_4, 0
  br i1 %4, label %bb5, label %bb2

bb5:                                              ; preds = %bb1
  br label %bb6

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %ptr)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_8.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_8.1 = load i64, i64* %6, align 8, !range !26
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17ha4eec2204bfa1e09E(i8* %_6, i64 %_8.0, i64 %_8.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  ret void
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h4ce452af588ad6c2E"(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #1 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hdd2a7dc4cea9935bE(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17ha9b819e3bbed7914E"(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #1 {
start:
; call alloc::alloc::Global::grow_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17hdc2e95a80e1f753dE(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h513321190ee97a91E"(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #1 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hdd2a7dc4cea9935bE(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <alloc::string::String as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3aacae195121207fE"(%"alloc::string::String"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_5 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb7391da2b186220eE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_5)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked
  %1 = call { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17hd2bbf80249c84051E([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; <core::alloc::layout::Layout as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h6eb31b55f3f0e03eE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %1 = load i64, i64* %0, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %3 = load i64, i64* %2, align 8, !range !26
  %4 = insertvalue { i64, i64 } undef, i64 %1, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <core::option::Option<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h87d5e15b37f8cb3dE"({ i64, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %_20 = alloca i64*, align 8
  %_11 = alloca %"core::fmt::builders::DebugTuple", align 8
  %_3 = alloca i64*, align 8
  %0 = alloca i8, align 1
  %1 = bitcast i64** %_3 to { i64, i64 }**
  store { i64, i64 }* %self, { i64, i64 }** %1, align 8
  %2 = bitcast i64** %_3 to { i64, i64 }**
  %3 = load { i64, i64 }*, { i64, i64 }** %2, align 8, !nonnull !3
  %4 = bitcast { i64, i64 }* %3 to i64*
  %_5 = load i64, i64* %4, align 8, !range !2
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %5 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h183551d38569a8c9E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc631 to [0 x i8]*), i64 4)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast i64** %_3 to { i64, i64 }**
  %8 = load { i64, i64 }*, { i64, i64 }** %7, align 8, !nonnull !3
  %9 = bitcast { i64, i64 }* %8 to %"core::option::Option<usize>::Some"*
  %__self_0 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %9, i32 0, i32 1
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h7224d0bd130049f1E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24) %_11, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc627 to [0 x i8]*), i64 4)
  br label %bb5

bb5:                                              ; preds = %bb1
  store i64* %__self_0, i64** %_20, align 8
  %_17.0 = bitcast i64** %_20 to {}*
; call core::fmt::builders::DebugTuple::field
  %_15 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17hf9e554966e8175aaE(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_11, {}* nonnull align 1 %_17.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.l to [3 x i64]*))
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::fmt::builders::DebugTuple::finish
  %10 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17hb124e78f94d89d10E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_11)
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb4, %bb7
  %12 = load i8, i8* %0, align 1, !range !4
  %13 = trunc i8 %12 to i1
  ret i1 %13

bb4:                                              ; preds = %bb3
  br label %bb8
}

; <std::ffi::c_str::CString as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN66_$LT$std..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17h83005f1b7bcc5f29E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %_3.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !3
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %_3.1 = load i64, i64* %2, align 8
; call core::slice::<impl [T]>::get_unchecked_mut
  %_2 = call align 1 dereferenceable(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hf9730e2aa1380090E"([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1, i64 0)
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_2, align 1
  ret void
}

; <std::io::error::ErrorKind as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN66_$LT$std..io..error..ErrorKind$u20$as$u20$core..cmp..PartialEq$GT$2eq17h3114da9cff7372f6E"(i8* align 1 dereferenceable(1) %self, i8* align 1 dereferenceable(1) %other) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = load i8, i8* %self, align 1, !range !5
  %__self_vi = zext i8 %1 to i64
  %2 = load i8, i8* %other, align 1, !range !5
  %__arg_1_vi = zext i8 %2 to i64
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h24d0aade7e1b56f2E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i8, align 1
; call alloc::sync::Arc<T>::inner
  %_4 = call align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h124341822c55de09E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_4 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_6, align 1
  %0 = load i8, i8* %_6, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_3, i64 1, i8 %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = icmp eq i64 %_2, 1
  br i1 %1, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  store i8 2, i8* %_8, align 1
  %2 = load i8, i8* %_8, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h361441ad26f502bcE(i8 %2)
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h5dd15e1c15577d76E"(i64** align 8 dereferenceable(8) %self)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h42dc7b456d17af06E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i8, align 1
; call alloc::sync::Arc<T>::inner
  %_4 = call align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h6eca7f2a2849cebfE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"* %_4 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_6, align 1
  %0 = load i8, i8* %_6, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_3, i64 1, i8 %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = icmp eq i64 %_2, 1
  br i1 %1, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  store i8 2, i8* %_8, align 1
  %2 = load i8, i8* %_8, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h361441ad26f502bcE(i8 %2)
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h91116168056012bdE"(i64** align 8 dereferenceable(8) %self)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h49d426f7e67196a4E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i8, align 1
; call alloc::sync::Arc<T>::inner
  %_4 = call align 8 dereferenceable(56) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17hdccac49e0dbd3294E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_4 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_6, align 1
  %0 = load i8, i8* %_6, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_3, i64 1, i8 %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = icmp eq i64 %_2, 1
  br i1 %1, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  store i8 2, i8* %_8, align 1
  %2 = load i8, i8* %_8, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h361441ad26f502bcE(i8 %2)
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17ha00ebf553855c456E"(i64** align 8 dereferenceable(8) %self)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7fb5f0d172f0bbcaE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i8, align 1
; call alloc::sync::Arc<T>::inner
  %_4 = call align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17ha46566dcf72aa1cdE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_4 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_6, align 1
  %0 = load i8, i8* %_6, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_3, i64 1, i8 %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = icmp eq i64 %_2, 1
  br i1 %1, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  store i8 2, i8* %_8, align 1
  %2 = load i8, i8* %_8, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h361441ad26f502bcE(i8 %2)
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17he33c99f4a40a2080E"(i64** align 8 dereferenceable(8) %self)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hde4ba7558b0dc35eE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i8, align 1
; call alloc::sync::Arc<T>::inner
  %_4 = call align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17hcb973b638a4d1956E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_4 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_6, align 1
  %0 = load i8, i8* %_6, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_3, i64 1, i8 %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = icmp eq i64 %_2, 1
  br i1 %1, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  store i8 2, i8* %_8, align 1
  %2 = load i8, i8* %_8, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h361441ad26f502bcE(i8 %2)
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17he9858cc0c388a199E"(i64** align 8 dereferenceable(8) %self)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he9a2b57033d4cc11E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i8, align 1
; call alloc::sync::Arc<T>::inner
  %_4 = call align 8 dereferenceable(80) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17hdb923bc1e0c71d43E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_4 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_6, align 1
  %0 = load i8, i8* %_6, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_3, i64 1, i8 %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = icmp eq i64 %_2, 1
  br i1 %1, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  store i8 2, i8* %_8, align 1
  %2 = load i8, i8* %_8, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h361441ad26f502bcE(i8 %2)
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h95f37a3a8d402a49E"(i64** align 8 dereferenceable(8) %self)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf1f45f5f403d408cE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i8, align 1
; call alloc::sync::Arc<T>::inner
  %_4 = call align 8 dereferenceable(48) %"alloc::sync::ArcInner<std::thread::Inner>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h1d7ab8989ecae8c3E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::sync::ArcInner<std::thread::Inner>"* %_4 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_6, align 1
  %0 = load i8, i8* %_6, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_3, i64 1, i8 %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = icmp eq i64 %_2, 1
  br i1 %1, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  store i8 2, i8* %_8, align 1
  %2 = load i8, i8* %_8, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h361441ad26f502bcE(i8 %2)
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hf2ad74cb58a330eaE"(i64** align 8 dereferenceable(8) %self)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; <core::hash::sip::SipHasher13 as core::hash::Hasher>::write
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN67_$LT$core..hash..sip..SipHasher13$u20$as$u20$core..hash..Hasher$GT$5write17h7053a04d1b9df41bE"(%"core::hash::sip::SipHasher13"* align 8 dereferenceable(72) %self, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1) unnamed_addr #1 {
start:
  %_3 = bitcast %"core::hash::sip::SipHasher13"* %self to %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"*
; call <core::hash::sip::Hasher<S> as core::hash::Hasher>::write
  call void @"_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h54bd6f05b7852eb1E"(%"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* align 8 dereferenceable(72) %_3, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::hash::sip::SipHasher13 as core::hash::Hasher>::finish
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN67_$LT$core..hash..sip..SipHasher13$u20$as$u20$core..hash..Hasher$GT$6finish17hf45ba2dafd81e189E"(%"core::hash::sip::SipHasher13"* align 8 dereferenceable(72) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"core::hash::sip::SipHasher13"* %self to %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"*
; call <core::hash::sip::Hasher<S> as core::hash::Hasher>::finish
  %0 = call i64 @"_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$6finish17h5550e7545841f1c5E"(%"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* align 8 dereferenceable(72) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; <core::num::nonzero::NonZeroU64 as core::hash::Hash>::hash
; Function Attrs: nonlazybind uwtable
define void @"_ZN67_$LT$core..num..nonzero..NonZeroU64$u20$as$u20$core..hash..Hash$GT$4hash17h54464a008da11cb8E"(i64* align 8 dereferenceable(8) %self, %"std::collections::hash::map::DefaultHasher"* align 8 dereferenceable(72) %state) unnamed_addr #0 {
start:
; call core::hash::impls::<impl core::hash::Hash for u64>::hash
  call void @"_ZN4core4hash5impls50_$LT$impl$u20$core..hash..Hash$u20$for$u20$u64$GT$4hash17ha1b7684cfa0945eeE"(i64* align 8 dereferenceable(8) %self, %"std::collections::hash::map::DefaultHasher"* align 8 dereferenceable(72) %state)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h550168a71b5786acE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17hea7a8ff65b68cef8E"(i64** align 8 dereferenceable(8) %self)
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 1
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0
  %inner.0 = load i64*, i64** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1
  %inner.1 = load i64*, i64** %7, align 8, !nonnull !3
  %_8 = bitcast i64* %inner.0 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_9, align 1
  %8 = load i8, i8* %_9, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_7 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_8, i64 1, i8 %8)
  br label %bb4

bb3:                                              ; preds = %bb1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  ret void

bb4:                                              ; preds = %bb2
  %9 = icmp eq i64 %_7, 1
  br i1 %9, label %bb5, label %bb11

bb5:                                              ; preds = %bb4
  store i8 2, i8* %_11, align 1
  %10 = load i8, i8* %_11, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h361441ad26f502bcE(i8 %10)
  br label %bb6

bb11:                                             ; preds = %bb4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  br label %bb13

bb6:                                              ; preds = %bb5
  %_14 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::cast
  %_13 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3aebe3ab6d6023feE"(i64* nonnull %_14)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_18 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h872f7f01d67858c8E"(i64* nonnull %_18)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::alloc::layout::Layout::for_value_raw
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hf73eb1b8c446d741E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_17)
  %_15.0 = extractvalue { i64, i64 } %11, 0
  %_15.1 = extractvalue { i64, i64 } %11, 1
  br label %bb9

bb9:                                              ; preds = %bb8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc446 to %"alloc::alloc::Global"*), i8* nonnull %_13, i64 %_15.0, i64 %_15.1)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb12
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha783e36fae91efc1E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17hacdc7e909555c83cE"(i64** align 8 dereferenceable(8) %self)
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 1
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0
  %inner.0 = load i64*, i64** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1
  %inner.1 = load i64*, i64** %7, align 8, !nonnull !3
  %_8 = bitcast i64* %inner.0 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_9, align 1
  %8 = load i8, i8* %_9, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_7 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_8, i64 1, i8 %8)
  br label %bb4

bb3:                                              ; preds = %bb1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  ret void

bb4:                                              ; preds = %bb2
  %9 = icmp eq i64 %_7, 1
  br i1 %9, label %bb5, label %bb11

bb5:                                              ; preds = %bb4
  store i8 2, i8* %_11, align 1
  %10 = load i8, i8* %_11, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h361441ad26f502bcE(i8 %10)
  br label %bb6

bb11:                                             ; preds = %bb4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  br label %bb13

bb6:                                              ; preds = %bb5
  %_14 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::cast
  %_13 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6ebbb6d58afb88ecE"(i64* nonnull %_14)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_18 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hde19dc7ef38947acE"(i64* nonnull %_18)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::alloc::layout::Layout::for_value_raw
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h966577777876b9c7E(%"alloc::sync::ArcInner<_ShuffledOrder>"* %_17)
  %_15.0 = extractvalue { i64, i64 } %11, 0
  %_15.1 = extractvalue { i64, i64 } %11, 1
  br label %bb9

bb9:                                              ; preds = %bb8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc446 to %"alloc::alloc::Global"*), i8* nonnull %_13, i64 %_15.0, i64 %_15.1)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb12
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hbcfaf3263cf86095E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h0254dc2a2a19794cE"(i64** align 8 dereferenceable(8) %self)
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 1
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0
  %inner.0 = load i64*, i64** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1
  %inner.1 = load i64*, i64** %7, align 8, !nonnull !3
  %_8 = bitcast i64* %inner.0 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_9, align 1
  %8 = load i8, i8* %_9, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_7 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_8, i64 1, i8 %8)
  br label %bb4

bb3:                                              ; preds = %bb1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  ret void

bb4:                                              ; preds = %bb2
  %9 = icmp eq i64 %_7, 1
  br i1 %9, label %bb5, label %bb11

bb5:                                              ; preds = %bb4
  store i8 2, i8* %_11, align 1
  %10 = load i8, i8* %_11, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h361441ad26f502bcE(i8 %10)
  br label %bb6

bb11:                                             ; preds = %bb4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  br label %bb13

bb6:                                              ; preds = %bb5
  %_14 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::cast
  %_13 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h130c61525e13be89E"(i64* nonnull %_14)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_18 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h704b8dd402217635E"(i64* nonnull %_18)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::alloc::layout::Layout::for_value_raw
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hed09f202e802608bE(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %_17)
  %_15.0 = extractvalue { i64, i64 } %11, 0
  %_15.1 = extractvalue { i64, i64 } %11, 1
  br label %bb9

bb9:                                              ; preds = %bb8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc446 to %"alloc::alloc::Global"*), i8* nonnull %_13, i64 %_15.0, i64 %_15.1)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb12
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc90b406ca3480d24E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17hab8732675bda275eE"(i64** align 8 dereferenceable(8) %self)
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 1
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0
  %inner.0 = load i64*, i64** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1
  %inner.1 = load i64*, i64** %7, align 8, !nonnull !3
  %_8 = bitcast i64* %inner.0 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_9, align 1
  %8 = load i8, i8* %_9, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_7 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_8, i64 1, i8 %8)
  br label %bb4

bb3:                                              ; preds = %bb1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  ret void

bb4:                                              ; preds = %bb2
  %9 = icmp eq i64 %_7, 1
  br i1 %9, label %bb5, label %bb11

bb5:                                              ; preds = %bb4
  store i8 2, i8* %_11, align 1
  %10 = load i8, i8* %_11, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h361441ad26f502bcE(i8 %10)
  br label %bb6

bb11:                                             ; preds = %bb4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  br label %bb13

bb6:                                              ; preds = %bb5
  %_14 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::cast
  %_13 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h28e2b6e988196884E"(i64* nonnull %_14)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_18 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfc0766754e9ef31aE"(i64* nonnull %_18)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::alloc::layout::Layout::for_value_raw
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hbf0cc7824d03e225E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_17)
  %_15.0 = extractvalue { i64, i64 } %11, 0
  %_15.1 = extractvalue { i64, i64 } %11, 1
  br label %bb9

bb9:                                              ; preds = %bb8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc446 to %"alloc::alloc::Global"*), i8* nonnull %_13, i64 %_15.0, i64 %_15.1)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb12
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hdce3ae28bbae451fE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h61d3168f826bc8abE"(i64** align 8 dereferenceable(8) %self)
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 1
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0
  %inner.0 = load i64*, i64** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1
  %inner.1 = load i64*, i64** %7, align 8, !nonnull !3
  %_8 = bitcast i64* %inner.0 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_9, align 1
  %8 = load i8, i8* %_9, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_7 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_8, i64 1, i8 %8)
  br label %bb4

bb3:                                              ; preds = %bb1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  ret void

bb4:                                              ; preds = %bb2
  %9 = icmp eq i64 %_7, 1
  br i1 %9, label %bb5, label %bb11

bb5:                                              ; preds = %bb4
  store i8 2, i8* %_11, align 1
  %10 = load i8, i8* %_11, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h361441ad26f502bcE(i8 %10)
  br label %bb6

bb11:                                             ; preds = %bb4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  br label %bb13

bb6:                                              ; preds = %bb5
  %_14 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::cast
  %_13 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5c3d6459bdf78797E"(i64* nonnull %_14)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_18 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc4770d86511dec59E"(i64* nonnull %_18)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::alloc::layout::Layout::for_value_raw
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h4c97f9c7eec626d7E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_17)
  %_15.0 = extractvalue { i64, i64 } %11, 0
  %_15.1 = extractvalue { i64, i64 } %11, 1
  br label %bb9

bb9:                                              ; preds = %bb8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc446 to %"alloc::alloc::Global"*), i8* nonnull %_13, i64 %_15.0, i64 %_15.1)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb12
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf7adc847d42516dfE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h8812c7f399e508f2E"(i64** align 8 dereferenceable(8) %self)
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 1
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0
  %inner.0 = load i64*, i64** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1
  %inner.1 = load i64*, i64** %7, align 8, !nonnull !3
  %_8 = bitcast i64* %inner.0 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_9, align 1
  %8 = load i8, i8* %_9, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_7 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_8, i64 1, i8 %8)
  br label %bb4

bb3:                                              ; preds = %bb1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  ret void

bb4:                                              ; preds = %bb2
  %9 = icmp eq i64 %_7, 1
  br i1 %9, label %bb5, label %bb11

bb5:                                              ; preds = %bb4
  store i8 2, i8* %_11, align 1
  %10 = load i8, i8* %_11, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h361441ad26f502bcE(i8 %10)
  br label %bb6

bb11:                                             ; preds = %bb4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  br label %bb13

bb6:                                              ; preds = %bb5
  %_14 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::cast
  %_13 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h02ca1d4d4f55afebE"(i64* nonnull %_14)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_18 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17 = call %"alloc::sync::ArcInner<std::thread::Inner>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf2e842de11dd0669E"(i64* nonnull %_18)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::alloc::layout::Layout::for_value_raw
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hd34aa81edbd56ee0E(%"alloc::sync::ArcInner<std::thread::Inner>"* %_17)
  %_15.0 = extractvalue { i64, i64 } %11, 0
  %_15.1 = extractvalue { i64, i64 } %11, 1
  br label %bb9

bb9:                                              ; preds = %bb8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc446 to %"alloc::alloc::Global"*), i8* nonnull %_13, i64 %_15.0, i64 %_15.1)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb12
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf9ba2a5e87be736eE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17ha83cca3d571fd010E"(i64** align 8 dereferenceable(8) %self)
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 1
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0
  %inner.0 = load i64*, i64** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1
  %inner.1 = load i64*, i64** %7, align 8, !nonnull !3
  %_8 = bitcast i64* %inner.0 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_9, align 1
  %8 = load i8, i8* %_9, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_7 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h7dd0366ab65cada6E(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_8, i64 1, i8 %8)
  br label %bb4

bb3:                                              ; preds = %bb1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  ret void

bb4:                                              ; preds = %bb2
  %9 = icmp eq i64 %_7, 1
  br i1 %9, label %bb5, label %bb11

bb5:                                              ; preds = %bb4
  store i8 2, i8* %_11, align 1
  %10 = load i8, i8* %_11, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h361441ad26f502bcE(i8 %10)
  br label %bb6

bb11:                                             ; preds = %bb4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  br label %bb13

bb6:                                              ; preds = %bb5
  %_14 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::cast
  %_13 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h9d0f10d89664ca79E"(i64* nonnull %_14)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_18 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h866f1319c178a983E"(i64* nonnull %_18)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::alloc::layout::Layout::for_value_raw
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hcc05ebd9a729acbeE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_17)
  %_15.0 = extractvalue { i64, i64 } %11, 0
  %_15.1 = extractvalue { i64, i64 } %11, 1
  br label %bb9

bb9:                                              ; preds = %bb8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc446 to %"alloc::alloc::Global"*), i8* nonnull %_13, i64 %_15.0, i64 %_15.1)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb12
}

; <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(16) %"std::sync::mutex::Mutex<i32>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h19963d06464fe0e3E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call alloc::sync::Arc<T>::inner
  %_2 = call align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h124341822c55de09E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %_2, i32 0, i32 2
  ret %"std::sync::mutex::Mutex<i32>"* %0
}

; <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(40) %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h35e4a8216d4bf9a7E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call alloc::sync::Arc<T>::inner
  %_2 = call align 8 dereferenceable(56) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17hdccac49e0dbd3294E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_2, i32 0, i32 2
  ret %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %0
}

; <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %_ProbeSemaphore* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h458a375cb37ab2e8E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call alloc::sync::Arc<T>::inner
  %_2 = call align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17ha46566dcf72aa1cdE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::sync::ArcInner<_ProbeSemaphore>", %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_2, i32 0, i32 2
  ret %_ProbeSemaphore* %0
}

; <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h658bbfca12a16b87E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call alloc::sync::Arc<T>::inner
  %_2 = call align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17hcb973b638a4d1956E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_2, i32 0, i32 2
  ret %"std::sync::mutex::Mutex<std::fs::File>"* %0
}

; <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(64) %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h89ce48486dbaec3aE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call alloc::sync::Arc<T>::inner
  %_2 = call align 8 dereferenceable(80) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17hdb923bc1e0c71d43E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %_2, i32 0, i32 2
  ret %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %0
}

; <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(96) %_ShuffledOrder* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb9d483803ff708d8E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call alloc::sync::Arc<T>::inner
  %_2 = call align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h6eca7f2a2849cebfE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::sync::ArcInner<_ShuffledOrder>", %"alloc::sync::ArcInner<_ShuffledOrder>"* %_2, i32 0, i32 2
  ret %_ShuffledOrder* %0
}

; <core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::c_rounds
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN69_$LT$core..hash..sip..Sip13Rounds$u20$as$u20$core..hash..sip..Sip$GT$8c_rounds17hcd6787d2afa7cc0dE"(%"core::hash::sip::State"* align 8 dereferenceable(32) %state) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = bitcast %"core::hash::sip::State"* %state to i64*
  %_3 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_4 = load i64, i64* %7, align 8
  %8 = add i64 %_3, %_4
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::hash::sip::State"* %state to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_6 = load i64, i64* %10, align 8
  %11 = call i64 @llvm.fshl.i64(i64 %_6, i64 %_6, i64 13)
  store i64 %11, i64* %0, align 8
  %12 = load i64, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %13 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  store i64 %12, i64* %13, align 8
  %14 = bitcast %"core::hash::sip::State"* %state to i64*
  %_7 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %16 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = xor i64 %17, %_7
  store i64 %18, i64* %15, align 8
  %19 = bitcast %"core::hash::sip::State"* %state to i64*
  %_9 = load i64, i64* %19, align 8
  %20 = call i64 @llvm.fshl.i64(i64 %_9, i64 %_9, i64 32)
  store i64 %20, i64* %1, align 8
  %21 = load i64, i64* %1, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %22 = bitcast %"core::hash::sip::State"* %state to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_11 = load i64, i64* %23, align 8
  %24 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_12 = load i64, i64* %24, align 8
  %25 = add i64 %_11, %_12
  br label %bb4

bb4:                                              ; preds = %bb3
  %26 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_14 = load i64, i64* %27, align 8
  %28 = call i64 @llvm.fshl.i64(i64 %_14, i64 %_14, i64 16)
  store i64 %28, i64* %2, align 8
  %29 = load i64, i64* %2, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
  %30 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_15 = load i64, i64* %31, align 8
  %32 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %33 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = xor i64 %34, %_15
  store i64 %35, i64* %32, align 8
  %36 = bitcast %"core::hash::sip::State"* %state to i64*
  %_17 = load i64, i64* %36, align 8
  %37 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_18 = load i64, i64* %37, align 8
  %38 = add i64 %_17, %_18
  br label %bb6

bb6:                                              ; preds = %bb5
  %39 = bitcast %"core::hash::sip::State"* %state to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_20 = load i64, i64* %40, align 8
  %41 = call i64 @llvm.fshl.i64(i64 %_20, i64 %_20, i64 21)
  store i64 %41, i64* %3, align 8
  %42 = load i64, i64* %3, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  %43 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  store i64 %42, i64* %43, align 8
  %44 = bitcast %"core::hash::sip::State"* %state to i64*
  %_21 = load i64, i64* %44, align 8
  %45 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %46 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %47 = load i64, i64* %46, align 8
  %48 = xor i64 %47, %_21
  store i64 %48, i64* %45, align 8
  %49 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_23 = load i64, i64* %49, align 8
  %50 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_24 = load i64, i64* %50, align 8
  %51 = add i64 %_23, %_24
  br label %bb8

bb8:                                              ; preds = %bb7
  %52 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_26 = load i64, i64* %53, align 8
  %54 = call i64 @llvm.fshl.i64(i64 %_26, i64 %_26, i64 17)
  store i64 %54, i64* %4, align 8
  %55 = load i64, i64* %4, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  %56 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_27 = load i64, i64* %57, align 8
  %58 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %59 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = xor i64 %60, %_27
  store i64 %61, i64* %58, align 8
  %62 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_29 = load i64, i64* %62, align 8
  %63 = call i64 @llvm.fshl.i64(i64 %_29, i64 %_29, i64 32)
  store i64 %63, i64* %5, align 8
  %64 = load i64, i64* %5, align 8
  br label %bb10

bb10:                                             ; preds = %bb9
  %65 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  store i64 %64, i64* %65, align 8
  ret void
}

; <core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::d_rounds
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN69_$LT$core..hash..sip..Sip13Rounds$u20$as$u20$core..hash..sip..Sip$GT$8d_rounds17h3c00440d63731eb7E"(%"core::hash::sip::State"* align 8 dereferenceable(32) %state) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = bitcast %"core::hash::sip::State"* %state to i64*
  %_3 = load i64, i64* %18, align 8
  %19 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_4 = load i64, i64* %19, align 8
  %20 = add i64 %_3, %_4
  br label %bb1

bb1:                                              ; preds = %start
  %21 = bitcast %"core::hash::sip::State"* %state to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_6 = load i64, i64* %22, align 8
  %23 = call i64 @llvm.fshl.i64(i64 %_6, i64 %_6, i64 13)
  store i64 %23, i64* %0, align 8
  %24 = load i64, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %25 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"core::hash::sip::State"* %state to i64*
  %_7 = load i64, i64* %26, align 8
  %27 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %28 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = xor i64 %29, %_7
  store i64 %30, i64* %27, align 8
  %31 = bitcast %"core::hash::sip::State"* %state to i64*
  %_9 = load i64, i64* %31, align 8
  %32 = call i64 @llvm.fshl.i64(i64 %_9, i64 %_9, i64 32)
  store i64 %32, i64* %1, align 8
  %33 = load i64, i64* %1, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %34 = bitcast %"core::hash::sip::State"* %state to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_11 = load i64, i64* %35, align 8
  %36 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_12 = load i64, i64* %36, align 8
  %37 = add i64 %_11, %_12
  br label %bb4

bb4:                                              ; preds = %bb3
  %38 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_14 = load i64, i64* %39, align 8
  %40 = call i64 @llvm.fshl.i64(i64 %_14, i64 %_14, i64 16)
  store i64 %40, i64* %2, align 8
  %41 = load i64, i64* %2, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
  %42 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_15 = load i64, i64* %43, align 8
  %44 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %45 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %46 = load i64, i64* %45, align 8
  %47 = xor i64 %46, %_15
  store i64 %47, i64* %44, align 8
  %48 = bitcast %"core::hash::sip::State"* %state to i64*
  %_17 = load i64, i64* %48, align 8
  %49 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_18 = load i64, i64* %49, align 8
  %50 = add i64 %_17, %_18
  br label %bb6

bb6:                                              ; preds = %bb5
  %51 = bitcast %"core::hash::sip::State"* %state to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_20 = load i64, i64* %52, align 8
  %53 = call i64 @llvm.fshl.i64(i64 %_20, i64 %_20, i64 21)
  store i64 %53, i64* %3, align 8
  %54 = load i64, i64* %3, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  %55 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  store i64 %54, i64* %55, align 8
  %56 = bitcast %"core::hash::sip::State"* %state to i64*
  %_21 = load i64, i64* %56, align 8
  %57 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %58 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %59 = load i64, i64* %58, align 8
  %60 = xor i64 %59, %_21
  store i64 %60, i64* %57, align 8
  %61 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_23 = load i64, i64* %61, align 8
  %62 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_24 = load i64, i64* %62, align 8
  %63 = add i64 %_23, %_24
  br label %bb8

bb8:                                              ; preds = %bb7
  %64 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_26 = load i64, i64* %65, align 8
  %66 = call i64 @llvm.fshl.i64(i64 %_26, i64 %_26, i64 17)
  store i64 %66, i64* %4, align 8
  %67 = load i64, i64* %4, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  %68 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_27 = load i64, i64* %69, align 8
  %70 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %71 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %72 = load i64, i64* %71, align 8
  %73 = xor i64 %72, %_27
  store i64 %73, i64* %70, align 8
  %74 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_29 = load i64, i64* %74, align 8
  %75 = call i64 @llvm.fshl.i64(i64 %_29, i64 %_29, i64 32)
  store i64 %75, i64* %5, align 8
  %76 = load i64, i64* %5, align 8
  br label %bb10

bb10:                                             ; preds = %bb9
  %77 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  store i64 %76, i64* %77, align 8
  %78 = bitcast %"core::hash::sip::State"* %state to i64*
  %_31 = load i64, i64* %78, align 8
  %79 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_32 = load i64, i64* %79, align 8
  %80 = add i64 %_31, %_32
  br label %bb11

bb11:                                             ; preds = %bb10
  %81 = bitcast %"core::hash::sip::State"* %state to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_34 = load i64, i64* %82, align 8
  %83 = call i64 @llvm.fshl.i64(i64 %_34, i64 %_34, i64 13)
  store i64 %83, i64* %6, align 8
  %84 = load i64, i64* %6, align 8
  br label %bb12

bb12:                                             ; preds = %bb11
  %85 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  store i64 %84, i64* %85, align 8
  %86 = bitcast %"core::hash::sip::State"* %state to i64*
  %_35 = load i64, i64* %86, align 8
  %87 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %88 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %89 = load i64, i64* %88, align 8
  %90 = xor i64 %89, %_35
  store i64 %90, i64* %87, align 8
  %91 = bitcast %"core::hash::sip::State"* %state to i64*
  %_37 = load i64, i64* %91, align 8
  %92 = call i64 @llvm.fshl.i64(i64 %_37, i64 %_37, i64 32)
  store i64 %92, i64* %7, align 8
  %93 = load i64, i64* %7, align 8
  br label %bb13

bb13:                                             ; preds = %bb12
  %94 = bitcast %"core::hash::sip::State"* %state to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_39 = load i64, i64* %95, align 8
  %96 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_40 = load i64, i64* %96, align 8
  %97 = add i64 %_39, %_40
  br label %bb14

bb14:                                             ; preds = %bb13
  %98 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_42 = load i64, i64* %99, align 8
  %100 = call i64 @llvm.fshl.i64(i64 %_42, i64 %_42, i64 16)
  store i64 %100, i64* %8, align 8
  %101 = load i64, i64* %8, align 8
  br label %bb15

bb15:                                             ; preds = %bb14
  %102 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_43 = load i64, i64* %103, align 8
  %104 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %105 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %106 = load i64, i64* %105, align 8
  %107 = xor i64 %106, %_43
  store i64 %107, i64* %104, align 8
  %108 = bitcast %"core::hash::sip::State"* %state to i64*
  %_45 = load i64, i64* %108, align 8
  %109 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_46 = load i64, i64* %109, align 8
  %110 = add i64 %_45, %_46
  br label %bb16

bb16:                                             ; preds = %bb15
  %111 = bitcast %"core::hash::sip::State"* %state to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_48 = load i64, i64* %112, align 8
  %113 = call i64 @llvm.fshl.i64(i64 %_48, i64 %_48, i64 21)
  store i64 %113, i64* %9, align 8
  %114 = load i64, i64* %9, align 8
  br label %bb17

bb17:                                             ; preds = %bb16
  %115 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  store i64 %114, i64* %115, align 8
  %116 = bitcast %"core::hash::sip::State"* %state to i64*
  %_49 = load i64, i64* %116, align 8
  %117 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %118 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %119 = load i64, i64* %118, align 8
  %120 = xor i64 %119, %_49
  store i64 %120, i64* %117, align 8
  %121 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_51 = load i64, i64* %121, align 8
  %122 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_52 = load i64, i64* %122, align 8
  %123 = add i64 %_51, %_52
  br label %bb18

bb18:                                             ; preds = %bb17
  %124 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_54 = load i64, i64* %125, align 8
  %126 = call i64 @llvm.fshl.i64(i64 %_54, i64 %_54, i64 17)
  store i64 %126, i64* %10, align 8
  %127 = load i64, i64* %10, align 8
  br label %bb19

bb19:                                             ; preds = %bb18
  %128 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_55 = load i64, i64* %129, align 8
  %130 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %131 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %132 = load i64, i64* %131, align 8
  %133 = xor i64 %132, %_55
  store i64 %133, i64* %130, align 8
  %134 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_57 = load i64, i64* %134, align 8
  %135 = call i64 @llvm.fshl.i64(i64 %_57, i64 %_57, i64 32)
  store i64 %135, i64* %11, align 8
  %136 = load i64, i64* %11, align 8
  br label %bb20

bb20:                                             ; preds = %bb19
  %137 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"core::hash::sip::State"* %state to i64*
  %_59 = load i64, i64* %138, align 8
  %139 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_60 = load i64, i64* %139, align 8
  %140 = add i64 %_59, %_60
  br label %bb21

bb21:                                             ; preds = %bb20
  %141 = bitcast %"core::hash::sip::State"* %state to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_62 = load i64, i64* %142, align 8
  %143 = call i64 @llvm.fshl.i64(i64 %_62, i64 %_62, i64 13)
  store i64 %143, i64* %12, align 8
  %144 = load i64, i64* %12, align 8
  br label %bb22

bb22:                                             ; preds = %bb21
  %145 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  store i64 %144, i64* %145, align 8
  %146 = bitcast %"core::hash::sip::State"* %state to i64*
  %_63 = load i64, i64* %146, align 8
  %147 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %148 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %149 = load i64, i64* %148, align 8
  %150 = xor i64 %149, %_63
  store i64 %150, i64* %147, align 8
  %151 = bitcast %"core::hash::sip::State"* %state to i64*
  %_65 = load i64, i64* %151, align 8
  %152 = call i64 @llvm.fshl.i64(i64 %_65, i64 %_65, i64 32)
  store i64 %152, i64* %13, align 8
  %153 = load i64, i64* %13, align 8
  br label %bb23

bb23:                                             ; preds = %bb22
  %154 = bitcast %"core::hash::sip::State"* %state to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_67 = load i64, i64* %155, align 8
  %156 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_68 = load i64, i64* %156, align 8
  %157 = add i64 %_67, %_68
  br label %bb24

bb24:                                             ; preds = %bb23
  %158 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_70 = load i64, i64* %159, align 8
  %160 = call i64 @llvm.fshl.i64(i64 %_70, i64 %_70, i64 16)
  store i64 %160, i64* %14, align 8
  %161 = load i64, i64* %14, align 8
  br label %bb25

bb25:                                             ; preds = %bb24
  %162 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_71 = load i64, i64* %163, align 8
  %164 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %165 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %166 = load i64, i64* %165, align 8
  %167 = xor i64 %166, %_71
  store i64 %167, i64* %164, align 8
  %168 = bitcast %"core::hash::sip::State"* %state to i64*
  %_73 = load i64, i64* %168, align 8
  %169 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_74 = load i64, i64* %169, align 8
  %170 = add i64 %_73, %_74
  br label %bb26

bb26:                                             ; preds = %bb25
  %171 = bitcast %"core::hash::sip::State"* %state to i64*
  store i64 %170, i64* %171, align 8
  %172 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_76 = load i64, i64* %172, align 8
  %173 = call i64 @llvm.fshl.i64(i64 %_76, i64 %_76, i64 21)
  store i64 %173, i64* %15, align 8
  %174 = load i64, i64* %15, align 8
  br label %bb27

bb27:                                             ; preds = %bb26
  %175 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  store i64 %174, i64* %175, align 8
  %176 = bitcast %"core::hash::sip::State"* %state to i64*
  %_77 = load i64, i64* %176, align 8
  %177 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %178 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %179 = load i64, i64* %178, align 8
  %180 = xor i64 %179, %_77
  store i64 %180, i64* %177, align 8
  %181 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_79 = load i64, i64* %181, align 8
  %182 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_80 = load i64, i64* %182, align 8
  %183 = add i64 %_79, %_80
  br label %bb28

bb28:                                             ; preds = %bb27
  %184 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  store i64 %183, i64* %184, align 8
  %185 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_82 = load i64, i64* %185, align 8
  %186 = call i64 @llvm.fshl.i64(i64 %_82, i64 %_82, i64 17)
  store i64 %186, i64* %16, align 8
  %187 = load i64, i64* %16, align 8
  br label %bb29

bb29:                                             ; preds = %bb28
  %188 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_83 = load i64, i64* %189, align 8
  %190 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %191 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %192 = load i64, i64* %191, align 8
  %193 = xor i64 %192, %_83
  store i64 %193, i64* %190, align 8
  %194 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_85 = load i64, i64* %194, align 8
  %195 = call i64 @llvm.fshl.i64(i64 %_85, i64 %_85, i64 32)
  store i64 %195, i64* %17, align 8
  %196 = load i64, i64* %17, align 8
  br label %bb30

bb30:                                             ; preds = %bb29
  %197 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  store i64 %196, i64* %197, align 8
  ret void
}

; <std::os::fd::owned::OwnedFd as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb1d31648f50c3957E"(i32* align 4 dereferenceable(4) %self) unnamed_addr #1 {
start:
  %_3 = load i32, i32* %self, align 4
  %_2 = call i32 @close(i32 %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2267ba8035591134E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h077409901e46bab2E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h798a9bb69b4846afE(%"alloc::vec::Vec<_ProbeNode>"* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<[alloc::vec::Vec<probe::_ProbeNode>]>
  call void @"_ZN4core3ptr71drop_in_place$LT$$u5b$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$u5d$$GT$17hf0896cf91432abb8E"([0 x %"alloc::vec::Vec<_ProbeNode>"]* %_2.0, i64 %_2.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h45ba1355f62bde06E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h0a9babc4cf2e66cdE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h2a23878c8d823489E(i8* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb76d5bbd2f3f7460E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h80f2d9979e978176E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hb54d7315376a0ca5E({ [0 x i8]*, i64 }* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb9a92bae182aff15E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call %_ProbeNode* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hcd537bfdbcc97474E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hc87cab258c17f2f7E(%_ProbeNode* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x %_ProbeNode]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x %_ProbeNode]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <core::option::Option<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2d6ab0336729dae4E"({ i64, i64 }* align 8 dereferenceable(16) %self, { i64, i64 }* align 8 dereferenceable(16) %other) unnamed_addr #1 {
start:
  %_13 = alloca { i64*, i64* }, align 8
  %0 = alloca i8, align 1
  %1 = bitcast { i64, i64 }* %self to i64*
  %__self_vi = load i64, i64* %1, align 8, !range !2
  %2 = bitcast { i64, i64 }* %other to i64*
  %__arg_1_vi = load i64, i64* %2, align 8, !range !2
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb1, label %bb7

bb7:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb8

bb1:                                              ; preds = %start
  %3 = bitcast { i64*, i64* }* %_13 to { i64, i64 }**
  store { i64, i64 }* %self, { i64, i64 }** %3, align 8
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %5 = bitcast i64** %4 to { i64, i64 }**
  store { i64, i64 }* %other, { i64, i64 }** %5, align 8
  %6 = bitcast { i64*, i64* }* %_13 to { i64, i64 }**
  %7 = load { i64, i64 }*, { i64, i64 }** %6, align 8, !nonnull !3
  %8 = bitcast { i64, i64 }* %7 to i64*
  %_17 = load i64, i64* %8, align 8, !range !2
  %9 = icmp eq i64 %_17, 1
  br i1 %9, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %11 = bitcast i64** %10 to { i64, i64 }**
  %12 = load { i64, i64 }*, { i64, i64 }** %11, align 8, !nonnull !3
  %13 = bitcast { i64, i64 }* %12 to i64*
  %_16 = load i64, i64* %13, align 8, !range !2
  %14 = icmp eq i64 %_16, 1
  br i1 %14, label %bb4, label %bb2

bb2:                                              ; preds = %bb3, %bb1
  store i8 1, i8* %0, align 1
  br label %bb6

bb4:                                              ; preds = %bb3
  %15 = bitcast { i64*, i64* }* %_13 to { i64, i64 }**
  %16 = load { i64, i64 }*, { i64, i64 }** %15, align 8, !nonnull !3
  %17 = bitcast { i64, i64 }* %16 to %"core::option::Option<usize>::Some"*
  %__self_0 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %17, i32 0, i32 1
  %18 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %19 = bitcast i64** %18 to { i64, i64 }**
  %20 = load { i64, i64 }*, { i64, i64 }** %19, align 8, !nonnull !3
  %21 = bitcast { i64, i64 }* %20 to %"core::option::Option<usize>::Some"*
  %__arg_1_0 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %21, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialEq for usize>::eq
  %22 = call zeroext i1 @"_ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2eq17h9f156237d5981027E"(i64* align 8 dereferenceable(8) %__self_0, i64* align 8 dereferenceable(8) %__arg_1_0)
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %0, align 1
  br label %bb5

bb6:                                              ; preds = %bb5, %bb2
  br label %bb8

bb5:                                              ; preds = %bb4
  br label %bb6

bb8:                                              ; preds = %bb7, %bb6
  %24 = load i8, i8* %0, align 1, !range !4
  %25 = trunc i8 %24 to i1
  ret i1 %25
}

; <core::hash::sip::Hasher<S> as core::hash::Hasher>::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h54bd6f05b7852eb1E"(%"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* align 8 dereferenceable(72) %self, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %data = alloca i64, align 8
  %i = alloca i64, align 8
  %needed = alloca i64, align 8
  %1 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 3
  %2 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, %msg.1
  store i64 %4, i64* %1, align 8
  store i64 0, i64* %needed, align 8
  %5 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 6
  %_7 = load i64, i64* %5, align 8
  %6 = icmp eq i64 %_7, 0
  br i1 %6, label %bb7, label %bb1

bb7:                                              ; preds = %start
  br label %bb8

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 6
  %_8 = load i64, i64* %7, align 8
  %8 = sub i64 8, %_8
  store i64 %8, i64* %needed, align 8
  %_14 = load i64, i64* %needed, align 8
; call core::cmp::min
  %_12 = call i64 @_ZN4core3cmp3min17h7596f3b06f8c43bdE(i64 %msg.1, i64 %_14)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::hash::sip::u8to64_le
  %_10 = call i64 @_ZN4core4hash3sip9u8to64_le17h0630f87be5cb25afE([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, i64 0, i64 %_12)
  br label %bb3

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 6
  %_16 = load i64, i64* %9, align 8
  %_15 = mul i64 8, %_16
  %10 = and i64 %_15, 63
  %_9 = shl i64 %_10, %10
  %11 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 5
  %12 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 5
  %13 = load i64, i64* %12, align 8
  %14 = or i64 %13, %_9
  store i64 %14, i64* %11, align 8
  %_19 = load i64, i64* %needed, align 8
  %_17 = icmp ult i64 %msg.1, %_19
  br i1 %_17, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %15 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 5
  %_21 = load i64, i64* %15, align 8
  %16 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 4
  %17 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %16, i32 0, i32 3
  %18 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 4
  %19 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %18, i32 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = xor i64 %20, %_21
  store i64 %21, i64* %17, align 8
  %_24 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 4
; call <core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::c_rounds
  call void @"_ZN69_$LT$core..hash..sip..Sip13Rounds$u20$as$u20$core..hash..sip..Sip$GT$8c_rounds17hcd6787d2afa7cc0dE"(%"core::hash::sip::State"* align 8 dereferenceable(32) %_24)
  br label %bb6

bb4:                                              ; preds = %bb3
  %22 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 6
  %23 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 6
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, %msg.1
  store i64 %25, i64* %22, align 8
  br label %bb19

bb19:                                             ; preds = %bb18, %bb4
  ret void

bb6:                                              ; preds = %bb5
  %26 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 5
  %_25 = load i64, i64* %26, align 8
  %27 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 4
  %28 = bitcast %"core::hash::sip::State"* %27 to i64*
  %29 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 4
  %30 = bitcast %"core::hash::sip::State"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = xor i64 %31, %_25
  store i64 %32, i64* %28, align 8
  %33 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 6
  store i64 0, i64* %33, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %_28 = load i64, i64* %needed, align 8
  %len = sub i64 %msg.1, %_28
  %left = and i64 %len, 7
  %34 = load i64, i64* %needed, align 8
  store i64 %34, i64* %i, align 8
  br label %bb9

bb9:                                              ; preds = %bb16, %bb8
  %_33 = load i64, i64* %i, align 8
  %_34 = sub i64 %len, %left
  %_32 = icmp ult i64 %_33, %_34
  br i1 %_32, label %bb10, label %bb17

bb17:                                             ; preds = %bb9
  %_57 = load i64, i64* %i, align 8
; call core::hash::sip::u8to64_le
  %_55 = call i64 @_ZN4core4hash3sip9u8to64_le17h0630f87be5cb25afE([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, i64 %_57, i64 %left)
  br label %bb18

bb10:                                             ; preds = %bb9
  store i64 0, i64* %data, align 8
; call core::slice::<impl [T]>::as_ptr
  %_41 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hac9eb96ca88beecdE"([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1)
  br label %bb11

bb11:                                             ; preds = %bb10
  %_43 = load i64, i64* %i, align 8
  %35 = getelementptr inbounds i8, i8* %_41, i64 %_43
  store i8* %35, i8** %0, align 8
  %36 = load i8*, i8** %0, align 8
  br label %bb12

bb12:                                             ; preds = %bb11
  %_44 = bitcast i64* %data to i8*
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hb984a4318aa516b1E(i8* %36, i8* %_44, i64 8)
  br label %bb14

bb14:                                             ; preds = %bb13
  %_49 = load i64, i64* %data, align 8
  br label %bb15

bb15:                                             ; preds = %bb14
  %37 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 4
  %38 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 4
  %40 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %39, i32 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = xor i64 %41, %_49
  store i64 %42, i64* %38, align 8
  %_53 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 4
; call <core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::c_rounds
  call void @"_ZN69_$LT$core..hash..sip..Sip13Rounds$u20$as$u20$core..hash..sip..Sip$GT$8c_rounds17hcd6787d2afa7cc0dE"(%"core::hash::sip::State"* align 8 dereferenceable(32) %_53)
  br label %bb16

bb16:                                             ; preds = %bb15
  %43 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 4
  %44 = bitcast %"core::hash::sip::State"* %43 to i64*
  %45 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 4
  %46 = bitcast %"core::hash::sip::State"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = xor i64 %47, %_49
  store i64 %48, i64* %44, align 8
  %49 = load i64, i64* %i, align 8
  %50 = add i64 %49, 8
  store i64 %50, i64* %i, align 8
  br label %bb9

bb18:                                             ; preds = %bb17
  %51 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 5
  store i64 %_55, i64* %51, align 8
  %52 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 6
  store i64 %left, i64* %52, align 8
  br label %bb19
}

; <core::hash::sip::Hasher<S> as core::hash::Hasher>::finish
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$6finish17h5550e7545841f1c5E"(%"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* align 8 dereferenceable(72) %self) unnamed_addr #1 {
start:
  %state = alloca %"core::hash::sip::State", align 8
  %0 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 4
  %1 = bitcast %"core::hash::sip::State"* %state to i8*
  %2 = bitcast %"core::hash::sip::State"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
  %3 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 3
  %_7 = load i64, i64* %3, align 8
  %_5 = and i64 %_7, 255
  %_4 = shl i64 %_5, 56
  %4 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>"* %self, i32 0, i32 5
  %_8 = load i64, i64* %4, align 8
  %b = or i64 %_4, %_8
  %5 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %6 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = xor i64 %7, %b
  store i64 %8, i64* %5, align 8
; call <core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::c_rounds
  call void @"_ZN69_$LT$core..hash..sip..Sip13Rounds$u20$as$u20$core..hash..sip..Sip$GT$8c_rounds17hcd6787d2afa7cc0dE"(%"core::hash::sip::State"* align 8 dereferenceable(32) %state)
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::hash::sip::State"* %state to i64*
  %10 = bitcast %"core::hash::sip::State"* %state to i64*
  %11 = load i64, i64* %10, align 8
  %12 = xor i64 %11, %b
  store i64 %12, i64* %9, align 8
  %13 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %14 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = xor i64 %15, 255
  store i64 %16, i64* %13, align 8
; call <core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::d_rounds
  call void @"_ZN69_$LT$core..hash..sip..Sip13Rounds$u20$as$u20$core..hash..sip..Sip$GT$8d_rounds17h3c00440d63731eb7E"(%"core::hash::sip::State"* align 8 dereferenceable(32) %state)
  br label %bb2

bb2:                                              ; preds = %bb1
  %17 = bitcast %"core::hash::sip::State"* %state to i64*
  %_19 = load i64, i64* %17, align 8
  %18 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 2
  %_20 = load i64, i64* %18, align 8
  %_18 = xor i64 %_19, %_20
  %19 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 1
  %_21 = load i64, i64* %19, align 8
  %_17 = xor i64 %_18, %_21
  %20 = getelementptr inbounds %"core::hash::sip::State", %"core::hash::sip::State"* %state, i32 0, i32 3
  %_22 = load i64, i64* %20, align 8
  %21 = xor i64 %_17, %_22
  ret i64 %21
}

; <core::num::nonzero::NonZeroU64 as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN71_$LT$core..num..nonzero..NonZeroU64$u20$as$u20$core..cmp..PartialEq$GT$2eq17h457280c98ed7b1c4E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #1 {
start:
  %_5 = load i64, i64* %self, align 8
  %_6 = load i64, i64* %other, align 8
  %0 = icmp eq i64 %_5, %_6
  ret i1 %0
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb7391da2b186220eE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h928d4ea5844e7b72E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %0, align 8
; call core::slice::raw::from_raw_parts
  %1 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hc5d75867e8ad8b37E(i8* %_2, i64 %_4)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17he4b374f469c260b2E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hb426edd68b186961E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %0, align 8
; call core::slice::raw::from_raw_parts
  %1 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core5slice3raw14from_raw_parts17ha9a94773761b3d29E(%"alloc::vec::Vec<_ProbeNode>"* %_2, i64 %_4)
  %2 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 0
  %3 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %2, 0
  %5 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %4, i64 %3, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %5
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define { [0 x %_ProbeNode]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hef15325b23488321E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call %_ProbeNode* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h132dcc88242aa219E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %0, align 8
; call core::slice::raw::from_raw_parts
  %1 = call { [0 x %_ProbeNode]*, i64 } @_ZN4core5slice3raw14from_raw_parts17he439788e175b7106E(%_ProbeNode* %_2, i64 %_4)
  %2 = extractvalue { [0 x %_ProbeNode]*, i64 } %1, 0
  %3 = extractvalue { [0 x %_ProbeNode]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x %_ProbeNode]*, i64 } undef, [0 x %_ProbeNode]* %2, 0
  %5 = insertvalue { [0 x %_ProbeNode]*, i64 } %4, i64 %3, 1
  ret { [0 x %_ProbeNode]*, i64 } %5
}

; <alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @"_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h356df2d4004777c2E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_5 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h077409901e46bab2E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %_7 = load i64, i64* %0, align 8
; call core::slice::raw::from_raw_parts_mut
  %1 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h684c505b49f22892E(%"alloc::vec::Vec<_ProbeNode>"* %_5, i64 %_7)
  %_4.0 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %_4.0, 0
  %3 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %3
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h482fcc0318b0b11bE"(i8* align 1 dereferenceable_or_null(1) %0) unnamed_addr #1 {
start:
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast i8** %1 to {}**
  store {}* null, {}** %5, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !3
  store i8* %v, i8** %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i8*, i8** %1, align 8
  ret i8* %6
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc025a0dd828dc265E"(i64 %0, i64 %1) unnamed_addr #1 {
start:
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %6, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  %v = load i64, i64* %8, align 8
  %9 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue"*
  %10 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue"* %9, i32 0, i32 1
  store i64 %v, i64* %10, align 8
  %11 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %11, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %13 = load i64, i64* %12, align 8, !range !2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { i64, i64 } undef, i64 %13, 0
  %17 = insertvalue { i64, i64 } %16, i64 %15, 1
  ret { i64, i64 } %17
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h5f5030e380ca2e64E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h33c8fef928034592E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_3, i64 %self
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h8416acf7f5e8888aE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = bitcast [0 x i8]* %slice.0 to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, i8* %1, i64 %self
  store i8* %2, i8** %0, align 8
  %_3.i.i = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %_3.i.i
}

; <usize as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(24) %"alloc::vec::Vec<_ProbeNode>"* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h11bad39c270350c8E"(i64 %self, [0 x %"alloc::vec::Vec<_ProbeNode>"]* nonnull align 8 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %_7 = icmp ult i64 %self, %slice.1
  %1 = call i1 @llvm.expect.i1(i1 %_7, i1 true)
  br i1 %1, label %bb1, label %panic

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds [0 x %"alloc::vec::Vec<_ProbeNode>"], [0 x %"alloc::vec::Vec<_ProbeNode>"]* %slice.0, i64 0, i64 %self
  ret %"alloc::vec::Vec<_ProbeNode>"* %_4

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h0ced462d12697fe9E(i64 %self, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #20
  unreachable
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h2c54a0bc512714ccE"({ i64*, i8 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc639 to [0 x i8]*), i64 11)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_4 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h2c6b02a53225da62E"({ i64*, i8 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc639 to [0 x i8]*), i64 11)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_4 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h37f9792248c369ecE"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc639 to [0 x i8]*), i64 11)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_4 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h4aba724f914b752eE"({ i64*, i8 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc639 to [0 x i8]*), i64 11)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_4 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hba969beb5962690eE"({ i64*, i8 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc639 to [0 x i8]*), i64 11)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_4 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hc595086de48b39d5E"({ i64*, i8 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc639 to [0 x i8]*), i64 11)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_4 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hdf07e3df7689eddcE"({ i64*, i8 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc639 to [0 x i8]*), i64 11)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_4 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hfd44579ee3c17748E"({ i64*, i8 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc639 to [0 x i8]*), i64 11)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_4 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h744e49ed6dea80aeE"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h4ffc2d76c208017cE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_2, { i64*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !3
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !26
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %_7, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8513c41b32041964E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hedd480001904bda5E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_2, { i64*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !3
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !26
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %_7, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hba6279c0fe769a8bE"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h5d8a526b3f806b6aE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_2, { i8*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !3
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !26
  %_7 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %_7, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc46af5cb0d4213a7E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h488da9539ecd4693E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_2, { i64*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !3
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !26
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %_7, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he2b94a1e78ebdd8cE"({ i32*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h480f72f2bf998c91E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_2, { i32*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !3
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !26
  %_7 = bitcast { i32*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %_7, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h29adf101cbc6a6f8E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca i64*, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = bitcast i64** %_2 to { i64, i64 }**
  store { i64, i64 }* %self, { i64, i64 }** %1, align 8
  %2 = bitcast i64** %_2 to { i64, i64 }**
  %3 = load { i64, i64 }*, { i64, i64 }** %2, align 8, !nonnull !3
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %_4 = select i1 %6, i64 0, i64 1
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %7, align 8
  br label %bb6

bb1:                                              ; preds = %start
  %8 = bitcast i64** %_2 to { i64, i64 }**
  %__self_0 = load { i64, i64 }*, { i64, i64 }** %8, align 8, !nonnull !3
  %9 = bitcast i64** %_2 to { i64, i64 }**
  %10 = load { i64, i64 }*, { i64, i64 }** %9, align 8, !nonnull !3
  %__self_1 = bitcast { i64, i64 }* %10 to {}*
; call <core::alloc::layout::Layout as core::clone::Clone>::clone
  %11 = call { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h6eb31b55f3f0e03eE"({ i64, i64 }* align 8 dereferenceable(16) %__self_0)
  %_7.0 = extractvalue { i64, i64 } %11, 0
  %_7.1 = extractvalue { i64, i64 } %11, 1
  br label %bb4

bb4:                                              ; preds = %bb1
; call core::clone::Clone::clone
  call void @_ZN4core5clone5Clone5clone17hac26cd983bd01c94E({}* nonnull align 1 %__self_1)
  br label %bb5

bb5:                                              ; preds = %bb4
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_7.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_7.1, i64* %13, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb5
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1
  ret { i64, i64 } %19
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h10af9a7aa9d2285dE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>") dereferenceable(24) %0, %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %v.0 = load i64, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %v.1 = load i64, i64* %5, align 8, !range !26
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0
  store i64 %v.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1
  store i64 %v.1, i64* %9, align 8
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  %e.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  %e.1 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %16, align 8
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to i64*
  store i64 1, i64* %25, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h15dda9e7ed4a8a8eE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>") dereferenceable(56) %0, %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>"* noalias nocapture dereferenceable(56) %self) unnamed_addr #1 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %_4 = alloca %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>", align 8
  %v = alloca %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>", align 8
  %1 = bitcast %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>"* %self to %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>::Ok", %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>::Ok"* %2, i32 0, i32 1
  %4 = bitcast %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %v to i8*
  %5 = bitcast %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 48, i1 false)
  %6 = bitcast %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %_4 to i8*
  %7 = bitcast %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 48, i1 false)
  %8 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>::Continue"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>::Continue"* %8, i32 0, i32 1
  %10 = bitcast %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %9 to i8*
  %11 = bitcast %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 48, i1 false)
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>"* %0 to i64*
  store i64 0, i64* %12, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %13 = bitcast %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>"* %self to %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>::Err"*
  %14 = getelementptr inbounds %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>::Err", %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>::Err"* %13, i32 0, i32 1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0
  %e.0 = load i64, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1
  %e.1 = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %18, align 8
  %19 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>::Break"*
  %20 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>::Break"* %19, i32 0, i32 1
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0
  store i64 %22, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>"* %0 to i64*
  store i64 1, i64* %27, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h29de4579da351e35E"(i8* %0, i64 %1) unnamed_addr #1 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_2 = select i1 %7, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  %v.0 = load i8*, i8** %8, align 8, !nonnull !3
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %v.1 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %v.0, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %v.1, i64* %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %12 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %_6 to %"core::alloc::AllocError"*
  %13 = bitcast { i8*, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %13 to %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"*
  %15 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1
  ret { i8*, i64 } %21
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2e0798de6a6bb06fE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>") dereferenceable(40) %0, %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %_4 = alloca %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", align 8
  %v = alloca %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", align 8
  %1 = bitcast %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* %self to %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Ok", %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Ok"* %2, i32 0, i32 1
  %4 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %v to i8*
  %5 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 32, i1 false)
  %6 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_4 to i8*
  %7 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 32, i1 false)
  %8 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Continue"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Continue"* %8, i32 0, i32 1
  %10 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %9 to i8*
  %11 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 32, i1 false)
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %0 to i64*
  store i64 0, i64* %12, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %13 = bitcast %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* %self to %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Err"*
  %14 = getelementptr inbounds %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Err", %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Err"* %13, i32 0, i32 1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0
  %e.0 = load i64, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1
  %e.1 = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %18, align 8
  %19 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Break"*
  %20 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Break"* %19, i32 0, i32 1
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0
  store i64 %22, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %0 to i64*
  store i64 1, i64* %27, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4e168b8fa5adb32eE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>") dereferenceable(24) %0, %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %_4 = alloca { { i64, i64 }, i64 }, align 8
  %v = alloca { { i64, i64 }, i64 }, align 8
  %1 = getelementptr inbounds %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* %self, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  %3 = icmp eq i64 %2, 0
  %_2 = select i1 %3, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* %self to %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Ok"*
  %5 = bitcast %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Ok"* %4 to { { i64, i64 }, i64 }*
  %6 = bitcast { { i64, i64 }, i64 }* %v to i8*
  %7 = bitcast { { i64, i64 }, i64 }* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  %8 = bitcast { { i64, i64 }, i64 }* %_4 to i8*
  %9 = bitcast { { i64, i64 }, i64 }* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"*
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"* %10 to { { i64, i64 }, i64 }*
  %12 = bitcast { { i64, i64 }, i64 }* %11 to i8*
  %13 = bitcast { { i64, i64 }, i64 }* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %_6 to %"core::alloc::layout::LayoutError"*
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Break"*
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Break"* %15 to %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"*
  %17 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %0, i32 0, i32 1
  store i64 0, i64* %17, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6e158601a516dd81E"(i8* %0) unnamed_addr #1 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !3
  store i8* %v, i8** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %_6 to %"core::alloc::AllocError"*
  %6 = bitcast i8** %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break"*
  %7 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break"* %6 to %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"*
  %8 = bitcast i8** %1 to {}**
  store {}* null, {}** %8, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8*, i8** %1, align 8
  ret i8* %9
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17had7bed442b747f7dE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") dereferenceable(24) %0, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0
  %v.0 = load i8*, i8** %4, align 8, !nonnull !3
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %v.1 = load i64, i64* %5, align 8
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %7, i32 0, i32 0
  store i8* %v.0, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %7, i32 0, i32 1
  store i64 %v.1, i64* %9, align 8
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  %e.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  %e.1 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %16, align 8
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to i64*
  store i64 1, i64* %25, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb1648b5065d6fdb8E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %0, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1
  %v = load i64, i64* %3, align 8
  %4 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %5 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %4, i32 0, i32 1
  store i64 %v, i64* %5, align 8
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to i64*
  store i64 0, i64* %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*
  %8 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %7, i32 0, i32 1
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0
  %e.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1
  %e.1 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %12, align 8
  %13 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %14 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %13, i32 0, i32 1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0
  store i64 %16, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb8781295074a7d22E"(i64* align 8 dereferenceable_or_null(16) %0) unnamed_addr #1 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err", align 1
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i64** %self to { i64, i64 }**
  %v = load { i64, i64 }*, { i64, i64 }** %5, align 8, !nonnull !3
  %6 = bitcast i64** %1 to { i64, i64 }**
  store { i64, i64 }* %v, { i64, i64 }** %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"* %_6 to %"std::thread::local::AccessError"*
  %8 = bitcast i64** %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::Cell<(u64, u64)>>::Break"*
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::Cell<(u64, u64)>>::Break"* %8 to %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"*
  %10 = bitcast i64** %1 to {}**
  store {}* null, {}** %10, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %11 = load i64*, i64** %1, align 8
  ret i64* %11
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hbea6b0d7c87d79e3E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>") dereferenceable(24) %0, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue"*
  %3 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue"* %2, i32 0, i32 1
  %4 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to i64*
  store i64 0, i64* %4, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %5, i32 0, i32 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0
  %e.0 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1
  %e.1 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %10, align 8
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"*
  %12 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to i64*
  store i64 1, i64* %19, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc97826571f29d2aeE"(i64 %0, i64 %1) unnamed_addr #1 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %self to %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"*
  %7 = getelementptr inbounds %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok", %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"* %6, i32 0, i32 1
  %v = load i64, i64* %7, align 8
  %8 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"* %8, i32 0, i32 1
  store i64 %v, i64* %9, align 8
  %10 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %_6 to %"core::alloc::layout::LayoutError"*
  %12 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break"*
  %13 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break"* %12, i32 0, i32 1
  %14 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %14, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !2
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he0bf802462829469E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>") dereferenceable(24) %0, %"core::result::Result<usize, hashbrown::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<usize, hashbrown::TryReserveError>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<usize, hashbrown::TryReserveError>"* %self to %"core::result::Result<usize, hashbrown::TryReserveError>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<usize, hashbrown::TryReserveError>::Ok", %"core::result::Result<usize, hashbrown::TryReserveError>::Ok"* %2, i32 0, i32 1
  %v = load i64, i64* %3, align 8
  %4 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Continue"*
  %5 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Continue"* %4, i32 0, i32 1
  store i64 %v, i64* %5, align 8
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>"* %0 to i64*
  store i64 0, i64* %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<usize, hashbrown::TryReserveError>"* %self to %"core::result::Result<usize, hashbrown::TryReserveError>::Err"*
  %8 = getelementptr inbounds %"core::result::Result<usize, hashbrown::TryReserveError>::Err", %"core::result::Result<usize, hashbrown::TryReserveError>::Err"* %7, i32 0, i32 1
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0
  %e.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1
  %e.1 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %12, align 8
  %13 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Break"*
  %14 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Break"* %13, i32 0, i32 1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0
  store i64 %16, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <hashbrown::raw::RawTable<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN79_$LT$hashbrown..raw..RawTable$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf91254cae9ffe662E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_4 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
; call hashbrown::raw::RawTableInner<A>::is_empty_singleton
  %_3 = call zeroext i1 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$18is_empty_singleton17haff7790e3f12a4f8E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb2, label %bb5

bb5:                                              ; preds = %bb4, %bb1
  ret void

bb2:                                              ; preds = %bb1
; call hashbrown::raw::RawTable<T,A>::drop_elements
  call void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$13drop_elements17hba692fec06c52ea1E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self)
  br label %bb3

bb3:                                              ; preds = %bb2
; call hashbrown::raw::RawTable<T,A>::free_buckets
  call void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$12free_buckets17h148841c458dfc195E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self)
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb5
}

; <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h097fb3ecbfbd811dE"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"**
  %1 = load %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %1, i32 0, i32 1
  %_5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %self, i32 0, i32 1
; call std::sync::poison::Flag::done
  call void @_ZN3std4sync6poison4Flag4done17he8752d03e6c0e24aE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3, i8* align 1 dereferenceable(1) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"**
  %3 = load %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %2, align 8, !nonnull !3
  %_7 = bitcast %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %3 to i64**
; call std::sys_common::mutex::MovableMutex::raw_unlock
  call void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17hf021d37193ae9062E(i64** align 8 dereferenceable(8) %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h4f19f00edf299eb1E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<std::fs::File>"**
  %1 = load %"std::sync::mutex::Mutex<std::fs::File>"*, %"std::sync::mutex::Mutex<std::fs::File>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %1, i32 0, i32 1
  %_5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %self, i32 0, i32 1
; call std::sync::poison::Flag::done
  call void @_ZN3std4sync6poison4Flag4done17he8752d03e6c0e24aE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3, i8* align 1 dereferenceable(1) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<std::fs::File>"**
  %3 = load %"std::sync::mutex::Mutex<std::fs::File>"*, %"std::sync::mutex::Mutex<std::fs::File>"** %2, align 8, !nonnull !3
  %_7 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %3 to i64**
; call std::sys_common::mutex::MovableMutex::raw_unlock
  call void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17hf021d37193ae9062E(i64** align 8 dereferenceable(8) %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6600a60b9acf87f2E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<()>"**
  %1 = load %"std::sync::mutex::Mutex<()>"*, %"std::sync::mutex::Mutex<()>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<()>", %"std::sync::mutex::Mutex<()>"* %1, i32 0, i32 1
  %_5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %self, i32 0, i32 1
; call std::sync::poison::Flag::done
  call void @_ZN3std4sync6poison4Flag4done17he8752d03e6c0e24aE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3, i8* align 1 dereferenceable(1) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<()>"**
  %3 = load %"std::sync::mutex::Mutex<()>"*, %"std::sync::mutex::Mutex<()>"** %2, align 8, !nonnull !3
  %_7 = bitcast %"std::sync::mutex::Mutex<()>"* %3 to i64**
; call std::sys_common::mutex::MovableMutex::raw_unlock
  call void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17hf021d37193ae9062E(i64** align 8 dereferenceable(8) %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hae73fca16dadd366E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"**
  %1 = load %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"*, %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>", %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %1, i32 0, i32 1
  %_5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %self, i32 0, i32 1
; call std::sync::poison::Flag::done
  call void @_ZN3std4sync6poison4Flag4done17he8752d03e6c0e24aE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3, i8* align 1 dereferenceable(1) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"**
  %3 = load %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"*, %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"** %2, align 8, !nonnull !3
  %_7 = bitcast %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %3 to i64**
; call std::sys_common::mutex::MovableMutex::raw_unlock
  call void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17hf021d37193ae9062E(i64** align 8 dereferenceable(8) %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hde991252fad1e053E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"**
  %1 = load %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"*, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %1, i32 0, i32 1
  %_5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %self, i32 0, i32 1
; call std::sync::poison::Flag::done
  call void @_ZN3std4sync6poison4Flag4done17he8752d03e6c0e24aE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3, i8* align 1 dereferenceable(1) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"**
  %3 = load %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"*, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"** %2, align 8, !nonnull !3
  %_7 = bitcast %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %3 to i64**
; call std::sys_common::mutex::MovableMutex::raw_unlock
  call void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17hf021d37193ae9062E(i64** align 8 dereferenceable(8) %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf4654e8a5c47604cE"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<i32>"**
  %1 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %1, i32 0, i32 1
  %_5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %self, i32 0, i32 1
; call std::sync::poison::Flag::done
  call void @_ZN3std4sync6poison4Flag4done17he8752d03e6c0e24aE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3, i8* align 1 dereferenceable(1) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<i32>"**
  %3 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %2, align 8, !nonnull !3
  %_7 = bitcast %"std::sync::mutex::Mutex<i32>"* %3 to i64**
; call std::sys_common::mutex::MovableMutex::raw_unlock
  call void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17hf021d37193ae9062E(i64** align 8 dereferenceable(8) %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt>::as_m128i
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..core_arch..x86..__m128i$u20$as$u20$core..core_arch..x86..m128iExt$GT$8as_m128i17hf13d203d2c1495a6E"(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, <2 x i64>* noalias nocapture dereferenceable(16) %self) unnamed_addr #1 {
start:
  %1 = load <2 x i64>, <2 x i64>* %self, align 16
  store <2 x i64> %1, <2 x i64>* %0, align 16
  ret void
}

; <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h2b21fc3b5653bd2aE"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %2 = alloca i128, align 8
  %_11 = alloca %"std::io::error::Error", align 8
  %_10 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %e = alloca %"std::io::error::Error", align 8
  %_3 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %3 = alloca i8, align 1
  %4 = bitcast %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %self to i32**
  %_4 = load i32*, i32** %4, align 8, !nonnull !3
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %s.1, i64* %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %8 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !3
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1
  %_6.0 = extractvalue { [0 x i8]*, i64 } %12, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %12, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::io::Write::write_all
  %13 = call i128 @_ZN3std2io5Write9write_all17h4b7afc93b95c103eE(i32* align 4 dereferenceable(4) %_4, [0 x i8]* nonnull align 1 %_6.0, i64 %_6.1)
  store i128 %13, i128* %2, align 8
  %14 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_3 to i8*
  %15 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %16 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_3 to i8*
  %17 = load i8, i8* %16, align 8, !range !7
  %18 = sub i8 %17, 4
  %19 = icmp eq i8 %18, 0
  %_8 = select i1 %19, i64 0, i64 1
  switch i64 %_8, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  store i8 0, i8* %3, align 1
  br label %bb8

bb3:                                              ; preds = %bb2
  %20 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_3 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %21 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %20 to %"std::io::error::Error"*
  %22 = bitcast %"std::io::error::Error"* %e to i8*
  %23 = bitcast %"std::io::error::Error"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = bitcast %"std::io::error::Error"* %_11 to i8*
  %25 = bitcast %"std::io::error::Error"* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 16, i1 false)
  %26 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_10 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %27 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %26 to %"std::io::error::Error"*
  %28 = bitcast %"std::io::error::Error"* %27 to i8*
  %29 = bitcast %"std::io::error::Error"* %_11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false)
  %30 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %self, i32 0, i32 1
; invoke core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  invoke void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h676bc739b61a0c43E"(%"core::result::Result<(), std::io::error::Error>"* %30)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb3
  %31 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %self, i32 0, i32 1
  %32 = bitcast %"core::result::Result<(), std::io::error::Error>"* %31 to i8*
  %33 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false)
  store i8 1, i8* %3, align 1
  br label %bb8

bb6:                                              ; preds = %cleanup
  %34 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %self, i32 0, i32 1
  %35 = bitcast %"core::result::Result<(), std::io::error::Error>"* %34 to i8*
  %36 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false)
  %37 = bitcast { i8*, i32 }* %1 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1
  resume { i8*, i32 } %42

cleanup:                                          ; preds = %bb3
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  %45 = extractvalue { i8*, i32 } %43, 1
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %45, i32* %47, align 8
  br label %bb6

bb8:                                              ; preds = %bb5, %bb7
  %48 = load i8, i8* %3, align 1, !range !4
  %49 = trunc i8 %48 to i1
  ret i1 %49
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb92e67fda08046dfE"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::str::validations::next_code_point
  %0 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17hb8a28c746cca027cE({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %_2.0 = extractvalue { i32, i32 } %0, 0
  %_2.1 = extractvalue { i32, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::map
  %1 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17hedf65f258095d873E"(i32 %_2.0, i32 %_2.1), !range !65
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %1
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hfbfbcfb62b93899fE"(i32 %ch) unnamed_addr #1 {
start:
; call core::char::convert::from_u32_unchecked
  %0 = call i32 @_ZN4core4char7convert18from_u32_unchecked17h73f38b153fb1649bE(i32 %ch), !range !63
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; <std::collections::hash::map::DefaultHasher as core::hash::Hasher>::write
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN81_$LT$std..collections..hash..map..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$5write17h65b10371470a39abE"(%"std::collections::hash::map::DefaultHasher"* align 8 dereferenceable(72) %self, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1) unnamed_addr #1 {
start:
  %_3 = bitcast %"std::collections::hash::map::DefaultHasher"* %self to %"core::hash::sip::SipHasher13"*
; call <core::hash::sip::SipHasher13 as core::hash::Hasher>::write
  call void @"_ZN67_$LT$core..hash..sip..SipHasher13$u20$as$u20$core..hash..Hasher$GT$5write17h7053a04d1b9df41bE"(%"core::hash::sip::SipHasher13"* align 8 dereferenceable(72) %_3, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <std::collections::hash::map::DefaultHasher as core::hash::Hasher>::finish
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN81_$LT$std..collections..hash..map..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$6finish17heab83c004c86dbcaE"(%"std::collections::hash::map::DefaultHasher"* align 8 dereferenceable(72) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"std::collections::hash::map::DefaultHasher"* %self to %"core::hash::sip::SipHasher13"*
; call <core::hash::sip::SipHasher13 as core::hash::Hasher>::finish
  %0 = call i64 @"_ZN67_$LT$core..hash..sip..SipHasher13$u20$as$u20$core..hash..Hasher$GT$6finish17hf45ba2dafd81e189E"(%"core::hash::sip::SipHasher13"* align 8 dereferenceable(72) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(24) %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3009dca64cb46b9eE"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"**
  %1 = load %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"*, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %1, i32 0, i32 3
  %_2.i = bitcast %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_3 to %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"*
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_2.i
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4d0ea0b4a27f775bE"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<i32>"**
  %1 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %1, i32 0, i32 3
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_3
}

; <&mut I as core::iter::traits::exact_size::ExactSizeIterator>::len
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN83_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17haa9ff13aca1c8332E"(%"alloc::vec::into_iter::IntoIter<&str>"** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_2 = load %"alloc::vec::into_iter::IntoIter<&str>"*, %"alloc::vec::into_iter::IntoIter<&str>"** %self, align 8, !nonnull !3
; call core::iter::traits::exact_size::ExactSizeIterator::len
  %0 = call i64 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17he18a0dc88ddab848E(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; <std::collections::hash::map::RandomState as core::default::Default>::default
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN83_$LT$std..collections..hash..map..RandomState$u20$as$u20$core..default..Default$GT$7default17h60141fe584aa0ca5E"() unnamed_addr #1 {
start:
; call std::collections::hash::map::RandomState::new
  %0 = call { i64, i64 } @_ZN3std11collections4hash3map11RandomState3new17hb37874bdd08cddd1E()
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(24) %"alloc::vec::Vec<_ProbeNode>"* @"_ZN84_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..IndexMut$LT$I$GT$$GT$9index_mut17hf3b4195e906fee55E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut
  %2 = invoke { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @"_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h356df2d4004777c2E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_7.0 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %2, 0
  %_7.1 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %2, 1
  store i8 0, i8* %_10, align 1
; invoke core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %_4 = invoke align 8 dereferenceable(24) %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h92830a6f6c23b93bE"([0 x %"alloc::vec::Vec<_ProbeNode>"]* nonnull align 8 %_7.0, i64 %_7.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %3 = load i8, i8* %_10, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  ret %"alloc::vec::Vec<_ProbeNode>"* %_4

bb3:                                              ; preds = %bb4, %bb5
  %10 = bitcast { i8*, i32 }* %1 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb4:                                              ; preds = %bb5
  br label %bb3
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h49180e935a82419aE"() unnamed_addr #1 {
start:
  %0 = alloca { i32, i32 }, align 4
  %1 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %1, align 4
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4, !range !61
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = insertvalue { i32, i32 } undef, i32 %3, 0
  %7 = insertvalue { i32, i32 } %6, i32 %5, 1
  ret { i32, i32 } %7
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h884e82a7e1c596b9E"() unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8, !range !2
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17ha9d248b7702e2ef0E"(%"core::option::Option<(core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::option::Option<(core::alloc::layout::Layout, usize)>") dereferenceable(24) %0) unnamed_addr #1 {
start:
  %1 = getelementptr inbounds %"core::option::Option<(core::alloc::layout::Layout, usize)>", %"core::option::Option<(core::alloc::layout::Layout, usize)>"* %0, i32 0, i32 1
  store i64 0, i64* %1, align 8
  ret void
}

; <std::collections::hash::map::RandomState as core::hash::BuildHasher>::build_hasher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN84_$LT$std..collections..hash..map..RandomState$u20$as$u20$core..hash..BuildHasher$GT$12build_hasher17heaa7a4f01a95b7d9E"(%"std::collections::hash::map::DefaultHasher"* noalias nocapture sret(%"std::collections::hash::map::DefaultHasher") dereferenceable(72) %0, { i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::hash::sip::SipHasher13", align 8
  %1 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %_4 = load i64, i64* %2, align 8
; call core::hash::sip::SipHasher13::new_with_keys
  call void @_ZN4core4hash3sip11SipHasher1313new_with_keys17hd359563a6340d130E(%"core::hash::sip::SipHasher13"* noalias nocapture sret(%"core::hash::sip::SipHasher13") dereferenceable(72) %_2, i64 %_3, i64 %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast %"std::collections::hash::map::DefaultHasher"* %0 to %"core::hash::sip::SipHasher13"*
  %4 = bitcast %"core::hash::sip::SipHasher13"* %3 to i8*
  %5 = bitcast %"core::hash::sip::SipHasher13"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 72, i1 false)
  ret void
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(48) %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h3360d2b283892d59E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"**
  %1 = load %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"*, %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"** %0, align 8, !nonnull !3
  %_6 = getelementptr inbounds %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>", %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %1, i32 0, i32 3
  %_2.i = bitcast %"core::cell::UnsafeCell<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* %_6 to %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"*
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* %_2.i
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4983f58433b255ffE"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<std::fs::File>"**
  %1 = load %"std::sync::mutex::Mutex<std::fs::File>"*, %"std::sync::mutex::Mutex<std::fs::File>"** %0, align 8, !nonnull !3
  %_6 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %1, i32 0, i32 3
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_6
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hcb66cc1892196f25E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<i32>"**
  %1 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %0, align 8, !nonnull !3
  %_6 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %1, i32 0, i32 3
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_6
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(24) %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hf5fbe57b986f1031E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"**
  %1 = load %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"*, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"** %0, align 8, !nonnull !3
  %_6 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %1, i32 0, i32 3
  %_2.i = bitcast %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_6 to %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"*
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_2.i
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(32) %"alloc::collections::vec_deque::VecDeque<i32>"* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hf8bb24c7eddc12a3E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"**
  %1 = load %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %0, align 8, !nonnull !3
  %_6 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %1, i32 0, i32 3
  %_2.i = bitcast %"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %_6 to %"alloc::collections::vec_deque::VecDeque<i32>"*
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::collections::vec_deque::VecDeque<i32>"* %_2.i
}

; <std::sync::rwlock::RwLockReadGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN85_$LT$std..sync..rwlock..RwLockReadGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he5cf986a8749f41fE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = bitcast i64** %self to %"std::sync::rwlock::RwLock<i32>"**
  %1 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %0, align 8, !nonnull !3
  %_3 = bitcast %"std::sync::rwlock::RwLock<i32>"* %1 to i64**
; call std::sys_common::rwlock::MovableRWLock::read_unlock
  call void @_ZN3std10sys_common6rwlock13MovableRWLock11read_unlock17hd3ffb4a72e46d6cfE(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN86_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1731518202d05efbE"(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %guard = alloca i64*, align 8
  %1 = bitcast i64** %guard to %"alloc::vec::into_iter::IntoIter<&str>"**
  store %"alloc::vec::into_iter::IntoIter<&str>"* %self, %"alloc::vec::into_iter::IntoIter<&str>"** %1, align 8
  %2 = bitcast i64** %guard to %"alloc::vec::into_iter::IntoIter<&str>"**
  %_6 = load %"alloc::vec::into_iter::IntoIter<&str>"*, %"alloc::vec::into_iter::IntoIter<&str>"** %2, align 8, !nonnull !3
; invoke alloc::vec::into_iter::IntoIter<T,A>::as_raw_mut_slice
  %3 = invoke { [0 x { [0 x i8]*, i64 }]*, i64 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$16as_raw_mut_slice17hff1180c0fc999618E"(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %_6)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %3, 0
  %_5.1 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %3, 1
  br label %bb2

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<&str,alloc::alloc::Global>>
  call void @"_ZN4core3ptr161drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$$RF$str$C$alloc..alloc..Global$GT$$GT$17ha683cbb0ec0c0ee5E"(i64** %guard) #21
  br label %bb5

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<&str,alloc::alloc::Global>>
  call void @"_ZN4core3ptr161drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$$RF$str$C$alloc..alloc..Global$GT$$GT$17ha683cbb0ec0c0ee5E"(i64** %guard)
  br label %bb3

bb5:                                              ; preds = %bb4
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb3:                                              ; preds = %bb2
  ret void
}

; <std::sync::rwlock::RwLockWriteGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN86_$LT$std..sync..rwlock..RwLockWriteGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h80914379c238eeb7E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::rwlock::RwLock<i32>"**
  %1 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::rwlock::RwLock<i32>", %"std::sync::rwlock::RwLock<i32>"* %1, i32 0, i32 1
  %_5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %self, i32 0, i32 1
; call std::sync::poison::Flag::done
  call void @_ZN3std4sync6poison4Flag4done17he8752d03e6c0e24aE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3, i8* align 1 dereferenceable(1) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i8 }* %self to %"std::sync::rwlock::RwLock<i32>"**
  %3 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %2, align 8, !nonnull !3
  %_7 = bitcast %"std::sync::rwlock::RwLock<i32>"* %3 to i64**
; call std::sys_common::rwlock::MovableRWLock::write_unlock
  call void @_ZN3std10sys_common6rwlock13MovableRWLock12write_unlock17h87645411ef7cbdcdE(i64** align 8 dereferenceable(8) %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd8c34366ef29f20dE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %_14 = alloca { i64, i32 }, align 8
  %_4 = alloca i32, align 4
  %4 = alloca { i64, i32 }, align 8
  %_3 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1
  %5 = bitcast { i8*, i8* }* %_3 to i8**
  %start1.i = load i8*, i8** %5, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %start1.i)
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_3, i32 0, i32 1
  %_15.i = load i8*, i8** %6, align 8
  %_14.i = ptrtoint i8* %_15.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %start1.i)
  %_16.i = ptrtoint i8* %_17.i to i64
  %7 = sub nuw i64 %_14.i, %_16.i
  store i64 %7, i64* %2, align 8
  %diff.i = load i64, i64* %2, align 8
  store i64 %diff.i, i64* %3, align 8
  %8 = load i64, i64* %3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_5 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %9 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb92e67fda08046dfE"({ i8*, i8* }* align 8 dereferenceable(16) %_5), !range !65
  store i32 %9, i32* %_4, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %10 = load i32, i32* %_4, align 4, !range !65
  %11 = sub i32 %10, 1114112
  %12 = icmp eq i32 %11, 0
  %_6 = select i1 %12, i64 0, i64 1
  switch i64 %_6, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  store i32 1114112, i32* %13, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  %ch = load i32, i32* %_4, align 4, !range !63
  %14 = bitcast %"core::str::iter::CharIndices"* %self to i64*
  %index = load i64, i64* %14, align 8
  %_10 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1
  %15 = bitcast { i8*, i8* }* %_10 to i8**
  %start1.i1 = load i8*, i8** %15, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %start1.i1)
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_10, i32 0, i32 1
  %_15.i3 = load i8*, i8** %16, align 8
  %_14.i4 = ptrtoint i8* %_15.i3 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i5 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %start1.i1)
  %_16.i6 = ptrtoint i8* %_17.i5 to i64
  %17 = sub nuw i64 %_14.i4, %_16.i6
  store i64 %17, i64* %0, align 8
  %diff.i7 = load i64, i64* %0, align 8
  store i64 %diff.i7, i64* %1, align 8
  %18 = load i64, i64* %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb3
  %_11 = sub i64 %8, %18
  %19 = bitcast %"core::str::iter::CharIndices"* %self to i64*
  %20 = bitcast %"core::str::iter::CharIndices"* %self to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %_11
  store i64 %22, i64* %19, align 8
  %23 = bitcast { i64, i32 }* %_14 to i64*
  store i64 %index, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 1
  store i32 %ch, i32* %24, align 8
  %25 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 1
  %28 = load i32, i32* %27, align 8, !range !63
  %29 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 0
  store i64 %26, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  store i32 %28, i32* %30, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  %31 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  %34 = load i32, i32* %33, align 8, !range !65
  %35 = insertvalue { i64, i32 } undef, i64 %32, 0
  %36 = insertvalue { i64, i32 } %35, i32 %34, 1
  ret { i64, i32 } %36
}

; <std::sync::rwlock::RwLockReadGuard<T> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN87_$LT$std..sync..rwlock..RwLockReadGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hbeb7a8b734660e76E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = bitcast i64** %self to %"std::sync::rwlock::RwLock<i32>"**
  %1 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::rwlock::RwLock<i32>", %"std::sync::rwlock::RwLock<i32>"* %1, i32 0, i32 3
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_3
}

; <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN88_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3fbcdd0e31a7fb26E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = alloca i64*, align 8
  %_2 = bitcast i64** %self to %"[closure@hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>::rehash_in_place<[closure@hashbrown::map::make_hasher<std::thread::ThreadId, std::thread::ThreadId, i32, std::collections::hash::map::RandomState>::{closure#0}]>::{closure#0}]"*
  %_5 = bitcast i64** %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"**
  %0 = bitcast i64** %_3 to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"***
  store %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %_5, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*** %0, align 8
  %1 = load i64*, i64** %_3, align 8, !nonnull !3
  %2 = bitcast i64* %1 to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"**
; call hashbrown::raw::RawTable<T,A>::rehash_in_place::{{closure}}
  call void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$15rehash_in_place28_$u7b$$u7b$closure$u7d$$u7d$17h457f0cd7246eff65E"(%"[closure@hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>::rehash_in_place<[closure@hashbrown::map::make_hasher<std::thread::ThreadId, std::thread::ThreadId, i32, std::collections::hash::map::RandomState>::{closure#0}]>::{closure#0}]"* nonnull align 1 %_2, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** align 8 dereferenceable(8) %2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN88_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h709476293f145df6E"(%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* align 8 dereferenceable(48) %self) unnamed_addr #1 {
start:
  %_3 = alloca i64*, align 8
  %_2 = bitcast %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %self to { i64, i64 }*
  %_5 = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>", %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %self, i32 0, i32 1
  %0 = bitcast i64** %_3 to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"**
  store %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_5, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %0, align 8
  %1 = load i64*, i64** %_3, align 8, !nonnull !3
  %2 = bitcast i64* %1 to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
; call hashbrown::raw::RawTableInner<A>::prepare_resize::{{closure}}
  call void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$14prepare_resize28_$u7b$$u7b$closure$u7d$$u7d$17h64e79d35d16ece20E"({ i64, i64 }* align 8 dereferenceable(16) %_2, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_nth
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$8spec_nth17h25b487325a45a68aE"({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %n) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %plus_n = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i8 0, i8* %_18, align 1
  %_5 = bitcast { i64, i64 }* %self to i64*
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_4 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17he684b50783c1b703E"(i64* align 8 dereferenceable(8) %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call <usize as core::iter::range::Step>::forward_checked
  %2 = call { i64, i64 } @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$15forward_checked17h6ba6c0edef02d2bdE"(i64 %_4, i64 %n)
  store { i64, i64 } %2, { i64, i64 }* %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_18, align 1
  %3 = bitcast { i64, i64 }* %_3 to i64*
  %_7 = load i64, i64* %3, align 8, !range !2
  %4 = icmp eq i64 %_7, 1
  br i1 %4, label %bb3, label %bb19

bb3:                                              ; preds = %bb2
  store i8 0, i8* %_18, align 1
  %5 = bitcast { i64, i64 }* %_3 to %"core::option::Option<usize>::Some"*
  %6 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %5, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %plus_n, align 8
  %_11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; invoke core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_9 = invoke zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h447a1a731799c8afE"(i64* align 8 dereferenceable(8) %plus_n, i64* align 8 dereferenceable(8) %_11)
          to label %bb4 unwind label %cleanup

bb19:                                             ; preds = %bb9, %bb2
  %8 = bitcast { i64, i64 }* %_3 to i64*
  %_19 = load i64, i64* %8, align 8, !range !2
  %9 = icmp eq i64 %_19, 1
  br i1 %9, label %bb17, label %bb16

bb4:                                              ; preds = %bb3
  br i1 %_9, label %bb5, label %bb8

bb12:                                             ; preds = %bb14, %cleanup
  br label %bb13

cleanup:                                          ; preds = %bb6, %bb5, %bb3
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb12

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
; invoke core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_13 = invoke i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17he684b50783c1b703E"(i64* align 8 dereferenceable(8) %plus_n)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <usize as core::iter::range::Step>::forward_unchecked
  %_12 = invoke i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hd095f86c08296a89E"(i64 %_13, i64 1)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  br label %bb15

bb15:                                             ; preds = %bb7
  %15 = bitcast { i64, i64 }* %self to i64*
  store i64 %_12, i64* %15, align 8
  %_15 = load i64, i64* %plus_n, align 8
  %16 = bitcast { i64, i64 }* %1 to %"core::option::Option<usize>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %16, i32 0, i32 1
  store i64 %_15, i64* %17, align 8
  %18 = bitcast { i64, i64 }* %1 to i64*
  store i64 1, i64* %18, align 8
  store i8 0, i8* %_18, align 1
  br label %bb11

bb14:                                             ; No predecessors!
  %19 = bitcast { i64, i64 }* %self to i64*
  store i64 %_12, i64* %19, align 8
  br label %bb12

bb13:                                             ; preds = %bb20, %bb12
  %20 = bitcast { i8*, i32 }* %0 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  resume { i8*, i32 } %25

bb11:                                             ; preds = %bb21, %bb15
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %27 = load i64, i64* %26, align 8, !range !2
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1
  ret { i64, i64 } %31

bb9:                                              ; preds = %bb8
  br label %bb19

bb17:                                             ; preds = %bb19
  %32 = load i8, i8* %_18, align 1, !range !4
  %33 = trunc i8 %32 to i1
  br i1 %33, label %bb18, label %bb16

bb16:                                             ; preds = %bb18, %bb17, %bb19
  store i8 0, i8* %_18, align 1
  %_17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_16 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17he684b50783c1b703E"(i64* align 8 dereferenceable(8) %_17)
  br label %bb10

bb18:                                             ; preds = %bb17
  br label %bb16

bb10:                                             ; preds = %bb16
  br label %bb21

bb21:                                             ; preds = %bb10
  %34 = bitcast { i64, i64 }* %self to i64*
  store i64 %_16, i64* %34, align 8
  %35 = bitcast { i64, i64 }* %1 to i64*
  store i64 0, i64* %35, align 8
  br label %bb11

bb20:                                             ; No predecessors!
  %36 = bitcast { i64, i64 }* %self to i64*
  store i64 %_16, i64* %36, align 8
  br label %bb13
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h7feb2885a6e4c3b9E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %_3 = bitcast { i64, i64 }* %self to i64*
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h447a1a731799c8afE"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17he684b50783c1b703E"(i64* align 8 dereferenceable(8) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hd095f86c08296a89E"(i64 %_6, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17h35e8e50b39193487E(i64* align 8 dereferenceable(8) %_10, i64 %n)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %2, i32 0, i32 1
  store i64 %_8, i64* %3, align 8
  %4 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %4, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8, !range !2
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; <alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN90_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h6bb526491a767431E"(%"alloc::vec::into_iter::IntoIter<&str>"* noalias nocapture sret(%"alloc::vec::into_iter::IntoIter<&str>") dereferenceable(32) %0, %"alloc::vec::Vec<&str>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { [0 x i8]*, i64 }*, align 8
  %2 = alloca i64, align 8
  %_2.i = alloca %"alloc::vec::Vec<&str>", align 8
  %3 = alloca i8*, align 8
  %4 = alloca { i8*, i32 }, align 8
  %end = alloca { [0 x i8]*, i64 }*, align 8
  %_3 = alloca %"alloc::vec::Vec<&str>", align 8
  %me = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>", align 8
  %5 = bitcast %"alloc::vec::Vec<&str>"* %_3 to i8*
  %6 = bitcast %"alloc::vec::Vec<&str>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !104)
  call void @llvm.experimental.noalias.scope.decl(metadata !107)
  %7 = bitcast %"alloc::vec::Vec<&str>"* %_2.i to i8*
  %8 = bitcast %"alloc::vec::Vec<&str>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !noalias !104
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>"* %me to %"alloc::vec::Vec<&str>"*
  %10 = bitcast %"alloc::vec::Vec<&str>"* %9 to i8*
  %11 = bitcast %"alloc::vec::Vec<&str>"* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !noalias !107
  br label %bb1

bb1:                                              ; preds = %start
  %12 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>"* %me to %"alloc::vec::Vec<&str>"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::vec::Vec<T,A>::allocator
  %_6 = call nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17h4e6a616f8e2940e9E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %12)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::ptr::read
  call void @_ZN4core3ptr4read17hbce6ceabb48c7425E(%"alloc::alloc::Global"* %_6)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_3.i = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>"* %me to %"alloc::vec::Vec<&str>"*
  br label %bb5

bb5:                                              ; preds = %bb4
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %begin = invoke { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h80f2d9979e978176E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %_3.i)
          to label %bb6 unwind label %cleanup

bb20:                                             ; preds = %cleanup
  br label %bb21

cleanup:                                          ; preds = %bb18, %bb9, %bb13, %bb5
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb20

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb6
  %18 = icmp eq i64 16, 0
  br i1 %18, label %bb8, label %bb12

bb8:                                              ; preds = %bb7
  %_17 = bitcast { [0 x i8]*, i64 }* %begin to i8*
  %19 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>"* %me to %"alloc::vec::Vec<&str>"*
  br label %bb9

bb12:                                             ; preds = %bb7
  %20 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>"* %me to %"alloc::vec::Vec<&str>"*
  br label %bb13

bb13:                                             ; preds = %bb12
; invoke alloc::vec::Vec<T,A>::len
  %_26 = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hc27cd16412d07b15E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %20)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %begin, i64 %_26
  store { [0 x i8]*, i64 }* %21, { [0 x i8]*, i64 }** %1, align 8
  %_3.i.i = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %1, align 8
  br label %bb15

bb15:                                             ; preds = %bb14
  store { [0 x i8]*, i64 }* %_3.i.i, { [0 x i8]*, i64 }** %end, align 8
  br label %bb16

bb16:                                             ; preds = %bb11, %bb15
  %22 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>"* %me to %"alloc::vec::Vec<&str>"*
  br label %bb17

bb9:                                              ; preds = %bb8
; invoke alloc::vec::Vec<T,A>::len
  %_20 = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hc27cd16412d07b15E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %19)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %23 = getelementptr i8, i8* %_17, i64 %_20
  store i8* %23, i8** %3, align 8
  %_16 = load i8*, i8** %3, align 8
  br label %bb11

bb11:                                             ; preds = %bb10
  %24 = bitcast i8* %_16 to { [0 x i8]*, i64 }*
  store { [0 x i8]*, i64 }* %24, { [0 x i8]*, i64 }** %end, align 8
  br label %bb16

bb17:                                             ; preds = %bb16
  %_31 = bitcast %"alloc::vec::Vec<&str>"* %22 to { i64*, i64 }*
  %25 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_31, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %2, align 8
  %27 = load i64, i64* %2, align 8
  br label %bb18

bb18:                                             ; preds = %bb17
; invoke core::ptr::non_null::NonNull<T>::new_unchecked
  %_34 = invoke nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h32d51dbbd22eb744E"({ [0 x i8]*, i64 }* %begin)
          to label %bb19 unwind label %cleanup

bb19:                                             ; preds = %bb18
  %_40 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %end, align 8
  %28 = bitcast %"alloc::vec::into_iter::IntoIter<&str>"* %0 to i64**
  store i64* %_34, i64** %28, align 8
  %29 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %0, i32 0, i32 3
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"alloc::vec::into_iter::IntoIter<&str>"* %0 to %"alloc::alloc::Global"*
  %31 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %0, i32 0, i32 4
  store { [0 x i8]*, i64 }* %begin, { [0 x i8]*, i64 }** %31, align 8
  %32 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %0, i32 0, i32 5
  store { [0 x i8]*, i64 }* %_40, { [0 x i8]*, i64 }** %32, align 8
  ret void

bb21:                                             ; preds = %bb20
  %33 = bitcast { i8*, i32 }* %4 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38
}

; <core::str::IsWhitespace as core::ops::function::Fn<(char,)>>::call
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN90_$LT$core..str..IsWhitespace$u20$as$u20$core..ops..function..Fn$LT$$LP$char$C$$RP$$GT$$GT$4call17h928be148c5cf9734E"(%"core::str::IsWhitespace"* nonnull align 1 %self, i32 %0) unnamed_addr #1 {
start:
  %_2 = alloca i32, align 4
  store i32 %0, i32* %_2, align 4
  %c = load i32, i32* %_2, align 4, !range !63
; call core::char::methods::<impl char>::is_whitespace
  %1 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17h8fed096006e677dbE"(i32 %c)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haa34ed96882d9bd4E"(%"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %self to %"core::str::iter::SplitInternal<core::str::IsWhitespace>"*
; call core::str::iter::SplitInternal<P>::next
  %0 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h282cbe746b36a351E"(%"core::str::iter::SplitInternal<core::str::IsWhitespace>"* align 8 dereferenceable(64) %_2)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(8) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39e3f7ce141d696cE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = bitcast i64** %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"**
  ret %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %0
}

; <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5bfabdf5aedb4f99E"(%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* align 8 dereferenceable(48) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>", %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %self, i32 0, i32 1
  ret %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %0
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(48) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h164178bd8be68584E"({ i64*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca %_ProbeNode*, align 8
  %1 = alloca %_ProbeNode*, align 8
  %2 = alloca i64*, align 8
  %3 = bitcast { i64*, i64* }* %self to i64**
  %_6 = load i64*, i64** %3, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %_ProbeNode* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h153227e741c58ebdE"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17he7755547226c5e87E"(%_ProbeNode* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 48, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %6 = bitcast i64** %5 to %_ProbeNode**
  %_11 = load %_ProbeNode*, %_ProbeNode** %6, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h55919b542ca613b1E"(%_ProbeNode* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %7 = bitcast { i64*, i64* }* %self to i64**
  %_15 = load i64*, i64** %7, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call %_ProbeNode* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h153227e741c58ebdE"(i64* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %9 = bitcast i64** %8 to %_ProbeNode**
  %_16 = load %_ProbeNode*, %_ProbeNode** %9, align 8
  %_12 = icmp eq %_ProbeNode* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %10 = bitcast { i64*, i64* }* %self to i64**
  %_12.i = load i64*, i64** %10, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call %_ProbeNode* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h153227e741c58ebdE"(i64* nonnull %_12.i)
  %11 = bitcast { i64*, i64* }* %self to i64**
  %_16.i = load i64*, i64** %11, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call %_ProbeNode* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h153227e741c58ebdE"(i64* nonnull %_16.i)
  %12 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %_15.i, i64 1
  store %_ProbeNode* %12, %_ProbeNode** %0, align 8
  %_3.i.i = load %_ProbeNode*, %_ProbeNode** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h4bfc4dc2049e2d65E"(%_ProbeNode* %_3.i.i)
  %13 = bitcast { i64*, i64* }* %self to i64**
  store i64* %_13.i, i64** %13, align 8
  store %_ProbeNode* %old.i, %_ProbeNode** %1, align 8
  %14 = load %_ProbeNode*, %_ProbeNode** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %15 = bitcast i64** %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %16 = load i64*, i64** %2, align 8
  ret i64* %16

bb13:                                             ; preds = %bb12
  %17 = bitcast i64** %2 to %_ProbeNode**
  store %_ProbeNode* %14, %_ProbeNode** %17, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(24) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2a4926a127b916b4E"({ i64*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca %"alloc::vec::Vec<_ProbeNode>"*, align 8
  %1 = alloca %"alloc::vec::Vec<_ProbeNode>"*, align 8
  %2 = alloca i64*, align 8
  %3 = bitcast { i64*, i64* }* %self to i64**
  %_6 = load i64*, i64** %3, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h85d7d009a2386b45E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h5d5d9a22cd470a43E"(%"alloc::vec::Vec<_ProbeNode>"* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 24, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %6 = bitcast i64** %5 to %"alloc::vec::Vec<_ProbeNode>"**
  %_11 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %6, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h8e82d9e889c225b0E"(%"alloc::vec::Vec<_ProbeNode>"* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %7 = bitcast { i64*, i64* }* %self to i64**
  %_15 = load i64*, i64** %7, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h85d7d009a2386b45E"(i64* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %9 = bitcast i64** %8 to %"alloc::vec::Vec<_ProbeNode>"**
  %_16 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %9, align 8
  %_12 = icmp eq %"alloc::vec::Vec<_ProbeNode>"* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %10 = bitcast { i64*, i64* }* %self to i64**
  %_12.i = load i64*, i64** %10, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h85d7d009a2386b45E"(i64* nonnull %_12.i)
  %11 = bitcast { i64*, i64* }* %self to i64**
  %_16.i = load i64*, i64** %11, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h85d7d009a2386b45E"(i64* nonnull %_16.i)
  %12 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %_15.i, i64 1
  store %"alloc::vec::Vec<_ProbeNode>"* %12, %"alloc::vec::Vec<_ProbeNode>"** %0, align 8
  %_3.i.i = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h746b529d5d4cb833E"(%"alloc::vec::Vec<_ProbeNode>"* %_3.i.i)
  %13 = bitcast { i64*, i64* }* %self to i64**
  store i64* %_13.i, i64** %13, align 8
  store %"alloc::vec::Vec<_ProbeNode>"* %old.i, %"alloc::vec::Vec<_ProbeNode>"** %1, align 8
  %14 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %15 = bitcast i64** %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %16 = load i64*, i64** %2, align 8
  ret i64* %16

bb13:                                             ; preds = %bb12
  %17 = bitcast i64** %2 to %"alloc::vec::Vec<_ProbeNode>"**
  store %"alloc::vec::Vec<_ProbeNode>"* %14, %"alloc::vec::Vec<_ProbeNode>"** %17, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7811a27fda48a1aaE"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = bitcast { i8*, i8* }* %self to i8**
  %_6 = load i8*, i8** %3, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7521696f5c8d2f92E"(i8* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 1, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_11 = load i8*, i8** %5, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h4f38c0f62e494063E"(i8* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %6 = bitcast { i8*, i8* }* %self to i8**
  %_15 = load i8*, i8** %6, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_16 = load i8*, i8** %7, align 8
  %_12 = icmp eq i8* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %8 = bitcast { i8*, i8* }* %self to i8**
  %_12.i = load i8*, i8** %8, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %_12.i)
  %9 = bitcast { i8*, i8* }* %self to i8**
  %_16.i = load i8*, i8** %9, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %_16.i)
  %10 = getelementptr inbounds i8, i8* %_15.i, i64 1
  store i8* %10, i8** %0, align 8
  %_3.i.i = load i8*, i8** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %_3.i.i)
  %11 = bitcast { i8*, i8* }* %self to i8**
  store i8* %_13.i, i8** %11, align 8
  store i8* %old.i, i8** %1, align 8
  %12 = load i8*, i8** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %13 = bitcast i8** %2 to {}**
  store {}* null, {}** %13, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %14 = load i8*, i8** %2, align 8
  ret i8* %14

bb13:                                             ; preds = %bb12
  store i8* %12, i8** %2, align 8
  br label %bb14
}

; <core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN91_$LT$core..str..iter..SplitWhitespace$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50da6162aa518711E"(%"core::str::iter::SplitWhitespace"* align 8 dereferenceable(64) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"core::str::iter::SplitWhitespace"* %self to %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"*
; call <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::next
  %0 = call { i8*, i64 } @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4d5b87ca12f549c3E"(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* align 8 dereferenceable(64) %_2)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN91_$LT$core..str..iter..SplitWhitespace$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4088af0cda2b2972E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* align 8 dereferenceable(64) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"core::str::iter::SplitWhitespace"* %self to %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"*
; call <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h75f7ca3554f872d0E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* align 8 dereferenceable(64) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <hashbrown::raw::RawIter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define i64* @"_ZN91_$LT$hashbrown..raw..RawIter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h53a968b77d839570E"(%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_2 = alloca i64*, align 8
  %0 = alloca i64*, align 8
  %_3 = bitcast %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"*
; call <hashbrown::raw::RawIterRange<T> as core::iter::traits::iterator::Iterator>::next
  %1 = call i64* @"_ZN96_$LT$hashbrown..raw..RawIterRange$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h62f35472a74bbb58E"(%"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %_3)
  store i64* %1, i64** %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast i64** %_2 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_4 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_4, 1
  br i1 %5, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %b = load i64*, i64** %_2, align 8, !nonnull !3
  %6 = getelementptr inbounds %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* %self, i32 0, i32 1
  %7 = getelementptr inbounds %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* %self, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %8, 1
  store i64 %9, i64* %6, align 8
  store i64* %b, i64** %0, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %10 = bitcast i64** %0 to {}**
  store {}* null, {}** %10, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %11 = load i64*, i64** %0, align 8
  ret i64* %11
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::get
; Function Attrs: nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17h277fbd8270d4e46cE"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i8*, i64 }* %self to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_6 = select i1 %2, i64 0, i64 1
  switch i64 %_6, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call std::process::abort
  call void @_ZN3std7process5abort17h354795bd2c752f7eE() #20
  unreachable

bb3:                                              ; preds = %start
  %a = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %_5.0 = bitcast { [0 x i8]*, i64 }* %a to {}*
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_5.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.m to [3 x i64]*), 1
  ret { {}*, [3 x i64]* } %4
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::take_box
; Function Attrs: nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17hec8e73c462ea9b75E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_4 = alloca { i8*, i64 }, align 8
  %data = alloca { {}*, [3 x i64]* }, align 8
  store i8 0, i8* %_14, align 1
; call core::option::Option<T>::take
  %2 = call { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$4take17h5244fae8d1b0f359E"({ i8*, i64 }* align 8 dereferenceable(16) %self)
  store { i8*, i64 } %2, { i8*, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast { i8*, i64 }* %_4 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_6 = select i1 %5, i64 0, i64 1
  switch i64 %_6, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
; call std::process::abort
  call void @_ZN3std7process5abort17h354795bd2c752f7eE() #20
  unreachable

bb4:                                              ; preds = %bb1
  %6 = bitcast { i8*, i64 }* %_4 to { [0 x i8]*, i64 }*
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 0
  %a.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !3
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 1
  %a.1 = load i64, i64* %8, align 8
; invoke alloc::alloc::exchange_malloc
  %_4.i = invoke i8* @_ZN5alloc5alloc15exchange_malloc17h57a613d82b8ec97bE(i64 16, i64 8)
          to label %"_ZN5alloc5boxed12Box$LT$T$GT$3new17hba04f2b479ba3de8E.exit" unwind label %cleanup.i

cleanup.i:                                        ; preds = %bb4
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

"_ZN5alloc5boxed12Box$LT$T$GT$3new17hba04f2b479ba3de8E.exit": ; preds = %bb4
  %20 = bitcast i8* %_4.i to { [0 x i8]*, i64 }*
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0
  store [0 x i8]* %a.0, [0 x i8]** %21, align 8
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1
  store i64 %a.1, i64* %22, align 8
  br label %bb5

bb5:                                              ; preds = %"_ZN5alloc5boxed12Box$LT$T$GT$3new17hba04f2b479ba3de8E.exit"
  %23 = bitcast { [0 x i8]*, i64 }* %20 to {}*
  %24 = bitcast {}* %23 to i8*
  %_8.0 = bitcast i8* %24 to {}*
  store i8 1, i8* %_14, align 1
  %25 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0
  store {}* %_8.0, {}** %25, align 8
  %26 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1
  store [3 x i64]* bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.m to [3 x i64]*), [3 x i64]** %26, align 8
  store i8 0, i8* %_14, align 1
  %27 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0
  %_13.0 = load {}*, {}** %27, align 8, !nonnull !3
  %28 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1
  %_13.1 = load [3 x i64]*, [3 x i64]** %28, align 8, !nonnull !3
; invoke alloc::boxed::Box<T,A>::into_raw
  %29 = invoke { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17he16df492e6474f2bE"({}* noalias nonnull align 1 %_13.0, [3 x i64]* align 8 dereferenceable(24) %_13.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_11.0 = extractvalue { {}*, [3 x i64]* } %29, 0
  %_11.1 = extractvalue { {}*, [3 x i64]* } %29, 1
  store i8 0, i8* %_14, align 1
  %30 = insertvalue { {}*, [3 x i64]* } undef, {}* %_11.0, 0
  %31 = insertvalue { {}*, [3 x i64]* } %30, [3 x i64]* %_11.1, 1
  ret { {}*, [3 x i64]* } %31

bb7:                                              ; preds = %cleanup
  %32 = load i8, i8* %_14, align 1, !range !4
  %33 = trunc i8 %32 to i1
  br i1 %33, label %bb9, label %bb8

cleanup:                                          ; preds = %bb5
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  %36 = extractvalue { i8*, i32 } %34, 1
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %36, i32* %38, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  %39 = bitcast { i8*, i32 }* %1 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = insertvalue { i8*, i32 } undef, i8* %40, 0
  %44 = insertvalue { i8*, i32 } %43, i32 %42, 1
  resume { i8*, i32 } %44

bb9:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17ha7e6e1532ea13046E"({ {}*, [3 x i64]* }* %data) #21
  br label %bb8
}

; <std::sync::rwlock::RwLockWriteGuard<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN91_$LT$std..sync..rwlock..RwLockWriteGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h1fd4e3faeaca7da9E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::rwlock::RwLock<i32>"**
  %1 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %0, align 8, !nonnull !3
  %_6 = getelementptr inbounds %"std::sync::rwlock::RwLock<i32>", %"std::sync::rwlock::RwLock<i32>"* %1, i32 0, i32 3
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_6
}

; <core::str::IsWhitespace as core::ops::function::FnMut<(char,)>>::call_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN93_$LT$core..str..IsWhitespace$u20$as$u20$core..ops..function..FnMut$LT$$LP$char$C$$RP$$GT$$GT$8call_mut17h234030e62051c337E"(%"core::str::IsWhitespace"* nonnull align 1 %self, i32 %0) unnamed_addr #1 {
start:
  %_6 = alloca i32, align 4
  %_2 = alloca i32, align 4
  store i32 %0, i32* %_2, align 4
  %c = load i32, i32* %_2, align 4, !range !63
  store i32 %c, i32* %_6, align 4
  %1 = load i32, i32* %_6, align 4, !range !63
; call <core::str::IsWhitespace as core::ops::function::Fn<(char,)>>::call
  %2 = call zeroext i1 @"_ZN90_$LT$core..str..IsWhitespace$u20$as$u20$core..ops..function..Fn$LT$$LP$char$C$$RP$$GT$$GT$4call17h928be148c5cf9734E"(%"core::str::IsWhitespace"* nonnull align 1 %self, i32 %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* @"_ZN93_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h748b5387e6eb0a5cE"(%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* align 8 dereferenceable(48) %self) unnamed_addr #1 {
start:
  %_3 = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>", %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %self, i32 0, i32 1
  ret %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_3
}

; <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(8) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** @"_ZN93_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h95b9fef3245ee437E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_3 = bitcast i64** %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"**
  ret %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %_3
}

; <&alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define { i64*, i64* } @"_ZN94_$LT$$RF$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h105ad5183ceb6483E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17he4b374f469c260b2E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %self)
  %_3.0 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %1 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h03a6387f8a7970a0E"([0 x %"alloc::vec::Vec<_ProbeNode>"]* nonnull align 8 %_3.0, i64 %_3.1)
  %2 = extractvalue { i64*, i64* } %1, 0
  %3 = extractvalue { i64*, i64* } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64*, i64* } undef, i64* %2, 0
  %5 = insertvalue { i64*, i64* } %4, i64* %3, 1
  ret { i64*, i64* } %5
}

; <&alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define { i64*, i64* } @"_ZN94_$LT$$RF$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h99cb38826792e413E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { [0 x %_ProbeNode]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hef15325b23488321E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 dereferenceable(24) %self)
  %_3.0 = extractvalue { [0 x %_ProbeNode]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x %_ProbeNode]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %1 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hefea60f1b39032cdE"([0 x %_ProbeNode]* nonnull align 8 %_3.0, i64 %_3.1)
  %2 = extractvalue { i64*, i64* } %1, 0
  %3 = extractvalue { i64*, i64* } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64*, i64* } undef, i64* %2, 0
  %5 = insertvalue { i64*, i64* } %4, i64* %3, 1
  ret { i64*, i64* } %5
}

; <alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN94_$LT$alloc..collections..vec_deque..VecDeque$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc22e9dce84abf36aE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_back_dropper = alloca { i32*, i64 }, align 8
  %_4 = alloca { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::as_mut_slices
  call void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$13as_mut_slices17h3a0de2c22ec9241aE"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %_4, %"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %_4 to { [0 x i32]*, i64 }*
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %1, i32 0, i32 0
  %front.0 = load [0 x i32]*, [0 x i32]** %2, align 8, !nonnull !3
  %3 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %1, i32 0, i32 1
  %front.1 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %_4, i32 0, i32 1
  %5 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %4, i32 0, i32 0
  %back.0 = load [0 x i32]*, [0 x i32]** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %4, i32 0, i32 1
  %back.1 = load i64, i64* %6, align 8
  %7 = bitcast { i32*, i64 }* %_back_dropper to { [0 x i32]*, i64 }*
  %8 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %7, i32 0, i32 0
  store [0 x i32]* %back.0, [0 x i32]** %8, align 8
  %9 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %7, i32 0, i32 1
  store i64 %back.1, i64* %9, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::Dropper<i32>>
  call void @"_ZN4core3ptr140drop_in_place$LT$$LT$alloc..collections..vec_deque..VecDeque$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..Dropper$LT$i32$GT$$GT$17h8455a6258bde02bdE"({ i32*, i64 }* %_back_dropper)
  br label %bb3

bb4:                                              ; No predecessors!
; call core::ptr::drop_in_place<<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::Dropper<i32>>
  call void @"_ZN4core3ptr140drop_in_place$LT$$LT$alloc..collections..vec_deque..VecDeque$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..Dropper$LT$i32$GT$$GT$17h8455a6258bde02bdE"({ i32*, i64 }* %_back_dropper) #21
  br label %bb5

bb5:                                              ; preds = %bb4
  %10 = bitcast { i8*, i32 }* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb3:                                              ; preds = %bb2
  ret void
}

; <hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define internal i16 @"_ZN94_$LT$hashbrown..raw..bitmask..BitMask$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h8f11dc9ac57d9c38E"(i16 %self) unnamed_addr #1 {
start:
  %0 = alloca i16, align 2
  store i16 %self, i16* %0, align 2
  %1 = load i16, i16* %0, align 2
  ret i16 %1
}

; <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h605779213a31cd1eE"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %iter) unnamed_addr #1 {
start:
  %_3 = alloca %"core::str::iter::SplitWhitespace", align 8
  %_2 = alloca %"core::str::iter::SplitWhitespace", align 8
  %1 = bitcast %"core::str::iter::SplitWhitespace"* %_3 to i8*
  %2 = bitcast %"core::str::iter::SplitWhitespace"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 64, i1 false)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h866eab9abdb89733E"(%"core::str::iter::SplitWhitespace"* noalias nocapture sret(%"core::str::iter::SplitWhitespace") dereferenceable(64) %_2, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
  call void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17hfbd7febded28c05aE"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h9a01870c82d733ddE"() unnamed_addr #1 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to %"core::ops::control_flow::ControlFlow<&str>::Continue"*
  %2 = bitcast %"core::ops::control_flow::ControlFlow<&str>::Continue"* %1 to {}*
  %3 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5c20a5badf6b1a0aE"(i8* align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_6 = alloca { i8*, i64 }, align 8
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_2 = select i1 %7, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<&str, core::convert::Infallible>>::Continue"*
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<&str, core::convert::Infallible>>::Continue"* %8 to {}*
  %10 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0
  %b.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !nonnull !3
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1
  %b.1 = load i64, i64* %13, align 8
  %14 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0
  store [0 x i8]* %b.0, [0 x i8]** %15, align 8
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1
  store i64 %b.1, i64* %16, align 8
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8, !nonnull !3
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %18, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %20, i64* %22, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %23 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = insertvalue { i8*, i64 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i64 } %27, i64 %26, 1
  ret { i8*, i64 } %28
}

; <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h82417d591da92bd8E"({}* nonnull align 1 %reference.0, [3 x i64]* align 8 dereferenceable(24) %reference.1) unnamed_addr #1 {
start:
  %0 = alloca { i8*, i64* }, align 8
  %1 = bitcast { i8*, i64* }* %0 to { {}*, [3 x i64]* }*
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 0
  store {}* %reference.0, {}** %2, align 8
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 1
  store [3 x i64]* %reference.1, [3 x i64]** %3, align 8
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = insertvalue { i8*, i64* } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64* } %8, i64* %7, 1
  ret { i8*, i64* } %9
}

; <core::str::IsNotEmpty as core::ops::function::Fn<(&&str,)>>::call
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN95_$LT$core..str..IsNotEmpty$u20$as$u20$core..ops..function..Fn$LT$$LP$$RF$$RF$str$C$$RP$$GT$$GT$4call17h147b1681cb12dddaE"(%"core::str::IsNotEmpty"* nonnull align 1 %self, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %0) unnamed_addr #1 {
start:
  %_2 = alloca i64*, align 8
  %1 = bitcast i64** %_2 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %0, { [0 x i8]*, i64 }** %1, align 8
  %2 = bitcast i64** %_2 to { [0 x i8]*, i64 }**
  %s = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %2, align 8, !nonnull !3
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_5.0 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !3
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_5.1 = load i64, i64* %4, align 8
; call core::str::<impl str>::is_empty
  %_4 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h1547e666babf134bE"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = xor i1 %_4, true
  ret i1 %5
}

; <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h3f0a9311a4f9369cE"(%"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* noalias nocapture sret(%"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_5 = alloca %"core::str::iter::CharIndices", align 8
; invoke core::str::<impl str>::char_indices
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hf8d8cd40d191094dE"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %_5, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %0 to %"core::str::IsWhitespace"*
  %3 = bitcast %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %0 to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %haystack.1, i64* %5, align 8
  %6 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>", %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %0, i32 0, i32 2
  %7 = bitcast %"core::str::iter::CharIndices"* %6 to i8*
  %8 = bitcast %"core::str::iter::CharIndices"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  ret void

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %14 = bitcast { i8*, i32 }* %1 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19
}

; <hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN95_$LT$hashbrown..raw..bitmask..BitMaskIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hae38ff65ad780fe6E"(i16* align 2 dereferenceable(2) %self) unnamed_addr #1 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %_5 = load i16, i16* %self, align 2
; call hashbrown::raw::bitmask::BitMask::lowest_set_bit
  %1 = call { i64, i64 } @_ZN9hashbrown3raw7bitmask7BitMask14lowest_set_bit17hb4227454fdcec9d3E(i16 %_5)
  %_4.0 = extractvalue { i64, i64 } %1, 0
  %_4.1 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %2 = call { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc025a0dd828dc265E"(i64 %_4.0, i64 %_4.1)
  store { i64, i64 } %2, { i64, i64 }* %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, i64 }* %_3 to i64*
  %_6 = load i64, i64* %3, align 8, !range !2
  switch i64 %_6, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %4 = bitcast { i64, i64 }* %_3 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue"*
  %5 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue"* %4, i32 0, i32 1
  %val = load i64, i64* %5, align 8
  %_11 = load i16, i16* %self, align 2
; call hashbrown::raw::bitmask::BitMask::remove_lowest_bit
  %_10 = call i16 @_ZN9hashbrown3raw7bitmask7BitMask17remove_lowest_bit17h8a4c096eb2859576E(i16 %_11)
  br label %bb7

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %6 = call { i64, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h884e82a7e1c596b9E"()
  store { i64, i64 } %6, { i64, i64 }* %0, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8, !range !2
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12

bb7:                                              ; preds = %bb3
  store i16 %_10, i16* %self, align 2
  %13 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %13, i32 0, i32 1
  store i64 %val, i64* %14, align 8
  %15 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %15, align 8
  br label %bb8
}

; <hashbrown::raw::RawIterRange<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define i64* @"_ZN96_$LT$hashbrown..raw..RawIterRange$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h62f35472a74bbb58E"(%"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %_16 = alloca <2 x i64>, align 16
  %_2 = alloca { i64, i64 }, align 8
  %1 = alloca i64*, align 8
  br label %bb1

bb1:                                              ; preds = %bb12, %start
  %2 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %self, i32 0, i32 3
  %_3 = load i16, i16* %2, align 8
; call hashbrown::raw::bitmask::BitMask::lowest_set_bit
  %3 = call { i64, i64 } @_ZN9hashbrown3raw7bitmask7BitMask14lowest_set_bit17hb4227454fdcec9d3E(i16 %_3)
  store { i64, i64 } %3, { i64, i64 }* %_2, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %_2 to i64*
  %_4 = load i64, i64* %4, align 8, !range !2
  %5 = icmp eq i64 %_4, 1
  br i1 %5, label %bb3, label %bb6

bb3:                                              ; preds = %bb2
  %6 = bitcast { i64, i64 }* %_2 to %"core::option::Option<usize>::Some"*
  %7 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %6, i32 0, i32 1
  %index = load i64, i64* %7, align 8
  %8 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %self, i32 0, i32 3
  %_7 = load i16, i16* %8, align 8
; call hashbrown::raw::bitmask::BitMask::remove_lowest_bit
  %_6 = call i16 @_ZN9hashbrown3raw7bitmask7BitMask17remove_lowest_bit17h8a4c096eb2859576E(i16 %_7)
  br label %bb4

bb6:                                              ; preds = %bb2
  %9 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %self, i32 0, i32 1
  %_12 = load i8*, i8** %9, align 8
  %10 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %self, i32 0, i32 2
  %_13 = load i8*, i8** %10, align 8
  %_11 = icmp uge i8* %_12, %_13
  br i1 %_11, label %bb7, label %bb8

bb8:                                              ; preds = %bb6
  %11 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %self, i32 0, i32 1
  %_17 = load i8*, i8** %11, align 8
; call hashbrown::raw::sse2::Group::load_aligned
  call void @_ZN9hashbrown3raw4sse25Group12load_aligned17h6724fa50aad4eab0E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %_16, i8* %_17)
  br label %bb9

bb7:                                              ; preds = %bb6
  %12 = bitcast i64** %1 to {}**
  store {}* null, {}** %12, align 8
  br label %bb13

bb13:                                             ; preds = %bb5, %bb7
  %13 = load i64*, i64** %1, align 8
  ret i64* %13

bb9:                                              ; preds = %bb8
; call hashbrown::raw::sse2::Group::match_full
  %_14 = call i16 @_ZN9hashbrown3raw4sse25Group10match_full17hfc92e3430a4fbb04E(<2 x i64>* align 16 dereferenceable(16) %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
  %14 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %self, i32 0, i32 3
  store i16 %_14, i16* %14, align 8
  %_19 = bitcast %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %self to i64**
; call hashbrown::raw::Bucket<T>::next_n
  %_18 = call nonnull i64* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6next_n17h027e13cc28ecb207E"(i64** align 8 dereferenceable(8) %_19, i64 16)
  br label %bb11

bb11:                                             ; preds = %bb10
  %15 = bitcast %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %self to i64**
  store i64* %_18, i64** %15, align 8
  %16 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %self, i32 0, i32 1
  %_21 = load i8*, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %_21, i64 16
  store i8* %17, i8** %0, align 8
  %18 = load i8*, i8** %0, align 8
  br label %bb12

bb12:                                             ; preds = %bb11
  %19 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %self, i32 0, i32 1
  store i8* %18, i8** %19, align 8
  br label %bb1

bb4:                                              ; preds = %bb3
  %20 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %self, i32 0, i32 3
  store i16 %_6, i16* %20, align 8
  %_9 = bitcast %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %self to i64**
; call hashbrown::raw::Bucket<T>::next_n
  %_8 = call nonnull i64* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6next_n17h027e13cc28ecb207E"(i64** align 8 dereferenceable(8) %_9, i64 %index)
  br label %bb5

bb5:                                              ; preds = %bb4
  store i64* %_8, i64** %1, align 8
  br label %bb13
}

; <std::collections::hash::map::HashMap<K,V,S> as core::default::Default>::default
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN96_$LT$std..collections..hash..map..HashMap$LT$K$C$V$C$S$GT$$u20$as$u20$core..default..Default$GT$7default17h3965d4194a230f06E"(%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* noalias nocapture sret(%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>") dereferenceable(48) %0) unnamed_addr #1 {
start:
; call <std::collections::hash::map::RandomState as core::default::Default>::default
  %1 = call { i64, i64 } @"_ZN83_$LT$std..collections..hash..map..RandomState$u20$as$u20$core..default..Default$GT$7default17h60141fe584aa0ca5E"()
  %_1.0 = extractvalue { i64, i64 } %1, 0
  %_1.1 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::collections::hash::map::HashMap<K,V,S>::with_hasher
  call void @"_ZN3std11collections4hash3map24HashMap$LT$K$C$V$C$S$GT$11with_hasher17h9d91a2efa04c6e9aE"(%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* noalias nocapture sret(%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>") dereferenceable(48) %0, i64 %_1.0, i64 %_1.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17ha0aa8d66a0b35fd4E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %iter) unnamed_addr #0 {
start:
  %_4 = alloca %"core::str::iter::SplitWhitespace", align 8
  %0 = bitcast %"core::str::iter::SplitWhitespace"* %_4 to i8*
  %1 = bitcast %"core::str::iter::SplitWhitespace"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 64, i1 false)
; call alloc::vec::Vec<T,A>::extend_desugared
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17hf16d97cd4ef4f28fE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h832d0ea284dd5e71E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #1 {
start:
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %slice.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %slice.1, 1
  ret { [0 x i8]*, i64 } %2
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17hf81117f4b1aafc33E"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %_5 = alloca { i64, i32 }, align 8
  %s = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>", %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %self, i32 0, i32 2
  %_4 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1
  %5 = bitcast { i8*, i8* }* %_4 to i8**
  %start1.i = load i8*, i8** %5, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %start1.i)
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_4, i32 0, i32 1
  %_15.i = load i8*, i8** %6, align 8
  %_14.i = ptrtoint i8* %_15.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %start1.i)
  %_16.i = ptrtoint i8* %_17.i to i64
  %7 = sub nuw i64 %_14.i, %_16.i
  store i64 %7, i64* %3, align 8
  %diff.i = load i64, i64* %3, align 8
  store i64 %diff.i, i64* %4, align 8
  %8 = load i64, i64* %4, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %9 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hd8c34366ef29f20dE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %s)
  store { i64, i32 } %9, { i64, i32 }* %_5, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1
  %11 = load i32, i32* %10, align 8, !range !65
  %12 = sub i32 %11, 1114112
  %13 = icmp eq i32 %12, 0
  %_7 = select i1 %13, i64 0, i64 1
  %14 = icmp eq i64 %_7, 1
  br i1 %14, label %bb3, label %bb8

bb3:                                              ; preds = %bb2
  %15 = bitcast { i64, i32 }* %_5 to i64*
  %i = load i64, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1
  %c = load i32, i32* %16, align 8, !range !63
  %_11 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1
  %17 = bitcast { i8*, i8* }* %_11 to i8**
  %start1.i1 = load i8*, i8** %17, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %start1.i1)
  %18 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_11, i32 0, i32 1
  %_15.i3 = load i8*, i8** %18, align 8
  %_14.i4 = ptrtoint i8* %_15.i3 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i5 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %start1.i1)
  %_16.i6 = ptrtoint i8* %_17.i5 to i64
  %19 = sub nuw i64 %_14.i4, %_16.i6
  store i64 %19, i64* %1, align 8
  %diff.i7 = load i64, i64* %1, align 8
  store i64 %diff.i7, i64* %2, align 8
  %20 = load i64, i64* %2, align 8
  br label %bb4

bb8:                                              ; preds = %bb2
  %21 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %21, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  ret void

bb4:                                              ; preds = %bb3
  %char_len = sub i64 %8, %20
  %_16 = bitcast %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %self to %"core::str::IsWhitespace"*
; call <F as core::str::pattern::MultiCharEq>::matches
  %_15 = call zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17h5748b3a2bdeb99ecE"(%"core::str::IsWhitespace"* nonnull align 1 %_16, i32 %c)
  br label %bb5

bb5:                                              ; preds = %bb4
  br i1 %_15, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %_23 = add i64 %i, %char_len
  %22 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %23 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %22, i32 0, i32 1
  store i64 %i, i64* %23, align 8
  %24 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %25 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %24, i32 0, i32 2
  store i64 %_23, i64* %25, align 8
  %26 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %26, align 8
  br label %bb9

bb6:                                              ; preds = %bb5
  %_19 = add i64 %i, %char_len
  %27 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %28 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %27, i32 0, i32 1
  store i64 %i, i64* %28, align 8
  %29 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %30 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %29, i32 0, i32 2
  store i64 %_19, i64* %30, align 8
  %31 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 0, i64* %31, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb6
  br label %bb10
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::haystack
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hed8e308bab72bf33E"(%"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %0 = bitcast %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %self to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %2 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !3
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1
  ret { [0 x i8]*, i64 } %6
}

; <&mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices>::slice
; Function Attrs: nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN98_$LT$$RF$mut$u20$$u5b$T$u5d$$u20$as$u20$alloc..collections..vec_deque..ring_slices..RingSlices$GT$5slice17hf257221c7ed8202eE"([0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %from, i64 %to) unnamed_addr #0 {
start:
  %_8 = alloca { i64, i64 }, align 8
  %0 = bitcast { i64, i64 }* %_8 to i64*
  store i64 %from, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  store i64 %to, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %6 = call { [0 x i32]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h6fea5ddf4c8b12a5E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %3, i64 %5, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc644 to %"core::panic::location::Location"*))
  %_6.0 = extractvalue { [0 x i32]*, i64 } %6, 0
  %_6.1 = extractvalue { [0 x i32]*, i64 } %6, 1
  br label %bb1

bb1:                                              ; preds = %start
  %7 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %_6.0, 0
  %8 = insertvalue { [0 x i32]*, i64 } %7, i64 %_6.1, 1
  ret { [0 x i32]*, i64 } %8
}

; <&mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices>::split_at
; Function Attrs: nonlazybind uwtable
define void @"_ZN98_$LT$$RF$mut$u20$$u5b$T$u5d$$u20$as$u20$alloc..collections..vec_deque..ring_slices..RingSlices$GT$8split_at17hec75ea3db4121ae9E"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, [0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %i) unnamed_addr #0 {
start:
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h5f88f0336c987e47E"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, [0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %i)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17hfbd7febded28c05aE"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %iterator) unnamed_addr #0 {
start:
  %_2 = alloca %"core::str::iter::SplitWhitespace", align 8
  %1 = bitcast %"core::str::iter::SplitWhitespace"* %_2 to i8*
  %2 = bitcast %"core::str::iter::SplitWhitespace"* %iterator to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 64, i1 false)
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
  call void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17hb83950a02f1d1969E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h215ff5592f6a212fE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* align 8 dereferenceable(32) %reference) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"**
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"* %reference, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<i32>>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h3cf4640816094dddE"(%"alloc::sync::ArcInner<_ShuffledOrder>"* align 8 dereferenceable(112) %reference) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<_ShuffledOrder>"**
  store %"alloc::sync::ArcInner<_ShuffledOrder>"* %reference, %"alloc::sync::ArcInner<_ShuffledOrder>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h4490d64d7825c234E"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* align 8 dereferenceable(48) %reference) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<_ProbeSemaphore>"**
  store %"alloc::sync::ArcInner<_ProbeSemaphore>"* %reference, %"alloc::sync::ArcInner<_ProbeSemaphore>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h6e849932aa6bca43E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* align 8 dereferenceable(56) %reference) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"**
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %reference, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hc8c466e4d4a9764aE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* align 8 dereferenceable(32) %reference) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"**
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %reference, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hfeca19f684bf70d2E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* align 8 dereferenceable(80) %reference) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"**
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"* %reference, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; <core::str::IsNotEmpty as core::ops::function::FnMut<(&&str,)>>::call_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN98_$LT$core..str..IsNotEmpty$u20$as$u20$core..ops..function..FnMut$LT$$LP$$RF$$RF$str$C$$RP$$GT$$GT$8call_mut17he92093f36f9b4812E"(%"core::str::IsNotEmpty"* nonnull align 1 %self, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %0) unnamed_addr #1 {
start:
  %_6 = alloca i64*, align 8
  %_2 = alloca i64*, align 8
  %1 = bitcast i64** %_2 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %0, { [0 x i8]*, i64 }** %1, align 8
  %2 = bitcast i64** %_2 to { [0 x i8]*, i64 }**
  %s = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %2, align 8, !nonnull !3
  %3 = bitcast i64** %_6 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %s, { [0 x i8]*, i64 }** %3, align 8
  %4 = load i64*, i64** %_6, align 8, !nonnull !3
  %5 = bitcast i64* %4 to { [0 x i8]*, i64 }*
; call <core::str::IsNotEmpty as core::ops::function::Fn<(&&str,)>>::call
  %6 = call zeroext i1 @"_ZN95_$LT$core..str..IsNotEmpty$u20$as$u20$core..ops..function..Fn$LT$$LP$$RF$$RF$str$C$$RP$$GT$$GT$4call17h147b1681cb12dddaE"(%"core::str::IsNotEmpty"* nonnull align 1 %self, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %5)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %6
}

; <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h56d9da20a7d1a48cE"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* %self to %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"*
; call core::str::pattern::Searcher::next_match
  call void @_ZN4core3str7pattern8Searcher10next_match17h674b14c28feaf3fbE(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::haystack
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h3d05a3726b62bdcaE"(%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_2 = bitcast %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* %self to %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"*
; call <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::haystack
  %0 = call { [0 x i8]*, i64 } @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hed8e308bab72bf33E"(%"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %_2)
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; <hashbrown::raw::RawIterHash<T,A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define i64* @"_ZN99_$LT$hashbrown..raw..RawIterHash$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0ea8c675c5f51546E"(%"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* align 16 dereferenceable(48) %self) unnamed_addr #0 {
start:
  %_2 = alloca { i64, i64 }, align 8
  %0 = alloca i64*, align 8
  %_3 = bitcast %"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"*
; call <hashbrown::raw::RawIterHashInner<A> as core::iter::traits::iterator::Iterator>::next
  %1 = call { i64, i64 } @"_ZN100_$LT$hashbrown..raw..RawIterHashInner$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hdd1325278bdda391E"(%"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* align 16 dereferenceable(48) %_3)
  store { i64, i64 } %1, { i64, i64 }* %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %_2 to i64*
  %_4 = load i64, i64* %2, align 8, !range !2
  switch i64 %_4, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %3 = bitcast i64** %0 to {}**
  store {}* null, {}** %3, align 8
  br label %bb6

bb4:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %_2 to %"core::option::Option<usize>::Some"*
  %5 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %4, i32 0, i32 1
  %index = load i64, i64* %5, align 8
  %6 = bitcast %"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"*
  %7 = getelementptr inbounds %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>", %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %6, i32 0, i32 1
  %_7 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %7, align 16, !nonnull !3
; call hashbrown::raw::RawTableInner<A>::bucket
  %_6 = call nonnull i64* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$6bucket17hff967bc11fe408a2E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_7, i64 %index)
  br label %bb5

bb5:                                              ; preds = %bb4
  store i64* %_6, i64** %0, align 8
  br label %bb6

bb6:                                              ; preds = %bb2, %bb5
  %8 = load i64*, i64** %0, align 8
  ret i64* %8
}

; hashbrown::scopeguard::guard
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) i64* @_ZN9hashbrown10scopeguard5guard17hb349118aa3612b4cE(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %value) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"[closure@hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>::rehash_in_place<[closure@hashbrown::map::make_hasher<std::thread::ThreadId, std::thread::ThreadId, i32, std::collections::hash::map::RandomState>::{closure#0}]>::{closure#0}]"*
  %2 = bitcast i64** %0 to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"**
  store %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %value, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %2, align 8
  %3 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %3
}

; hashbrown::scopeguard::guard
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN9hashbrown10scopeguard5guard17hf381f7e0129df308E(%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* noalias nocapture sret(%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>") dereferenceable(48) %0, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* noalias nocapture dereferenceable(32) %value, i64 %dropfn.0, i64 %dropfn.1) unnamed_addr #1 {
start:
  %_4 = alloca %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", align 8
  %1 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_4 to i8*
  %2 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
  %3 = bitcast %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %0 to { i64, i64 }*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %dropfn.0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %dropfn.1, i64* %5, align 8
  %6 = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>", %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %0, i32 0, i32 1
  %7 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %6 to i8*
  %8 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false)
  ret void
}

; hashbrown::rustc_entry::RustcVacantEntry<K,V,A>::insert
; Function Attrs: nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN9hashbrown11rustc_entry33RustcVacantEntry$LT$K$C$V$C$A$GT$6insert17h61619651df5920e5E"(%"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* noalias nocapture dereferenceable(24) %self, i32 %value) unnamed_addr #0 {
start:
  %_7 = alloca { i64, i32 }, align 8
  %bucket = alloca i64*, align 8
  %0 = getelementptr inbounds %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>", %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %self, i32 0, i32 2
  %_5 = load %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"*, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"** %0, align 8, !nonnull !3
  %1 = bitcast %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %self to i64*
  %_6 = load i64, i64* %1, align 8
  %2 = getelementptr inbounds %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>", %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %self, i32 0, i32 1
  %_8 = load i64, i64* %2, align 8, !range !26
  %3 = bitcast { i64, i32 }* %_7 to i64*
  store i64 %_8, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 1
  store i32 %value, i32* %4, align 8
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 0
  %6 = load i64, i64* %5, align 8, !range !26
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_7, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
; call hashbrown::raw::RawTable<T,A>::insert_no_grow
  %9 = call nonnull i64* @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14insert_no_grow17haea647a85fce4151E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %_5, i64 %_6, i64 %6, i32 %8)
  store i64* %9, i64** %bucket, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call hashbrown::raw::Bucket<T>::as_mut
  %_12 = call align 8 dereferenceable(16) { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_mut17he74a600b30738171E"(i64** align 8 dereferenceable(8) %bucket)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_12, i32 0, i32 1
  ret i32* %_11
}

; hashbrown::rustc_entry::RustcOccupiedEntry<K,V,A>::into_mut
; Function Attrs: nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN9hashbrown11rustc_entry35RustcOccupiedEntry$LT$K$C$V$C$A$GT$8into_mut17ha128a54a97928514E"(%"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_6 = getelementptr inbounds %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>", %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* %self, i32 0, i32 1
; invoke hashbrown::raw::Bucket<T>::as_mut
  %_5 = invoke align 8 dereferenceable(16) { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_mut17he74a600b30738171E"(i64** align 8 dereferenceable(8) %_6)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1
  br label %bb2

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11

bb2:                                              ; preds = %bb1
  ret i32* %_4
}

; hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown11rustc_entry62_$LT$impl$u20$hashbrown..map..HashMap$LT$K$C$V$C$S$C$A$GT$$GT$11rustc_entry17hafe1c2ac87285debE"(%"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>"* noalias nocapture sret(%"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>") dereferenceable(32) %0, %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* align 8 dereferenceable(48) %self, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_23 = alloca %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>", align 8
  %_16 = alloca i64, align 8
  %_15 = alloca %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>", align 8
  %_11 = alloca i64*, align 8
  %_8 = alloca i64*, align 8
  %key = alloca i64, align 8
  store i64 %1, i64* %key, align 8
  %_5 = bitcast %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* %self to { i64, i64 }*
; invoke hashbrown::map::make_insert_hash
  %hash = invoke i64 @_ZN9hashbrown3map16make_insert_hash17heee377125467b46cE({ i64, i64 }* align 8 dereferenceable(16) %_5, i64* align 8 dereferenceable(8) %key)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_9 = getelementptr inbounds %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>", %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* %self, i32 0, i32 1
  store i64* %key, i64** %_11, align 8
  %3 = load i64*, i64** %_11, align 8, !nonnull !3
; invoke hashbrown::raw::RawTable<T,A>::find
  %4 = invoke i64* @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$4find17h3132947f86499cc9E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %_9, i64 %hash, i64* align 8 dereferenceable(8) %3)
          to label %bb2 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  br label %bb8

cleanup:                                          ; preds = %bb4, %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  store i64* %4, i64** %_8, align 8
  %10 = bitcast i64** %_8 to {}**
  %11 = load {}*, {}** %10, align 8
  %12 = icmp eq {}* %11, null
  %_13 = select i1 %12, i64 0, i64 1
  %13 = icmp eq i64 %_13, 1
  br i1 %13, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %elem = load i64*, i64** %_8, align 8, !nonnull !3
  %_17 = load i64, i64* %key, align 8, !range !26
  store i64 %_17, i64* %_16, align 8
  %_20 = getelementptr inbounds %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>", %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* %self, i32 0, i32 1
  %14 = bitcast %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* %_15 to i64*
  %15 = load i64, i64* %_16, align 8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>", %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* %_15, i32 0, i32 1
  store i64* %elem, i64** %16, align 8
  %17 = getelementptr inbounds %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>", %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* %_15, i32 0, i32 2
  store %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %_20, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"** %17, align 8
  %18 = bitcast %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>"* %0 to %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>::Occupied"*
  %19 = getelementptr inbounds %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>::Occupied", %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>::Occupied"* %18, i32 0, i32 1
  %20 = bitcast %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* %19 to i8*
  %21 = bitcast %"hashbrown::rustc_entry::RustcOccupiedEntry<std::thread::ThreadId, i32>"* %_15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false)
  %22 = bitcast %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>"* %0 to i64*
  store i64 0, i64* %22, align 8
  br label %bb6

bb4:                                              ; preds = %bb2
; invoke hashbrown::map::HashMap<K,V,S,A>::reserve
  invoke void @"_ZN9hashbrown3map28HashMap$LT$K$C$V$C$S$C$A$GT$7reserve17h88c311d845cd9d70E"(%"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* align 8 dereferenceable(48) %self, i64 1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %_25 = load i64, i64* %key, align 8, !range !26
  %_27 = getelementptr inbounds %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>", %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* %self, i32 0, i32 1
  %23 = bitcast %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %_23 to i64*
  store i64 %hash, i64* %23, align 8
  %24 = getelementptr inbounds %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>", %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %_23, i32 0, i32 1
  store i64 %_25, i64* %24, align 8
  %25 = getelementptr inbounds %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>", %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %_23, i32 0, i32 2
  store %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %_27, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"** %25, align 8
  %26 = bitcast %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>"* %0 to %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>::Vacant"*
  %27 = getelementptr inbounds %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>::Vacant", %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>::Vacant"* %26, i32 0, i32 1
  %28 = bitcast %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %27 to i8*
  %29 = bitcast %"hashbrown::rustc_entry::RustcVacantEntry<std::thread::ThreadId, i32>"* %_23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false)
  %30 = bitcast %"hashbrown::rustc_entry::RustcEntry<std::thread::ThreadId, i32>"* %0 to i64*
  store i64 1, i64* %30, align 8
  br label %bb6

bb8:                                              ; preds = %bb7
  %31 = bitcast { i8*, i32 }* %2 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = insertvalue { i8*, i32 } undef, i8* %32, 0
  %36 = insertvalue { i8*, i32 } %35, i32 %34, 1
  resume { i8*, i32 } %36

bb6:                                              ; preds = %bb3, %bb5
  ret void
}

; hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN9hashbrown11rustc_entry62_$LT$impl$u20$hashbrown..map..HashMap$LT$K$C$V$C$S$C$A$GT$$GT$11rustc_entry28_$u7b$$u7b$closure$u7d$$u7d$17h14b8178a76221488E"(i64** align 8 dereferenceable(8) %_1, { i64, i32 }* align 8 dereferenceable(16) %q) unnamed_addr #1 {
start:
  %_3 = bitcast { i64, i32 }* %q to i64*
  %_5 = load i64*, i64** %_1, align 8, !nonnull !3
; call <std::thread::ThreadId as core::cmp::PartialEq>::eq
  %0 = call zeroext i1 @"_ZN62_$LT$std..thread..ThreadId$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9fa20198db0c3e2fE"(i64* align 8 dereferenceable(8) %_3, i64* align 8 dereferenceable(8) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; hashbrown::map::make_hasher
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(16) i64* @_ZN9hashbrown3map11make_hasher17hfd7157c4c1432579E({ i64, i64 }* align 8 dereferenceable(16) %hash_builder) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to { i64, i64 }**
  store { i64, i64 }* %hash_builder, { i64, i64 }** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; hashbrown::map::make_hasher::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN9hashbrown3map11make_hasher28_$u7b$$u7b$closure$u7d$$u7d$17h3dd65571d25f9ea6E"(i64** align 8 dereferenceable(8) %_1, { i64, i32 }* align 8 dereferenceable(16) %val) unnamed_addr #1 {
start:
  %0 = bitcast i64** %_1 to { i64, i64 }**
  %_3 = load { i64, i64 }*, { i64, i64 }** %0, align 8, !nonnull !3
  %_5 = bitcast { i64, i32 }* %val to i64*
; call hashbrown::map::make_hash
  %1 = call i64 @_ZN9hashbrown3map9make_hash17h81ca986ef99b1efeE({ i64, i64 }* align 8 dereferenceable(16) %_3, i64* align 8 dereferenceable(8) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; hashbrown::map::make_insert_hash
; Function Attrs: nonlazybind uwtable
define i64 @_ZN9hashbrown3map16make_insert_hash17heee377125467b46cE({ i64, i64 }* align 8 dereferenceable(16) %hash_builder, i64* align 8 dereferenceable(8) %val) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %state = alloca %"std::collections::hash::map::DefaultHasher", align 8
; call <std::collections::hash::map::RandomState as core::hash::BuildHasher>::build_hasher
  call void @"_ZN84_$LT$std..collections..hash..map..RandomState$u20$as$u20$core..hash..BuildHasher$GT$12build_hasher17heaa7a4f01a95b7d9E"(%"std::collections::hash::map::DefaultHasher"* noalias nocapture sret(%"std::collections::hash::map::DefaultHasher") dereferenceable(72) %state, { i64, i64 }* align 8 dereferenceable(16) %hash_builder)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <std::thread::ThreadId as core::hash::Hash>::hash
  invoke void @"_ZN58_$LT$std..thread..ThreadId$u20$as$u20$core..hash..Hash$GT$4hash17h6dfae6f3b6f7ea8aE"(i64* align 8 dereferenceable(8) %val, %"std::collections::hash::map::DefaultHasher"* align 8 dereferenceable(72) %state)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <std::collections::hash::map::DefaultHasher as core::hash::Hasher>::finish
  %1 = invoke i64 @"_ZN81_$LT$std..collections..hash..map..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$6finish17heab83c004c86dbcaE"(%"std::collections::hash::map::DefaultHasher"* align 8 dereferenceable(72) %state)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  br label %bb6

cleanup:                                          ; preds = %bb2, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb4

bb6:                                              ; preds = %bb5
  %7 = bitcast { i8*, i32 }* %0 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1
  resume { i8*, i32 } %12

bb4:                                              ; preds = %bb3
  ret i64 %1
}

; hashbrown::map::HashMap<K,V,S>::with_hasher
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3map24HashMap$LT$K$C$V$C$S$GT$11with_hasher17hb97db696b3da97b8E"(%"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* noalias nocapture sret(%"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>") dereferenceable(48) %0, i64 %hash_builder.0, i64 %hash_builder.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_3 = alloca %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>", align 8
; invoke hashbrown::raw::RawTable<T>::new
  invoke void @"_ZN9hashbrown3raw17RawTable$LT$T$GT$3new17h91bc9dcde66b10dcE"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>") dereferenceable(32) %_3)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* %0 to { i64, i64 }*
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  store i64 %hash_builder.0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %hash_builder.1, i64* %4, align 8
  %5 = getelementptr inbounds %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>", %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* %0, i32 0, i32 1
  %6 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %5 to i8*
  %7 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 32, i1 false)
  ret void

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %13 = bitcast { i8*, i32 }* %1 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18
}

; hashbrown::map::HashMap<K,V,S,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3map28HashMap$LT$K$C$V$C$S$C$A$GT$7reserve17h88c311d845cd9d70E"(%"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* align 8 dereferenceable(48) %self, i64 %additional) unnamed_addr #0 {
start:
  %_4 = getelementptr inbounds %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>", %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* %self, i32 0, i32 1
  %_8 = bitcast %"hashbrown::map::HashMap<std::thread::ThreadId, i32, std::collections::hash::map::RandomState>"* %self to { i64, i64 }*
; call hashbrown::map::make_hasher
  %_6 = call align 8 dereferenceable(16) i64* @_ZN9hashbrown3map11make_hasher17hfd7157c4c1432579E({ i64, i64 }* align 8 dereferenceable(16) %_8)
  br label %bb1

bb1:                                              ; preds = %start
; call hashbrown::raw::RawTable<T,A>::reserve
  call void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$7reserve17hbd9b1fd13e48b6fcE"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %_4, i64 %additional, i64* align 8 dereferenceable(16) %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; hashbrown::map::make_hash
; Function Attrs: nonlazybind uwtable
define i64 @_ZN9hashbrown3map9make_hash17h81ca986ef99b1efeE({ i64, i64 }* align 8 dereferenceable(16) %hash_builder, i64* align 8 dereferenceable(8) %val) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %state = alloca %"std::collections::hash::map::DefaultHasher", align 8
; call <std::collections::hash::map::RandomState as core::hash::BuildHasher>::build_hasher
  call void @"_ZN84_$LT$std..collections..hash..map..RandomState$u20$as$u20$core..hash..BuildHasher$GT$12build_hasher17heaa7a4f01a95b7d9E"(%"std::collections::hash::map::DefaultHasher"* noalias nocapture sret(%"std::collections::hash::map::DefaultHasher") dereferenceable(72) %state, { i64, i64 }* align 8 dereferenceable(16) %hash_builder)
  br label %bb1

bb1:                                              ; preds = %start
; invoke <std::thread::ThreadId as core::hash::Hash>::hash
  invoke void @"_ZN58_$LT$std..thread..ThreadId$u20$as$u20$core..hash..Hash$GT$4hash17h6dfae6f3b6f7ea8aE"(i64* align 8 dereferenceable(8) %val, %"std::collections::hash::map::DefaultHasher"* align 8 dereferenceable(72) %state)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <std::collections::hash::map::DefaultHasher as core::hash::Hasher>::finish
  %1 = invoke i64 @"_ZN81_$LT$std..collections..hash..map..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$6finish17heab83c004c86dbcaE"(%"std::collections::hash::map::DefaultHasher"* align 8 dereferenceable(72) %state)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  br label %bb6

cleanup:                                          ; preds = %bb2, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb4

bb6:                                              ; preds = %bb5
  %7 = bitcast { i8*, i32 }* %0 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1
  resume { i8*, i32 } %12

bb4:                                              ; preds = %bb3
  ret i64 %1
}

; hashbrown::raw::TableLayout::calculate_layout_for
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN9hashbrown3raw11TableLayout20calculate_layout_for17h1541f5bd66bd93b3E(%"core::option::Option<(core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::option::Option<(core::alloc::layout::Layout, usize)>") dereferenceable(24) %0, i64 %self.0, i64 %self.1, i64 %buckets) unnamed_addr #1 {
start:
  %_37 = alloca { { i64, i64 }, i64 }, align 8
  %_28 = alloca { i64, i64 }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h16b05a09bfdc27b1E"(i64 %self.0, i64 %buckets)
  %_11.0 = extractvalue { i64, i64 } %1, 0
  %_11.1 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %2 = call { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc025a0dd828dc265E"(i64 %_11.0, i64 %_11.1)
  store { i64, i64 } %2, { i64, i64 }* %_10, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, i64 }* %_10 to i64*
  %_14 = load i64, i64* %3, align 8, !range !2
  switch i64 %_14, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %4 = bitcast { i64, i64 }* %_10 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue"*
  %5 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue"* %4, i32 0, i32 1
  %val = load i64, i64* %5, align 8
  %_18 = sub i64 %self.1, 1
; call core::num::<impl usize>::checked_add
  %6 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h0d90790d1c3b3aa6E"(i64 %val, i64 %_18)
  %_8.0 = extractvalue { i64, i64 } %6, 0
  %_8.1 = extractvalue { i64, i64 } %6, 1
  br label %bb7

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  call void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17ha9d248b7702e2ef0E"(%"core::option::Option<(core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::option::Option<(core::alloc::layout::Layout, usize)>") dereferenceable(24) %0)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb20

bb20:                                             ; preds = %bb12, %bb6
  br label %bb21

bb7:                                              ; preds = %bb3
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %7 = call { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc025a0dd828dc265E"(i64 %_8.0, i64 %_8.1)
  store { i64, i64 } %7, { i64, i64 }* %_7, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  %8 = bitcast { i64, i64 }* %_7 to i64*
  %_20 = load i64, i64* %8, align 8, !range !2
  switch i64 %_20, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ]

bb10:                                             ; preds = %bb8
  unreachable

bb9:                                              ; preds = %bb8
  %9 = bitcast { i64, i64 }* %_7 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue"*
  %10 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue"* %9, i32 0, i32 1
  %val1 = load i64, i64* %10, align 8
  %_25 = sub i64 %self.1, 1
  %_24 = xor i64 %_25, -1
  %ctrl_offset = and i64 %val1, %_24
  %_31 = add i64 %buckets, 16
; call core::num::<impl usize>::checked_add
  %11 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h0d90790d1c3b3aa6E"(i64 %ctrl_offset, i64 %_31)
  %_29.0 = extractvalue { i64, i64 } %11, 0
  %_29.1 = extractvalue { i64, i64 } %11, 1
  br label %bb13

bb11:                                             ; preds = %bb8
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  call void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17ha9d248b7702e2ef0E"(%"core::option::Option<(core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::option::Option<(core::alloc::layout::Layout, usize)>") dereferenceable(24) %0)
  br label %bb12

bb12:                                             ; preds = %bb11
  br label %bb20

bb21:                                             ; preds = %bb18, %bb20
  br label %bb22

bb13:                                             ; preds = %bb9
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %12 = call { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc025a0dd828dc265E"(i64 %_29.0, i64 %_29.1)
  store { i64, i64 } %12, { i64, i64 }* %_28, align 8
  br label %bb14

bb14:                                             ; preds = %bb13
  %13 = bitcast { i64, i64 }* %_28 to i64*
  %_33 = load i64, i64* %13, align 8, !range !2
  switch i64 %_33, label %bb16 [
    i64 0, label %bb15
    i64 1, label %bb17
  ]

bb16:                                             ; preds = %bb14
  unreachable

bb15:                                             ; preds = %bb14
  %14 = bitcast { i64, i64 }* %_28 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue"*
  %15 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue"* %14, i32 0, i32 1
  %val2 = load i64, i64* %15, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %16 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h34d7a516db3891b9E(i64 %val2, i64 %self.1)
  %_38.0 = extractvalue { i64, i64 } %16, 0
  %_38.1 = extractvalue { i64, i64 } %16, 1
  br label %bb19

bb17:                                             ; preds = %bb14
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  call void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17ha9d248b7702e2ef0E"(%"core::option::Option<(core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::option::Option<(core::alloc::layout::Layout, usize)>") dereferenceable(24) %0)
  br label %bb18

bb18:                                             ; preds = %bb17
  br label %bb21

bb22:                                             ; preds = %bb19, %bb21
  ret void

bb19:                                             ; preds = %bb15
  %17 = bitcast { { i64, i64 }, i64 }* %_37 to { i64, i64 }*
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  store i64 %_38.0, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  store i64 %_38.1, i64* %19, align 8
  %20 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_37, i32 0, i32 1
  store i64 %ctrl_offset, i64* %20, align 8
  %21 = bitcast %"core::option::Option<(core::alloc::layout::Layout, usize)>"* %0 to %"core::option::Option<(core::alloc::layout::Layout, usize)>::Some"*
  %22 = bitcast %"core::option::Option<(core::alloc::layout::Layout, usize)>::Some"* %21 to { { i64, i64 }, i64 }*
  %23 = bitcast { { i64, i64 }, i64 }* %22 to i8*
  %24 = bitcast { { i64, i64 }, i64 }* %_37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false)
  br label %bb22
}

; hashbrown::raw::TableLayout::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN9hashbrown3raw11TableLayout3new17h5220c8d76c678e60E() unnamed_addr #1 {
start:
  %layout = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
; call core::alloc::layout::Layout::new
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17hb9ec08469874f4f4E()
  store { i64, i64 } %1, { i64, i64 }* %layout, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h29314a3dd2f39b14E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::alloc::layout::Layout::align
  %_5 = call i64 @_ZN4core5alloc6layout6Layout5align17h3a06a07a4e9354b3E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::cmp::Ord::max
  %_4 = call i64 @_ZN4core3cmp3Ord3max17hf22febd5e2cfbeedE(i64 %_5, i64 16)
  br label %bb4

bb4:                                              ; preds = %bb3
  %2 = bitcast { i64, i64 }* %0 to i64*
  store i64 %_2, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_4, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; hashbrown::raw::Bucket<T>::from_base_index
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$15from_base_index17h7f502eaea3f5f752E"(i64* nonnull %base, i64 %index) unnamed_addr #0 {
start:
  %ptr = alloca { i64, i32 }*, align 8
  %0 = alloca i64*, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 16, 0
  br i1 %1, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %_5 = add i64 %index, 1
  %2 = inttoptr i64 %_5 to { i64, i32 }*
  store { i64, i32 }* %2, { i64, i32 }** %ptr, align 8
  br label %bb6

bb3:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_7 = call { i64, i32 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfe45183e9a9f4942E"(i64* nonnull %base)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::ptr::mut_ptr::<impl *mut T>::sub
  %3 = call { i64, i32 }* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h997a0b8798986204E"({ i64, i32 }* %_7, i64 %index)
  store { i64, i32 }* %3, { i64, i32 }** %ptr, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb2, %bb5
  %_11 = load { i64, i32 }*, { i64, i32 }** %ptr, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_10 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h51554824ecc99032E"({ i64, i32 }* %_11)
  br label %bb7

bb7:                                              ; preds = %bb6
  store i64* %_10, i64** %0, align 8
  %4 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %4
}

; hashbrown::raw::Bucket<T>::copy_from_nonoverlapping
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw15Bucket$LT$T$GT$24copy_from_nonoverlapping17h0e7e791af14b3ecdE"(i64** align 8 dereferenceable(8) %self, i64** align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
; call hashbrown::raw::Bucket<T>::as_ptr
  %_4 = call { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_ptr17h0f0d79d776ce0991E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call hashbrown::raw::Bucket<T>::as_ptr
  %_7 = call { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_ptr17h0f0d79d776ce0991E"(i64** align 8 dereferenceable(8) %other)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hfed4ffca4e9c849cE({ i64, i32 }* %_7, { i64, i32 }* %_4, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; hashbrown::raw::Bucket<T>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw15Bucket$LT$T$GT$4drop17h155fbbcfcba198cdE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
; call hashbrown::raw::Bucket<T>::as_ptr
  %_3 = call { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_ptr17h0f0d79d776ce0991E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; hashbrown::raw::Bucket<T>::write
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw15Bucket$LT$T$GT$5write17h0a49e2b99300886bE"(i64** align 8 dereferenceable(8) %self, i64 %val.0, i32 %val.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke hashbrown::raw::Bucket<T>::as_ptr
  %_4 = invoke { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_ptr17h0f0d79d776ce0991E"(i64** align 8 dereferenceable(8) %self)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hde134d7063bc0725E({ i64, i32 }* %_4, i64 %val.0, i32 %val.1)
          to label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17h232336d2d1d634aeE.exit" unwind label %cleanup

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17h232336d2d1d634aeE.exit": ; preds = %bb1
  br label %bb2

bb5:                                              ; preds = %cleanup
  %1 = load i8, i8* %_7, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb5

bb2:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17h232336d2d1d634aeE.exit"
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb4:                                              ; preds = %bb5
  br label %bb3
}

; hashbrown::raw::Bucket<T>::as_mut
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(16) { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_mut17he74a600b30738171E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
; call hashbrown::raw::Bucket<T>::as_ptr
  %_4 = call { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_ptr17h0f0d79d776ce0991E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret { i64, i32 }* %_4
}

; hashbrown::raw::Bucket<T>::as_ptr
; Function Attrs: nonlazybind uwtable
define { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_ptr17h0f0d79d776ce0991E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = alloca { i64, i32 }*, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 16, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  br label %bb3

bb4:                                              ; preds = %bb1
  %_5 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call { i64, i32 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfe45183e9a9f4942E"(i64* nonnull %_5)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::ptr::mut_ptr::<impl *mut T>::sub
  %2 = call { i64, i32 }* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h997a0b8798986204E"({ i64, i32 }* %_4, i64 1)
  store { i64, i32 }* %2, { i64, i32 }** %0, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb3, %bb6
  %3 = load { i64, i32 }*, { i64, i32 }** %0, align 8
  ret { i64, i32 }* %3

bb3:                                              ; preds = %bb2
  %4 = inttoptr i64 8 to { i64, i32 }*
  store { i64, i32 }* %4, { i64, i32 }** %0, align 8
  br label %bb7
}

; hashbrown::raw::Bucket<T>::as_ref
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(16) { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_ref17h1e6b15952907d88cE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
; call hashbrown::raw::Bucket<T>::as_ptr
  %_2 = call { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_ptr17h0f0d79d776ce0991E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret { i64, i32 }* %_2
}

; hashbrown::raw::Bucket<T>::next_n
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6next_n17h027e13cc28ecb207E"(i64** align 8 dereferenceable(8) %self, i64 %offset) unnamed_addr #0 {
start:
  %ptr = alloca { i64, i32 }*, align 8
  %0 = alloca i64*, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 16, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %_8 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_7 = call { i64, i32 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfe45183e9a9f4942E"(i64* nonnull %_8)
  br label %bb3

bb4:                                              ; preds = %bb1
  %_11 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_10 = call { i64, i32 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfe45183e9a9f4942E"(i64* nonnull %_11)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::ptr::mut_ptr::<impl *mut T>::sub
  %2 = call { i64, i32 }* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h997a0b8798986204E"({ i64, i32 }* %_10, i64 %offset)
  store { i64, i32 }* %2, { i64, i32 }** %ptr, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb3, %bb6
  %_14 = load { i64, i32 }*, { i64, i32 }** %ptr, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h51554824ecc99032E"({ i64, i32 }* %_14)
  br label %bb8

bb3:                                              ; preds = %bb2
  %_6 = ptrtoint { i64, i32 }* %_7 to i64
  %_5 = add i64 %_6, %offset
  %3 = inttoptr i64 %_5 to { i64, i32 }*
  store { i64, i32 }* %3, { i64, i32 }** %ptr, align 8
  br label %bb7

bb8:                                              ; preds = %bb7
  store i64* %_13, i64** %0, align 8
  %4 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %4
}

; hashbrown::raw::special_is_empty
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN9hashbrown3raw16special_is_empty17h390eb13ec21cdd2eE(i8 %ctrl) unnamed_addr #1 {
start:
  %_2 = and i8 %ctrl, 1
  %0 = icmp ne i8 %_2, 0
  ret i1 %0
}

; hashbrown::raw::RawTable<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw17RawTable$LT$T$GT$3new17h91bc9dcde66b10dcE"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>") dereferenceable(32) %0) unnamed_addr #0 {
start:
  %_1 = alloca %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", align 8
; call hashbrown::raw::RawTableInner<A>::new_in
  call void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$6new_in17h6c06c74647d69a30E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* noalias nocapture sret(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>") dereferenceable(32) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %0 to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
  %2 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %1 to i8*
  %3 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 32, i1 false)
  ret void
}

; hashbrown::raw::capacity_to_buckets
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN9hashbrown3raw19capacity_to_buckets17h2429ffe38ed4df92E(i64 %cap) unnamed_addr #1 {
start:
  %_12 = alloca { i64, i64 }, align 8
  %_7 = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  %_5 = icmp ult i64 %cap, 8
  br i1 %_5, label %bb1, label %bb5

bb5:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h16b05a09bfdc27b1E"(i64 %cap, i64 8)
  %_13.0 = extractvalue { i64, i64 } %1, 0
  %_13.1 = extractvalue { i64, i64 } %1, 1
  br label %bb6

bb1:                                              ; preds = %start
  %_8 = icmp ult i64 %cap, 4
  br i1 %_8, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  store i64 8, i64* %_7, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  store i64 4, i64* %_7, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %2, i32 0, i32 1
  %4 = load i64, i64* %_7, align 8
  store i64 %4, i64* %3, align 8
  %5 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %5, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11, %bb4
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8, !range !2
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i64, i64 } undef, i64 %7, 0
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1
  ret { i64, i64 } %11

bb6:                                              ; preds = %bb5
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %12 = call { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc025a0dd828dc265E"(i64 %_13.0, i64 %_13.1)
  store { i64, i64 } %12, { i64, i64 }* %_12, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  %13 = bitcast { i64, i64 }* %_12 to i64*
  %_15 = load i64, i64* %13, align 8, !range !2
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
  %14 = bitcast { i64, i64 }* %_12 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue"*
  %15 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>::Continue"* %14, i32 0, i32 1
  %val = load i64, i64* %15, align 8
  %adjusted_cap = udiv i64 %val, 7
; call core::num::<impl usize>::next_power_of_two
  %_19 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17ha90e5d4f46918584E"(i64 %adjusted_cap)
  br label %bb12

bb10:                                             ; preds = %bb7
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %16 = call { i64, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h884e82a7e1c596b9E"()
  store { i64, i64 } %16, { i64, i64 }* %0, align 8
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb13

bb12:                                             ; preds = %bb8
  %17 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %18 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %17, i32 0, i32 1
  store i64 %_19, i64* %18, align 8
  %19 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %19, align 8
  br label %bb13
}

; hashbrown::raw::RawIterRange<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw21RawIterRange$LT$T$GT$3new17h10faf0b717efc083E"(%"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>") dereferenceable(32) %0, i8* %ctrl, i64* nonnull %data, i64 %len) unnamed_addr #0 {
start:
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %_15 = alloca <2 x i64>, align 16
  %3 = getelementptr inbounds i8, i8* %ctrl, i64 %len
  store i8* %3, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call hashbrown::raw::sse2::Group::load_aligned
  call void @_ZN9hashbrown3raw4sse25Group12load_aligned17h6724fa50aad4eab0E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %_15, i8* %ctrl)
  br label %bb2

bb2:                                              ; preds = %bb1
; call hashbrown::raw::sse2::Group::match_full
  %current_group = call i16 @_ZN9hashbrown3raw4sse25Group10match_full17hfc92e3430a4fbb04E(<2 x i64>* align 16 dereferenceable(16) %_15)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = getelementptr inbounds i8, i8* %ctrl, i64 16
  store i8* %5, i8** %1, align 8
  %6 = load i8*, i8** %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %0, i32 0, i32 3
  store i16 %current_group, i16* %7, align 8
  %8 = bitcast %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %0 to i64**
  store i64* %data, i64** %8, align 8
  %9 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %0, i32 0, i32 1
  store i8* %6, i8** %9, align 8
  %10 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %0, i32 0, i32 2
  store i8* %4, i8** %10, align 8
  ret void
}

; hashbrown::raw::RawTable<T,A>::free_buckets
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$12free_buckets17h148841c458dfc195E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
; call hashbrown::raw::TableLayout::new
  %0 = call { i64, i64 } @_ZN9hashbrown3raw11TableLayout3new17h5220c8d76c678e60E()
  %_3.0 = extractvalue { i64, i64 } %0, 0
  %_3.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call hashbrown::raw::RawTableInner<A>::free_buckets
  call void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$12free_buckets17hbbfe9b6a3eede6a4E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_2, i64 %_3.0, i64 %_3.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; hashbrown::raw::RawTable<T,A>::drop_elements
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$13drop_elements17hba692fec06c52ea1E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %item = alloca i64*, align 8
  %_12 = alloca i64*, align 8
  %iter = alloca %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>", align 8
  %_8 = alloca %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>", align 8
  %_7 = alloca %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>", align 8
  %_2 = alloca i8, align 1
; call core::mem::needs_drop
  %_3 = call zeroext i1 @_ZN4core3mem10needs_drop17h67b88efeaa074302E()
  br label %bb4

bb4:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %bb4
  store i8 0, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
; call hashbrown::raw::RawTable<T,A>::len
  %_5 = call i64 @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$3len17h47a91aebcd06a971E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self)
  br label %bb5

bb5:                                              ; preds = %bb2
  %_4 = icmp ne i64 %_5, 0
  %0 = zext i1 %_4 to i8
  store i8 %0, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb5
  %1 = load i8, i8* %_2, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb6, label %bb15

bb15:                                             ; preds = %bb11, %bb3
  ret void

bb6:                                              ; preds = %bb3
; call hashbrown::raw::RawTable<T,A>::iter
  call void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$4iter17hc2fa8c407cbb1591E"(%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>") dereferenceable(40) %_8, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self)
  br label %bb7

bb7:                                              ; preds = %bb6
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hce38a5e45bd29961E"(%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>") dereferenceable(40) %_7, %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* noalias nocapture dereferenceable(40) %_8)
  br label %bb8

bb8:                                              ; preds = %bb7
  %3 = bitcast %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* %iter to i8*
  %4 = bitcast %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  br label %bb9

bb9:                                              ; preds = %bb14, %bb8
; call <hashbrown::raw::RawIter<T> as core::iter::traits::iterator::Iterator>::next
  %5 = call i64* @"_ZN91_$LT$hashbrown..raw..RawIter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h53a968b77d839570E"(%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(40) %iter)
  store i64* %5, i64** %_12, align 8
  br label %bb10

bb10:                                             ; preds = %bb9
  %6 = bitcast i64** %_12 to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_15 = select i1 %8, i64 0, i64 1
  switch i64 %_15, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb11:                                             ; preds = %bb10
  br label %bb15

bb13:                                             ; preds = %bb10
  %val = load i64*, i64** %_12, align 8, !nonnull !3
  store i64* %val, i64** %item, align 8
; call hashbrown::raw::Bucket<T>::drop
  call void @"_ZN9hashbrown3raw15Bucket$LT$T$GT$4drop17h155fbbcfcba198cdE"(i64** align 8 dereferenceable(8) %item)
  br label %bb14

bb14:                                             ; preds = %bb13
  br label %bb9
}

; hashbrown::raw::RawTable<T,A>::insert_no_grow
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14insert_no_grow17haea647a85fce4151E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self, i64 %hash, i64 %value.0, i32 %value.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  %bucket = alloca i64*, align 8
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
  %_7 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
; invoke hashbrown::raw::RawTableInner<A>::prepare_insert_slot
  %1 = invoke { i64, i8 } @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$19prepare_insert_slot17hfd34c05edf50be37E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_7, i64 %hash)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_6.0 = extractvalue { i64, i8 } %1, 0
  %_6.1 = extractvalue { i64, i8 } %1, 1
  %_9 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
; invoke hashbrown::raw::RawTableInner<A>::bucket
  %2 = invoke nonnull i64* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$6bucket17hff967bc11fe408a2E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_9, i64 %_6.0)
          to label %bb2 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %3 = load i8, i8* %_17, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb6, label %bb5

cleanup:                                          ; preds = %bb3, %bb2, %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  store i64* %2, i64** %bucket, align 8
; invoke hashbrown::raw::special_is_empty
  %_12 = invoke zeroext i1 @_ZN9hashbrown3raw16special_is_empty17h390eb13ec21cdd2eE(i8 %_6.1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %10 = icmp ule i1 %_12, true
  call void @llvm.assume(i1 %10)
  %_11 = zext i1 %_12 to i64
  %11 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
  %12 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %11, i32 0, i32 3
  %13 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
  %14 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %13, i32 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %_11
  store i64 %16, i64* %12, align 8
  store i8 0, i8* %_17, align 1
; invoke hashbrown::raw::Bucket<T>::write
  invoke void @"_ZN9hashbrown3raw15Bucket$LT$T$GT$5write17h0a49e2b99300886bE"(i64** align 8 dereferenceable(8) %bucket, i64 %value.0, i32 %value.1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %17 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
  %18 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %17, i32 0, i32 4
  %19 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
  %20 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %19, i32 0, i32 4
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %18, align 8
  %23 = load i64*, i64** %bucket, align 8, !nonnull !3
  ret i64* %23

bb5:                                              ; preds = %bb6, %bb7
  %24 = bitcast { i8*, i32 }* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb6:                                              ; preds = %bb7
  br label %bb5
}

; hashbrown::raw::RawTable<T,A>::reserve_rehash
; Function Attrs: cold noinline nonlazybind uwtable
define void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h7628c1c997740dbfE"(%"core::result::Result<(), hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), hashbrown::TryReserveError>") dereferenceable(24) %0, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self, i64 %additional, i64* align 8 dereferenceable(16) %hasher, i1 zeroext %fallibility) unnamed_addr #9 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_29 = alloca i8, align 1
  %_6 = alloca { i64, i64 }, align 8
  store i8 0, i8* %_29, align 1
  store i8 1, i8* %_29, align 1
  %2 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
  %3 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %2, i32 0, i32 4
  %_7 = load i64, i64* %3, align 8
; invoke core::num::<impl usize>::checked_add
  %4 = invoke { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h0d90790d1c3b3aa6E"(i64 %_7, i64 %additional)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store { i64, i64 } %4, { i64, i64 }* %_6, align 8
  %5 = bitcast { i64, i64 }* %_6 to i64*
  %_9 = load i64, i64* %5, align 8, !range !2
  switch i64 %_9, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb16:                                             ; preds = %cleanup
  %6 = load i8, i8* %_29, align 1, !range !4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb15, label %bb14

cleanup:                                          ; preds = %bb2, %bb10, %bb9, %bb7, %bb4, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb16

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
; invoke hashbrown::raw::Fallibility::capacity_overflow
  %13 = invoke { i64, i64 } @_ZN9hashbrown3raw11Fallibility17capacity_overflow17ha2b11c71af18eee4E(i1 zeroext %fallibility)
          to label %bb5 unwind label %cleanup

bb4:                                              ; preds = %bb1
  %14 = bitcast { i64, i64 }* %_6 to %"core::option::Option<usize>::Some"*
  %15 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %14, i32 0, i32 1
  %new_items = load i64, i64* %15, align 8
  %16 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
  %17 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %16 to i64*
  %_14 = load i64, i64* %17, align 8
; invoke hashbrown::raw::bucket_mask_to_capacity
  %full_capacity = invoke i64 @_ZN9hashbrown3raw23bucket_mask_to_capacity17hab0162f4f927bdf6E(i64 %_14)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb4
  %_17 = udiv i64 %full_capacity, 2
  %_15 = icmp ule i64 %new_items, %_17
  br i1 %_15, label %bb7, label %bb9

bb9:                                              ; preds = %bb6
  %_25 = add i64 %full_capacity, 1
; invoke core::cmp::Ord::max
  %_23 = invoke i64 @_ZN4core3cmp3Ord3max17hf22febd5e2cfbeedE(i64 %new_items, i64 %_25)
          to label %bb10 unwind label %cleanup

bb7:                                              ; preds = %bb6
  store i8 0, i8* %_29, align 1
; invoke hashbrown::raw::RawTable<T,A>::rehash_in_place
  invoke void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$15rehash_in_place17h67271ce53443cc54E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self, i64* align 8 dereferenceable(16) %hasher)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  %18 = bitcast %"core::result::Result<(), hashbrown::TryReserveError>"* %0 to i64*
  store i64 0, i64* %18, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb8
  br label %bb13

bb10:                                             ; preds = %bb9
  store i8 0, i8* %_29, align 1
; invoke hashbrown::raw::RawTable<T,A>::resize
  invoke void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$6resize17he184d3fbb35f3824E"(%"core::result::Result<(), hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), hashbrown::TryReserveError>") dereferenceable(24) %0, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self, i64 %_23, i64* align 8 dereferenceable(16) %hasher, i1 zeroext %fallibility)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10
  br label %bb12

bb13:                                             ; preds = %bb5, %bb12
  ret void

bb5:                                              ; preds = %bb2
  %_11.0 = extractvalue { i64, i64 } %13, 0
  %_11.1 = extractvalue { i64, i64 } %13, 1
  %19 = bitcast %"core::result::Result<(), hashbrown::TryReserveError>"* %0 to %"core::result::Result<(), hashbrown::TryReserveError>::Err"*
  %20 = getelementptr inbounds %"core::result::Result<(), hashbrown::TryReserveError>::Err", %"core::result::Result<(), hashbrown::TryReserveError>::Err"* %19, i32 0, i32 1
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0
  store i64 %_11.0, i64* %21, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1
  store i64 %_11.1, i64* %22, align 8
  %23 = bitcast %"core::result::Result<(), hashbrown::TryReserveError>"* %0 to i64*
  store i64 1, i64* %23, align 8
  br label %bb13

bb14:                                             ; preds = %bb15, %bb16
  %24 = bitcast { i8*, i32 }* %1 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb15:                                             ; preds = %bb16
  br label %bb14
}

; hashbrown::raw::RawTable<T,A>::rehash_in_place
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$15rehash_in_place17h67271ce53443cc54E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self, i64* align 8 dereferenceable(16) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i8, align 1
  %2 = alloca { i8*, i32 }, align 8
  %_108 = alloca i8, align 1
  %_89 = alloca i64*, align 8
  %_75 = alloca i64*, align 8
  %_37 = alloca i64*, align 8
  %item = alloca i64*, align 8
  %_16 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_9 = alloca { i64, i64 }, align 8
  %guard = alloca i64*, align 8
  %hasher = alloca i64*, align 8
  store i64* %0, i64** %hasher, align 8
  store i8 0, i8* %_108, align 1
  %_4 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
; invoke hashbrown::raw::RawTableInner<A>::prepare_rehash_in_place
  invoke void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$23prepare_rehash_in_place17h8c726773fe5d9c73E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_4)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_6 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
; invoke hashbrown::scopeguard::guard
  %3 = invoke align 8 dereferenceable(32) i64* @_ZN9hashbrown10scopeguard5guard17hb349118aa3612b4cE(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_6)
          to label %bb2 unwind label %cleanup

bb51:                                             ; preds = %bb53, %bb54, %cleanup
  br label %bb52

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb51

bb2:                                              ; preds = %bb1
  store i64* %3, i64** %guard, align 8
  store i8 1, i8* %_108, align 1
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
  %_12 = invoke align 8 dereferenceable(8) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39e3f7ce141d696cE"(i64** align 8 dereferenceable(8) %guard)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
  %_11 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %_12, align 8, !nonnull !3
; invoke hashbrown::raw::RawTableInner<A>::buckets
  %_10 = invoke i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$7buckets17hf9243f922cdc42b9E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_11)
          to label %bb4 unwind label %cleanup1

bb54:                                             ; preds = %cleanup1
  %9 = load i8, i8* %_108, align 1, !range !4
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb53, label %bb51

cleanup1:                                         ; preds = %bb48, %bb47, %bb46, %bb45, %bb8, %bb40, %bb39, %bb38, %bb37, %bb36, %bb34, %bb33, %bb32, %bb31, %bb30, %bb28, %bb27, %bb25, %bb24, %bb21, %bb20, %bb19, %bb18, %bb17, %bb16, %bb15, %bb14, %bb11, %bb10, %bb6, %bb4, %bb3, %bb2
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb54

bb4:                                              ; preds = %bb3
  %16 = bitcast { i64, i64 }* %_9 to i64*
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  store i64 %_10, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %22 = invoke { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1d4de25f3af36c17E"(i64 %19, i64 %21)
          to label %bb5 unwind label %cleanup1

bb5:                                              ; preds = %bb4
  %_8.0 = extractvalue { i64, i64 } %22, 0
  %_8.1 = extractvalue { i64, i64 } %22, 1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_8.0, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_8.1, i64* %24, align 8
  br label %bb6

bb6:                                              ; preds = %bb44, %bb5
; invoke core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %25 = invoke { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h0e85e17e0284a4dfE"({ i64, i64 }* align 8 dereferenceable(16) %iter)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
  store { i64, i64 } %25, { i64, i64 }* %_16, align 8
  %26 = bitcast { i64, i64 }* %_16 to i64*
  %_19 = load i64, i64* %26, align 8, !range !2
  switch i64 %_19, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
  %_99 = invoke align 8 dereferenceable(8) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39e3f7ce141d696cE"(i64** align 8 dereferenceable(8) %guard)
          to label %bb45 unwind label %cleanup1

bb10:                                             ; preds = %bb7
  %27 = bitcast { i64, i64 }* %_16 to %"core::option::Option<usize>::Some"*
  %28 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %27, i32 0, i32 1
  %val = load i64, i64* %28, align 8
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
  %_27 = invoke align 8 dereferenceable(8) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39e3f7ce141d696cE"(i64** align 8 dereferenceable(8) %guard)
          to label %bb11 unwind label %cleanup1

bb11:                                             ; preds = %bb10
  %_26 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %_27, align 8, !nonnull !3
; invoke hashbrown::raw::RawTableInner<A>::ctrl
  %_25 = invoke i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_26, i64 %val)
          to label %bb12 unwind label %cleanup1

bb12:                                             ; preds = %bb11
  %_24 = load i8, i8* %_25, align 1
  %_23 = icmp ne i8 %_24, -128
  br i1 %_23, label %bb43, label %bb13

bb13:                                             ; preds = %bb12
  br label %bb14

bb43:                                             ; preds = %bb12
  br label %bb44

bb44:                                             ; preds = %bb42, %bb43
  br label %bb6

bb14:                                             ; preds = %bb41, %bb13
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
  %_32 = invoke align 8 dereferenceable(8) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39e3f7ce141d696cE"(i64** align 8 dereferenceable(8) %guard)
          to label %bb15 unwind label %cleanup1

bb15:                                             ; preds = %bb14
  %_31 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %_32, align 8, !nonnull !3
; invoke hashbrown::raw::RawTableInner<A>::bucket
  %29 = invoke nonnull i64* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$6bucket17hff967bc11fe408a2E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_31, i64 %val)
          to label %bb16 unwind label %cleanup1

bb16:                                             ; preds = %bb15
  store i64* %29, i64** %item, align 8
; invoke hashbrown::raw::Bucket<T>::as_ref
  %_39 = invoke align 8 dereferenceable(16) { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_ref17h1e6b15952907d88cE"(i64** align 8 dereferenceable(8) %item)
          to label %bb17 unwind label %cleanup1

bb17:                                             ; preds = %bb16
  %30 = bitcast i64** %_37 to { i64, i32 }**
  store { i64, i32 }* %_39, { i64, i32 }** %30, align 8
  %31 = load i64*, i64** %_37, align 8, !nonnull !3
  %32 = bitcast i64* %31 to { i64, i32 }*
; invoke hashbrown::map::make_hasher::{{closure}}
  %hash = invoke i64 @"_ZN9hashbrown3map11make_hasher28_$u7b$$u7b$closure$u7d$$u7d$17h3dd65571d25f9ea6E"(i64** align 8 dereferenceable(8) %hasher, { i64, i32 }* align 8 dereferenceable(16) %32)
          to label %bb18 unwind label %cleanup1

bb18:                                             ; preds = %bb17
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
  %_43 = invoke align 8 dereferenceable(8) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39e3f7ce141d696cE"(i64** align 8 dereferenceable(8) %guard)
          to label %bb19 unwind label %cleanup1

bb19:                                             ; preds = %bb18
  %_42 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %_43, align 8, !nonnull !3
; invoke hashbrown::raw::RawTableInner<A>::find_insert_slot
  %new_i = invoke i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$16find_insert_slot17h19d816be4dba508eE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_42, i64 %hash)
          to label %bb20 unwind label %cleanup1

bb20:                                             ; preds = %bb19
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
  %_49 = invoke align 8 dereferenceable(8) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39e3f7ce141d696cE"(i64** align 8 dereferenceable(8) %guard)
          to label %bb21 unwind label %cleanup1

bb21:                                             ; preds = %bb20
  %_48 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %_49, align 8, !nonnull !3
; invoke hashbrown::raw::RawTableInner<A>::is_in_same_group
  %_47 = invoke zeroext i1 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$16is_in_same_group17h26f2d572c41c4126E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_48, i64 %val, i64 %new_i, i64 %hash)
          to label %bb22 unwind label %cleanup1

bb22:                                             ; preds = %bb21
  %33 = call i1 @llvm.expect.i1(i1 %_47, i1 true)
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %1, align 1
  %35 = load i8, i8* %1, align 1, !range !4
  %_46 = trunc i8 %35 to i1
  br label %bb23

bb23:                                             ; preds = %bb22
  br i1 %_46, label %bb24, label %bb27

bb27:                                             ; preds = %bb23
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
  %_62 = invoke align 8 dereferenceable(8) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39e3f7ce141d696cE"(i64** align 8 dereferenceable(8) %guard)
          to label %bb28 unwind label %cleanup1

bb24:                                             ; preds = %bb23
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
  %_56 = invoke align 8 dereferenceable(8) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39e3f7ce141d696cE"(i64** align 8 dereferenceable(8) %guard)
          to label %bb25 unwind label %cleanup1

bb25:                                             ; preds = %bb24
  %_55 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %_56, align 8, !nonnull !3
; invoke hashbrown::raw::RawTableInner<A>::set_ctrl_h2
  invoke void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$11set_ctrl_h217h17b439474cfce314E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_55, i64 %val, i64 %hash)
          to label %bb26 unwind label %cleanup1

bb26:                                             ; preds = %bb25
  br label %bb42

bb42:                                             ; preds = %bb35, %bb26
  br label %bb44

bb28:                                             ; preds = %bb27
  %_61 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %_62, align 8, !nonnull !3
; invoke hashbrown::raw::RawTableInner<A>::replace_ctrl_h2
  %prev_ctrl = invoke i8 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$15replace_ctrl_h217he5d1f25ee6b767b8E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_61, i64 %new_i, i64 %hash)
          to label %bb29 unwind label %cleanup1

bb29:                                             ; preds = %bb28
  %_66 = icmp eq i8 %prev_ctrl, -1
  br i1 %_66, label %bb30, label %bb36

bb36:                                             ; preds = %bb29
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
  %_91 = invoke align 8 dereferenceable(8) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39e3f7ce141d696cE"(i64** align 8 dereferenceable(8) %guard)
          to label %bb37 unwind label %cleanup1

bb30:                                             ; preds = %bb29
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
  %_70 = invoke align 8 dereferenceable(8) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39e3f7ce141d696cE"(i64** align 8 dereferenceable(8) %guard)
          to label %bb31 unwind label %cleanup1

bb31:                                             ; preds = %bb30
  %_69 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %_70, align 8, !nonnull !3
; invoke hashbrown::raw::RawTableInner<A>::set_ctrl
  invoke void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$8set_ctrl17h57dc60d9e18ce75cE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_69, i64 %val, i8 -1)
          to label %bb32 unwind label %cleanup1

bb32:                                             ; preds = %bb31
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
  %_77 = invoke align 8 dereferenceable(8) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39e3f7ce141d696cE"(i64** align 8 dereferenceable(8) %guard)
          to label %bb33 unwind label %cleanup1

bb33:                                             ; preds = %bb32
  %_76 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %_77, align 8, !nonnull !3
; invoke hashbrown::raw::RawTableInner<A>::bucket
  %36 = invoke nonnull i64* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$6bucket17hff967bc11fe408a2E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_76, i64 %new_i)
          to label %bb34 unwind label %cleanup1

bb34:                                             ; preds = %bb33
  store i64* %36, i64** %_75, align 8
; invoke hashbrown::raw::Bucket<T>::copy_from_nonoverlapping
  invoke void @"_ZN9hashbrown3raw15Bucket$LT$T$GT$24copy_from_nonoverlapping17h0e7e791af14b3ecdE"(i64** align 8 dereferenceable(8) %_75, i64** align 8 dereferenceable(8) %item)
          to label %bb35 unwind label %cleanup1

bb35:                                             ; preds = %bb34
  br label %bb42

bb37:                                             ; preds = %bb36
  %_90 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %_91, align 8, !nonnull !3
; invoke hashbrown::raw::RawTableInner<A>::bucket
  %37 = invoke nonnull i64* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$6bucket17hff967bc11fe408a2E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_90, i64 %new_i)
          to label %bb38 unwind label %cleanup1

bb38:                                             ; preds = %bb37
  store i64* %37, i64** %_89, align 8
; invoke hashbrown::raw::Bucket<T>::as_mut
  %_87 = invoke align 8 dereferenceable(16) { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_mut17he74a600b30738171E"(i64** align 8 dereferenceable(8) %_89)
          to label %bb39 unwind label %cleanup1

bb39:                                             ; preds = %bb38
; invoke hashbrown::raw::Bucket<T>::as_mut
  %_95 = invoke align 8 dereferenceable(16) { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_mut17he74a600b30738171E"(i64** align 8 dereferenceable(8) %item)
          to label %bb40 unwind label %cleanup1

bb40:                                             ; preds = %bb39
; invoke core::mem::swap
  invoke void @_ZN4core3mem4swap17h00dbed271550e9a2E({ i64, i32 }* align 8 dereferenceable(16) %_87, { i64, i32 }* align 8 dereferenceable(16) %_95)
          to label %bb41 unwind label %cleanup1

bb41:                                             ; preds = %bb40
  br label %bb14

bb45:                                             ; preds = %bb8
  %38 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %_99, align 8, !nonnull !3
  %39 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %38 to i64*
  %_98 = load i64, i64* %39, align 8
; invoke hashbrown::raw::bucket_mask_to_capacity
  %_97 = invoke i64 @_ZN9hashbrown3raw23bucket_mask_to_capacity17hab0162f4f927bdf6E(i64 %_98)
          to label %bb46 unwind label %cleanup1

bb46:                                             ; preds = %bb45
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
  %_102 = invoke align 8 dereferenceable(8) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39e3f7ce141d696cE"(i64** align 8 dereferenceable(8) %guard)
          to label %bb47 unwind label %cleanup1

bb47:                                             ; preds = %bb46
  %40 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %_102, align 8, !nonnull !3
  %41 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %40, i32 0, i32 4
  %_101 = load i64, i64* %41, align 8
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::DerefMut>::deref_mut
  %_104 = invoke align 8 dereferenceable(8) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** @"_ZN93_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h95b9fef3245ee437E"(i64** align 8 dereferenceable(8) %guard)
          to label %bb48 unwind label %cleanup1

bb48:                                             ; preds = %bb47
  %42 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %_104, align 8, !nonnull !3
  %43 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %42, i32 0, i32 3
  %44 = sub i64 %_97, %_101
  store i64 %44, i64* %43, align 8
  store i8 0, i8* %_108, align 1
  %_107 = load i64*, i64** %guard, align 8, !nonnull !3
; invoke core::mem::forget
  invoke void @_ZN4core3mem6forget17h79c7e443f1816bdfE(i64* align 8 dereferenceable(32) %_107)
          to label %bb49 unwind label %cleanup1

bb49:                                             ; preds = %bb48
  store i8 0, i8* %_108, align 1
  br label %bb50

bb53:                                             ; preds = %bb54
; call core::ptr::drop_in_place<hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner<alloc::alloc::Global>,hashbrown::raw::RawTable<(std::thread::ThreadId,i32)>::rehash_in_place<hashbrown::map::make_hasher<std::thread::ThreadId,std::thread::ThreadId,i32,std::collections::hash::map::RandomState>::{{closure}}>::{{closure}}>>
  call void @"_ZN4core3ptr413drop_in_place$LT$hashbrown..scopeguard..ScopeGuard$LT$$RF$mut$u20$hashbrown..raw..RawTableInner$LT$alloc..alloc..Global$GT$$C$hashbrown..raw..RawTable$LT$$LP$std..thread..ThreadId$C$i32$RP$$GT$..rehash_in_place$LT$hashbrown..map..make_hasher$LT$std..thread..ThreadId$C$std..thread..ThreadId$C$i32$C$std..collections..hash..map..RandomState$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h477a9b22261f61deE"(i64** %guard) #21
  br label %bb51

bb52:                                             ; preds = %bb51
  %45 = bitcast { i8*, i32 }* %2 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1
  resume { i8*, i32 } %50

bb50:                                             ; preds = %bb49
  ret void
}

; hashbrown::raw::RawTable<T,A>::rehash_in_place::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$15rehash_in_place28_$u7b$$u7b$closure$u7d$$u7d$17h457f0cd7246eff65E"(%"[closure@hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>::rehash_in_place<[closure@hashbrown::map::make_hasher<std::thread::ThreadId, std::thread::ThreadId, i32, std::collections::hash::map::RandomState>::{closure#0}]>::{closure#0}]"* nonnull align 1 %_1, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** align 8 dereferenceable(8) %self_) unnamed_addr #1 {
start:
  %_27 = alloca i64*, align 8
  %_10 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
; call core::mem::needs_drop
  %_3 = call zeroext i1 @_ZN4core3mem10needs_drop17h67b88efeaa074302E()
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb16

bb16:                                             ; preds = %bb7, %bb1
  %0 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %self_, align 8, !nonnull !3
  %1 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %0 to i64*
  %_31 = load i64, i64* %1, align 8
; call hashbrown::raw::bucket_mask_to_capacity
  %_30 = call i64 @_ZN9hashbrown3raw23bucket_mask_to_capacity17hab0162f4f927bdf6E(i64 %_31)
  br label %bb17

bb2:                                              ; preds = %bb1
  %_7 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %self_, align 8, !nonnull !3
; call hashbrown::raw::RawTableInner<A>::buckets
  %_6 = call i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$7buckets17hf9243f922cdc42b9E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = bitcast { i64, i64 }* %_5 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %_6, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %8 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1d4de25f3af36c17E"(i64 %5, i64 %7)
  %_4.0 = extractvalue { i64, i64 } %8, 0
  %_4.1 = extractvalue { i64, i64 } %8, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_4.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_4.1, i64* %10, align 8
  br label %bb5

bb5:                                              ; preds = %bb15, %bb4
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %11 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h0e85e17e0284a4dfE"({ i64, i64 }* align 8 dereferenceable(16) %iter)
  store { i64, i64 } %11, { i64, i64 }* %_10, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %12 = bitcast { i64, i64 }* %_10 to i64*
  %_13 = load i64, i64* %12, align 8, !range !2
  switch i64 %_13, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ]

bb8:                                              ; preds = %bb6
  unreachable

bb7:                                              ; preds = %bb6
  br label %bb16

bb9:                                              ; preds = %bb6
  %13 = bitcast { i64, i64 }* %_10 to %"core::option::Option<usize>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %13, i32 0, i32 1
  %val = load i64, i64* %14, align 8
  %_20 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %self_, align 8, !nonnull !3
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_19 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_20, i64 %val)
  br label %bb10

bb10:                                             ; preds = %bb9
  %_18 = load i8, i8* %_19, align 1
  %_17 = icmp eq i8 %_18, -128
  br i1 %_17, label %bb11, label %bb15

bb15:                                             ; preds = %bb14, %bb10
  br label %bb5

bb11:                                             ; preds = %bb10
  %_23 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %self_, align 8, !nonnull !3
; call hashbrown::raw::RawTableInner<A>::set_ctrl
  call void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$8set_ctrl17h57dc60d9e18ce75cE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_23, i64 %val, i8 -1)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_28 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %self_, align 8, !nonnull !3
; call hashbrown::raw::RawTableInner<A>::bucket
  %15 = call nonnull i64* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$6bucket17hff967bc11fe408a2E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_28, i64 %val)
  store i64* %15, i64** %_27, align 8
  br label %bb13

bb13:                                             ; preds = %bb12
; call hashbrown::raw::Bucket<T>::drop
  call void @"_ZN9hashbrown3raw15Bucket$LT$T$GT$4drop17h155fbbcfcba198cdE"(i64** align 8 dereferenceable(8) %_27)
  br label %bb14

bb14:                                             ; preds = %bb13
  %16 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %self_, align 8, !nonnull !3
  %17 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %16, i32 0, i32 4
  %18 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %self_, align 8, !nonnull !3
  %19 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %18, i32 0, i32 4
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, 1
  store i64 %21, i64* %17, align 8
  br label %bb15

bb17:                                             ; preds = %bb16
  %22 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %self_, align 8, !nonnull !3
  %23 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %22, i32 0, i32 4
  %_32 = load i64, i64* %23, align 8
  %24 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %self_, align 8, !nonnull !3
  %25 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %24, i32 0, i32 3
  %26 = sub i64 %_30, %_32
  store i64 %26, i64* %25, align 8
  ret void
}

; hashbrown::raw::RawTable<T,A>::len
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$3len17h47a91aebcd06a971E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
  %1 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %0, i32 0, i32 4
  %2 = load i64, i64* %1, align 8
  ret i64 %2
}

; hashbrown::raw::RawTable<T,A>::find
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$4find17h3132947f86499cc9E"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self, i64 %hash, i64* align 8 dereferenceable(8) %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i8, align 1
  %2 = alloca { i8*, i32 }, align 8
  %_22 = alloca i64*, align 8
  %bucket = alloca i64*, align 8
  %_10 = alloca i64*, align 8
  %iter = alloca %"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>", align 16
  %_5 = alloca %"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>", align 16
  %_4 = alloca %"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>", align 16
  %3 = alloca i64*, align 8
  %eq = alloca i64*, align 8
  store i64* %0, i64** %eq, align 8
; invoke hashbrown::raw::RawTable<T,A>::iter_hash
  invoke void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$9iter_hash17h607f092020623cebE"(%"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>") dereferenceable(48) %_5, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self, i64 %hash)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hcf7da22ab103d858E"(%"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>") dereferenceable(48) %_4, %"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* noalias nocapture dereferenceable(48) %_5)
          to label %bb2 unwind label %cleanup

bb14:                                             ; preds = %cleanup
  br label %bb15

cleanup:                                          ; preds = %bb8, %bb7, %bb3, %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb14

bb2:                                              ; preds = %bb1
  %9 = bitcast %"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* %iter to i8*
  %10 = bitcast %"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %9, i8* align 16 %10, i64 48, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb12, %bb2
; invoke <hashbrown::raw::RawIterHash<T,A> as core::iter::traits::iterator::Iterator>::next
  %11 = invoke i64* @"_ZN99_$LT$hashbrown..raw..RawIterHash$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0ea8c675c5f51546E"(%"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* align 16 dereferenceable(48) %iter)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  store i64* %11, i64** %_10, align 8
  %12 = bitcast i64** %_10 to {}**
  %13 = load {}*, {}** %12, align 8
  %14 = icmp eq {}* %13, null
  %_13 = select i1 %14, i64 0, i64 1
  switch i64 %_13, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %15 = bitcast i64** %3 to {}**
  store {}* null, {}** %15, align 8
  br label %bb13

bb7:                                              ; preds = %bb4
  %val = load i64*, i64** %_10, align 8, !nonnull !3
  store i64* %val, i64** %bucket, align 8
; invoke hashbrown::raw::Bucket<T>::as_ref
  %elm = invoke align 8 dereferenceable(16) { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_ref17h1e6b15952907d88cE"(i64** align 8 dereferenceable(8) %bucket)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  %16 = bitcast i64** %_22 to { i64, i32 }**
  store { i64, i32 }* %elm, { i64, i32 }** %16, align 8
  %17 = load i64*, i64** %_22, align 8, !nonnull !3
  %18 = bitcast i64* %17 to { i64, i32 }*
; invoke hashbrown::rustc_entry::<impl hashbrown::map::HashMap<K,V,S,A>>::rustc_entry::{{closure}}
  %_20 = invoke zeroext i1 @"_ZN9hashbrown11rustc_entry62_$LT$impl$u20$hashbrown..map..HashMap$LT$K$C$V$C$S$C$A$GT$$GT$11rustc_entry28_$u7b$$u7b$closure$u7d$$u7d$17h14b8178a76221488E"(i64** align 8 dereferenceable(8) %eq, { i64, i32 }* align 8 dereferenceable(16) %18)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %19 = call i1 @llvm.expect.i1(i1 %_20, i1 true)
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %1, align 1
  %21 = load i8, i8* %1, align 1, !range !4
  %_19 = trunc i8 %21 to i1
  br label %bb10

bb15:                                             ; preds = %bb14
  %22 = bitcast { i8*, i32 }* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27

bb10:                                             ; preds = %bb9
  br i1 %_19, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  br label %bb3

bb11:                                             ; preds = %bb10
  %_24 = load i64*, i64** %bucket, align 8, !nonnull !3
  store i64* %_24, i64** %3, align 8
  br label %bb13

bb13:                                             ; preds = %bb5, %bb11
  %28 = load i64*, i64** %3, align 8
  ret i64* %28
}

; hashbrown::raw::RawTable<T,A>::iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$4iter17hc2fa8c407cbb1591E"(%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>") dereferenceable(40) %0, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_5 = alloca %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>", align 8
; call hashbrown::raw::RawTable<T,A>::data_end
  %_3 = call nonnull i64* @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$8data_end17h0746c3774ef11a0dE"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call hashbrown::raw::Bucket<T>::from_base_index
  %data = call nonnull i64* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$15from_base_index17h7f502eaea3f5f752E"(i64* nonnull %_3, i64 0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
  %2 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %1, i32 0, i32 2
  %_8 = load i8*, i8** %2, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_7 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %_8)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_11 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
; call hashbrown::raw::RawTableInner<A>::buckets
  %_10 = call i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$7buckets17hf9243f922cdc42b9E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_11)
  br label %bb4

bb4:                                              ; preds = %bb3
; call hashbrown::raw::RawIterRange<T>::new
  call void @"_ZN9hashbrown3raw21RawIterRange$LT$T$GT$3new17h10faf0b717efc083E"(%"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>") dereferenceable(32) %_5, i8* %_7, i64* nonnull %data, i64 %_10)
  br label %bb5

bb5:                                              ; preds = %bb4
  %3 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
  %4 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %3, i32 0, i32 4
  %_12 = load i64, i64* %4, align 8
  %5 = bitcast %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* %0 to %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"*
  %6 = bitcast %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %5 to i8*
  %7 = bitcast %"hashbrown::raw::RawIterRange<(std::thread::ThreadId, i32)>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 32, i1 false)
  %8 = getelementptr inbounds %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>", %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* %0, i32 0, i32 1
  store i64 %_12, i64* %8, align 8
  ret void
}

; hashbrown::raw::RawTable<T,A>::resize
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$6resize17he184d3fbb35f3824E"(%"core::result::Result<(), hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), hashbrown::TryReserveError>") dereferenceable(24) %0, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self, i64 %capacity, i64* align 8 dereferenceable(16) %1, i1 zeroext %fallibility) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_42 = alloca i64*, align 8
  %_30 = alloca i64*, align 8
  %item = alloca i64*, align 8
  %_21 = alloca i64*, align 8
  %iter = alloca %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>", align 8
  %_17 = alloca %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>", align 8
  %_16 = alloca %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>", align 8
  %val = alloca %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>", align 8
  %_7 = alloca %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>", align 8
  %_6 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>", align 8
  %new_table = alloca %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>", align 8
  %hasher = alloca i64*, align 8
  store i64* %1, i64** %hasher, align 8
  %_8 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
; invoke hashbrown::raw::TableLayout::new
  %3 = invoke { i64, i64 } @_ZN9hashbrown3raw11TableLayout3new17h5220c8d76c678e60E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_9.0 = extractvalue { i64, i64 } %3, 0
  %_9.1 = extractvalue { i64, i64 } %3, 1
; invoke hashbrown::raw::RawTableInner<A>::prepare_resize
  invoke void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$14prepare_resize17h658bb008b95646d7E"(%"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>") dereferenceable(56) %_7, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_8, i64 %_9.0, i64 %_9.1, i64 %capacity, i1 zeroext %fallibility)
          to label %bb2 unwind label %cleanup

bb27:                                             ; preds = %bb26, %bb29, %cleanup
  br label %bb28

cleanup:                                          ; preds = %bb23, %bb2, %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb27

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  invoke void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h15dda9e7ed4a8a8eE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>") dereferenceable(56) %_6, %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>"* noalias nocapture dereferenceable(56) %_7)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>"* %_6 to i64*
  %_12 = load i64, i64* %9, align 8, !range !2
  switch i64 %_12, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>"* %_6 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>::Continue"*
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>::Continue"* %10, i32 0, i32 1
  %12 = bitcast %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %val to i8*
  %13 = bitcast %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 48, i1 false)
  %14 = bitcast %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %new_table to i8*
  %15 = bitcast %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 48, i1 false)
; invoke hashbrown::raw::RawTable<T,A>::iter
  invoke void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$4iter17hc2fa8c407cbb1591E"(%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>") dereferenceable(40) %_17, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self)
          to label %bb8 unwind label %cleanup2

bb6:                                              ; preds = %bb3
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>"* %_6 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>::Break"*
  %17 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>>::Break"* %16, i32 0, i32 1
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  %residual.0 = load i64, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  %residual.1 = load i64, i64* %19, align 8
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  invoke void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc980a609c0a9ed43E"(%"core::result::Result<(), hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), hashbrown::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
  br label %bb25

bb29:                                             ; preds = %cleanup1
  br label %bb27

cleanup1:                                         ; preds = %bb6
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  %22 = extractvalue { i8*, i32 } %20, 1
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  br label %bb29

bb25:                                             ; preds = %bb24, %bb7
  ret void

bb8:                                              ; preds = %bb4
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hce38a5e45bd29961E"(%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>") dereferenceable(40) %_16, %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* noalias nocapture dereferenceable(40) %_17)
          to label %bb9 unwind label %cleanup2

bb26:                                             ; preds = %cleanup2
; call core::ptr::drop_in_place<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>,hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{{closure}}>>
  call void @"_ZN4core3ptr224drop_in_place$LT$hashbrown..scopeguard..ScopeGuard$LT$hashbrown..raw..RawTableInner$LT$alloc..alloc..Global$GT$$C$hashbrown..raw..RawTableInner$LT$alloc..alloc..Global$GT$..prepare_resize..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h66e4ec4bbbb0e6ceE"(%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %new_table) #21
  br label %bb27

cleanup2:                                         ; preds = %bb22, %bb12, %bb20, %bb19, %bb18, %bb17, %bb16, %bb15, %bb14, %bb10, %bb8, %bb4
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb26

bb9:                                              ; preds = %bb8
  %30 = bitcast %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* %iter to i8*
  %31 = bitcast %"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* %_16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 40, i1 false)
  br label %bb10

bb10:                                             ; preds = %bb21, %bb9
; invoke <hashbrown::raw::RawIter<T> as core::iter::traits::iterator::Iterator>::next
  %32 = invoke i64* @"_ZN91_$LT$hashbrown..raw..RawIter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h53a968b77d839570E"(%"hashbrown::raw::RawIter<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(40) %iter)
          to label %bb11 unwind label %cleanup2

bb11:                                             ; preds = %bb10
  store i64* %32, i64** %_21, align 8
  %33 = bitcast i64** %_21 to {}**
  %34 = load {}*, {}** %33, align 8
  %35 = icmp eq {}* %34, null
  %_24 = select i1 %35, i64 0, i64 1
  switch i64 %_24, label %bb13 [
    i64 0, label %bb12
    i64 1, label %bb14
  ]

bb13:                                             ; preds = %bb11
  unreachable

bb12:                                             ; preds = %bb11
  %_51 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::DerefMut>::deref_mut
  %_53 = invoke align 8 dereferenceable(32) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* @"_ZN93_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h748b5387e6eb0a5cE"(%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* align 8 dereferenceable(48) %new_table)
          to label %bb22 unwind label %cleanup2

bb14:                                             ; preds = %bb11
  %val3 = load i64*, i64** %_21, align 8, !nonnull !3
  store i64* %val3, i64** %item, align 8
; invoke hashbrown::raw::Bucket<T>::as_ref
  %_32 = invoke align 8 dereferenceable(16) { i64, i32 }* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6as_ref17h1e6b15952907d88cE"(i64** align 8 dereferenceable(8) %item)
          to label %bb15 unwind label %cleanup2

bb15:                                             ; preds = %bb14
  %36 = bitcast i64** %_30 to { i64, i32 }**
  store { i64, i32 }* %_32, { i64, i32 }** %36, align 8
  %37 = load i64*, i64** %_30, align 8, !nonnull !3
  %38 = bitcast i64* %37 to { i64, i32 }*
; invoke hashbrown::map::make_hasher::{{closure}}
  %hash = invoke i64 @"_ZN9hashbrown3map11make_hasher28_$u7b$$u7b$closure$u7d$$u7d$17h3dd65571d25f9ea6E"(i64** align 8 dereferenceable(8) %hasher, { i64, i32 }* align 8 dereferenceable(16) %38)
          to label %bb16 unwind label %cleanup2

bb16:                                             ; preds = %bb15
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
  %_37 = invoke align 8 dereferenceable(32) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5bfabdf5aedb4f99E"(%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* align 8 dereferenceable(48) %new_table)
          to label %bb17 unwind label %cleanup2

bb17:                                             ; preds = %bb16
; invoke hashbrown::raw::RawTableInner<A>::prepare_insert_slot
  %39 = invoke { i64, i8 } @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$19prepare_insert_slot17hfd34c05edf50be37E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_37, i64 %hash)
          to label %bb18 unwind label %cleanup2

bb18:                                             ; preds = %bb17
  %_35.0 = extractvalue { i64, i8 } %39, 0
  %_35.1 = extractvalue { i64, i8 } %39, 1
; invoke <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::deref::Deref>::deref
  %_44 = invoke align 8 dereferenceable(32) %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* @"_ZN90_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5bfabdf5aedb4f99E"(%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* align 8 dereferenceable(48) %new_table)
          to label %bb19 unwind label %cleanup2

bb19:                                             ; preds = %bb18
; invoke hashbrown::raw::RawTableInner<A>::bucket
  %40 = invoke nonnull i64* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$6bucket17hff967bc11fe408a2E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_44, i64 %_35.0)
          to label %bb20 unwind label %cleanup2

bb20:                                             ; preds = %bb19
  store i64* %40, i64** %_42, align 8
; invoke hashbrown::raw::Bucket<T>::copy_from_nonoverlapping
  invoke void @"_ZN9hashbrown3raw15Bucket$LT$T$GT$24copy_from_nonoverlapping17h0e7e791af14b3ecdE"(i64** align 8 dereferenceable(8) %_42, i64** align 8 dereferenceable(8) %item)
          to label %bb21 unwind label %cleanup2

bb21:                                             ; preds = %bb20
  br label %bb10

bb22:                                             ; preds = %bb12
; invoke core::mem::swap
  invoke void @_ZN4core3mem4swap17hc0cce7c9a45e3d5dE(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_51, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_53)
          to label %bb23 unwind label %cleanup2

bb23:                                             ; preds = %bb22
  %41 = bitcast %"core::result::Result<(), hashbrown::TryReserveError>"* %0 to i64*
  store i64 0, i64* %41, align 8
; invoke core::ptr::drop_in_place<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>,hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{{closure}}>>
  invoke void @"_ZN4core3ptr224drop_in_place$LT$hashbrown..scopeguard..ScopeGuard$LT$hashbrown..raw..RawTableInner$LT$alloc..alloc..Global$GT$$C$hashbrown..raw..RawTableInner$LT$alloc..alloc..Global$GT$..prepare_resize..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h66e4ec4bbbb0e6ceE"(%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %new_table)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb23
  br label %bb25

bb28:                                             ; preds = %bb27
  %42 = bitcast { i8*, i32 }* %2 to i8**
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %47 = insertvalue { i8*, i32 } %46, i32 %45, 1
  resume { i8*, i32 } %47
}

; hashbrown::raw::RawTable<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$7reserve17hbd9b1fd13e48b6fcE"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self, i64 %additional, i64* align 8 dereferenceable(16) %hasher) unnamed_addr #0 {
start:
  %_14 = alloca i8, align 1
  %_13 = alloca i8, align 1
  %_9 = alloca %"core::result::Result<(), hashbrown::TryReserveError>", align 8
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
  %0 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
  %1 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %0, i32 0, i32 3
  %_6 = load i64, i64* %1, align 8
  %_4 = icmp ugt i64 %additional, %_6
  br i1 %_4, label %bb1, label %bb6

bb6:                                              ; preds = %bb5, %start
  %2 = load i8, i8* %_14, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb8, label %bb7

bb1:                                              ; preds = %start
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_13, align 1
  %4 = load i8, i8* %_13, align 1, !range !4
  %5 = trunc i8 %4 to i1
; call hashbrown::raw::RawTable<T,A>::reserve_rehash
  call void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h7628c1c997740dbfE"(%"core::result::Result<(), hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), hashbrown::TryReserveError>") dereferenceable(24) %_9, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self, i64 %additional, i64* align 8 dereferenceable(16) %hasher, i1 zeroext %5)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::result::Result<T,E>::is_err
  %_7 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hf1699100bee93131E"(%"core::result::Result<(), hashbrown::TryReserveError>"* align 8 dereferenceable(24) %_9)
  br label %bb3

bb3:                                              ; preds = %bb2
  br i1 %_7, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  br label %bb6

bb4:                                              ; preds = %bb3
; call core::hint::unreachable_unchecked
  call void @_ZN4core4hint21unreachable_unchecked17h12171fe7a3ebae5cE() #20
  unreachable

bb7:                                              ; preds = %bb8, %bb6
  ret void

bb8:                                              ; preds = %bb6
  br label %bb7
}

; hashbrown::raw::RawTable<T,A>::data_end
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$8data_end17h0746c3774ef11a0dE"(%"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %self to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
  %1 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %0, i32 0, i32 2
  %_4 = load i8*, i8** %1, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast i8* %_3 to { i64, i32 }*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %3 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h51554824ecc99032E"({ i64, i32 }* %2)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64* %3
}

; hashbrown::raw::RawTable<T,A>::iter_hash
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$9iter_hash17h607f092020623cebE"(%"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>") dereferenceable(48) %0, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self, i64 %hash) unnamed_addr #0 {
start:
; call hashbrown::raw::RawIterHash<T,A>::new
  call void @"_ZN9hashbrown3raw24RawIterHash$LT$T$C$A$GT$3new17h7bf48aa22dbd4902E"(%"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>") dereferenceable(48) %0, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %self, i64 %hash)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; hashbrown::raw::RawTableInner<A>::set_ctrl_h2
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$11set_ctrl_h217h17b439474cfce314E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %index, i64 %hash) unnamed_addr #1 {
start:
; call hashbrown::raw::h2
  %_6 = call i8 @_ZN9hashbrown3raw2h217h90485c645cd98667E(i64 %hash)
  br label %bb1

bb1:                                              ; preds = %start
; call hashbrown::raw::RawTableInner<A>::set_ctrl
  call void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$8set_ctrl17h57dc60d9e18ce75cE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %index, i8 %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; hashbrown::raw::RawTableInner<A>::free_buckets
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$12free_buckets17hbbfe9b6a3eede6a4E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %table_layout.0, i64 %table_layout.1) unnamed_addr #1 {
start:
  %lco = alloca { { i64, i64 }, i64 }, align 8
  %_6 = alloca %"core::option::Option<(core::alloc::layout::Layout, usize)>", align 8
  %_5 = alloca { { i64, i64 }, i64 }, align 8
; call hashbrown::raw::RawTableInner<A>::buckets
  %_8 = call i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$7buckets17hf9243f922cdc42b9E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call hashbrown::raw::TableLayout::calculate_layout_for
  call void @_ZN9hashbrown3raw11TableLayout20calculate_layout_for17h1541f5bd66bd93b3E(%"core::option::Option<(core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::option::Option<(core::alloc::layout::Layout, usize)>") dereferenceable(24) %_6, i64 %table_layout.0, i64 %table_layout.1, i64 %_8)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = getelementptr inbounds %"core::option::Option<(core::alloc::layout::Layout, usize)>", %"core::option::Option<(core::alloc::layout::Layout, usize)>"* %_6, i32 0, i32 1
  %1 = load i64, i64* %0, align 8
  %2 = icmp eq i64 %1, 0
  %_10 = select i1 %2, i64 0, i64 1
  switch i64 %_10, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
; call core::hint::unreachable_unchecked
  call void @_ZN4core4hint21unreachable_unchecked17h12171fe7a3ebae5cE() #20
  unreachable

bb5:                                              ; preds = %bb2
  %3 = bitcast %"core::option::Option<(core::alloc::layout::Layout, usize)>"* %_6 to %"core::option::Option<(core::alloc::layout::Layout, usize)>::Some"*
  %4 = bitcast %"core::option::Option<(core::alloc::layout::Layout, usize)>::Some"* %3 to { { i64, i64 }, i64 }*
  %5 = bitcast { { i64, i64 }, i64 }* %lco to i8*
  %6 = bitcast { { i64, i64 }, i64 }* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = bitcast { { i64, i64 }, i64 }* %_5 to i8*
  %8 = bitcast { { i64, i64 }, i64 }* %lco to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = bitcast { { i64, i64 }, i64 }* %_5 to { i64, i64 }*
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !26
  %12 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_5, i32 0, i32 1
  %ctrl_offset = load i64, i64* %12, align 8
  %_13 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %self to %"alloc::alloc::Global"*
  %13 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %self, i32 0, i32 2
  %_17 = load i8*, i8** %13, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_16 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %_17)
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::ptr::mut_ptr::<impl *mut T>::sub
  %_15 = call i8* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3sub17h0f60f8b2430773d3E"(i8* %_16, i64 %ctrl_offset)
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_14 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %_15)
  br label %bb8

bb8:                                              ; preds = %bb7
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc8599f43ee3f89faE"(%"alloc::alloc::Global"* nonnull align 1 %_13, i8* nonnull %_14, i64 %layout.0, i64 %layout.1)
  br label %bb9

bb9:                                              ; preds = %bb8
  ret void
}

; hashbrown::raw::RawTableInner<A>::num_ctrl_bytes
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$14num_ctrl_bytes17h8a266772e3cb1020E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %self to i64*
  %_3 = load i64, i64* %0, align 8
  %_2 = add i64 %_3, 1
  %1 = add i64 %_2, 16
  ret i64 %1
}

; hashbrown::raw::RawTableInner<A>::prepare_resize
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$14prepare_resize17h658bb008b95646d7E"(%"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>") dereferenceable(56) %0, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %table_layout.0, i64 %table_layout.1, i64 %capacity, i1 zeroext %fallibility) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_22 = alloca i8, align 1
  %_21 = alloca { i64, i64 }, align 8
  %_20 = alloca %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", align 8
  %_19 = alloca %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>", align 8
  %val = alloca %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", align 8
  %_7 = alloca %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>", align 8
  %_6 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>", align 8
  %new_table = alloca %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", align 8
  store i8 0, i8* %_22, align 1
  %_9 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h8185b200e245bd86E"(%"alloc::alloc::Global"* nonnull align 1 %_9)
  br label %bb1

bb1:                                              ; preds = %start
; call hashbrown::raw::RawTableInner<A>::fallible_with_capacity
  call void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$22fallible_with_capacity17hd4596ea36f7eea03E"(%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>") dereferenceable(40) %_7, i64 %table_layout.0, i64 %table_layout.1, i64 %capacity, i1 zeroext %fallibility)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2e0798de6a6bb06fE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>") dereferenceable(40) %_6, %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* noalias nocapture dereferenceable(40) %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %_6 to i64*
  %_13 = load i64, i64* %2, align 8, !range !2
  switch i64 %_13, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %3 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %_6 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Continue"*
  %4 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Continue"* %3, i32 0, i32 1
  %5 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %val to i8*
  %6 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 32, i1 false)
  store i8 1, i8* %_22, align 1
  %7 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %new_table to i8*
  %8 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false)
  %9 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %self, i32 0, i32 4
  %_17 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %new_table, i32 0, i32 3
  %11 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %new_table, i32 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %_17
  store i64 %13, i64* %10, align 8
  %14 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %self, i32 0, i32 4
  %_18 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %new_table, i32 0, i32 4
  store i64 %_18, i64* %15, align 8
  store i8 0, i8* %_22, align 1
  %16 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_20 to i8*
  %17 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %new_table to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 32, i1 false)
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_21, i32 0, i32 0
  store i64 %table_layout.0, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_21, i32 0, i32 1
  store i64 %table_layout.1, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_21, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_21, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
; invoke hashbrown::scopeguard::guard
  invoke void @_ZN9hashbrown10scopeguard5guard17hf381f7e0129df308E(%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* noalias nocapture sret(%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>") dereferenceable(48) %_19, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* noalias nocapture dereferenceable(32) %_20, i64 %21, i64 %23)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %_6 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Break"*
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Break"* %24, i32 0, i32 1
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i32 0, i32 0
  %residual.0 = load i64, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i32 0, i32 1
  %residual.1 = load i64, i64* %27, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h7c9b06083ac4de8bE"(%"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>") dereferenceable(56) %0, i64 %residual.0, i64 %residual.1)
  br label %bb7

bb7:                                              ; preds = %bb6
  store i8 0, i8* %_22, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  ret void

bb8:                                              ; preds = %bb4
  %28 = bitcast %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>"* %0 to %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>::Ok"*
  %29 = getelementptr inbounds %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>::Ok", %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>::Ok"* %28, i32 0, i32 1
  %30 = bitcast %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %29 to i8*
  %31 = bitcast %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>"* %_19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 48, i1 false)
  %32 = bitcast %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<alloc::alloc::Global>, [closure@hashbrown::raw::RawTableInner<alloc::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>"* %0 to i64*
  store i64 0, i64* %32, align 8
  store i8 0, i8* %_22, align 1
  br label %bb9

bb12:                                             ; preds = %cleanup
  %33 = load i8, i8* %_22, align 1, !range !4
  %34 = trunc i8 %33 to i1
  br i1 %34, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  %37 = extractvalue { i8*, i32 } %35, 1
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %37, i32* %39, align 8
  br label %bb12

bb10:                                             ; preds = %bb11, %bb12
  %40 = bitcast { i8*, i32 }* %1 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = insertvalue { i8*, i32 } undef, i8* %41, 0
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1
  resume { i8*, i32 } %45

bb11:                                             ; preds = %bb12
  br label %bb10
}

; hashbrown::raw::RawTableInner<A>::prepare_resize::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$14prepare_resize28_$u7b$$u7b$closure$u7d$$u7d$17h64e79d35d16ece20E"({ i64, i64 }* align 8 dereferenceable(16) %_1, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self_) unnamed_addr #1 {
start:
; call hashbrown::raw::RawTableInner<A>::is_empty_singleton
  %_4 = call zeroext i1 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$18is_empty_singleton17haff7790e3f12a4f8E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self_)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb2:                                              ; preds = %bb1
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_1, i32 0, i32 0
  %_8.0 = load i64, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_1, i32 0, i32 1
  %_8.1 = load i64, i64* %1, align 8
; call hashbrown::raw::RawTableInner<A>::free_buckets
  call void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$12free_buckets17hbbfe9b6a3eede6a4E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self_, i64 %_8.0, i64 %_8.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4
}

; hashbrown::raw::RawTableInner<A>::replace_ctrl_h2
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$15replace_ctrl_h217he5d1f25ee6b767b8E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %index, i64 %hash) unnamed_addr #1 {
start:
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_4 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %index)
  br label %bb1

bb1:                                              ; preds = %start
  %prev_ctrl = load i8, i8* %_4, align 1
; call hashbrown::raw::RawTableInner<A>::set_ctrl_h2
  call void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$11set_ctrl_h217h17b439474cfce314E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %index, i64 %hash)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8 %prev_ctrl
}

; hashbrown::raw::RawTableInner<A>::find_insert_slot
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$16find_insert_slot17h19d816be4dba508eE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %hash) unnamed_addr #1 {
start:
  %0 = alloca <2 x i64>, align 16
  %1 = alloca <2 x i64>, align 16
  %2 = alloca i8, align 1
  %3 = alloca <2 x i64>, align 16
  %4 = alloca <2 x i64>, align 16
  %_11 = alloca { i64, i64 }, align 8
  %probe_seq = alloca { i64, i64 }, align 8
  %5 = alloca i64, align 8
; call hashbrown::raw::RawTableInner<A>::probe_seq
  %6 = call { i64, i64 } @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$9probe_seq17h38bac6bc982aba10E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %hash)
  store { i64, i64 } %6, { i64, i64 }* %probe_seq, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb18, %bb1
  %7 = bitcast { i64, i64 }* %probe_seq to i64*
  %_10 = load i64, i64* %7, align 8
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_8 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %_10)
  br label %bb3

bb3:                                              ; preds = %bb2
; call hashbrown::raw::sse2::Group::load
  call void @_ZN9hashbrown3raw4sse25Group4load17h929c447c903befa1E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %4, i8* %_8)
  %group = load <2 x i64>, <2 x i64>* %4, align 16
  br label %bb4

bb4:                                              ; preds = %bb3
  store <2 x i64> %group, <2 x i64>* %3, align 16
; call hashbrown::raw::sse2::Group::match_empty_or_deleted
  %_12 = call i16 @_ZN9hashbrown3raw4sse25Group22match_empty_or_deleted17h761cb8a5c908ce29E(<2 x i64>* noalias nocapture dereferenceable(16) %3)
  br label %bb5

bb5:                                              ; preds = %bb4
; call hashbrown::raw::bitmask::BitMask::lowest_set_bit
  %8 = call { i64, i64 } @_ZN9hashbrown3raw7bitmask7BitMask14lowest_set_bit17hb4227454fdcec9d3E(i16 %_12)
  store { i64, i64 } %8, { i64, i64 }* %_11, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %9 = bitcast { i64, i64 }* %_11 to i64*
  %_14 = load i64, i64* %9, align 8, !range !2
  %10 = icmp eq i64 %_14, 1
  br i1 %10, label %bb7, label %bb17

bb7:                                              ; preds = %bb6
  %11 = bitcast { i64, i64 }* %_11 to %"core::option::Option<usize>::Some"*
  %12 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %11, i32 0, i32 1
  %bit = load i64, i64* %12, align 8
  %13 = bitcast { i64, i64 }* %probe_seq to i64*
  %_18 = load i64, i64* %13, align 8
  %_17 = add i64 %_18, %bit
  %14 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %self to i64*
  %_20 = load i64, i64* %14, align 8
  %result = and i64 %_17, %_20
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_24 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %result)
  br label %bb8

bb17:                                             ; preds = %bb6
  %15 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %self to i64*
  %_37 = load i64, i64* %15, align 8
; call hashbrown::raw::ProbeSeq::move_next
  call void @_ZN9hashbrown3raw8ProbeSeq9move_next17h4ed1df9a9d1ae40cE({ i64, i64 }* align 8 dereferenceable(16) %probe_seq, i64 %_37)
  br label %bb18

bb18:                                             ; preds = %bb17
  br label %bb2

bb8:                                              ; preds = %bb7
  %_23 = load i8, i8* %_24, align 1
; call hashbrown::raw::is_full
  %_22 = call zeroext i1 @_ZN9hashbrown3raw7is_full17h169da8557f0373e9E(i8 %_23)
  br label %bb9

bb9:                                              ; preds = %bb8
  %16 = call i1 @llvm.expect.i1(i1 %_22, i1 false)
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = load i8, i8* %2, align 1, !range !4
  %_21 = trunc i8 %18 to i1
  br label %bb10

bb10:                                             ; preds = %bb9
  br i1 %_21, label %bb11, label %bb16

bb16:                                             ; preds = %bb10
  store i64 %result, i64* %5, align 8
  br label %bb19

bb11:                                             ; preds = %bb10
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_33 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 0)
  br label %bb12

bb12:                                             ; preds = %bb11
; call hashbrown::raw::sse2::Group::load_aligned
  call void @_ZN9hashbrown3raw4sse25Group12load_aligned17h6724fa50aad4eab0E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %1, i8* %_33)
  %_31 = load <2 x i64>, <2 x i64>* %1, align 16
  br label %bb13

bb13:                                             ; preds = %bb12
  store <2 x i64> %_31, <2 x i64>* %0, align 16
; call hashbrown::raw::sse2::Group::match_empty_or_deleted
  %_30 = call i16 @_ZN9hashbrown3raw4sse25Group22match_empty_or_deleted17h761cb8a5c908ce29E(<2 x i64>* noalias nocapture dereferenceable(16) %0)
  br label %bb14

bb14:                                             ; preds = %bb13
; call hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero
  %19 = call i64 @_ZN9hashbrown3raw7bitmask7BitMask22lowest_set_bit_nonzero17h441fdeaefde91fabE(i16 %_30)
  store i64 %19, i64* %5, align 8
  br label %bb15

bb15:                                             ; preds = %bb14
  br label %bb19

bb19:                                             ; preds = %bb16, %bb15
  %20 = load i64, i64* %5, align 8
  ret i64 %20
}

; hashbrown::raw::RawTableInner<A>::is_in_same_group
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$16is_in_same_group17h26f2d572c41c4126E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %0, i64 %i, i64 %new_i, i64 %hash) unnamed_addr #1 {
start:
  %_18 = alloca i64, align 8
  %_14 = alloca i64, align 8
  %probe_index = alloca { i64*, i64* }, align 8
  %probe_seq_pos = alloca i64, align 8
  %self = alloca %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, align 8
  store %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %0, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %self, align 8
  %_7 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %self, align 8, !nonnull !3
; call hashbrown::raw::RawTableInner<A>::probe_seq
  %1 = call { i64, i64 } @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$9probe_seq17h38bac6bc982aba10E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_7, i64 %hash)
  %_6.0 = extractvalue { i64, i64 } %1, 0
  %_6.1 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %_6.0, i64* %probe_seq_pos, align 8
  %2 = bitcast { i64*, i64* }* %probe_index to i64**
  store i64* %probe_seq_pos, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %probe_index, i32 0, i32 1
  %4 = bitcast i64** %3 to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"***
  store %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %self, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*** %4, align 8
  store i64 %i, i64* %_14, align 8
  %5 = load i64, i64* %_14, align 8
; call hashbrown::raw::RawTableInner<A>::is_in_same_group::{{closure}}
  %_12 = call i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$16is_in_same_group28_$u7b$$u7b$closure$u7d$$u7d$17h3a43fe4f59e3978cE"({ i64*, i64* }* align 8 dereferenceable(16) %probe_index, i64 %5)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i64 %new_i, i64* %_18, align 8
  %6 = load i64, i64* %_18, align 8
; call hashbrown::raw::RawTableInner<A>::is_in_same_group::{{closure}}
  %_16 = call i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$16is_in_same_group28_$u7b$$u7b$closure$u7d$$u7d$17h3a43fe4f59e3978cE"({ i64*, i64* }* align 8 dereferenceable(16) %probe_index, i64 %6)
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = icmp eq i64 %_12, %_16
  ret i1 %7
}

; hashbrown::raw::RawTableInner<A>::is_in_same_group::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$16is_in_same_group28_$u7b$$u7b$closure$u7d$$u7d$17h3a43fe4f59e3978cE"({ i64*, i64* }* align 8 dereferenceable(16) %_1, i64 %pos) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i64* }* %_1 to i64**
  %1 = load i64*, i64** %0, align 8, !nonnull !3
  %_6 = load i64, i64* %1, align 8
  %2 = sub i64 %pos, %_6
  br label %bb1

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 1
  %4 = bitcast i64** %3 to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"***
  %5 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"**, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*** %4, align 8, !nonnull !3
  %6 = load %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %5, align 8, !nonnull !3
  %7 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %6 to i64*
  %_7 = load i64, i64* %7, align 8
  %_3 = and i64 %2, %_7
  %8 = udiv i64 %_3, 16
  ret i64 %8
}

; hashbrown::raw::RawTableInner<A>::new_uninitialized
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$17new_uninitialized17h2ea0253eff1f29feE"(%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>") dereferenceable(40) %0, i64 %table_layout.0, i64 %table_layout.1, i64 %buckets, i1 zeroext %fallibility) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i8*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_31 = alloca %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", align 8
  %_16 = alloca i8*, align 8
  %lco = alloca { { i64, i64 }, i64 }, align 8
  %_8 = alloca %"core::option::Option<(core::alloc::layout::Layout, usize)>", align 8
  %_7 = alloca { { i64, i64 }, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
; invoke hashbrown::raw::TableLayout::calculate_layout_for
  invoke void @_ZN9hashbrown3raw11TableLayout20calculate_layout_for17h1541f5bd66bd93b3E(%"core::option::Option<(core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::option::Option<(core::alloc::layout::Layout, usize)>") dereferenceable(24) %_8, i64 %table_layout.0, i64 %table_layout.1, i64 %buckets)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::option::Option<(core::alloc::layout::Layout, usize)>", %"core::option::Option<(core::alloc::layout::Layout, usize)>"* %_8, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  %_11 = select i1 %5, i64 0, i64 1
  switch i64 %_11, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb18:                                             ; preds = %cleanup
  br label %bb19

cleanup:                                          ; preds = %bb2, %bb14, %bb13, %bb10, %bb9, %bb7, %bb4, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb18

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
; invoke hashbrown::raw::Fallibility::capacity_overflow
  %11 = invoke { i64, i64 } @_ZN9hashbrown3raw11Fallibility17capacity_overflow17ha2b11c71af18eee4E(i1 zeroext %fallibility)
          to label %bb5 unwind label %cleanup

bb4:                                              ; preds = %bb1
  %12 = bitcast %"core::option::Option<(core::alloc::layout::Layout, usize)>"* %_8 to %"core::option::Option<(core::alloc::layout::Layout, usize)>::Some"*
  %13 = bitcast %"core::option::Option<(core::alloc::layout::Layout, usize)>::Some"* %12 to { { i64, i64 }, i64 }*
  %14 = bitcast { { i64, i64 }, i64 }* %lco to i8*
  %15 = bitcast { { i64, i64 }, i64 }* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
  %16 = bitcast { { i64, i64 }, i64 }* %_7 to i8*
  %17 = bitcast { { i64, i64 }, i64 }* %lco to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  %18 = bitcast { { i64, i64 }, i64 }* %_7 to { i64, i64 }*
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  %layout.0 = load i64, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  %layout.1 = load i64, i64* %20, align 8, !range !26
  %21 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_7, i32 0, i32 1
  %ctrl_offset = load i64, i64* %21, align 8
; invoke hashbrown::raw::alloc::inner::do_alloc
  %22 = invoke i8* @_ZN9hashbrown3raw5alloc5inner8do_alloc17hd7ef7ea622c443ddE(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb4
  store i8* %22, i8** %_16, align 8
  %23 = bitcast i8** %_16 to {}**
  %24 = load {}*, {}** %23, align 8
  %25 = icmp eq {}* %24, null
  %_20 = select i1 %25, i64 1, i64 0
  switch i64 %_20, label %bb8 [
    i64 0, label %bb9
    i64 1, label %bb7
  ]

bb8:                                              ; preds = %bb6
  unreachable

bb9:                                              ; preds = %bb6
  %block = load i8*, i8** %_16, align 8, !nonnull !3
; invoke core::ptr::non_null::NonNull<T>::cast
  %ptr = invoke nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h43f19d0652051b78E"(i8* nonnull %block)
          to label %bb10 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke hashbrown::raw::Fallibility::alloc_err
  %26 = invoke { i64, i64 } @_ZN9hashbrown3raw11Fallibility9alloc_err17h60f2cc5601366693E(i1 zeroext %fallibility, i64 %layout.0, i64 %layout.1)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb7
  %_23.0 = extractvalue { i64, i64 } %26, 0
  %_23.1 = extractvalue { i64, i64 } %26, 1
  %27 = bitcast %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* %0 to %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Err", %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Err"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0
  store i64 %_23.0, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1
  store i64 %_23.1, i64* %30, align 8
  %31 = bitcast %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* %0 to i64*
  store i64 1, i64* %31, align 8
  br label %bb16

bb16:                                             ; preds = %bb5, %bb11
  br label %bb17

bb10:                                             ; preds = %bb9
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_28 = invoke i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %ptr)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb10
  %32 = getelementptr inbounds i8, i8* %_28, i64 %ctrl_offset
  store i8* %32, i8** %1, align 8
  %_3.i.i = load i8*, i8** %1, align 8
  br label %bb13

bb13:                                             ; preds = %bb12
; invoke core::ptr::non_null::NonNull<T>::new_unchecked
  %ctrl = invoke nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %_3.i.i)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %_33 = sub i64 %buckets, 1
  %_36 = sub i64 %buckets, 1
; invoke hashbrown::raw::bucket_mask_to_capacity
  %_35 = invoke i64 @_ZN9hashbrown3raw23bucket_mask_to_capacity17hab0162f4f927bdf6E(i64 %_36)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  %33 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_31 to i64*
  store i64 %_33, i64* %33, align 8
  %34 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_31, i32 0, i32 2
  store i8* %ctrl, i8** %34, align 8
  %35 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_31, i32 0, i32 3
  store i64 %_35, i64* %35, align 8
  %36 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_31, i32 0, i32 4
  store i64 0, i64* %36, align 8
  %37 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_31 to %"alloc::alloc::Global"*
  %38 = bitcast %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* %0 to %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Ok"*
  %39 = getelementptr inbounds %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Ok", %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Ok"* %38, i32 0, i32 1
  %40 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %39 to i8*
  %41 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 32, i1 false)
  %42 = bitcast %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* %0 to i64*
  store i64 0, i64* %42, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  ret void

bb5:                                              ; preds = %bb2
  %_13.0 = extractvalue { i64, i64 } %11, 0
  %_13.1 = extractvalue { i64, i64 } %11, 1
  %43 = bitcast %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* %0 to %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Err"*
  %44 = getelementptr inbounds %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Err", %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Err"* %43, i32 0, i32 1
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %44, i32 0, i32 0
  store i64 %_13.0, i64* %45, align 8
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %44, i32 0, i32 1
  store i64 %_13.1, i64* %46, align 8
  %47 = bitcast %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* %0 to i64*
  store i64 1, i64* %47, align 8
  br label %bb16

bb19:                                             ; preds = %bb18
  %48 = bitcast { i8*, i32 }* %2 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %53 = insertvalue { i8*, i32 } %52, i32 %51, 1
  resume { i8*, i32 } %53
}

; hashbrown::raw::RawTableInner<A>::is_empty_singleton
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$18is_empty_singleton17haff7790e3f12a4f8E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %self to i64*
  %_2 = load i64, i64* %0, align 8
  %1 = icmp eq i64 %_2, 0
  ret i1 %1
}

; hashbrown::raw::RawTableInner<A>::prepare_insert_slot
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i8 } @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$19prepare_insert_slot17hfd34c05edf50be37E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %hash) unnamed_addr #1 {
start:
  %0 = alloca { i64, i8 }, align 8
; call hashbrown::raw::RawTableInner<A>::find_insert_slot
  %index = call i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$16find_insert_slot17h19d816be4dba508eE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %hash)
  br label %bb1

bb1:                                              ; preds = %start
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_7 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %index)
  br label %bb2

bb2:                                              ; preds = %bb1
  %old_ctrl = load i8, i8* %_7, align 1
; call hashbrown::raw::RawTableInner<A>::set_ctrl_h2
  call void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$11set_ctrl_h217h17b439474cfce314E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %index, i64 %hash)
  br label %bb3

bb3:                                              ; preds = %bb2
  %1 = bitcast { i64, i8 }* %0 to i64*
  store i64 %index, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %old_ctrl, i8* %2, align 8
  %3 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %6 = load i8, i8* %5, align 8
  %7 = insertvalue { i64, i8 } undef, i64 %4, 0
  %8 = insertvalue { i64, i8 } %7, i8 %6, 1
  ret { i64, i8 } %8
}

; hashbrown::raw::RawTableInner<A>::fallible_with_capacity
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$22fallible_with_capacity17hd4596ea36f7eea03E"(%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>") dereferenceable(40) %0, i64 %table_layout.0, i64 %table_layout.1, i64 %capacity, i1 zeroext %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_36 = alloca i8, align 1
  %_35 = alloca %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", align 8
  %val = alloca %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", align 8
  %_21 = alloca %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>", align 8
  %_20 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>", align 8
  %result = alloca %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", align 8
  %_13 = alloca i8*, align 8
  %_10 = alloca %"core::result::Result<usize, hashbrown::TryReserveError>", align 8
  %_9 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>", align 8
  %_6 = alloca %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", align 8
  %fallibility = alloca i8, align 1
  %3 = zext i1 %1 to i8
  store i8 %3, i8* %fallibility, align 1
  store i8 0, i8* %_36, align 1
  store i8 1, i8* %_36, align 1
  %4 = icmp eq i64 %capacity, 0
  br i1 %4, label %bb1, label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %_36, align 1
; invoke hashbrown::raw::RawTableInner<A>::new_in
  invoke void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$6new_in17h6c06c74647d69a30E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* noalias nocapture sret(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>") dereferenceable(32) %_6)
          to label %bb2 unwind label %cleanup

bb3:                                              ; preds = %start
; invoke hashbrown::raw::capacity_to_buckets
  %5 = invoke { i64, i64 } @_ZN9hashbrown3raw19capacity_to_buckets17h2429ffe38ed4df92E(i64 %capacity)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %_11.0 = extractvalue { i64, i64 } %5, 0
  %_11.1 = extractvalue { i64, i64 } %5, 1
  store i8* %fallibility, i8** %_13, align 8
  %6 = load i8*, i8** %_13, align 8, !nonnull !3
; invoke core::option::Option<T>::ok_or_else
  invoke void @"_ZN4core6option15Option$LT$T$GT$10ok_or_else17h79ad4441c81b5997E"(%"core::result::Result<usize, hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<usize, hashbrown::TryReserveError>") dereferenceable(24) %_10, i64 %_11.0, i64 %_11.1, i8* align 1 dereferenceable(1) %6)
          to label %bb5 unwind label %cleanup

bb28:                                             ; preds = %bb23, %bb26, %cleanup
  %7 = load i8, i8* %_36, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb27, label %bb24

cleanup:                                          ; preds = %bb1, %bb11, %bb7, %bb9, %bb5, %bb4, %bb3
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb28

bb5:                                              ; preds = %bb4
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  invoke void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he0bf802462829469E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>") dereferenceable(24) %_9, %"core::result::Result<usize, hashbrown::TryReserveError>"* noalias nocapture dereferenceable(24) %_10)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>"* %_9 to i64*
  %_15 = load i64, i64* %14, align 8, !range !2
  switch i64 %_15, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ]

bb8:                                              ; preds = %bb6
  unreachable

bb7:                                              ; preds = %bb6
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>"* %_9 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Continue"* %15, i32 0, i32 1
  %val1 = load i64, i64* %16, align 8
  store i8 0, i8* %_36, align 1
  %17 = load i8, i8* %fallibility, align 1, !range !4
  %_25 = trunc i8 %17 to i1
; invoke hashbrown::raw::RawTableInner<A>::new_uninitialized
  invoke void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$17new_uninitialized17h2ea0253eff1f29feE"(%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>") dereferenceable(40) %_21, i64 %table_layout.0, i64 %table_layout.1, i64 %val1, i1 zeroext %_25)
          to label %bb11 unwind label %cleanup

bb9:                                              ; preds = %bb6
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>"* %_9 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Break"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %residual.0 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %residual.1 = load i64, i64* %21, align 8
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  invoke void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17he159bf1eb484ed92E"(%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>") dereferenceable(40) %0, i64 %residual.0, i64 %residual.1)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  br label %bb21

bb21:                                             ; preds = %bb16, %bb10
  %22 = load i8, i8* %_36, align 1, !range !4
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb25, label %bb22

bb11:                                             ; preds = %bb7
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  invoke void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2e0798de6a6bb06fE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>") dereferenceable(40) %_20, %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* noalias nocapture dereferenceable(40) %_21)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %_20 to i64*
  %_26 = load i64, i64* %24, align 8, !range !2
  switch i64 %_26, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ]

bb14:                                             ; preds = %bb12
  unreachable

bb13:                                             ; preds = %bb12
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %_20 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Continue"*
  %26 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Continue"* %25, i32 0, i32 1
  %27 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %val to i8*
  %28 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 32, i1 false)
  %29 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %result to i8*
  %30 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 32, i1 false)
; invoke hashbrown::raw::RawTableInner<A>::ctrl
  %_31 = invoke i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %result, i64 0)
          to label %bb17 unwind label %cleanup5

bb15:                                             ; preds = %bb12
  %31 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>"* %_20 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Break"*
  %32 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<alloc::alloc::Global>>::Break"* %31, i32 0, i32 1
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i32 0, i32 0
  %residual.02 = load i64, i64* %33, align 8
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i32 0, i32 1
  %residual.13 = load i64, i64* %34, align 8
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  invoke void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17he159bf1eb484ed92E"(%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* noalias nocapture sret(%"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>") dereferenceable(40) %0, i64 %residual.02, i64 %residual.13)
          to label %bb16 unwind label %cleanup4

bb16:                                             ; preds = %bb15
  br label %bb21

bb26:                                             ; preds = %cleanup4
  br label %bb28

cleanup4:                                         ; preds = %bb15
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  %37 = extractvalue { i8*, i32 } %35, 1
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %37, i32* %39, align 8
  br label %bb26

bb22:                                             ; preds = %bb20, %bb25, %bb21
  ret void

bb25:                                             ; preds = %bb21
  br label %bb22

bb17:                                             ; preds = %bb13
; invoke hashbrown::raw::RawTableInner<A>::num_ctrl_bytes
  %_33 = invoke i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$14num_ctrl_bytes17h8a266772e3cb1020E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %result)
          to label %bb18 unwind label %cleanup5

bb23:                                             ; preds = %cleanup5
  br label %bb28

cleanup5:                                         ; preds = %bb18, %bb17, %bb13
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  %42 = extractvalue { i8*, i32 } %40, 1
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %42, i32* %44, align 8
  br label %bb23

bb18:                                             ; preds = %bb17
; invoke core::intrinsics::write_bytes
  invoke void @_ZN4core10intrinsics11write_bytes17he9b94e9742774c94E(i8* %_31, i8 -1, i64 %_33)
          to label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17hf2881883225f9d33E.exit" unwind label %cleanup5

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17hf2881883225f9d33E.exit": ; preds = %bb18
  br label %bb19

bb19:                                             ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17hf2881883225f9d33E.exit"
  %45 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_35 to i8*
  %46 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 32, i1 false)
  %47 = bitcast %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* %0 to %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Ok"*
  %48 = getelementptr inbounds %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Ok", %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Ok"* %47, i32 0, i32 1
  %49 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %48 to i8*
  %50 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 32, i1 false)
  %51 = bitcast %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* %0 to i64*
  store i64 0, i64* %51, align 8
  br label %bb20

bb20:                                             ; preds = %bb2, %bb19
  br label %bb22

bb2:                                              ; preds = %bb1
  %52 = bitcast %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* %0 to %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Ok"*
  %53 = getelementptr inbounds %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Ok", %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>::Ok"* %52, i32 0, i32 1
  %54 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %53 to i8*
  %55 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 32, i1 false)
  %56 = bitcast %"core::result::Result<hashbrown::raw::RawTableInner<alloc::alloc::Global>, hashbrown::TryReserveError>"* %0 to i64*
  store i64 0, i64* %56, align 8
  br label %bb20

bb24:                                             ; preds = %bb27, %bb28
  %57 = bitcast { i8*, i32 }* %2 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = insertvalue { i8*, i32 } undef, i8* %58, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  resume { i8*, i32 } %62

bb27:                                             ; preds = %bb28
  br label %bb24
}

; hashbrown::raw::RawTableInner<A>::fallible_with_capacity::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$22fallible_with_capacity28_$u7b$$u7b$closure$u7d$$u7d$17h86e4dea54b204664E"(i8* align 1 dereferenceable(1) %_1) unnamed_addr #1 {
start:
  %0 = load i8, i8* %_1, align 1, !range !4
  %_2 = trunc i8 %0 to i1
; call hashbrown::raw::Fallibility::capacity_overflow
  %1 = call { i64, i64 } @_ZN9hashbrown3raw11Fallibility17capacity_overflow17ha2b11c71af18eee4E(i1 zeroext %_2)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; hashbrown::raw::RawTableInner<A>::prepare_rehash_in_place
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$23prepare_rehash_in_place17h8c726773fe5d9c73E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = alloca <2 x i64>, align 16
  %1 = alloca <2 x i64>, align 16
  %2 = alloca <2 x i64>, align 16
  %3 = alloca <2 x i64>, align 16
  %_9 = alloca { i64, i64 }, align 8
  %iter = alloca %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>", align 8
  %_4 = alloca { i64, i64 }, align 8
  %_3 = alloca %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>", align 8
  %_2 = alloca %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>", align 8
; call hashbrown::raw::RawTableInner<A>::buckets
  %_5 = call i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$7buckets17hf9243f922cdc42b9E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { i64, i64 }* %_4 to i64*
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %_5, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
; call core::iter::traits::iterator::Iterator::step_by
  call void @_ZN4core4iter6traits8iterator8Iterator7step_by17h2ca3dd7ab9c6befeE(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* noalias nocapture sret(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>") dereferenceable(32) %_3, i64 %7, i64 %9, i64 16)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h729cefbab178bd33E"(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* noalias nocapture sret(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>") dereferenceable(32) %_2, %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* noalias nocapture dereferenceable(32) %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  %10 = bitcast %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* %iter to i8*
  %11 = bitcast %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 32, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb13, %bb3
; call <core::iter::adapters::step_by::StepBy<I> as core::iter::traits::iterator::Iterator>::next
  %12 = call { i64, i64 } @"_ZN105_$LT$core..iter..adapters..step_by..StepBy$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0ad93d812beea318E"(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>"* align 8 dereferenceable(32) %iter)
  store { i64, i64 } %12, { i64, i64 }* %_9, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
  %13 = bitcast { i64, i64 }* %_9 to i64*
  %_12 = load i64, i64* %13, align 8, !range !2
  switch i64 %_12, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
; call hashbrown::raw::RawTableInner<A>::buckets
  %_29 = call i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$7buckets17hf9243f922cdc42b9E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self)
  br label %bb14

bb8:                                              ; preds = %bb5
  %14 = bitcast { i64, i64 }* %_9 to %"core::option::Option<usize>::Some"*
  %15 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %14, i32 0, i32 1
  %val = load i64, i64* %15, align 8
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_18 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %val)
  br label %bb9

bb9:                                              ; preds = %bb8
; call hashbrown::raw::sse2::Group::load_aligned
  call void @_ZN9hashbrown3raw4sse25Group12load_aligned17h6724fa50aad4eab0E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %3, i8* %_18)
  %group = load <2 x i64>, <2 x i64>* %3, align 16
  br label %bb10

bb10:                                             ; preds = %bb9
  store <2 x i64> %group, <2 x i64>* %1, align 16
; call hashbrown::raw::sse2::Group::convert_special_to_empty_and_full_to_deleted
  call void @_ZN9hashbrown3raw4sse25Group44convert_special_to_empty_and_full_to_deleted17h9f6ad88bea581a36E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %2, <2 x i64>* noalias nocapture dereferenceable(16) %1)
  %group1 = load <2 x i64>, <2 x i64>* %2, align 16
  br label %bb11

bb11:                                             ; preds = %bb10
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_25 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %val)
  br label %bb12

bb12:                                             ; preds = %bb11
  store <2 x i64> %group1, <2 x i64>* %0, align 16
; call hashbrown::raw::sse2::Group::store_aligned
  call void @_ZN9hashbrown3raw4sse25Group13store_aligned17h69b325f8866bfb77E(<2 x i64>* noalias nocapture dereferenceable(16) %0, i8* %_25)
  br label %bb13

bb13:                                             ; preds = %bb12
  br label %bb4

bb14:                                             ; preds = %bb6
  %_28 = icmp ult i64 %_29, 16
  br i1 %_28, label %bb15, label %bb20

bb20:                                             ; preds = %bb14
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_39 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 0)
  br label %bb21

bb15:                                             ; preds = %bb14
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_32 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 0)
  br label %bb16

bb16:                                             ; preds = %bb15
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_34 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 16)
  br label %bb17

bb17:                                             ; preds = %bb16
; call hashbrown::raw::RawTableInner<A>::buckets
  %_36 = call i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$7buckets17hf9243f922cdc42b9E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self)
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17hfc661a234df63b88E(i8* %_32, i8* %_34, i64 %_36)
  br label %bb19

bb19:                                             ; preds = %bb18
  br label %bb25

bb25:                                             ; preds = %bb24, %bb19
  ret void

bb21:                                             ; preds = %bb20
; call hashbrown::raw::RawTableInner<A>::buckets
  %_43 = call i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$7buckets17hf9243f922cdc42b9E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self)
  br label %bb22

bb22:                                             ; preds = %bb21
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_41 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %_43)
  br label %bb23

bb23:                                             ; preds = %bb22
; call core::intrinsics::copy
  call void @_ZN4core10intrinsics4copy17hfc661a234df63b88E(i8* %_39, i8* %_41, i64 16)
  br label %bb24

bb24:                                             ; preds = %bb23
  br label %bb25
}

; hashbrown::raw::RawTableInner<A>::ctrl
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %index) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %self, i32 0, i32 2
  %_4 = load i8*, i8** %1, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, i8* %_3, i64 %index
  store i8* %2, i8** %0, align 8
  %_3.i.i = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %_3.i.i
}

; hashbrown::raw::RawTableInner<A>::bucket
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$6bucket17hff967bc11fe408a2E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %index) unnamed_addr #0 {
start:
; call hashbrown::raw::RawTableInner<A>::data_end
  %_6 = call nonnull i64* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$8data_end17h86898784cb3525a4E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call hashbrown::raw::Bucket<T>::from_base_index
  %0 = call nonnull i64* @"_ZN9hashbrown3raw15Bucket$LT$T$GT$15from_base_index17h7f502eaea3f5f752E"(i64* nonnull %_6, i64 %index)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; hashbrown::raw::RawTableInner<A>::new_in
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$6new_in17h6c06c74647d69a30E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* noalias nocapture sret(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>") dereferenceable(32) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
; invoke hashbrown::raw::sse2::Group::static_empty
  %_6 = invoke align 1 dereferenceable(16) [16 x i8]* @_ZN9hashbrown3raw4sse25Group12static_empty17haefe8c9146b05cbaE()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_3 = bitcast [16 x i8]* %_6 to i8*
; invoke core::ptr::non_null::NonNull<T>::new_unchecked
  %_2 = invoke nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1b169046760e8b76E"(i8* %_3)
          to label %bb2 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1, %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb2:                                              ; preds = %bb1
  %7 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %0 to i64*
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %0, i32 0, i32 2
  store i8* %_2, i8** %8, align 8
  %9 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %0, i32 0, i32 3
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %0, i32 0, i32 4
  store i64 0, i64* %10, align 8
  %11 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %0 to %"alloc::alloc::Global"*
  ret void

bb4:                                              ; preds = %bb3
  %12 = bitcast { i8*, i32 }* %1 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17
}

; hashbrown::raw::RawTableInner<A>::buckets
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$7buckets17hf9243f922cdc42b9E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %self to i64*
  %_2 = load i64, i64* %0, align 8
  %1 = add i64 %_2, 1
  ret i64 %1
}

; hashbrown::raw::RawTableInner<A>::data_end
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$8data_end17h86898784cb3525a4E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"hashbrown::raw::RawTableInner<alloc::alloc::Global>", %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %self, i32 0, i32 2
  %_4 = load i8*, i8** %0, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34bc5549bc580256E"(i8* nonnull %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast i8* %_3 to { i64, i32 }*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %2 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h51554824ecc99032E"({ i64, i32 }* %1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64* %2
}

; hashbrown::raw::RawTableInner<A>::set_ctrl
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$8set_ctrl17h57dc60d9e18ce75cE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %index, i8 %ctrl) unnamed_addr #1 {
start:
  %0 = sub i64 %index, 16
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %self to i64*
  %_8 = load i64, i64* %1, align 8
  %_5 = and i64 %0, %_8
  %index2 = add i64 %_5, 16
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_10 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %index)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8 %ctrl, i8* %_10, align 1
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_14 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %index2)
  br label %bb3

bb3:                                              ; preds = %bb2
  store i8 %ctrl, i8* %_14, align 1
  ret void
}

; hashbrown::raw::RawTableInner<A>::probe_seq
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$9probe_seq17h38bac6bc982aba10E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %self, i64 %hash) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
; call hashbrown::raw::h1
  %_4 = call i64 @_ZN9hashbrown3raw2h117h9086a13fb141dbb5E(i64 %hash)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %self to i64*
  %_6 = load i64, i64* %1, align 8
  %_3 = and i64 %_4, %_6
  %2 = bitcast { i64, i64 }* %0 to i64*
  store i64 %_3, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; hashbrown::raw::bucket_mask_to_capacity
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN9hashbrown3raw23bucket_mask_to_capacity17hab0162f4f927bdf6E(i64 %bucket_mask) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %_2 = icmp ult i64 %bucket_mask, 8
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_5 = add i64 %bucket_mask, 1
  %_4 = udiv i64 %_5, 8
  %1 = mul i64 %_4, 7
  store i64 %1, i64* %0, align 8
  br label %bb3

bb1:                                              ; preds = %start
  store i64 %bucket_mask, i64* %0, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i64, i64* %0, align 8
  ret i64 %2
}

; hashbrown::raw::RawIterHash<T,A>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw24RawIterHash$LT$T$C$A$GT$3new17h7bf48aa22dbd4902E"(%"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* noalias nocapture sret(%"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>") dereferenceable(48) %0, %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* align 8 dereferenceable(32) %table, i64 %hash) unnamed_addr #0 {
start:
  %_3 = alloca %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>", align 16
  %_5 = bitcast %"hashbrown::raw::RawTable<(std::thread::ThreadId, i32)>"* %table to %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"*
; call hashbrown::raw::RawIterHashInner<A>::new
  call void @"_ZN9hashbrown3raw25RawIterHashInner$LT$A$GT$3new17h6354a2ac33e74a83E"(%"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* noalias nocapture sret(%"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>") dereferenceable(48) %_3, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %_5, i64 %hash)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"hashbrown::raw::RawIterHash<(std::thread::ThreadId, i32)>"* %0 to %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"*
  %2 = bitcast %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %1 to i8*
  %3 = bitcast %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %2, i8* align 16 %3, i64 48, i1 false)
  ret void
}

; hashbrown::raw::RawIterHashInner<A>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw25RawIterHashInner$LT$A$GT$3new17h6354a2ac33e74a83E"(%"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* noalias nocapture sret(%"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>") dereferenceable(48) %0, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %table, i64 %hash) unnamed_addr #0 {
start:
  %1 = alloca <2 x i64>, align 16
  %2 = alloca <2 x i64>, align 16
; call hashbrown::raw::h2
  %h2_hash = call i8 @_ZN9hashbrown3raw2h217h90485c645cd98667E(i64 %hash)
  br label %bb1

bb1:                                              ; preds = %start
; call hashbrown::raw::RawTableInner<A>::probe_seq
  %3 = call { i64, i64 } @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$9probe_seq17h38bac6bc982aba10E"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %table, i64 %hash)
  %probe_seq.0 = extractvalue { i64, i64 } %3, 0
  %probe_seq.1 = extractvalue { i64, i64 } %3, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call hashbrown::raw::RawTableInner<A>::ctrl
  %_10 = call i8* @"_ZN9hashbrown3raw22RawTableInner$LT$A$GT$4ctrl17he4cd4799ed622d8bE"(%"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* align 8 dereferenceable(32) %table, i64 %probe_seq.0)
  br label %bb3

bb3:                                              ; preds = %bb2
; call hashbrown::raw::sse2::Group::load
  call void @_ZN9hashbrown3raw4sse25Group4load17h929c447c903befa1E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %2, i8* %_10)
  %group = load <2 x i64>, <2 x i64>* %2, align 16
  br label %bb4

bb4:                                              ; preds = %bb3
  store <2 x i64> %group, <2 x i64>* %1, align 16
; call hashbrown::raw::sse2::Group::match_byte
  %_14 = call i16 @_ZN9hashbrown3raw4sse25Group10match_byte17hfcb9e6a3882d5c0bE(<2 x i64>* noalias nocapture dereferenceable(16) %1, i8 %h2_hash)
  br label %bb5

bb5:                                              ; preds = %bb4
; call <hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator>::into_iter
  %bitmask = call i16 @"_ZN94_$LT$hashbrown..raw..bitmask..BitMask$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h8f11dc9ac57d9c38E"(i16 %_14)
  br label %bb6

bb6:                                              ; preds = %bb5
  %4 = getelementptr inbounds %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>", %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %0, i32 0, i32 1
  store %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"* %table, %"hashbrown::raw::RawTableInner<alloc::alloc::Global>"** %4, align 16
  %5 = getelementptr inbounds %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>", %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %0, i32 0, i32 4
  store i8 %h2_hash, i8* %5, align 2
  %6 = getelementptr inbounds %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>", %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %0, i32 0, i32 2
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0
  store i64 %probe_seq.0, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1
  store i64 %probe_seq.1, i64* %8, align 8
  %9 = bitcast %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %0 to <2 x i64>*
  store <2 x i64> %group, <2 x i64>* %9, align 16
  %10 = getelementptr inbounds %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>", %"hashbrown::raw::RawIterHashInner<alloc::alloc::Global>"* %0, i32 0, i32 3
  store i16 %bitmask, i16* %10, align 8
  ret void
}

; hashbrown::raw::h1
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN9hashbrown3raw2h117h9086a13fb141dbb5E(i64 %hash) unnamed_addr #1 {
start:
  ret i64 %hash
}

; hashbrown::raw::h2
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN9hashbrown3raw2h217h90485c645cd98667E(i64 %hash) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::cmp::Ord::min
  %hash_len = call i64 @_ZN4core3cmp3Ord3min17h106441662e87badcE(i64 8, i64 8)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_8 = mul i64 %hash_len, 8
  %_7 = sub i64 %_8, 7
  %0 = and i64 %_7, 63
  %top7 = lshr i64 %hash, %0
  %_10 = and i64 %top7, 127
  %1 = trunc i64 %_10 to i8
  ret i8 %1
}

; hashbrown::raw::sse2::Group::match_byte
; Function Attrs: inlinehint nonlazybind uwtable
define internal i16 @_ZN9hashbrown3raw4sse25Group10match_byte17hfcb9e6a3882d5c0bE(<2 x i64>* noalias nocapture dereferenceable(16) %self, i8 %byte) unnamed_addr #1 {
start:
  %0 = alloca <2 x i64>, align 16
  %1 = alloca <2 x i64>, align 16
  %2 = alloca <2 x i64>, align 16
  %3 = alloca <2 x i64>, align 16
  %4 = alloca <2 x i64>, align 16
  %5 = alloca i16, align 2
  %_4 = load <2 x i64>, <2 x i64>* %self, align 16
; call core::core_arch::x86::sse2::_mm_set1_epi8
  call void @_ZN4core9core_arch3x864sse213_mm_set1_epi817h3f41c99697ed5bb3E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %4, i8 %byte)
  %_5 = load <2 x i64>, <2 x i64>* %4, align 16
  br label %bb1

bb1:                                              ; preds = %start
  store <2 x i64> %_4, <2 x i64>* %2, align 16
  store <2 x i64> %_5, <2 x i64>* %1, align 16
; call core::core_arch::x86::sse2::_mm_cmpeq_epi8
  call void @_ZN4core9core_arch3x864sse214_mm_cmpeq_epi817h69857efc966f9d56E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %3, <2 x i64>* noalias nocapture dereferenceable(16) %2, <2 x i64>* noalias nocapture dereferenceable(16) %1)
  %cmp = load <2 x i64>, <2 x i64>* %3, align 16
  br label %bb2

bb2:                                              ; preds = %bb1
  store <2 x i64> %cmp, <2 x i64>* %0, align 16
; call core::core_arch::x86::sse2::_mm_movemask_epi8
  %_9 = call i32 @_ZN4core9core_arch3x864sse217_mm_movemask_epi817hb33ea44ba9951b61E(<2 x i64>* noalias nocapture dereferenceable(16) %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_8 = trunc i32 %_9 to i16
  store i16 %_8, i16* %5, align 2
  %6 = load i16, i16* %5, align 2
  ret i16 %6
}

; hashbrown::raw::sse2::Group::match_full
; Function Attrs: inlinehint nonlazybind uwtable
define internal i16 @_ZN9hashbrown3raw4sse25Group10match_full17hfc92e3430a4fbb04E(<2 x i64>* align 16 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca <2 x i64>, align 16
  %_3 = load <2 x i64>, <2 x i64>* %self, align 16
  store <2 x i64> %_3, <2 x i64>* %0, align 16
; call hashbrown::raw::sse2::Group::match_empty_or_deleted
  %_2 = call i16 @_ZN9hashbrown3raw4sse25Group22match_empty_or_deleted17h761cb8a5c908ce29E(<2 x i64>* noalias nocapture dereferenceable(16) %0)
  br label %bb1

bb1:                                              ; preds = %start
; call hashbrown::raw::bitmask::BitMask::invert
  %1 = call i16 @_ZN9hashbrown3raw7bitmask7BitMask6invert17h194325f3705750f2E(i16 %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i16 %1
}

; hashbrown::raw::sse2::Group::match_empty
; Function Attrs: inlinehint nonlazybind uwtable
define internal i16 @_ZN9hashbrown3raw4sse25Group11match_empty17h3316e7517f0cda4cE(<2 x i64>* noalias nocapture dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca <2 x i64>, align 16
  %_2 = load <2 x i64>, <2 x i64>* %self, align 16
  store <2 x i64> %_2, <2 x i64>* %0, align 16
; call hashbrown::raw::sse2::Group::match_byte
  %1 = call i16 @_ZN9hashbrown3raw4sse25Group10match_byte17hfcb9e6a3882d5c0bE(<2 x i64>* noalias nocapture dereferenceable(16) %0, i8 -1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i16 %1
}

; hashbrown::raw::sse2::Group::load_aligned
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN9hashbrown3raw4sse25Group12load_aligned17h6724fa50aad4eab0E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, i8* %ptr) unnamed_addr #1 {
start:
  %1 = alloca <2 x i64>, align 16
; call core::ptr::const_ptr::<impl *const T>::cast
  %_6 = call <2 x i64>* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h704235c7bda62736E"(i8* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
; call core::core_arch::x86::sse2::_mm_load_si128
  call void @_ZN4core9core_arch3x864sse214_mm_load_si12817h8a4964c3aa1c0a90E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %1, <2 x i64>* %_6)
  %_5 = load <2 x i64>, <2 x i64>* %1, align 16
  br label %bb2

bb2:                                              ; preds = %bb1
  store <2 x i64> %_5, <2 x i64>* %0, align 16
  ret void
}

; hashbrown::raw::sse2::Group::store_aligned
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN9hashbrown3raw4sse25Group13store_aligned17h69b325f8866bfb77E(<2 x i64>* noalias nocapture dereferenceable(16) %self, i8* %ptr) unnamed_addr #1 {
start:
  %0 = alloca <2 x i64>, align 16
  %1 = bitcast i8* %ptr to <2 x i64>*
  br label %bb1

bb1:                                              ; preds = %start
  %_9 = load <2 x i64>, <2 x i64>* %self, align 16
  store <2 x i64> %_9, <2 x i64>* %0, align 16
; call core::core_arch::x86::sse2::_mm_store_si128
  call void @_ZN4core9core_arch3x864sse215_mm_store_si12817hf1be0a1dfc55aeffE(<2 x i64>* %1, <2 x i64>* noalias nocapture dereferenceable(16) %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; hashbrown::raw::sse2::Group::match_empty_or_deleted
; Function Attrs: inlinehint nonlazybind uwtable
define internal i16 @_ZN9hashbrown3raw4sse25Group22match_empty_or_deleted17h761cb8a5c908ce29E(<2 x i64>* noalias nocapture dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca <2 x i64>, align 16
  %1 = alloca i16, align 2
  %_4 = load <2 x i64>, <2 x i64>* %self, align 16
  store <2 x i64> %_4, <2 x i64>* %0, align 16
; call core::core_arch::x86::sse2::_mm_movemask_epi8
  %_3 = call i32 @_ZN4core9core_arch3x864sse217_mm_movemask_epi817hb33ea44ba9951b61E(<2 x i64>* noalias nocapture dereferenceable(16) %0)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = trunc i32 %_3 to i16
  store i16 %_2, i16* %1, align 2
  %2 = load i16, i16* %1, align 2
  ret i16 %2
}

; hashbrown::raw::sse2::Group::convert_special_to_empty_and_full_to_deleted
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN9hashbrown3raw4sse25Group44convert_special_to_empty_and_full_to_deleted17h9f6ad88bea581a36E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, <2 x i64>* noalias nocapture dereferenceable(16) %self) unnamed_addr #1 {
start:
  %1 = alloca <2 x i64>, align 16
  %2 = alloca <2 x i64>, align 16
  %3 = alloca <2 x i64>, align 16
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = alloca <2 x i64>, align 16
  %8 = alloca <2 x i64>, align 16
; call core::core_arch::x86::sse2::_mm_setzero_si128
  call void @_ZN4core9core_arch3x864sse217_mm_setzero_si12817h265c6792c5b44cd8E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %8)
  %zero = load <2 x i64>, <2 x i64>* %8, align 16
  br label %bb1

bb1:                                              ; preds = %start
  %_5 = load <2 x i64>, <2 x i64>* %self, align 16
  store <2 x i64> %zero, <2 x i64>* %6, align 16
  store <2 x i64> %_5, <2 x i64>* %5, align 16
; call core::core_arch::x86::sse2::_mm_cmpgt_epi8
  call void @_ZN4core9core_arch3x864sse214_mm_cmpgt_epi817he91d6d8a2dc27ebfE(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %7, <2 x i64>* noalias nocapture dereferenceable(16) %6, <2 x i64>* noalias nocapture dereferenceable(16) %5)
  %special = load <2 x i64>, <2 x i64>* %7, align 16
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::core_arch::x86::sse2::_mm_set1_epi8
  call void @_ZN4core9core_arch3x864sse213_mm_set1_epi817h3f41c99697ed5bb3E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %4, i8 -128)
  %_8 = load <2 x i64>, <2 x i64>* %4, align 16
  br label %bb3

bb3:                                              ; preds = %bb2
  store <2 x i64> %special, <2 x i64>* %2, align 16
  store <2 x i64> %_8, <2 x i64>* %1, align 16
; call core::core_arch::x86::sse2::_mm_or_si128
  call void @_ZN4core9core_arch3x864sse212_mm_or_si12817h0fe632573683f204E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %3, <2 x i64>* noalias nocapture dereferenceable(16) %2, <2 x i64>* noalias nocapture dereferenceable(16) %1)
  %_6 = load <2 x i64>, <2 x i64>* %3, align 16
  br label %bb4

bb4:                                              ; preds = %bb3
  store <2 x i64> %_6, <2 x i64>* %0, align 16
  ret void
}

; hashbrown::raw::sse2::Group::load
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN9hashbrown3raw4sse25Group4load17h929c447c903befa1E(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %0, i8* %ptr) unnamed_addr #1 {
start:
  %1 = alloca <2 x i64>, align 16
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call <2 x i64>* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h704235c7bda62736E"(i8* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
; call core::core_arch::x86::sse2::_mm_loadu_si128
  call void @_ZN4core9core_arch3x864sse215_mm_loadu_si12817h02d4e740f8af9bffE(<2 x i64>* noalias nocapture sret(<2 x i64>) dereferenceable(16) %1, <2 x i64>* %_3)
  %_2 = load <2 x i64>, <2 x i64>* %1, align 16
  br label %bb2

bb2:                                              ; preds = %bb1
  store <2 x i64> %_2, <2 x i64>* %0, align 16
  ret void
}

; hashbrown::raw::alloc::inner::do_alloc
; Function Attrs: nonlazybind uwtable
define i8* @_ZN9hashbrown3raw5alloc5inner8do_alloc17hd7ef7ea622c443ddE(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %0 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h513321190ee97a91E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %layout.0, i64 %layout.1)
  %_4.0 = extractvalue { i8*, i64 } %0, 0
  %_4.1 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::map
  %_3 = call i8* @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hb34c9b3908998e8aE"(i8* %_4.0, i64 %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::result::Result<T,E>::map_err
  %1 = call i8* @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h76aef3f46897b8eaE"(i8* %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %1
}

; hashbrown::raw::alloc::inner::do_alloc::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN9hashbrown3raw5alloc5inner8do_alloc28_$u7b$$u7b$closure$u7d$$u7d$17h89c0d8a15c60659cE"() unnamed_addr #1 {
start:
  ret void
}

; hashbrown::raw::alloc::inner::do_alloc::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN9hashbrown3raw5alloc5inner8do_alloc28_$u7b$$u7b$closure$u7d$$u7d$17hf8cdfb87f2d48793E"(i8* nonnull %ptr.0, i64 %ptr.1) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17hc232b0a3a4545788E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; hashbrown::raw::bitmask::BitMask::any_bit_set
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN9hashbrown3raw7bitmask7BitMask11any_bit_set17h61e7f7be2421c466E(i16 %self) unnamed_addr #1 {
start:
  %0 = icmp ne i16 %self, 0
  ret i1 %0
}

; hashbrown::raw::bitmask::BitMask::lowest_set_bit
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN9hashbrown3raw7bitmask7BitMask14lowest_set_bit17hb4227454fdcec9d3E(i16 %self) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = icmp eq i16 %self, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %2, align 8
  br label %bb4

bb2:                                              ; preds = %start
; call hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero
  %_3 = call i64 @_ZN9hashbrown3raw7bitmask7BitMask22lowest_set_bit_nonzero17h441fdeaefde91fabE(i16 %self)
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %4 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %3, i32 0, i32 1
  store i64 %_3, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %5, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8, !range !2
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i64, i64 } undef, i64 %7, 0
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1
  ret { i64, i64 } %11
}

; hashbrown::raw::bitmask::BitMask::remove_lowest_bit
; Function Attrs: inlinehint nonlazybind uwtable
define internal i16 @_ZN9hashbrown3raw7bitmask7BitMask17remove_lowest_bit17h8a4c096eb2859576E(i16 %self) unnamed_addr #1 {
start:
  %0 = alloca i16, align 2
  %_4 = sub i16 %self, 1
  %_2 = and i16 %self, %_4
  store i16 %_2, i16* %0, align 2
  %1 = load i16, i16* %0, align 2
  ret i16 %1
}

; hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN9hashbrown3raw7bitmask7BitMask22lowest_set_bit_nonzero17h441fdeaefde91fabE(i16 %self) unnamed_addr #1 {
start:
  %0 = alloca i16, align 2
  %1 = call i16 @llvm.cttz.i16(i16 %self, i1 true)
  store i16 %1, i16* %0, align 2
  %_3 = load i16, i16* %0, align 2
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = zext i16 %_3 to i64
  %2 = udiv i64 %_2, 1
  ret i64 %2
}

; hashbrown::raw::bitmask::BitMask::invert
; Function Attrs: inlinehint nonlazybind uwtable
define internal i16 @_ZN9hashbrown3raw7bitmask7BitMask6invert17h194325f3705750f2E(i16 %self) unnamed_addr #1 {
start:
  %0 = alloca i16, align 2
  %_2 = xor i16 %self, -1
  store i16 %_2, i16* %0, align 2
  %1 = load i16, i16* %0, align 2
  ret i16 %1
}

; hashbrown::raw::is_full
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN9hashbrown3raw7is_full17h169da8557f0373e9E(i8 %ctrl) unnamed_addr #1 {
start:
  %_2 = and i8 %ctrl, -128
  %0 = icmp eq i8 %_2, 0
  ret i1 %0
}

; hashbrown::raw::ProbeSeq::move_next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN9hashbrown3raw8ProbeSeq9move_next17h4ed1df9a9d1ae40cE({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %bucket_mask) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  %3 = add i64 %2, 16
  store i64 %3, i64* %0, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %_3 = load i64, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %6 = bitcast { i64, i64 }* %self to i64*
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %_3
  store i64 %8, i64* %5, align 8
  %9 = bitcast { i64, i64 }* %self to i64*
  %10 = bitcast { i64, i64 }* %self to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, %bucket_mask
  store i64 %12, i64* %9, align 8
  ret void
}

; probe::_init_
; Function Attrs: nonlazybind uwtable
define void @_ZN5probe6_init_17hfe36c3c52304281dE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i128, align 8
  %1 = alloca i128, align 8
  %2 = alloca i128, align 8
  %3 = alloca i128, align 8
  %4 = alloca i128, align 8
  %5 = alloca i128, align 8
  %6 = alloca { i8*, i32 }, align 8
  %_114 = alloca i8, align 1
  %_104 = alloca %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", align 8
  %_103 = alloca %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", align 8
  %_101 = alloca i64*, align 8
  %_94 = alloca %"core::fmt::Arguments", align 8
  %_91 = alloca %"alloc::string::String", align 8
  %_90 = alloca %_ShuffledOrder, align 8
  %_88 = alloca i64*, align 8
  %_82 = alloca %"core::result::Result<usize, std::io::error::Error>", align 8
  %shuffle_order_str = alloca %"alloc::string::String", align 8
  %_73 = alloca %"core::fmt::Arguments", align 8
  %shuffle_stream = alloca i32, align 4
  %_69 = alloca %"std::fs::OpenOptions", align 4
  %shuffle_stream_res = alloca %"core::result::Result<std::fs::File, std::io::error::Error>", align 8
  %_56 = alloca %"core::fmt::Arguments", align 8
  %_52 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_42 = alloca %"core::fmt::Arguments", align 8
  %_38 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_33 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>", align 8
  %file_stream = alloca { i64*, i8 }, align 8
  %_26 = alloca %"std::fs::OpenOptions", align 4
  %_18 = alloca %"core::result::Result<std::fs::File, std::io::error::Error>", align 8
  %_16 = alloca %"std::sync::mutex::Mutex<std::fs::File>", align 8
  %_14 = alloca i64*, align 8
  %_12 = alloca %"std::sync::mutex::Mutex<i32>", align 8
  %_10 = alloca i64*, align 8
  %_8 = alloca %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>", align 8
  %_7 = alloca %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>", align 8
  %_5 = alloca i64*, align 8
  %_3 = alloca %_ProbeSemaphore, align 8
  %_1 = alloca i64*, align 8
  store i8 0, i8* %_114, align 1
; call probe::_ProbeSemaphore::new
  call void @_ZN5probe15_ProbeSemaphore3new17h642f8d7369a072e8E(%_ProbeSemaphore* noalias nocapture sret(%_ProbeSemaphore) dereferenceable(32) %_3, i32 1)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::sync::Arc<T>::new
  %_2 = call nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h594516a9034e590bE"(%_ProbeSemaphore* noalias nocapture dereferenceable(32) %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i64* %_2, i64** %_1, align 8
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<probe::_ProbeSemaphore>>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$probe.._ProbeSemaphore$GT$$GT$$GT$17h4cc3c18c1de1178fE"(i64** bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_SEM17h1ff8d86fa638bd83E to i64**))
          to label %bb51 unwind label %cleanup

bb51:                                             ; preds = %bb2
  %7 = load i64*, i64** %_1, align 8
  store i64* %7, i64** bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_SEM17h1ff8d86fa638bd83E to i64**), align 8
; call std::collections::hash::map::HashMap<K,V>::new
  call void @"_ZN3std11collections4hash3map20HashMap$LT$K$C$V$GT$3new17h897dfa1f07da2d42E"(%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* noalias nocapture sret(%"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>") dereferenceable(48) %_8)
  br label %bb3

bb50:                                             ; preds = %cleanup
  %8 = load i64*, i64** %_1, align 8
  store i64* %8, i64** bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_SEM17h1ff8d86fa638bd83E to i64**), align 8
  br label %bb49

cleanup:                                          ; preds = %bb2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb50

bb49:                                             ; preds = %bb67, %bb68, %bb48, %bb56, %bb54, %bb52, %bb50
  %14 = bitcast { i8*, i32 }* %6 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb3:                                              ; preds = %bb51
; call std::sync::mutex::Mutex<T>::new
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h52445d40790d1897E"(%"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* noalias nocapture sret(%"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>") dereferenceable(64) %_7, %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* noalias nocapture dereferenceable(48) %_8)
  br label %bb4

bb4:                                              ; preds = %bb3
; call alloc::sync::Arc<T>::new
  %_6 = call nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17hdaa2466a72be110aE"(%"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* noalias nocapture dereferenceable(64) %_7)
  br label %bb5

bb5:                                              ; preds = %bb4
  store i64* %_6, i64** %_5, align 8
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>>>
  invoke void @"_ZN4core3ptr175drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$$GT$$GT$17h82888fad8e09ca80E"(i64** bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_MAP17h391daae210d64eb1E to i64**))
          to label %bb53 unwind label %cleanup1

bb53:                                             ; preds = %bb5
  %20 = load i64*, i64** %_5, align 8
  store i64* %20, i64** bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_MAP17h391daae210d64eb1E to i64**), align 8
; call std::sync::mutex::Mutex<T>::new
  %21 = call i128 @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h98151f38a867f203E"(i32 1)
  store i128 %21, i128* %5, align 8
  %22 = bitcast %"std::sync::mutex::Mutex<i32>"* %_12 to i8*
  %23 = bitcast i128* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  br label %bb6

bb52:                                             ; preds = %cleanup1
  %24 = load i64*, i64** %_5, align 8
  store i64* %24, i64** bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_MAP17h391daae210d64eb1E to i64**), align 8
  br label %bb49

cleanup1:                                         ; preds = %bb5
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb52

bb6:                                              ; preds = %bb53
  %30 = bitcast %"std::sync::mutex::Mutex<i32>"* %_12 to i128*
  %31 = load i128, i128* %30, align 8
; call alloc::sync::Arc<T>::new
  %_11 = call nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17haebb950ed951d03aE"(i128 %31)
  br label %bb7

bb7:                                              ; preds = %bb6
  store i64* %_11, i64** %_10, align 8
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<i32>>>>
  invoke void @"_ZN4core3ptr107drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$i32$GT$$GT$$GT$$GT$17h8371d2d0d6263221E"(i64** bitcast (<{ [8 x i8] }>* @_ZN5probe21_PROBE_THRD_CUSTOM_ID17h978374fd36dfa2b3E to i64**))
          to label %bb55 unwind label %cleanup2

bb55:                                             ; preds = %bb7
  %32 = load i64*, i64** %_10, align 8
  store i64* %32, i64** bitcast (<{ [8 x i8] }>* @_ZN5probe21_PROBE_THRD_CUSTOM_ID17h978374fd36dfa2b3E to i64**), align 8
; call std::fs::OpenOptions::new
  %33 = call i128 @_ZN3std2fs11OpenOptions3new17h6b9455b7cbc43679E()
  store i128 %33, i128* %4, align 8
  %34 = bitcast %"std::fs::OpenOptions"* %_26 to i8*
  %35 = bitcast i128* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 8 %35, i64 16, i1 false)
  br label %bb8

bb54:                                             ; preds = %cleanup2
  %36 = load i64*, i64** %_10, align 8
  store i64* %36, i64** bitcast (<{ [8 x i8] }>* @_ZN5probe21_PROBE_THRD_CUSTOM_ID17h978374fd36dfa2b3E to i64**), align 8
  br label %bb49

cleanup2:                                         ; preds = %bb7
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  %39 = extractvalue { i8*, i32 } %37, 1
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 0
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 1
  store i32 %39, i32* %41, align 8
  br label %bb54

bb8:                                              ; preds = %bb55
; call std::fs::OpenOptions::write
  %_24 = call align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions5write17h7a3ac3ee6d53c986E(%"std::fs::OpenOptions"* align 4 dereferenceable(16) %_26, i1 zeroext true)
  br label %bb9

bb9:                                              ; preds = %bb8
; call std::fs::OpenOptions::create
  %_22 = call align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions6create17h844069579c36805bE(%"std::fs::OpenOptions"* align 4 dereferenceable(16) %_24, i1 zeroext true)
  br label %bb10

bb10:                                             ; preds = %bb9
; call std::fs::OpenOptions::append
  %_20 = call align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions6append17h8434c75b524a9103E(%"std::fs::OpenOptions"* align 4 dereferenceable(16) %_22, i1 zeroext true)
  br label %bb11

bb11:                                             ; preds = %bb10
; call std::fs::OpenOptions::open
  call void @_ZN3std2fs11OpenOptions4open17h1cda0d010ba70858E(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24) %_18, %"std::fs::OpenOptions"* align 4 dereferenceable(16) %_20, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc646 to [0 x i8]*), i64 7)
  br label %bb12

bb12:                                             ; preds = %bb11
; call core::result::Result<T,E>::unwrap
  %_17 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h2e2cb0b099b862afE"(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture dereferenceable(24) %_18, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc648 to %"core::panic::location::Location"*)), !range !13
  br label %bb13

bb13:                                             ; preds = %bb12
; call std::sync::mutex::Mutex<T>::new
  %42 = call i128 @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h7ad5700cb02aded8E"(i32 %_17)
  store i128 %42, i128* %3, align 8
  %43 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %_16 to i8*
  %44 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  br label %bb14

bb14:                                             ; preds = %bb13
  %45 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %_16 to i128*
  %46 = load i128, i128* %45, align 8
; call alloc::sync::Arc<T>::new
  %_15 = call nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h316493d06dc9d257E"(i128 %46)
  br label %bb15

bb15:                                             ; preds = %bb14
  store i64* %_15, i64** %_14, align 8
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<std::fs::File>>>>
  invoke void @"_ZN4core3ptr117drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$$GT$17habdc8cb6bc6a397aE"(i64** bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to i64**))
          to label %bb57 unwind label %cleanup3

bb57:                                             ; preds = %bb15
  %47 = load i64*, i64** %_14, align 8
  store i64* %47, i64** bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to i64**), align 8
  %48 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to {}**), align 8
  %49 = icmp eq {}* %48, null
  %_30 = select i1 %49, i64 0, i64 1
  %50 = icmp eq i64 %_30, 1
  br i1 %50, label %bb16, label %bb28

bb56:                                             ; preds = %cleanup3
  %51 = load i64*, i64** %_14, align 8
  store i64* %51, i64** bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to i64**), align 8
  br label %bb49

cleanup3:                                         ; preds = %bb15
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = extractvalue { i8*, i32 } %52, 1
  %55 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 0
  store i8* %53, i8** %55, align 8
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 1
  store i32 %54, i32* %56, align 8
  br label %bb56

bb16:                                             ; preds = %bb57
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_35 = call align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h658bbfca12a16b87E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to i64**))
  br label %bb17

bb28:                                             ; preds = %bb27, %bb57
; call std::fs::OpenOptions::new
  %57 = call i128 @_ZN3std2fs11OpenOptions3new17h6b9455b7cbc43679E()
  store i128 %57, i128* %0, align 8
  %58 = bitcast %"std::fs::OpenOptions"* %_69 to i8*
  %59 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 8 %59, i64 16, i1 false)
  br label %bb29

bb17:                                             ; preds = %bb16
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17ha01c69d09bf051ccE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %_33, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %_35)
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::result::Result<T,E>::unwrap
  %60 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hdb8f59693056e8c1E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture dereferenceable(24) %_33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc650 to %"core::panic::location::Location"*))
  store { i64*, i8 } %60, { i64*, i8 }* %file_stream, align 8
  br label %bb19

bb19:                                             ; preds = %bb18
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_40 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4983f58433b255ffE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb20 unwind label %cleanup4

bb20:                                             ; preds = %bb19
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h759598569139005dE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_42, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc51 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc446 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb21 unwind label %cleanup4

bb48:                                             ; preds = %cleanup4
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %file_stream) #21
  br label %bb49

cleanup4:                                         ; preds = %bb26, %bb25, %bb24, %bb23, %bb22, %bb21, %bb20, %bb19
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  %63 = extractvalue { i8*, i32 } %61, 1
  %64 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 0
  store i8* %62, i8** %64, align 8
  %65 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 1
  store i32 %63, i32* %65, align 8
  br label %bb48

bb21:                                             ; preds = %bb20
; invoke std::io::Write::write_fmt
  %66 = invoke i128 @_ZN3std2io5Write9write_fmt17hf9981e1ad317e608E(i32* align 4 dereferenceable(4) %_40, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_42)
          to label %bb22 unwind label %cleanup4

bb22:                                             ; preds = %bb21
  store i128 %66, i128* %2, align 8
  %67 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_38 to i8*
  %68 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 16, i1 false)
  %69 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_38 to i128*
  %70 = load i128, i128* %69, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1c5271af24cef938E"(i128 %70, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc717 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc653 to %"core::panic::location::Location"*))
          to label %bb23 unwind label %cleanup4

bb23:                                             ; preds = %bb22
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_54 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4983f58433b255ffE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb24 unwind label %cleanup4

bb24:                                             ; preds = %bb23
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h759598569139005dE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_56, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc58 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc446 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb25 unwind label %cleanup4

bb25:                                             ; preds = %bb24
; invoke std::io::Write::write_fmt
  %71 = invoke i128 @_ZN3std2io5Write9write_fmt17hf9981e1ad317e608E(i32* align 4 dereferenceable(4) %_54, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_56)
          to label %bb26 unwind label %cleanup4

bb26:                                             ; preds = %bb25
  store i128 %71, i128* %1, align 8
  %72 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_52 to i8*
  %73 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 16, i1 false)
  %74 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_52 to i128*
  %75 = load i128, i128* %74, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1c5271af24cef938E"(i128 %75, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc717 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc656 to %"core::panic::location::Location"*))
          to label %bb27 unwind label %cleanup4

bb27:                                             ; preds = %bb26
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %file_stream)
  br label %bb28

bb29:                                             ; preds = %bb28
; call std::fs::OpenOptions::read
  %_67 = call align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions4read17h7dd9beaf9e60b894E(%"std::fs::OpenOptions"* align 4 dereferenceable(16) %_69, i1 zeroext true)
  br label %bb30

bb30:                                             ; preds = %bb29
; call std::fs::OpenOptions::open
  call void @_ZN3std2fs11OpenOptions4open17h1cda0d010ba70858E(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24) %shuffle_stream_res, %"std::fs::OpenOptions"* align 4 dereferenceable(16) %_67, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc657 to [0 x i8]*), i64 7)
  br label %bb31

bb31:                                             ; preds = %bb30
  %76 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %shuffle_stream_res to i32*
  %77 = load i32, i32* %76, align 8, !range !61
  %_70 = zext i32 %77 to i64
  switch i64 %_70, label %bb33 [
    i64 0, label %bb34
    i64 1, label %bb32
  ]

bb33:                                             ; preds = %bb31
  unreachable

bb34:                                             ; preds = %bb31
  %78 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %shuffle_stream_res to %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"*
  %79 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Ok", %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4, !range !13
  store i32 %80, i32* %shuffle_stream, align 4
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h759598569139005dE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_73, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc71 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc446 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb35 unwind label %cleanup7

bb32:                                             ; preds = %bb31
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h759598569139005dE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_94, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc66 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc446 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb42 unwind label %cleanup5

bb42:                                             ; preds = %bb32
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17hfd70903caad28085E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_94)
          to label %bb43 unwind label %cleanup5

bb68:                                             ; preds = %bb47, %bb60, %cleanup5
  %81 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %shuffle_stream_res to i32*
  %82 = load i32, i32* %81, align 8, !range !61
  %_116 = zext i32 %82 to i64
  %83 = icmp eq i64 %_116, 0
  br i1 %83, label %bb49, label %bb67

cleanup5:                                         ; preds = %bb59, %bb45, %bb44, %bb43, %bb42, %bb32
  %84 = landingpad { i8*, i32 }
          cleanup
  %85 = extractvalue { i8*, i32 } %84, 0
  %86 = extractvalue { i8*, i32 } %84, 1
  %87 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 0
  store i8* %85, i8** %87, align 8
  %88 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 1
  store i32 %86, i32* %88, align 8
  br label %bb68

bb43:                                             ; preds = %bb42
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hac4933d5ed8c4dd5E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* noalias nocapture sret(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>") dereferenceable(24) %_104)
          to label %bb44 unwind label %cleanup5

bb44:                                             ; preds = %bb43
; invoke std::sync::mutex::Mutex<T>::new
  invoke void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17hbd06b2fa9e9834f8E"(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* noalias nocapture sret(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>") dereferenceable(40) %_103, %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* noalias nocapture dereferenceable(24) %_104)
          to label %bb45 unwind label %cleanup5

bb45:                                             ; preds = %bb44
; invoke alloc::sync::Arc<T>::new
  %_102 = invoke nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17haa7e3e030d35ba9aE"(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* noalias nocapture dereferenceable(40) %_103)
          to label %bb46 unwind label %cleanup5

bb46:                                             ; preds = %bb45
  store i64* %_102, i64** %_101, align 8
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>>>
  invoke void @"_ZN4core3ptr167drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$$GT$$GT$17h8c75b5e02ddf0eaaE"(i64** bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_EXE17hb3ee71562d869e1cE to i64**))
          to label %bb61 unwind label %cleanup6

bb61:                                             ; preds = %bb46
  %89 = load i64*, i64** %_101, align 8
  store i64* %89, i64** bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_EXE17hb3ee71562d869e1cE to i64**), align 8
  br label %bb64

bb60:                                             ; preds = %cleanup6
  %90 = load i64*, i64** %_101, align 8
  store i64* %90, i64** bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_EXE17hb3ee71562d869e1cE to i64**), align 8
  br label %bb68

cleanup6:                                         ; preds = %bb46
  %91 = landingpad { i8*, i32 }
          cleanup
  %92 = extractvalue { i8*, i32 } %91, 0
  %93 = extractvalue { i8*, i32 } %91, 1
  %94 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 0
  store i8* %92, i8** %94, align 8
  %95 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 1
  store i32 %93, i32* %95, align 8
  br label %bb60

bb64:                                             ; preds = %bb59, %bb61
  %96 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %shuffle_stream_res to i32*
  %97 = load i32, i32* %96, align 8, !range !61
  %_115 = zext i32 %97 to i64
  %98 = icmp eq i64 %_115, 0
  br i1 %98, label %bb62, label %bb63

bb35:                                             ; preds = %bb34
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17hfd70903caad28085E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_73)
          to label %bb36 unwind label %cleanup7

bb47:                                             ; preds = %bb65, %bb66, %cleanup7
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17hd5d8e8584b5106e5E"(i32* %shuffle_stream) #21
  br label %bb68

cleanup7:                                         ; preds = %bb36, %bb35, %bb34
  %99 = landingpad { i8*, i32 }
          cleanup
  %100 = extractvalue { i8*, i32 } %99, 0
  %101 = extractvalue { i8*, i32 } %99, 1
  %102 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 0
  store i8* %100, i8** %102, align 8
  %103 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 1
  store i32 %101, i32* %103, align 8
  br label %bb47

bb36:                                             ; preds = %bb35
; invoke alloc::string::String::new
  invoke void @_ZN5alloc6string6String3new17h7ba373bb77a1086bE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %shuffle_order_str)
          to label %bb37 unwind label %cleanup7

bb37:                                             ; preds = %bb36
  store i8 1, i8* %_114, align 1
; invoke <std::fs::File as std::io::Read>::read_to_string
  invoke void @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$14read_to_string17h7565b43626013008E"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<usize, std::io::error::Error>") dereferenceable(24) %_82, i32* align 4 dereferenceable(4) %shuffle_stream, %"alloc::string::String"* align 8 dereferenceable(24) %shuffle_order_str)
          to label %bb38 unwind label %cleanup8

bb38:                                             ; preds = %bb37
; invoke core::result::Result<T,E>::expect
  %_81 = invoke i64 @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hd871c09aa576b56bE"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture dereferenceable(24) %_82, [0 x i8]* nonnull align 1 bitcast (<{ [23 x i8] }>* @alloc658 to [0 x i8]*), i64 23, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc660 to %"core::panic::location::Location"*))
          to label %bb39 unwind label %cleanup8

bb66:                                             ; preds = %bb58, %cleanup8
  %104 = load i8, i8* %_114, align 1, !range !4
  %105 = trunc i8 %104 to i1
  br i1 %105, label %bb65, label %bb47

cleanup8:                                         ; preds = %bb40, %bb39, %bb38, %bb37
  %106 = landingpad { i8*, i32 }
          cleanup
  %107 = extractvalue { i8*, i32 } %106, 0
  %108 = extractvalue { i8*, i32 } %106, 1
  %109 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 0
  store i8* %107, i8** %109, align 8
  %110 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 1
  store i32 %108, i32* %110, align 8
  br label %bb66

bb39:                                             ; preds = %bb38
  store i8 0, i8* %_114, align 1
  %111 = bitcast %"alloc::string::String"* %_91 to i8*
  %112 = bitcast %"alloc::string::String"* %shuffle_order_str to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 24, i1 false)
; invoke probe::_ShuffledOrder::new
  invoke void @_ZN5probe14_ShuffledOrder3new17h7a2159c6a68ed458E(%_ShuffledOrder* noalias nocapture sret(%_ShuffledOrder) dereferenceable(96) %_90, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_91)
          to label %bb40 unwind label %cleanup8

bb40:                                             ; preds = %bb39
; invoke alloc::sync::Arc<T>::new
  %_89 = invoke nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h154cb68e20c954f4E"(%_ShuffledOrder* noalias nocapture dereferenceable(96) %_90)
          to label %bb41 unwind label %cleanup8

bb41:                                             ; preds = %bb40
  store i64* %_89, i64** %_88, align 8
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<probe::_ShuffledOrder>>>
  invoke void @"_ZN4core3ptr94drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$probe.._ShuffledOrder$GT$$GT$$GT$17hc7e7596d13740161E"(i64** bitcast (<{ [8 x i8] }>* @_ZN5probe15_SHUFFLED_ORDER17hb0f2f5030d42cf53E to i64**))
          to label %bb59 unwind label %cleanup9

bb59:                                             ; preds = %bb41
  %113 = load i64*, i64** %_88, align 8
  store i64* %113, i64** bitcast (<{ [8 x i8] }>* @_ZN5probe15_SHUFFLED_ORDER17hb0f2f5030d42cf53E to i64**), align 8
  store i8 0, i8* %_114, align 1
; invoke core::ptr::drop_in_place<std::fs::File>
  invoke void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17hd5d8e8584b5106e5E"(i32* %shuffle_stream)
          to label %bb64 unwind label %cleanup5

bb58:                                             ; preds = %cleanup9
  %114 = load i64*, i64** %_88, align 8
  store i64* %114, i64** bitcast (<{ [8 x i8] }>* @_ZN5probe15_SHUFFLED_ORDER17hb0f2f5030d42cf53E to i64**), align 8
  br label %bb66

cleanup9:                                         ; preds = %bb41
  %115 = landingpad { i8*, i32 }
          cleanup
  %116 = extractvalue { i8*, i32 } %115, 0
  %117 = extractvalue { i8*, i32 } %115, 1
  %118 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 0
  store i8* %116, i8** %118, align 8
  %119 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i32 0, i32 1
  store i32 %117, i32* %119, align 8
  br label %bb58

bb65:                                             ; preds = %bb66
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h6ede43792275be04E"(%"alloc::string::String"* %shuffle_order_str) #21
  br label %bb47

bb67:                                             ; preds = %bb68
; call core::ptr::drop_in_place<core::result::Result<std::fs::File,std::io::error::Error>>
  call void @"_ZN4core3ptr86drop_in_place$LT$core..result..Result$LT$std..fs..File$C$std..io..error..Error$GT$$GT$17h5ea95de40defd105E"(%"core::result::Result<std::fs::File, std::io::error::Error>"* %shuffle_stream_res) #21
  br label %bb49

bb62:                                             ; preds = %bb63, %bb64
  ret void

bb63:                                             ; preds = %bb64
; call core::ptr::drop_in_place<core::result::Result<std::fs::File,std::io::error::Error>>
  call void @"_ZN4core3ptr86drop_in_place$LT$core..result..Result$LT$std..fs..File$C$std..io..error..Error$GT$$GT$17h5ea95de40defd105E"(%"core::result::Result<std::fs::File, std::io::error::Error>"* %shuffle_stream_res)
  br label %bb62
}

; probe::_final_
; Function Attrs: nonlazybind uwtable
define void @_ZN5probe7_final_17h5b45d21d27775ad9E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i128, align 8
  %1 = alloca i128, align 8
  %2 = alloca i128, align 8
  %3 = alloca i128, align 8
  %4 = alloca { i8*, i32 }, align 8
  %_99 = alloca i64*, align 8
  %_98 = alloca [1 x { i8*, i64* }], align 8
  %_91 = alloca %"core::fmt::Arguments", align 8
  %_89 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %node = alloca %_ProbeNode*, align 8
  %_81 = alloca i64*, align 8
  %iter1 = alloca { i64*, i64* }, align 8
  %_68 = alloca i32*, align 8
  %_67 = alloca [1 x { i8*, i64* }], align 8
  %_60 = alloca %"core::fmt::Arguments", align 8
  %_58 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_50 = alloca i64*, align 8
  %iter = alloca { i64*, i64* }, align 8
  %i = alloca i32, align 4
  %_39 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>", align 8
  %vec_thrds = alloca { i64*, i8 }, align 8
  %_33 = alloca %"std::fs::OpenOptions", align 4
  %_25 = alloca %"core::result::Result<std::fs::File, std::io::error::Error>", align 8
  %struct_stream = alloca i32, align 4
  %_15 = alloca %"core::fmt::Arguments", align 8
  %_11 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_6 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>", align 8
  %file_stream = alloca { i64*, i8 }, align 8
  %5 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to {}**), align 8
  %6 = icmp eq {}* %5, null
  %_3 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_3, 1
  br i1 %7, label %bb1, label %bb9

bb1:                                              ; preds = %start
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_8 = call align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h658bbfca12a16b87E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to i64**))
  br label %bb2

bb9:                                              ; preds = %bb8, %start
; call std::fs::OpenOptions::new
  %8 = call i128 @_ZN3std2fs11OpenOptions3new17h6b9455b7cbc43679E()
  store i128 %8, i128* %2, align 8
  %9 = bitcast %"std::fs::OpenOptions"* %_33 to i8*
  %10 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 8 %10, i64 16, i1 false)
  br label %bb10

bb2:                                              ; preds = %bb1
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17ha01c69d09bf051ccE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %_6, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %_8)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::result::Result<T,E>::unwrap
  %11 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hdb8f59693056e8c1E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture dereferenceable(24) %_6, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc662 to %"core::panic::location::Location"*))
  store { i64*, i8 } %11, { i64*, i8 }* %file_stream, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_13 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4983f58433b255ffE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h759598569139005dE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_15, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc132 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc446 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb6 unwind label %cleanup

bb44:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %file_stream) #21
  br label %bb45

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb44

bb6:                                              ; preds = %bb5
; invoke std::io::Write::write_fmt
  %17 = invoke i128 @_ZN3std2io5Write9write_fmt17hf9981e1ad317e608E(i32* align 4 dereferenceable(4) %_13, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_15)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  store i128 %17, i128* %3, align 8
  %18 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_11 to i8*
  %19 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false)
  %20 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_11 to i128*
  %21 = load i128, i128* %20, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1c5271af24cef938E"(i128 %21, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc717 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc665 to %"core::panic::location::Location"*))
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %file_stream)
  br label %bb9

bb45:                                             ; preds = %bb43, %bb44
  %22 = bitcast { i8*, i32 }* %4 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27

bb10:                                             ; preds = %bb9
; call std::fs::OpenOptions::write
  %_31 = call align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions5write17h7a3ac3ee6d53c986E(%"std::fs::OpenOptions"* align 4 dereferenceable(16) %_33, i1 zeroext true)
  br label %bb11

bb11:                                             ; preds = %bb10
; call std::fs::OpenOptions::create
  %_29 = call align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions6create17h844069579c36805bE(%"std::fs::OpenOptions"* align 4 dereferenceable(16) %_31, i1 zeroext true)
  br label %bb12

bb12:                                             ; preds = %bb11
; call std::fs::OpenOptions::append
  %_27 = call align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions6append17h8434c75b524a9103E(%"std::fs::OpenOptions"* align 4 dereferenceable(16) %_29, i1 zeroext true)
  br label %bb13

bb13:                                             ; preds = %bb12
; call std::fs::OpenOptions::open
  call void @_ZN3std2fs11OpenOptions4open17h1cda0d010ba70858E(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24) %_25, %"std::fs::OpenOptions"* align 4 dereferenceable(16) %_27, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc666 to [0 x i8]*), i64 6)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::result::Result<T,E>::unwrap
  %28 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h2e2cb0b099b862afE"(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture dereferenceable(24) %_25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc668 to %"core::panic::location::Location"*)), !range !13
  store i32 %28, i32* %struct_stream, align 4
  br label %bb15

bb15:                                             ; preds = %bb14
  %29 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_EXE17hb3ee71562d869e1cE to {}**), align 8
  %30 = icmp eq {}* %29, null
  %_36 = select i1 %30, i64 0, i64 1
  %31 = icmp eq i64 %_36, 1
  br i1 %31, label %bb16, label %bb40

bb16:                                             ; preds = %bb15
; invoke <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_41 = invoke align 8 dereferenceable(40) %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h35e4a8216d4bf9a7E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_EXE17hb3ee71562d869e1cE to i64**))
          to label %bb17 unwind label %cleanup2

bb40:                                             ; preds = %bb24, %bb15
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17hd5d8e8584b5106e5E"(i32* %struct_stream)
  br label %bb41

bb17:                                             ; preds = %bb16
; invoke std::sync::mutex::Mutex<T>::lock
  invoke void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h7129a9f664b9b485E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>") dereferenceable(24) %_39, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* align 8 dereferenceable(40) %_41)
          to label %bb18 unwind label %cleanup2

bb43:                                             ; preds = %bb42, %cleanup2
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17hd5d8e8584b5106e5E"(i32* %struct_stream) #21
  br label %bb45

cleanup2:                                         ; preds = %bb24, %bb18, %bb17, %bb16
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  %34 = extractvalue { i8*, i32 } %32, 1
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %34, i32* %36, align 8
  br label %bb43

bb18:                                             ; preds = %bb17
; invoke core::result::Result<T,E>::unwrap
  %37 = invoke { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h5e40491ab103111cE"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* noalias nocapture dereferenceable(24) %_39, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc670 to %"core::panic::location::Location"*))
          to label %bb19 unwind label %cleanup2

bb19:                                             ; preds = %bb18
  store { i64*, i8 } %37, { i64*, i8 }* %vec_thrds, align 8
  store i32 1, i32* %i, align 4
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
  %_46 = invoke align 8 dereferenceable(24) %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3009dca64cb46b9eE"({ i64*, i8 }* align 8 dereferenceable(16) %vec_thrds)
          to label %bb20 unwind label %cleanup3

bb20:                                             ; preds = %bb19
; invoke <&alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  %38 = invoke { i64*, i64* } @"_ZN94_$LT$$RF$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h105ad5183ceb6483E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %_46)
          to label %bb21 unwind label %cleanup3

bb42:                                             ; preds = %cleanup3
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>
  call void @"_ZN4core3ptr120drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$17h08690209491720deE"({ i64*, i8 }* %vec_thrds) #21
  br label %bb43

cleanup3:                                         ; preds = %bb39, %bb38, %bb37, %bb36, %bb33, %bb31, %panic, %bb29, %bb28, %bb27, %bb26, %bb22, %bb20, %bb19
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  %41 = extractvalue { i8*, i32 } %39, 1
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %41, i32* %43, align 8
  br label %bb42

bb21:                                             ; preds = %bb20
  %_44.0 = extractvalue { i64*, i64* } %38, 0
  %_44.1 = extractvalue { i64*, i64* } %38, 1
  %44 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 0
  store i64* %_44.0, i64** %44, align 8
  %45 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1
  store i64* %_44.1, i64** %45, align 8
  br label %bb22

bb22:                                             ; preds = %bb34, %bb21
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %46 = invoke align 8 dereferenceable_or_null(24) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2a4926a127b916b4E"({ i64*, i64* }* align 8 dereferenceable(16) %iter)
          to label %bb23 unwind label %cleanup3

bb23:                                             ; preds = %bb22
  store i64* %46, i64** %_50, align 8
  %47 = bitcast i64** %_50 to {}**
  %48 = load {}*, {}** %47, align 8
  %49 = icmp eq {}* %48, null
  %_53 = select i1 %49, i64 0, i64 1
  switch i64 %_53, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ]

bb25:                                             ; preds = %bb23
  unreachable

bb24:                                             ; preds = %bb23
; invoke core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>
  invoke void @"_ZN4core3ptr120drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$17h08690209491720deE"({ i64*, i8 }* %vec_thrds)
          to label %bb40 unwind label %cleanup2

bb26:                                             ; preds = %bb23
  %50 = bitcast i64** %_50 to %"alloc::vec::Vec<_ProbeNode>"**
  %val = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %50, align 8, !nonnull !3
  store i32* %i, i32** %_68, align 8
  %arg0 = load i32*, i32** %_68, align 8, !nonnull !3
; invoke core::fmt::ArgumentV1::new
  %51 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg0, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb27 unwind label %cleanup3

bb27:                                             ; preds = %bb26
  %_71.0 = extractvalue { i8*, i64* } %51, 0
  %_71.1 = extractvalue { i8*, i64* } %51, 1
  %52 = bitcast [1 x { i8*, i64* }]* %_67 to { i8*, i64* }*
  %53 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %52, i32 0, i32 0
  store i8* %_71.0, i8** %53, align 8
  %54 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %52, i32 0, i32 1
  store i64* %_71.1, i64** %54, align 8
  %_64.0 = bitcast [1 x { i8*, i64* }]* %_67 to [0 x { i8*, i64* }]*
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h759598569139005dE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_60, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc140 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_64.0, i64 1)
          to label %bb28 unwind label %cleanup3

bb28:                                             ; preds = %bb27
; invoke std::io::Write::write_fmt
  %55 = invoke i128 @_ZN3std2io5Write9write_fmt17hf9981e1ad317e608E(i32* align 4 dereferenceable(4) %struct_stream, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_60)
          to label %bb29 unwind label %cleanup3

bb29:                                             ; preds = %bb28
  store i128 %55, i128* %1, align 8
  %56 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_58 to i8*
  %57 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false)
  %58 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_58 to i128*
  %59 = load i128, i128* %58, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1c5271af24cef938E"(i128 %59, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc717 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc673 to %"core::panic::location::Location"*))
          to label %bb30 unwind label %cleanup3

bb30:                                             ; preds = %bb29
  %60 = load i32, i32* %i, align 4
  %61 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %60, i32 1)
  %_76.0 = extractvalue { i32, i1 } %61, 0
  %_76.1 = extractvalue { i32, i1 } %61, 1
  %62 = call i1 @llvm.expect.i1(i1 %_76.1, i1 false)
  br i1 %62, label %panic, label %bb31

bb31:                                             ; preds = %bb30
  store i32 %_76.0, i32* %i, align 4
; invoke <&alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  %63 = invoke { i64*, i64* } @"_ZN94_$LT$$RF$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h99cb38826792e413E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 dereferenceable(24) %val)
          to label %bb32 unwind label %cleanup3

panic:                                            ; preds = %bb30
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.4 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc675 to %"core::panic::location::Location"*)) #20
          to label %unreachable unwind label %cleanup3

unreachable:                                      ; preds = %panic
  unreachable

bb32:                                             ; preds = %bb31
  %_77.0 = extractvalue { i64*, i64* } %63, 0
  %_77.1 = extractvalue { i64*, i64* } %63, 1
  %64 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter1, i32 0, i32 0
  store i64* %_77.0, i64** %64, align 8
  %65 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter1, i32 0, i32 1
  store i64* %_77.1, i64** %65, align 8
  br label %bb33

bb33:                                             ; preds = %bb46, %bb32
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %66 = invoke align 8 dereferenceable_or_null(48) i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h164178bd8be68584E"({ i64*, i64* }* align 8 dereferenceable(16) %iter1)
          to label %bb34 unwind label %cleanup3

bb34:                                             ; preds = %bb33
  store i64* %66, i64** %_81, align 8
  %67 = bitcast i64** %_81 to {}**
  %68 = load {}*, {}** %67, align 8
  %69 = icmp eq {}* %68, null
  %_84 = select i1 %69, i64 0, i64 1
  switch i64 %_84, label %bb35 [
    i64 0, label %bb22
    i64 1, label %bb36
  ]

bb35:                                             ; preds = %bb34
  unreachable

bb36:                                             ; preds = %bb34
  %70 = bitcast i64** %_81 to %_ProbeNode**
  %val4 = load %_ProbeNode*, %_ProbeNode** %70, align 8, !nonnull !3
  store %_ProbeNode* %val4, %_ProbeNode** %node, align 8
  %71 = bitcast i64** %_99 to %_ProbeNode***
  store %_ProbeNode** %node, %_ProbeNode*** %71, align 8
  %72 = bitcast i64** %_99 to %_ProbeNode***
  %arg05 = load %_ProbeNode**, %_ProbeNode*** %72, align 8, !nonnull !3
; invoke core::fmt::ArgumentV1::new
  %73 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h40defbc0267408b4E(%_ProbeNode** align 8 dereferenceable(8) %arg05, i1 (%_ProbeNode**, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h919b8185d35b63a1E")
          to label %bb37 unwind label %cleanup3

bb37:                                             ; preds = %bb36
  %_102.0 = extractvalue { i8*, i64* } %73, 0
  %_102.1 = extractvalue { i8*, i64* } %73, 1
  %74 = bitcast [1 x { i8*, i64* }]* %_98 to { i8*, i64* }*
  %75 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %74, i32 0, i32 0
  store i8* %_102.0, i8** %75, align 8
  %76 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %74, i32 0, i32 1
  store i64* %_102.1, i64** %76, align 8
  %_95.0 = bitcast [1 x { i8*, i64* }]* %_98 to [0 x { i8*, i64* }]*
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h759598569139005dE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_91, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc148 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_95.0, i64 1)
          to label %bb38 unwind label %cleanup3

bb38:                                             ; preds = %bb37
; invoke std::io::Write::write_fmt
  %77 = invoke i128 @_ZN3std2io5Write9write_fmt17hf9981e1ad317e608E(i32* align 4 dereferenceable(4) %struct_stream, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_91)
          to label %bb39 unwind label %cleanup3

bb39:                                             ; preds = %bb38
  store i128 %77, i128* %0, align 8
  %78 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_89 to i8*
  %79 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 16, i1 false)
  %80 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_89 to i128*
  %81 = load i128, i128* %80, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1c5271af24cef938E"(i128 %81, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc717 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc678 to %"core::panic::location::Location"*))
          to label %bb46 unwind label %cleanup3

bb46:                                             ; preds = %bb39
  br label %bb33

bb41:                                             ; preds = %bb40
  ret void
}

; probe::_probe_random_sleep
; Function Attrs: nonlazybind uwtable
define void @_ZN5probe19_probe_random_sleep17h12324cd50b02f1fbE(i32 %0, i32 %1, i8* %func_name) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i128, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_83 = alloca { i64, i8* }, align 8
  %_51 = alloca { i32*, { [0 x i8]*, i64 }*, i32*, i32* }, align 8
  %_50 = alloca [4 x { i8*, i64* }], align 8
  %_43 = alloca %"core::fmt::Arguments", align 8
  %_39 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_34 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>", align 8
  %file_stream = alloca { i64*, i8 }, align 8
  %_25 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %seed = alloca i64, align 8
  %_8 = alloca i64*, align 8
  %tid = alloca i32, align 4
  %func_name_str = alloca { [0 x i8]*, i64 }, align 8
  %func_num = alloca i32, align 4
  %line = alloca i32, align 4
  store i32 %0, i32* %line, align 4
  store i32 %1, i32* %func_num, align 4
; call std::thread::current
  %4 = call nonnull i64* @_ZN3std6thread7current17hb893d0f3bb410e20E()
  store i64* %4, i64** %_8, align 8
  br label %bb1

bb1:                                              ; preds = %start
; invoke std::thread::Thread::id
  %_6 = invoke i64 @_ZN3std6thread6Thread2id17h09f5841d274de3ecE(i64** align 8 dereferenceable(8) %_8)
          to label %bb2 unwind label %cleanup, !range !26

bb2:                                              ; preds = %bb1
; invoke probe::__get_custom_tid
  %5 = invoke i32 @_ZN5probe16__get_custom_tid17h6843a04f0e90b9a7E(i64 %_6)
          to label %bb3 unwind label %cleanup

bb33:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<std::thread::Thread>
  call void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17h2d8562ab941878e6E"(i64** %_8) #21
  br label %bb34

cleanup:                                          ; preds = %bb2, %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb33

bb3:                                              ; preds = %bb2
  store i32 %5, i32* %tid, align 4
; call core::ptr::drop_in_place<std::thread::Thread>
  call void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17h2d8562ab941878e6E"(i64** %_8)
  br label %bb4

bb34:                                             ; preds = %bb32, %bb33
  %11 = bitcast { i8*, i32 }* %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb4:                                              ; preds = %bb3
  store i64 0, i64* %seed, align 8
  %_13 = call i64 @time(i64* %seed)
  br label %bb5

bb5:                                              ; preds = %bb4
; call <T as core::convert::TryInto<U>>::try_into
  %17 = call { i32, i32 } @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17hbd036edaca9e8b8dE"(i64 %_13)
  %_12.0 = extractvalue { i32, i32 } %17, 0
  %_12.1 = extractvalue { i32, i32 } %17, 1
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::result::Result<T,E>::unwrap
  %_11 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hcfed7405cbba1500E"(i32 %_12.0, i32 %_12.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc680 to %"core::panic::location::Location"*))
  br label %bb7

bb7:                                              ; preds = %bb6
  call void @srand(i32 %_11)
  br label %bb8

bb8:                                              ; preds = %bb7
  %_18 = call i32 @rand()
  br label %bb9

bb9:                                              ; preds = %bb8
; call <T as core::convert::TryInto<U>>::try_into
  %18 = call { i64, i64 } @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h3ddad06d30b40430E"(i32 %_18)
  %_17.0 = extractvalue { i64, i64 } %18, 0
  %_17.1 = extractvalue { i64, i64 } %18, 1
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::result::Result<T,E>::unwrap
  %r = call i64 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h4a29824094f3d1e0E"(i64 %_17.0, i64 %_17.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc682 to %"core::panic::location::Location"*))
  br label %bb11

bb11:                                             ; preds = %bb10
  %_21 = urem i64 %r, 10
; call core::time::Duration::from_millis
  %19 = call { i64, i32 } @_ZN4core4time8Duration11from_millis17heb330d5b4d994c52E(i64 %_21)
  %_20.0 = extractvalue { i64, i32 } %19, 0
  %_20.1 = extractvalue { i64, i32 } %19, 1
  br label %bb12

bb12:                                             ; preds = %bb11
; call std::thread::sleep
  call void @_ZN3std6thread5sleep17h5f3e2ec71796842dE(i64 %_20.0, i32 %_20.1)
  br label %bb13

bb13:                                             ; preds = %bb12
; call std::ffi::c_str::CStr::from_ptr
  %20 = call { %"std::ffi::c_str::CStr"*, i64 } @_ZN3std3ffi5c_str4CStr8from_ptr17hf488328b45c6fe23E(i8* %func_name)
  %_27.0 = extractvalue { %"std::ffi::c_str::CStr"*, i64 } %20, 0
  %_27.1 = extractvalue { %"std::ffi::c_str::CStr"*, i64 } %20, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call std::ffi::c_str::CStr::to_str
  call void @_ZN3std3ffi5c_str4CStr6to_str17hd770c2be353b80beE(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture sret(%"core::result::Result<&str, core::str::error::Utf8Error>") dereferenceable(24) %_25, %"std::ffi::c_str::CStr"* nonnull align 1 %_27.0, i64 %_27.1)
  br label %bb15

bb15:                                             ; preds = %bb14
; call core::result::Result<T,E>::unwrap
  %21 = call { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf42f716f00c0b51fE"(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture dereferenceable(24) %_25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc684 to %"core::panic::location::Location"*))
  %_24.0 = extractvalue { [0 x i8]*, i64 } %21, 0
  %_24.1 = extractvalue { [0 x i8]*, i64 } %21, 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %func_name_str, i32 0, i32 0
  store [0 x i8]* %_24.0, [0 x i8]** %22, align 8
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %func_name_str, i32 0, i32 1
  store i64 %_24.1, i64* %23, align 8
  %24 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to {}**), align 8
  %25 = icmp eq {}* %24, null
  %_31 = select i1 %25, i64 0, i64 1
  %26 = icmp eq i64 %_31, 1
  br i1 %26, label %bb17, label %bb30

bb17:                                             ; preds = %bb16
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_36 = call align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h658bbfca12a16b87E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to i64**))
  br label %bb18

bb30:                                             ; preds = %bb29, %bb16
  %_79 = load i32, i32* %tid, align 4
  %_80 = load i32, i32* %line, align 4
  %_81 = load i32, i32* %func_num, align 4
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %func_name_str, i32 0, i32 0
  %_82.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !nonnull !3
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %func_name_str, i32 0, i32 1
  %_82.1 = load i64, i64* %28, align 8
  %29 = bitcast { i64, i8* }* %_83 to i64*
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_83, i32 0, i32 0
  %31 = load i64, i64* %30, align 8, !range !2
  %32 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_83, i32 0, i32 1
  %33 = load i8*, i8** %32, align 8
; call probe::__record_thread_exe_order
  call void @_ZN5probe25__record_thread_exe_order17h441c9367396f9070E(i32 %_79, i32 -1, i32 %_80, i32 %_81, [0 x i8]* nonnull align 1 %_82.0, i64 %_82.1, i64 %31, i8* %33)
  br label %bb31

bb18:                                             ; preds = %bb17
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17ha01c69d09bf051ccE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %_34, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %_36)
  br label %bb19

bb19:                                             ; preds = %bb18
; call core::result::Result<T,E>::unwrap
  %34 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hdb8f59693056e8c1E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture dereferenceable(24) %_34, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc686 to %"core::panic::location::Location"*))
  store { i64*, i8 } %34, { i64*, i8 }* %file_stream, align 8
  br label %bb20

bb20:                                             ; preds = %bb19
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_41 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4983f58433b255ffE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb21 unwind label %cleanup1

bb21:                                             ; preds = %bb20
  %35 = bitcast { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_51 to i32**
  store i32* %tid, i32** %35, align 8
  %36 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32* }, { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_51, i32 0, i32 1
  store { [0 x i8]*, i64 }* %func_name_str, { [0 x i8]*, i64 }** %36, align 8
  %37 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32* }, { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_51, i32 0, i32 2
  store i32* %line, i32** %37, align 8
  %38 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32* }, { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_51, i32 0, i32 3
  store i32* %func_num, i32** %38, align 8
  %39 = bitcast { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_51 to i32**
  %arg0 = load i32*, i32** %39, align 8, !nonnull !3
  %40 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32* }, { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_51, i32 0, i32 1
  %arg1 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %40, align 8, !nonnull !3
  %41 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32* }, { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_51, i32 0, i32 2
  %arg2 = load i32*, i32** %41, align 8, !nonnull !3
  %42 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32* }, { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_51, i32 0, i32 3
  %arg3 = load i32*, i32** %42, align 8, !nonnull !3
; invoke core::fmt::ArgumentV1::new
  %43 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg0, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb22 unwind label %cleanup1

bb32:                                             ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %file_stream) #21
  br label %bb34

cleanup1:                                         ; preds = %bb28, %bb27, %bb26, %bb24, %bb23, %bb22, %bb21, %bb20
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  %46 = extractvalue { i8*, i32 } %44, 1
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %45, i8** %47, align 8
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %46, i32* %48, align 8
  br label %bb32

bb22:                                             ; preds = %bb21
  %_60.0 = extractvalue { i8*, i64* } %43, 0
  %_60.1 = extractvalue { i8*, i64* } %43, 1
; invoke core::fmt::ArgumentV1::new
  %49 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h21e82606826b264cE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %arg1, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h62cc0c0fa08558c9E")
          to label %bb23 unwind label %cleanup1

bb23:                                             ; preds = %bb22
  %_63.0 = extractvalue { i8*, i64* } %49, 0
  %_63.1 = extractvalue { i8*, i64* } %49, 1
; invoke core::fmt::ArgumentV1::new
  %50 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg2, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb24 unwind label %cleanup1

bb24:                                             ; preds = %bb23
  %_66.0 = extractvalue { i8*, i64* } %50, 0
  %_66.1 = extractvalue { i8*, i64* } %50, 1
; invoke core::fmt::ArgumentV1::new
  %51 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg3, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb25 unwind label %cleanup1

bb25:                                             ; preds = %bb24
  %_69.0 = extractvalue { i8*, i64* } %51, 0
  %_69.1 = extractvalue { i8*, i64* } %51, 1
  %52 = bitcast [4 x { i8*, i64* }]* %_50 to { i8*, i64* }*
  %53 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %52, i32 0, i32 0
  store i8* %_60.0, i8** %53, align 8
  %54 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %52, i32 0, i32 1
  store i64* %_60.1, i64** %54, align 8
  %55 = getelementptr inbounds [4 x { i8*, i64* }], [4 x { i8*, i64* }]* %_50, i32 0, i32 1
  %56 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %55, i32 0, i32 0
  store i8* %_63.0, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %55, i32 0, i32 1
  store i64* %_63.1, i64** %57, align 8
  %58 = getelementptr inbounds [4 x { i8*, i64* }], [4 x { i8*, i64* }]* %_50, i32 0, i32 2
  %59 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %58, i32 0, i32 0
  store i8* %_66.0, i8** %59, align 8
  %60 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %58, i32 0, i32 1
  store i64* %_66.1, i64** %60, align 8
  %61 = getelementptr inbounds [4 x { i8*, i64* }], [4 x { i8*, i64* }]* %_50, i32 0, i32 3
  %62 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %61, i32 0, i32 0
  store i8* %_69.0, i8** %62, align 8
  %63 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %61, i32 0, i32 1
  store i64* %_69.1, i64** %63, align 8
  %_47.0 = bitcast [4 x { i8*, i64* }]* %_50 to [0 x { i8*, i64* }]*
  br label %bb26

bb26:                                             ; preds = %bb25
; invoke core::fmt::Arguments::new_v1_formatted
  invoke void @_ZN4core3fmt9Arguments16new_v1_formatted17h534abb8b47cf1117E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_43, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc246 to [0 x { [0 x i8]*, i64 }]*), i64 5, [0 x { i8*, i64* }]* nonnull align 8 %_47.0, i64 4, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [224 x i8] }>* @alloc382 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 4)
          to label %bb27 unwind label %cleanup1

bb27:                                             ; preds = %bb26
; invoke std::io::Write::write_fmt
  %64 = invoke i128 @_ZN3std2io5Write9write_fmt17hf9981e1ad317e608E(i32* align 4 dereferenceable(4) %_41, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_43)
          to label %bb28 unwind label %cleanup1

bb28:                                             ; preds = %bb27
  store i128 %64, i128* %2, align 8
  %65 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_39 to i8*
  %66 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 16, i1 false)
  %67 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_39 to i128*
  %68 = load i128, i128* %67, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1c5271af24cef938E"(i128 %68, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc717 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc689 to %"core::panic::location::Location"*))
          to label %bb29 unwind label %cleanup1

bb29:                                             ; preds = %bb28
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %file_stream)
  br label %bb30

bb31:                                             ; preds = %bb30
  ret void
}

; probe::_probe_mutex_
; Function Attrs: nonlazybind uwtable
define void @_ZN5probe13_probe_mutex_17h9b989f2138541d65E(i32 %0, i32 %1, i8* %func_name, i64* %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca i128, align 8
  %4 = alloca { i8*, i32 }, align 8
  %_77 = alloca { i64, i8* }, align 8
  %_40 = alloca { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, align 8
  %_39 = alloca [5 x { i8*, i64* }], align 8
  %_32 = alloca %"core::fmt::Arguments", align 8
  %_28 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_23 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>", align 8
  %file_stream = alloca { i64*, i8 }, align 8
  %_14 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %_11 = alloca i64*, align 8
  %tid = alloca i32, align 4
  %func_name_str = alloca { [0 x i8]*, i64 }, align 8
  %lock_var_addr = alloca i64*, align 8
  %func_num = alloca i32, align 4
  %line = alloca i32, align 4
  store i32 %0, i32* %line, align 4
  store i32 %1, i32* %func_num, align 4
  store i64* %2, i64** %lock_var_addr, align 8
  %_6 = load i32, i32* %line, align 4
; call probe::__sleep_random_for_probe_func
  call void @_ZN5probe29__sleep_random_for_probe_func17h49febb3060e4b1e7E(i32 %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call std::thread::current
  %5 = call nonnull i64* @_ZN3std6thread7current17hb893d0f3bb410e20E()
  store i64* %5, i64** %_11, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke std::thread::Thread::id
  %_9 = invoke i64 @_ZN3std6thread6Thread2id17h09f5841d274de3ecE(i64** align 8 dereferenceable(8) %_11)
          to label %bb3 unwind label %cleanup, !range !26

bb3:                                              ; preds = %bb2
; invoke probe::__get_custom_tid
  %6 = invoke i32 @_ZN5probe16__get_custom_tid17h6843a04f0e90b9a7E(i64 %_9)
          to label %bb4 unwind label %cleanup

bb29:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<std::thread::Thread>
  call void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17h2d8562ab941878e6E"(i64** %_11) #21
  br label %bb30

cleanup:                                          ; preds = %bb3, %bb2
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb29

bb4:                                              ; preds = %bb3
  store i32 %6, i32* %tid, align 4
; call core::ptr::drop_in_place<std::thread::Thread>
  call void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17h2d8562ab941878e6E"(i64** %_11)
  br label %bb5

bb30:                                             ; preds = %bb28, %bb29
  %12 = bitcast { i8*, i32 }* %4 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17

bb5:                                              ; preds = %bb4
; call std::ffi::c_str::CStr::from_ptr
  %18 = call { %"std::ffi::c_str::CStr"*, i64 } @_ZN3std3ffi5c_str4CStr8from_ptr17hf488328b45c6fe23E(i8* %func_name)
  %_16.0 = extractvalue { %"std::ffi::c_str::CStr"*, i64 } %18, 0
  %_16.1 = extractvalue { %"std::ffi::c_str::CStr"*, i64 } %18, 1
  br label %bb6

bb6:                                              ; preds = %bb5
; call std::ffi::c_str::CStr::to_str
  call void @_ZN3std3ffi5c_str4CStr6to_str17hd770c2be353b80beE(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture sret(%"core::result::Result<&str, core::str::error::Utf8Error>") dereferenceable(24) %_14, %"std::ffi::c_str::CStr"* nonnull align 1 %_16.0, i64 %_16.1)
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::result::Result<T,E>::unwrap
  %19 = call { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf42f716f00c0b51fE"(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture dereferenceable(24) %_14, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc691 to %"core::panic::location::Location"*))
  %_13.0 = extractvalue { [0 x i8]*, i64 } %19, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %19, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %func_name_str, i32 0, i32 0
  store [0 x i8]* %_13.0, [0 x i8]** %20, align 8
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %func_name_str, i32 0, i32 1
  store i64 %_13.1, i64* %21, align 8
  %22 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to {}**), align 8
  %23 = icmp eq {}* %22, null
  %_20 = select i1 %23, i64 0, i64 1
  %24 = icmp eq i64 %_20, 1
  br i1 %24, label %bb9, label %bb23

bb9:                                              ; preds = %bb8
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_25 = call align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h658bbfca12a16b87E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to i64**))
  br label %bb10

bb23:                                             ; preds = %bb22, %bb8
  %_73 = load i32, i32* %tid, align 4
  %_74 = load i32, i32* %line, align 4
  %_75 = load i32, i32* %func_num, align 4
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %func_name_str, i32 0, i32 0
  %_76.0 = load [0 x i8]*, [0 x i8]** %25, align 8, !nonnull !3
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %func_name_str, i32 0, i32 1
  %_76.1 = load i64, i64* %26, align 8
  %_79 = load i64*, i64** %lock_var_addr, align 8
  %27 = bitcast { i64, i8* }* %_77 to %"core::option::Option<*const u64>::Some"*
  %28 = getelementptr inbounds %"core::option::Option<*const u64>::Some", %"core::option::Option<*const u64>::Some"* %27, i32 0, i32 1
  store i64* %_79, i64** %28, align 8
  %29 = bitcast { i64, i8* }* %_77 to i64*
  store i64 1, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_77, i32 0, i32 0
  %31 = load i64, i64* %30, align 8, !range !2
  %32 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_77, i32 0, i32 1
  %33 = load i8*, i8** %32, align 8
; call probe::__record_thread_exe_order
  call void @_ZN5probe25__record_thread_exe_order17h441c9367396f9070E(i32 %_73, i32 -1, i32 %_74, i32 %_75, [0 x i8]* nonnull align 1 %_76.0, i64 %_76.1, i64 %31, i8* %33)
  br label %bb24

bb10:                                             ; preds = %bb9
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17ha01c69d09bf051ccE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %_23, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %_25)
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::result::Result<T,E>::unwrap
  %34 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hdb8f59693056e8c1E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture dereferenceable(24) %_23, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc693 to %"core::panic::location::Location"*))
  store { i64*, i8 } %34, { i64*, i8 }* %file_stream, align 8
  br label %bb12

bb12:                                             ; preds = %bb11
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_30 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4983f58433b255ffE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb13 unwind label %cleanup1

bb13:                                             ; preds = %bb12
  %35 = bitcast { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_40 to i32**
  store i32* %tid, i32** %35, align 8
  %36 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_40, i32 0, i32 1
  store { [0 x i8]*, i64 }* %func_name_str, { [0 x i8]*, i64 }** %36, align 8
  %37 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_40, i32 0, i32 2
  store i32* %line, i32** %37, align 8
  %38 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_40, i32 0, i32 3
  store i32* %func_num, i32** %38, align 8
  %39 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_40, i32 0, i32 4
  store i64** %lock_var_addr, i64*** %39, align 8
  %40 = bitcast { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_40 to i32**
  %arg0 = load i32*, i32** %40, align 8, !nonnull !3
  %41 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_40, i32 0, i32 1
  %arg1 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %41, align 8, !nonnull !3
  %42 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_40, i32 0, i32 2
  %arg2 = load i32*, i32** %42, align 8, !nonnull !3
  %43 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_40, i32 0, i32 3
  %arg3 = load i32*, i32** %43, align 8, !nonnull !3
  %44 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { i32*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_40, i32 0, i32 4
  %arg4 = load i64**, i64*** %44, align 8, !nonnull !3
; invoke core::fmt::ArgumentV1::new
  %45 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg0, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb14 unwind label %cleanup1

bb28:                                             ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %file_stream) #21
  br label %bb30

cleanup1:                                         ; preds = %bb21, %bb20, %bb19, %bb17, %bb16, %bb15, %bb14, %bb13, %bb12
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  %48 = extractvalue { i8*, i32 } %46, 1
  %49 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %47, i8** %49, align 8
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %48, i32* %50, align 8
  br label %bb28

bb14:                                             ; preds = %bb13
  %_51.0 = extractvalue { i8*, i64* } %45, 0
  %_51.1 = extractvalue { i8*, i64* } %45, 1
; invoke core::fmt::ArgumentV1::new
  %51 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h21e82606826b264cE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %arg1, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h62cc0c0fa08558c9E")
          to label %bb15 unwind label %cleanup1

bb15:                                             ; preds = %bb14
  %_54.0 = extractvalue { i8*, i64* } %51, 0
  %_54.1 = extractvalue { i8*, i64* } %51, 1
; invoke core::fmt::ArgumentV1::new
  %52 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg2, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb16 unwind label %cleanup1

bb16:                                             ; preds = %bb15
  %_57.0 = extractvalue { i8*, i64* } %52, 0
  %_57.1 = extractvalue { i8*, i64* } %52, 1
; invoke core::fmt::ArgumentV1::new
  %53 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg3, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb17 unwind label %cleanup1

bb17:                                             ; preds = %bb16
  %_60.0 = extractvalue { i8*, i64* } %53, 0
  %_60.1 = extractvalue { i8*, i64* } %53, 1
; invoke core::fmt::ArgumentV1::new
  %54 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hb96a12b728446af2E(i64** align 8 dereferenceable(8) %arg4, i1 (i64**, %"core::fmt::Formatter"*)* nonnull @"_ZN50_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h772d4af48b21ffd4E")
          to label %bb18 unwind label %cleanup1

bb18:                                             ; preds = %bb17
  %_63.0 = extractvalue { i8*, i64* } %54, 0
  %_63.1 = extractvalue { i8*, i64* } %54, 1
  %55 = bitcast [5 x { i8*, i64* }]* %_39 to { i8*, i64* }*
  %56 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %55, i32 0, i32 0
  store i8* %_51.0, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %55, i32 0, i32 1
  store i64* %_51.1, i64** %57, align 8
  %58 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_39, i32 0, i32 1
  %59 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %58, i32 0, i32 0
  store i8* %_54.0, i8** %59, align 8
  %60 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %58, i32 0, i32 1
  store i64* %_54.1, i64** %60, align 8
  %61 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_39, i32 0, i32 2
  %62 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %61, i32 0, i32 0
  store i8* %_57.0, i8** %62, align 8
  %63 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %61, i32 0, i32 1
  store i64* %_57.1, i64** %63, align 8
  %64 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_39, i32 0, i32 3
  %65 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %64, i32 0, i32 0
  store i8* %_60.0, i8** %65, align 8
  %66 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %64, i32 0, i32 1
  store i64* %_60.1, i64** %66, align 8
  %67 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_39, i32 0, i32 4
  %68 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %67, i32 0, i32 0
  store i8* %_63.0, i8** %68, align 8
  %69 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %67, i32 0, i32 1
  store i64* %_63.1, i64** %69, align 8
  %_36.0 = bitcast [5 x { i8*, i64* }]* %_39 to [0 x { i8*, i64* }]*
  br label %bb19

bb19:                                             ; preds = %bb18
; invoke core::fmt::Arguments::new_v1_formatted
  invoke void @_ZN4core3fmt9Arguments16new_v1_formatted17h534abb8b47cf1117E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_32, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc303 to [0 x { [0 x i8]*, i64 }]*), i64 6, [0 x { i8*, i64* }]* nonnull align 8 %_36.0, i64 5, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [280 x i8] }>* @alloc342 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 5)
          to label %bb20 unwind label %cleanup1

bb20:                                             ; preds = %bb19
; invoke std::io::Write::write_fmt
  %70 = invoke i128 @_ZN3std2io5Write9write_fmt17hf9981e1ad317e608E(i32* align 4 dereferenceable(4) %_30, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_32)
          to label %bb21 unwind label %cleanup1

bb21:                                             ; preds = %bb20
  store i128 %70, i128* %3, align 8
  %71 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_28 to i8*
  %72 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 16, i1 false)
  %73 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_28 to i128*
  %74 = load i128, i128* %73, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1c5271af24cef938E"(i128 %74, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc717 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc696 to %"core::panic::location::Location"*))
          to label %bb22 unwind label %cleanup1

bb22:                                             ; preds = %bb21
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %file_stream)
  br label %bb23

bb24:                                             ; preds = %bb23
  %75 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe15_SHUFFLED_ORDER17hb0f2f5030d42cf53E to {}**), align 8
  %76 = icmp eq {}* %75, null
  %_82 = select i1 %76, i64 0, i64 1
  %77 = icmp eq i64 %_82, 1
  br i1 %77, label %bb25, label %bb27

bb25:                                             ; preds = %bb24
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_86 = call align 8 dereferenceable(96) %_ShuffledOrder* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb9d483803ff708d8E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe15_SHUFFLED_ORDER17hb0f2f5030d42cf53E to i64**))
  br label %bb26

bb27:                                             ; preds = %bb26, %bb24
  ret void

bb26:                                             ; preds = %bb25
  %_88 = load i32, i32* %func_num, align 4
; call probe::_ShuffledOrder::wait_or_pass
  call void @_ZN5probe14_ShuffledOrder12wait_or_pass17h675d8cbf9fa3b5ceE(%_ShuffledOrder* align 8 dereferenceable(96) %_86, i32 %_88)
  br label %bb27
}

; probe::_probe_func_
; Function Attrs: nonlazybind uwtable
define void @_ZN5probe12_probe_func_17hd56874fc8e15639eE(i32 %0, i32 %1, i8* %func_name) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i128, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_71 = alloca { i64, i8* }, align 8
  %_39 = alloca { i32*, { [0 x i8]*, i64 }*, i32*, i32* }, align 8
  %_38 = alloca [4 x { i8*, i64* }], align 8
  %_31 = alloca %"core::fmt::Arguments", align 8
  %_27 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_22 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>", align 8
  %file_stream = alloca { i64*, i8 }, align 8
  %_13 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %_10 = alloca i64*, align 8
  %tid = alloca i32, align 4
  %func_name_str = alloca { [0 x i8]*, i64 }, align 8
  %func_num = alloca i32, align 4
  %line = alloca i32, align 4
  store i32 %0, i32* %line, align 4
  store i32 %1, i32* %func_num, align 4
  %_5 = load i32, i32* %line, align 4
; call probe::__sleep_random_for_probe_func
  call void @_ZN5probe29__sleep_random_for_probe_func17h49febb3060e4b1e7E(i32 %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call std::thread::current
  %4 = call nonnull i64* @_ZN3std6thread7current17hb893d0f3bb410e20E()
  store i64* %4, i64** %_10, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke std::thread::Thread::id
  %_8 = invoke i64 @_ZN3std6thread6Thread2id17h09f5841d274de3ecE(i64** align 8 dereferenceable(8) %_10)
          to label %bb3 unwind label %cleanup, !range !26

bb3:                                              ; preds = %bb2
; invoke probe::__get_custom_tid
  %5 = invoke i32 @_ZN5probe16__get_custom_tid17h6843a04f0e90b9a7E(i64 %_8)
          to label %bb4 unwind label %cleanup

bb28:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<std::thread::Thread>
  call void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17h2d8562ab941878e6E"(i64** %_10) #21
  br label %bb29

cleanup:                                          ; preds = %bb3, %bb2
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb28

bb4:                                              ; preds = %bb3
  store i32 %5, i32* %tid, align 4
; call core::ptr::drop_in_place<std::thread::Thread>
  call void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17h2d8562ab941878e6E"(i64** %_10)
  br label %bb5

bb29:                                             ; preds = %bb27, %bb28
  %11 = bitcast { i8*, i32 }* %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb5:                                              ; preds = %bb4
; call std::ffi::c_str::CStr::from_ptr
  %17 = call { %"std::ffi::c_str::CStr"*, i64 } @_ZN3std3ffi5c_str4CStr8from_ptr17hf488328b45c6fe23E(i8* %func_name)
  %_15.0 = extractvalue { %"std::ffi::c_str::CStr"*, i64 } %17, 0
  %_15.1 = extractvalue { %"std::ffi::c_str::CStr"*, i64 } %17, 1
  br label %bb6

bb6:                                              ; preds = %bb5
; call std::ffi::c_str::CStr::to_str
  call void @_ZN3std3ffi5c_str4CStr6to_str17hd770c2be353b80beE(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture sret(%"core::result::Result<&str, core::str::error::Utf8Error>") dereferenceable(24) %_13, %"std::ffi::c_str::CStr"* nonnull align 1 %_15.0, i64 %_15.1)
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::result::Result<T,E>::unwrap
  %18 = call { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf42f716f00c0b51fE"(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture dereferenceable(24) %_13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc698 to %"core::panic::location::Location"*))
  %_12.0 = extractvalue { [0 x i8]*, i64 } %18, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %18, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %func_name_str, i32 0, i32 0
  store [0 x i8]* %_12.0, [0 x i8]** %19, align 8
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %func_name_str, i32 0, i32 1
  store i64 %_12.1, i64* %20, align 8
  %21 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to {}**), align 8
  %22 = icmp eq {}* %21, null
  %_19 = select i1 %22, i64 0, i64 1
  %23 = icmp eq i64 %_19, 1
  br i1 %23, label %bb9, label %bb22

bb9:                                              ; preds = %bb8
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_24 = call align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h658bbfca12a16b87E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to i64**))
  br label %bb10

bb22:                                             ; preds = %bb21, %bb8
  %_67 = load i32, i32* %tid, align 4
  %_68 = load i32, i32* %line, align 4
  %_69 = load i32, i32* %func_num, align 4
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %func_name_str, i32 0, i32 0
  %_70.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !nonnull !3
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %func_name_str, i32 0, i32 1
  %_70.1 = load i64, i64* %25, align 8
  %26 = bitcast { i64, i8* }* %_71 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_71, i32 0, i32 0
  %28 = load i64, i64* %27, align 8, !range !2
  %29 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_71, i32 0, i32 1
  %30 = load i8*, i8** %29, align 8
; call probe::__record_thread_exe_order
  call void @_ZN5probe25__record_thread_exe_order17h441c9367396f9070E(i32 %_67, i32 -1, i32 %_68, i32 %_69, [0 x i8]* nonnull align 1 %_70.0, i64 %_70.1, i64 %28, i8* %30)
  br label %bb23

bb10:                                             ; preds = %bb9
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17ha01c69d09bf051ccE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %_22, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %_24)
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::result::Result<T,E>::unwrap
  %31 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hdb8f59693056e8c1E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture dereferenceable(24) %_22, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc700 to %"core::panic::location::Location"*))
  store { i64*, i8 } %31, { i64*, i8 }* %file_stream, align 8
  br label %bb12

bb12:                                             ; preds = %bb11
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_29 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4983f58433b255ffE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb13 unwind label %cleanup1

bb13:                                             ; preds = %bb12
  %32 = bitcast { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_39 to i32**
  store i32* %tid, i32** %32, align 8
  %33 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32* }, { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_39, i32 0, i32 1
  store { [0 x i8]*, i64 }* %func_name_str, { [0 x i8]*, i64 }** %33, align 8
  %34 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32* }, { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_39, i32 0, i32 2
  store i32* %line, i32** %34, align 8
  %35 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32* }, { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_39, i32 0, i32 3
  store i32* %func_num, i32** %35, align 8
  %36 = bitcast { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_39 to i32**
  %arg0 = load i32*, i32** %36, align 8, !nonnull !3
  %37 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32* }, { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_39, i32 0, i32 1
  %arg1 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %37, align 8, !nonnull !3
  %38 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32* }, { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_39, i32 0, i32 2
  %arg2 = load i32*, i32** %38, align 8, !nonnull !3
  %39 = getelementptr inbounds { i32*, { [0 x i8]*, i64 }*, i32*, i32* }, { i32*, { [0 x i8]*, i64 }*, i32*, i32* }* %_39, i32 0, i32 3
  %arg3 = load i32*, i32** %39, align 8, !nonnull !3
; invoke core::fmt::ArgumentV1::new
  %40 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg0, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb14 unwind label %cleanup1

bb27:                                             ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %file_stream) #21
  br label %bb29

cleanup1:                                         ; preds = %bb20, %bb19, %bb18, %bb16, %bb15, %bb14, %bb13, %bb12
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb27

bb14:                                             ; preds = %bb13
  %_48.0 = extractvalue { i8*, i64* } %40, 0
  %_48.1 = extractvalue { i8*, i64* } %40, 1
; invoke core::fmt::ArgumentV1::new
  %46 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h21e82606826b264cE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %arg1, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h62cc0c0fa08558c9E")
          to label %bb15 unwind label %cleanup1

bb15:                                             ; preds = %bb14
  %_51.0 = extractvalue { i8*, i64* } %46, 0
  %_51.1 = extractvalue { i8*, i64* } %46, 1
; invoke core::fmt::ArgumentV1::new
  %47 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg2, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb16 unwind label %cleanup1

bb16:                                             ; preds = %bb15
  %_54.0 = extractvalue { i8*, i64* } %47, 0
  %_54.1 = extractvalue { i8*, i64* } %47, 1
; invoke core::fmt::ArgumentV1::new
  %48 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg3, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb17 unwind label %cleanup1

bb17:                                             ; preds = %bb16
  %_57.0 = extractvalue { i8*, i64* } %48, 0
  %_57.1 = extractvalue { i8*, i64* } %48, 1
  %49 = bitcast [4 x { i8*, i64* }]* %_38 to { i8*, i64* }*
  %50 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %49, i32 0, i32 0
  store i8* %_48.0, i8** %50, align 8
  %51 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %49, i32 0, i32 1
  store i64* %_48.1, i64** %51, align 8
  %52 = getelementptr inbounds [4 x { i8*, i64* }], [4 x { i8*, i64* }]* %_38, i32 0, i32 1
  %53 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %52, i32 0, i32 0
  store i8* %_51.0, i8** %53, align 8
  %54 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %52, i32 0, i32 1
  store i64* %_51.1, i64** %54, align 8
  %55 = getelementptr inbounds [4 x { i8*, i64* }], [4 x { i8*, i64* }]* %_38, i32 0, i32 2
  %56 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %55, i32 0, i32 0
  store i8* %_54.0, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %55, i32 0, i32 1
  store i64* %_54.1, i64** %57, align 8
  %58 = getelementptr inbounds [4 x { i8*, i64* }], [4 x { i8*, i64* }]* %_38, i32 0, i32 3
  %59 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %58, i32 0, i32 0
  store i8* %_57.0, i8** %59, align 8
  %60 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %58, i32 0, i32 1
  store i64* %_57.1, i64** %60, align 8
  %_35.0 = bitcast [4 x { i8*, i64* }]* %_38 to [0 x { i8*, i64* }]*
  br label %bb18

bb18:                                             ; preds = %bb17
; invoke core::fmt::Arguments::new_v1_formatted
  invoke void @_ZN4core3fmt9Arguments16new_v1_formatted17h534abb8b47cf1117E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_31, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc351 to [0 x { [0 x i8]*, i64 }]*), i64 5, [0 x { i8*, i64* }]* nonnull align 8 %_35.0, i64 4, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [224 x i8] }>* @alloc382 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 4)
          to label %bb19 unwind label %cleanup1

bb19:                                             ; preds = %bb18
; invoke std::io::Write::write_fmt
  %61 = invoke i128 @_ZN3std2io5Write9write_fmt17hf9981e1ad317e608E(i32* align 4 dereferenceable(4) %_29, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_31)
          to label %bb20 unwind label %cleanup1

bb20:                                             ; preds = %bb19
  store i128 %61, i128* %2, align 8
  %62 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_27 to i8*
  %63 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 16, i1 false)
  %64 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_27 to i128*
  %65 = load i128, i128* %64, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1c5271af24cef938E"(i128 %65, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc717 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc703 to %"core::panic::location::Location"*))
          to label %bb21 unwind label %cleanup1

bb21:                                             ; preds = %bb20
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %file_stream)
  br label %bb22

bb23:                                             ; preds = %bb22
  %66 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe15_SHUFFLED_ORDER17hb0f2f5030d42cf53E to {}**), align 8
  %67 = icmp eq {}* %66, null
  %_74 = select i1 %67, i64 0, i64 1
  %68 = icmp eq i64 %_74, 1
  br i1 %68, label %bb24, label %bb26

bb24:                                             ; preds = %bb23
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_78 = call align 8 dereferenceable(96) %_ShuffledOrder* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb9d483803ff708d8E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe15_SHUFFLED_ORDER17hb0f2f5030d42cf53E to i64**))
  br label %bb25

bb26:                                             ; preds = %bb25, %bb23
  ret void

bb25:                                             ; preds = %bb24
  %_80 = load i32, i32* %func_num, align 4
; call probe::_ShuffledOrder::wait_or_pass
  call void @_ZN5probe14_ShuffledOrder12wait_or_pass17h675d8cbf9fa3b5ceE(%_ShuffledOrder* align 8 dereferenceable(96) %_78, i32 %_80)
  br label %bb26
}

; probe::_probe_spawning_
; Function Attrs: nonlazybind uwtable
define void @_ZN5probe16_probe_spawning_17h77e1d69da6b88094E(i32 %0, i32 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i128, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_70 = alloca { i64, i8* }, align 8
  %_44 = alloca { i32*, i32*, i32* }, align 8
  %_43 = alloca [3 x { i8*, i64* }], align 8
  %_36 = alloca %"core::fmt::Arguments", align 8
  %_32 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_27 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>", align 8
  %file_stream = alloca { i64*, i8 }, align 8
  %_20 = alloca i64*, align 8
  %_17 = alloca i64, align 8
  %_8 = alloca i64*, align 8
  %tid = alloca i32, align 4
  %func_num = alloca i32, align 4
  %line = alloca i32, align 4
  store i32 %0, i32* %line, align 4
  store i32 %1, i32* %func_num, align 4
  %_4 = load i32, i32* %line, align 4
; call probe::__sleep_random_for_probe_func
  call void @_ZN5probe29__sleep_random_for_probe_func17h49febb3060e4b1e7E(i32 %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call std::thread::current
  %4 = call nonnull i64* @_ZN3std6thread7current17hb893d0f3bb410e20E()
  store i64* %4, i64** %_8, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke std::thread::Thread::id
  %_6 = invoke i64 @_ZN3std6thread6Thread2id17h09f5841d274de3ecE(i64** align 8 dereferenceable(8) %_8)
          to label %bb3 unwind label %cleanup, !range !26

bb3:                                              ; preds = %bb2
; invoke probe::__get_custom_tid
  %5 = invoke i32 @_ZN5probe16__get_custom_tid17h6843a04f0e90b9a7E(i64 %_6)
          to label %bb4 unwind label %cleanup

bb31:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<std::thread::Thread>
  call void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17h2d8562ab941878e6E"(i64** %_8) #21
  br label %bb32

cleanup:                                          ; preds = %bb3, %bb2
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb31

bb4:                                              ; preds = %bb3
  store i32 %5, i32* %tid, align 4
; call core::ptr::drop_in_place<std::thread::Thread>
  call void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17h2d8562ab941878e6E"(i64** %_8)
  br label %bb5

bb32:                                             ; preds = %bb29, %bb30, %bb31
  %11 = bitcast { i8*, i32 }* %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb5:                                              ; preds = %bb4
  %17 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_SEM17h1ff8d86fa638bd83E to {}**), align 8
  %18 = icmp eq {}* %17, null
  %_11 = select i1 %18, i64 0, i64 1
  %19 = icmp eq i64 %_11, 1
  br i1 %19, label %bb6, label %bb8

bb6:                                              ; preds = %bb5
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_15 = call align 8 dereferenceable(32) %_ProbeSemaphore* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h458a375cb37ab2e8E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_SEM17h1ff8d86fa638bd83E to i64**))
  br label %bb7

bb8:                                              ; preds = %bb7, %bb5
; call std::thread::current
  %20 = call nonnull i64* @_ZN3std6thread7current17hb893d0f3bb410e20E()
  store i64* %20, i64** %_20, align 8
  br label %bb9

bb7:                                              ; preds = %bb6
; call probe::_ProbeSemaphore::dec
  call void @_ZN5probe15_ProbeSemaphore3dec17h85ef06136d5bea8cE(%_ProbeSemaphore* align 8 dereferenceable(32) %_15)
  br label %bb8

bb9:                                              ; preds = %bb8
; invoke std::thread::Thread::id
  %_18 = invoke i64 @_ZN3std6thread6Thread2id17h09f5841d274de3ecE(i64** align 8 dereferenceable(8) %_20)
          to label %bb10 unwind label %cleanup1, !range !26

bb10:                                             ; preds = %bb9
  store i64 %_18, i64* %_17, align 8
  %21 = load i64, i64* %_17, align 8
  store i64 %21, i64* bitcast (<{ [8 x i8] }>* @_ZN5probe16_PROBE_PARENT_ID17h1bc633027d08bcbaE to i64*), align 8
; call core::ptr::drop_in_place<std::thread::Thread>
  call void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17h2d8562ab941878e6E"(i64** %_20)
  br label %bb11

bb30:                                             ; preds = %cleanup1
; call core::ptr::drop_in_place<std::thread::Thread>
  call void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17h2d8562ab941878e6E"(i64** %_20) #21
  br label %bb32

cleanup1:                                         ; preds = %bb9
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb30

bb11:                                             ; preds = %bb10
  %27 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to {}**), align 8
  %28 = icmp eq {}* %27, null
  %_24 = select i1 %28, i64 0, i64 1
  %29 = icmp eq i64 %_24, 1
  br i1 %29, label %bb12, label %bb24

bb12:                                             ; preds = %bb11
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_29 = call align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h658bbfca12a16b87E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to i64**))
  br label %bb13

bb24:                                             ; preds = %bb23, %bb11
  %_67 = load i32, i32* %tid, align 4
  %_68 = load i32, i32* %line, align 4
  %_69 = load i32, i32* %func_num, align 4
  %30 = bitcast { i64, i8* }* %_70 to i64*
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_70, i32 0, i32 0
  %32 = load i64, i64* %31, align 8, !range !2
  %33 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_70, i32 0, i32 1
  %34 = load i8*, i8** %33, align 8
; call probe::__record_thread_exe_order
  call void @_ZN5probe25__record_thread_exe_order17h441c9367396f9070E(i32 %_67, i32 -1, i32 %_68, i32 %_69, [0 x i8]* nonnull align 1 bitcast (<{ [8 x i8] }>* @alloc709 to [0 x i8]*), i64 8, i64 %32, i8* %34)
  br label %bb25

bb13:                                             ; preds = %bb12
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17ha01c69d09bf051ccE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %_27, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %_29)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::result::Result<T,E>::unwrap
  %35 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hdb8f59693056e8c1E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture dereferenceable(24) %_27, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc705 to %"core::panic::location::Location"*))
  store { i64*, i8 } %35, { i64*, i8 }* %file_stream, align 8
  br label %bb15

bb15:                                             ; preds = %bb14
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_34 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4983f58433b255ffE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb16 unwind label %cleanup2

bb16:                                             ; preds = %bb15
  %36 = bitcast { i32*, i32*, i32* }* %_44 to i32**
  store i32* %tid, i32** %36, align 8
  %37 = getelementptr inbounds { i32*, i32*, i32* }, { i32*, i32*, i32* }* %_44, i32 0, i32 1
  store i32* %line, i32** %37, align 8
  %38 = getelementptr inbounds { i32*, i32*, i32* }, { i32*, i32*, i32* }* %_44, i32 0, i32 2
  store i32* %func_num, i32** %38, align 8
  %39 = bitcast { i32*, i32*, i32* }* %_44 to i32**
  %arg0 = load i32*, i32** %39, align 8, !nonnull !3
  %40 = getelementptr inbounds { i32*, i32*, i32* }, { i32*, i32*, i32* }* %_44, i32 0, i32 1
  %arg1 = load i32*, i32** %40, align 8, !nonnull !3
  %41 = getelementptr inbounds { i32*, i32*, i32* }, { i32*, i32*, i32* }* %_44, i32 0, i32 2
  %arg2 = load i32*, i32** %41, align 8, !nonnull !3
; invoke core::fmt::ArgumentV1::new
  %42 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg0, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb17 unwind label %cleanup2

bb29:                                             ; preds = %cleanup2
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %file_stream) #21
  br label %bb32

cleanup2:                                         ; preds = %bb22, %bb21, %bb20, %bb18, %bb17, %bb16, %bb15
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  %45 = extractvalue { i8*, i32 } %43, 1
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %45, i32* %47, align 8
  br label %bb29

bb17:                                             ; preds = %bb16
  %_51.0 = extractvalue { i8*, i64* } %42, 0
  %_51.1 = extractvalue { i8*, i64* } %42, 1
; invoke core::fmt::ArgumentV1::new
  %48 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg1, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb18 unwind label %cleanup2

bb18:                                             ; preds = %bb17
  %_54.0 = extractvalue { i8*, i64* } %48, 0
  %_54.1 = extractvalue { i8*, i64* } %48, 1
; invoke core::fmt::ArgumentV1::new
  %49 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg2, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb19 unwind label %cleanup2

bb19:                                             ; preds = %bb18
  %_57.0 = extractvalue { i8*, i64* } %49, 0
  %_57.1 = extractvalue { i8*, i64* } %49, 1
  %50 = bitcast [3 x { i8*, i64* }]* %_43 to { i8*, i64* }*
  %51 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %50, i32 0, i32 0
  store i8* %_51.0, i8** %51, align 8
  %52 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %50, i32 0, i32 1
  store i64* %_51.1, i64** %52, align 8
  %53 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_43, i32 0, i32 1
  %54 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %53, i32 0, i32 0
  store i8* %_54.0, i8** %54, align 8
  %55 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %53, i32 0, i32 1
  store i64* %_54.1, i64** %55, align 8
  %56 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_43, i32 0, i32 2
  %57 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %56, i32 0, i32 0
  store i8* %_57.0, i8** %57, align 8
  %58 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %56, i32 0, i32 1
  store i64* %_57.1, i64** %58, align 8
  %_40.0 = bitcast [3 x { i8*, i64* }]* %_43 to [0 x { i8*, i64* }]*
  br label %bb20

bb20:                                             ; preds = %bb19
; invoke core::fmt::Arguments::new_v1_formatted
  invoke void @_ZN4core3fmt9Arguments16new_v1_formatted17h534abb8b47cf1117E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_36, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc389 to [0 x { [0 x i8]*, i64 }]*), i64 4, [0 x { i8*, i64* }]* nonnull align 8 %_40.0, i64 3, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [168 x i8] }>* @alloc442 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 3)
          to label %bb21 unwind label %cleanup2

bb21:                                             ; preds = %bb20
; invoke std::io::Write::write_fmt
  %59 = invoke i128 @_ZN3std2io5Write9write_fmt17hf9981e1ad317e608E(i32* align 4 dereferenceable(4) %_34, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_36)
          to label %bb22 unwind label %cleanup2

bb22:                                             ; preds = %bb21
  store i128 %59, i128* %2, align 8
  %60 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_32 to i8*
  %61 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 16, i1 false)
  %62 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_32 to i128*
  %63 = load i128, i128* %62, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1c5271af24cef938E"(i128 %63, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc717 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc708 to %"core::panic::location::Location"*))
          to label %bb23 unwind label %cleanup2

bb23:                                             ; preds = %bb22
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %file_stream)
  br label %bb24

bb25:                                             ; preds = %bb24
  %64 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe15_SHUFFLED_ORDER17hb0f2f5030d42cf53E to {}**), align 8
  %65 = icmp eq {}* %64, null
  %_73 = select i1 %65, i64 0, i64 1
  %66 = icmp eq i64 %_73, 1
  br i1 %66, label %bb26, label %bb28

bb26:                                             ; preds = %bb25
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_77 = call align 8 dereferenceable(96) %_ShuffledOrder* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb9d483803ff708d8E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe15_SHUFFLED_ORDER17hb0f2f5030d42cf53E to i64**))
  br label %bb27

bb28:                                             ; preds = %bb27, %bb25
  ret void

bb27:                                             ; preds = %bb26
  %_79 = load i32, i32* %func_num, align 4
; call probe::_ShuffledOrder::wait_or_pass
  call void @_ZN5probe14_ShuffledOrder12wait_or_pass17h675d8cbf9fa3b5ceE(%_ShuffledOrder* align 8 dereferenceable(96) %_77, i32 %_79)
  br label %bb28
}

; probe::_probe_spawned_
; Function Attrs: nonlazybind uwtable
define void @_ZN5probe15_probe_spawned_17ha99126e232692ea3E(i32 %0, i32 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i128, align 8
  %3 = alloca i128, align 8
  %4 = alloca { i8*, i32 }, align 8
  %_97 = alloca { i64, i8* }, align 8
  %_71 = alloca { i32*, i32* }, align 8
  %_70 = alloca [2 x { i8*, i64* }], align 8
  %_63 = alloca %"core::fmt::Arguments", align 8
  %_59 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_36 = alloca { i32*, i32*, i32* }, align 8
  %_35 = alloca [3 x { i8*, i64* }], align 8
  %_28 = alloca %"core::fmt::Arguments", align 8
  %_24 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_19 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>", align 8
  %file_stream = alloca { i64*, i8 }, align 8
  %parent_tid = alloca i32, align 4
  %_8 = alloca i64*, align 8
  %tid = alloca i32, align 4
  %func_num = alloca i32, align 4
  %line = alloca i32, align 4
  store i32 %0, i32* %line, align 4
  store i32 %1, i32* %func_num, align 4
  %_4 = load i32, i32* %line, align 4
; call probe::__sleep_random_for_probe_func
  call void @_ZN5probe29__sleep_random_for_probe_func17h49febb3060e4b1e7E(i32 %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call std::thread::current
  %5 = call nonnull i64* @_ZN3std6thread7current17hb893d0f3bb410e20E()
  store i64* %5, i64** %_8, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke std::thread::Thread::id
  %_6 = invoke i64 @_ZN3std6thread6Thread2id17h09f5841d274de3ecE(i64** align 8 dereferenceable(8) %_8)
          to label %bb3 unwind label %cleanup, !range !26

bb3:                                              ; preds = %bb2
; invoke probe::__get_custom_tid
  %6 = invoke i32 @_ZN5probe16__get_custom_tid17h6843a04f0e90b9a7E(i64 %_6)
          to label %bb4 unwind label %cleanup

bb35:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<std::thread::Thread>
  call void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17h2d8562ab941878e6E"(i64** %_8) #21
  br label %bb36

cleanup:                                          ; preds = %bb3, %bb2
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb35

bb4:                                              ; preds = %bb3
  store i32 %6, i32* %tid, align 4
; call core::ptr::drop_in_place<std::thread::Thread>
  call void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17h2d8562ab941878e6E"(i64** %_8)
  br label %bb5

bb36:                                             ; preds = %bb34, %bb35
  %12 = bitcast { i8*, i32 }* %4 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17

bb5:                                              ; preds = %bb4
  %_12 = load i64, i64* bitcast (<{ [8 x i8] }>* @_ZN5probe16_PROBE_PARENT_ID17h1bc633027d08bcbaE to i64*), align 8
; call core::option::Option<T>::unwrap
  %_11 = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17he21008910e553a5fE"(i64 %_12, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc711 to %"core::panic::location::Location"*)), !range !26
  br label %bb6

bb6:                                              ; preds = %bb5
; call probe::__get_custom_tid
  %_10 = call i32 @_ZN5probe16__get_custom_tid17h6843a04f0e90b9a7E(i64 %_11)
  br label %bb7

bb7:                                              ; preds = %bb6
  store i32 %_10, i32* %parent_tid, align 4
  %18 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to {}**), align 8
  %19 = icmp eq {}* %18, null
  %_16 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_16, 1
  br i1 %20, label %bb8, label %bb26

bb8:                                              ; preds = %bb7
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_21 = call align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h658bbfca12a16b87E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe9_PROBE_FP17h14ffe53da3f13f2cE to i64**))
  br label %bb9

bb26:                                             ; preds = %bb25, %bb7
  %21 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_SEM17h1ff8d86fa638bd83E to {}**), align 8
  %22 = icmp eq {}* %21, null
  %_86 = select i1 %22, i64 0, i64 1
  %23 = icmp eq i64 %_86, 1
  br i1 %23, label %bb27, label %bb29

bb9:                                              ; preds = %bb8
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17ha01c69d09bf051ccE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %_19, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %_21)
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::result::Result<T,E>::unwrap
  %24 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hdb8f59693056e8c1E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture dereferenceable(24) %_19, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc713 to %"core::panic::location::Location"*))
  store { i64*, i8 } %24, { i64*, i8 }* %file_stream, align 8
  br label %bb11

bb11:                                             ; preds = %bb10
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_26 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4983f58433b255ffE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb12 unwind label %cleanup1

bb12:                                             ; preds = %bb11
  %25 = bitcast { i32*, i32*, i32* }* %_36 to i32**
  store i32* %tid, i32** %25, align 8
  %26 = getelementptr inbounds { i32*, i32*, i32* }, { i32*, i32*, i32* }* %_36, i32 0, i32 1
  store i32* %line, i32** %26, align 8
  %27 = getelementptr inbounds { i32*, i32*, i32* }, { i32*, i32*, i32* }* %_36, i32 0, i32 2
  store i32* %func_num, i32** %27, align 8
  %28 = bitcast { i32*, i32*, i32* }* %_36 to i32**
  %arg0 = load i32*, i32** %28, align 8, !nonnull !3
  %29 = getelementptr inbounds { i32*, i32*, i32* }, { i32*, i32*, i32* }* %_36, i32 0, i32 1
  %arg1 = load i32*, i32** %29, align 8, !nonnull !3
  %30 = getelementptr inbounds { i32*, i32*, i32* }, { i32*, i32*, i32* }* %_36, i32 0, i32 2
  %arg2 = load i32*, i32** %30, align 8, !nonnull !3
; invoke core::fmt::ArgumentV1::new
  %31 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg0, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb13 unwind label %cleanup1

bb34:                                             ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %file_stream) #21
  br label %bb36

cleanup1:                                         ; preds = %bb24, %bb23, %bb22, %bb21, %bb20, %bb19, %bb18, %bb17, %bb16, %bb14, %bb13, %bb12, %bb11
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  %34 = extractvalue { i8*, i32 } %32, 1
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %34, i32* %36, align 8
  br label %bb34

bb13:                                             ; preds = %bb12
  %_43.0 = extractvalue { i8*, i64* } %31, 0
  %_43.1 = extractvalue { i8*, i64* } %31, 1
; invoke core::fmt::ArgumentV1::new
  %37 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg1, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb14 unwind label %cleanup1

bb14:                                             ; preds = %bb13
  %_46.0 = extractvalue { i8*, i64* } %37, 0
  %_46.1 = extractvalue { i8*, i64* } %37, 1
; invoke core::fmt::ArgumentV1::new
  %38 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg2, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb15 unwind label %cleanup1

bb15:                                             ; preds = %bb14
  %_49.0 = extractvalue { i8*, i64* } %38, 0
  %_49.1 = extractvalue { i8*, i64* } %38, 1
  %39 = bitcast [3 x { i8*, i64* }]* %_35 to { i8*, i64* }*
  %40 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %39, i32 0, i32 0
  store i8* %_43.0, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %39, i32 0, i32 1
  store i64* %_43.1, i64** %41, align 8
  %42 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_35, i32 0, i32 1
  %43 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %42, i32 0, i32 0
  store i8* %_46.0, i8** %43, align 8
  %44 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %42, i32 0, i32 1
  store i64* %_46.1, i64** %44, align 8
  %45 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_35, i32 0, i32 2
  %46 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %45, i32 0, i32 0
  store i8* %_49.0, i8** %46, align 8
  %47 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %45, i32 0, i32 1
  store i64* %_49.1, i64** %47, align 8
  %_32.0 = bitcast [3 x { i8*, i64* }]* %_35 to [0 x { i8*, i64* }]*
  br label %bb16

bb16:                                             ; preds = %bb15
; invoke core::fmt::Arguments::new_v1_formatted
  invoke void @_ZN4core3fmt9Arguments16new_v1_formatted17h534abb8b47cf1117E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_28, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc419 to [0 x { [0 x i8]*, i64 }]*), i64 4, [0 x { i8*, i64* }]* nonnull align 8 %_32.0, i64 3, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [168 x i8] }>* @alloc442 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 3)
          to label %bb17 unwind label %cleanup1

bb17:                                             ; preds = %bb16
; invoke std::io::Write::write_fmt
  %48 = invoke i128 @_ZN3std2io5Write9write_fmt17hf9981e1ad317e608E(i32* align 4 dereferenceable(4) %_26, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_28)
          to label %bb18 unwind label %cleanup1

bb18:                                             ; preds = %bb17
  store i128 %48, i128* %3, align 8
  %49 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_24 to i8*
  %50 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 16, i1 false)
  %51 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_24 to i128*
  %52 = load i128, i128* %51, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1c5271af24cef938E"(i128 %52, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc717 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc716 to %"core::panic::location::Location"*))
          to label %bb19 unwind label %cleanup1

bb19:                                             ; preds = %bb18
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_61 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h4983f58433b255ffE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb20 unwind label %cleanup1

bb20:                                             ; preds = %bb19
  %53 = bitcast { i32*, i32* }* %_71 to i32**
  store i32* %parent_tid, i32** %53, align 8
  %54 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_71, i32 0, i32 1
  store i32* %tid, i32** %54, align 8
  %55 = bitcast { i32*, i32* }* %_71 to i32**
  %arg02 = load i32*, i32** %55, align 8, !nonnull !3
  %56 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_71, i32 0, i32 1
  %arg13 = load i32*, i32** %56, align 8, !nonnull !3
; invoke core::fmt::ArgumentV1::new
  %57 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg02, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb21 unwind label %cleanup1

bb21:                                             ; preds = %bb20
  %_76.0 = extractvalue { i8*, i64* } %57, 0
  %_76.1 = extractvalue { i8*, i64* } %57, 1
; invoke core::fmt::ArgumentV1::new
  %58 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg13, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb22 unwind label %cleanup1

bb22:                                             ; preds = %bb21
  %_79.0 = extractvalue { i8*, i64* } %58, 0
  %_79.1 = extractvalue { i8*, i64* } %58, 1
  %59 = bitcast [2 x { i8*, i64* }]* %_70 to { i8*, i64* }*
  %60 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %59, i32 0, i32 0
  store i8* %_76.0, i8** %60, align 8
  %61 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %59, i32 0, i32 1
  store i64* %_76.1, i64** %61, align 8
  %62 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_70, i32 0, i32 1
  %63 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %62, i32 0, i32 0
  store i8* %_79.0, i8** %63, align 8
  %64 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %62, i32 0, i32 1
  store i64* %_79.1, i64** %64, align 8
  %_67.0 = bitcast [2 x { i8*, i64* }]* %_70 to [0 x { i8*, i64* }]*
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h759598569139005dE(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_63, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc447 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* nonnull align 8 %_67.0, i64 2)
          to label %bb23 unwind label %cleanup1

bb23:                                             ; preds = %bb22
; invoke std::io::Write::write_fmt
  %65 = invoke i128 @_ZN3std2io5Write9write_fmt17hf9981e1ad317e608E(i32* align 4 dereferenceable(4) %_61, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_63)
          to label %bb24 unwind label %cleanup1

bb24:                                             ; preds = %bb23
  store i128 %65, i128* %2, align 8
  %66 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_59 to i8*
  %67 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 16, i1 false)
  %68 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_59 to i128*
  %69 = load i128, i128* %68, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1c5271af24cef938E"(i128 %69, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc717 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc719 to %"core::panic::location::Location"*))
          to label %bb25 unwind label %cleanup1

bb25:                                             ; preds = %bb24
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h9696a5bb8010e5d0E"({ i64*, i8 }* %file_stream)
  br label %bb26

bb27:                                             ; preds = %bb26
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_90 = call align 8 dereferenceable(32) %_ProbeSemaphore* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h458a375cb37ab2e8E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_SEM17h1ff8d86fa638bd83E to i64**))
  br label %bb28

bb29:                                             ; preds = %bb28, %bb26
  %_93 = load i32, i32* %tid, align 4
  %_94 = load i32, i32* %parent_tid, align 4
  %_95 = load i32, i32* %line, align 4
  %_96 = load i32, i32* %func_num, align 4
  %70 = bitcast { i64, i8* }* %_97 to i64*
  store i64 0, i64* %70, align 8
  %71 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_97, i32 0, i32 0
  %72 = load i64, i64* %71, align 8, !range !2
  %73 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_97, i32 0, i32 1
  %74 = load i8*, i8** %73, align 8
; call probe::__record_thread_exe_order
  call void @_ZN5probe25__record_thread_exe_order17h441c9367396f9070E(i32 %_93, i32 %_94, i32 %_95, i32 %_96, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc720 to [0 x i8]*), i64 7, i64 %72, i8* %74)
  br label %bb30

bb28:                                             ; preds = %bb27
; call probe::_ProbeSemaphore::inc
  call void @_ZN5probe15_ProbeSemaphore3inc17hcb2d7d2459e58c30E(%_ProbeSemaphore* align 8 dereferenceable(32) %_90)
  br label %bb29

bb30:                                             ; preds = %bb29
  %75 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe15_SHUFFLED_ORDER17hb0f2f5030d42cf53E to {}**), align 8
  %76 = icmp eq {}* %75, null
  %_100 = select i1 %76, i64 0, i64 1
  %77 = icmp eq i64 %_100, 1
  br i1 %77, label %bb31, label %bb33

bb31:                                             ; preds = %bb30
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_104 = call align 8 dereferenceable(96) %_ShuffledOrder* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb9d483803ff708d8E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe15_SHUFFLED_ORDER17hb0f2f5030d42cf53E to i64**))
  br label %bb32

bb33:                                             ; preds = %bb32, %bb30
  ret void

bb32:                                             ; preds = %bb31
  %_106 = load i32, i32* %func_num, align 4
; call probe::_ShuffledOrder::wait_or_pass
  call void @_ZN5probe14_ShuffledOrder12wait_or_pass17h675d8cbf9fa3b5ceE(%_ShuffledOrder* align 8 dereferenceable(96) %_104, i32 %_106)
  br label %bb33
}

; probe::__sleep_random_for_probe_func
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5probe29__sleep_random_for_probe_func17h49febb3060e4b1e7E(i32 %line_number) unnamed_addr #0 {
start:
  %seed = alloca i64, align 8
  store i64 0, i64* %seed, align 8
  %_6 = call i64 @time(i64* %seed)
  br label %bb1

bb1:                                              ; preds = %start
; call <T as core::convert::TryInto<U>>::try_into
  %0 = call { i32, i32 } @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17hbd036edaca9e8b8dE"(i64 %_6)
  %_5.0 = extractvalue { i32, i32 } %0, 0
  %_5.1 = extractvalue { i32, i32 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::result::Result<T,E>::unwrap
  %_4 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hcfed7405cbba1500E"(i32 %_5.0, i32 %_5.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc722 to %"core::panic::location::Location"*))
  br label %bb3

bb3:                                              ; preds = %bb2
  call void @srand(i32 %_4)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_11 = call i32 @rand()
  br label %bb5

bb5:                                              ; preds = %bb4
; call <T as core::convert::TryInto<U>>::try_into
  %1 = call { i64, i64 } @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h3ddad06d30b40430E"(i32 %_11)
  %_10.0 = extractvalue { i64, i64 } %1, 0
  %_10.1 = extractvalue { i64, i64 } %1, 1
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::result::Result<T,E>::unwrap
  %r = call i64 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h4a29824094f3d1e0E"(i64 %_10.0, i64 %_10.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc724 to %"core::panic::location::Location"*))
  br label %bb7

bb7:                                              ; preds = %bb6
  %_14 = urem i64 %r, 10
; call core::time::Duration::from_millis
  %2 = call { i64, i32 } @_ZN4core4time8Duration11from_millis17heb330d5b4d994c52E(i64 %_14)
  %_13.0 = extractvalue { i64, i32 } %2, 0
  %_13.1 = extractvalue { i64, i32 } %2, 1
  br label %bb8

bb8:                                              ; preds = %bb7
; call std::thread::sleep
  call void @_ZN3std6thread5sleep17h5f3e2ec71796842dE(i64 %_13.0, i32 %_13.1)
  br label %bb9

bb9:                                              ; preds = %bb8
  ret void
}

; probe::__get_custom_tid
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN5probe16__get_custom_tid17h6843a04f0e90b9a7E(i64 %target_tid) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_22 = alloca %"std::collections::hash::map::Entry<std::thread::ThreadId, i32>", align 8
  %_16 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>", align 8
  %custom_id = alloca { i64*, i8 }, align 8
  %_7 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>", align 8
  %hash = alloca { i64*, i8 }, align 8
  %curr_id = alloca i32, align 4
  store i32 -1, i32* %curr_id, align 4
  %1 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_MAP17h391daae210d64eb1E to {}**), align 8
  %2 = icmp eq {}* %1, null
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb1, label %bb19

bb1:                                              ; preds = %start
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_9 = call align 8 dereferenceable(64) %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h89ce48486dbaec3aE"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_MAP17h391daae210d64eb1E to i64**))
  br label %bb2

bb19:                                             ; preds = %bb18, %start
  %4 = load i32, i32* %curr_id, align 4
  ret i32 %4

bb2:                                              ; preds = %bb1
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h8905175bd6462be5E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>") dereferenceable(24) %_7, %"std::sync::mutex::Mutex<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>"* align 8 dereferenceable(64) %_9)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::result::Result<T,E>::unwrap
  %5 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3cc83867fd03f091E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId, i32>>>>"* noalias nocapture dereferenceable(24) %_7, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc726 to %"core::panic::location::Location"*))
  store { i64*, i8 } %5, { i64*, i8 }* %hash, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %6 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe21_PROBE_THRD_CUSTOM_ID17h978374fd36dfa2b3E to {}**), align 8
  %7 = icmp eq {}* %6, null
  %_13 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_13, 1
  br i1 %8, label %bb5, label %bb18

bb5:                                              ; preds = %bb4
; invoke <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_18 = invoke align 8 dereferenceable(16) %"std::sync::mutex::Mutex<i32>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h19963d06464fe0e3E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe21_PROBE_THRD_CUSTOM_ID17h978374fd36dfa2b3E to i64**))
          to label %bb6 unwind label %cleanup

bb18:                                             ; preds = %bb17, %bb4
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>
  call void @"_ZN4core3ptr128drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$17h2519821ebbe65e78E"({ i64*, i8 }* %hash)
  br label %bb19

bb6:                                              ; preds = %bb5
; invoke std::sync::mutex::Mutex<T>::lock
  invoke void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h5daacf6ccc61ca94E"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %_16, %"std::sync::mutex::Mutex<i32>"* align 8 dereferenceable(16) %_18)
          to label %bb7 unwind label %cleanup

bb21:                                             ; preds = %bb20, %cleanup
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::collections::hash::map::HashMap<std::thread::ThreadId,i32>>>
  call void @"_ZN4core3ptr128drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..collections..hash..map..HashMap$LT$std..thread..ThreadId$C$i32$GT$$GT$$GT$17h2519821ebbe65e78E"({ i64*, i8 }* %hash) #21
  br label %bb22

cleanup:                                          ; preds = %bb17, %bb7, %bb6, %bb5
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb21

bb7:                                              ; preds = %bb6
; invoke core::result::Result<T,E>::unwrap
  %14 = invoke { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17he9515649a8b3536bE"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture dereferenceable(24) %_16, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc728 to %"core::panic::location::Location"*))
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  store { i64*, i8 } %14, { i64*, i8 }* %custom_id, align 8
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_24 = invoke align 8 dereferenceable(48) %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h3360d2b283892d59E"({ i64*, i8 }* align 8 dereferenceable(16) %hash)
          to label %bb9 unwind label %cleanup1

bb9:                                              ; preds = %bb8
; invoke std::collections::hash::map::HashMap<K,V,S>::entry
  invoke void @"_ZN3std11collections4hash3map24HashMap$LT$K$C$V$C$S$GT$5entry17h2dcf38ab880c8131E"(%"std::collections::hash::map::Entry<std::thread::ThreadId, i32>"* noalias nocapture sret(%"std::collections::hash::map::Entry<std::thread::ThreadId, i32>") dereferenceable(32) %_22, %"std::collections::hash::map::HashMap<std::thread::ThreadId, i32>"* align 8 dereferenceable(48) %_24, i64 %target_tid)
          to label %bb10 unwind label %cleanup1

bb20:                                             ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h8a0966216e5866c0E"({ i64*, i8 }* %custom_id) #21
  br label %bb21

cleanup1:                                         ; preds = %panic, %bb14, %bb12, %bb11, %bb10, %bb9, %bb8
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb20

bb10:                                             ; preds = %bb9
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
  %_28 = invoke align 4 dereferenceable(4) i32* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4d0ea0b4a27f775bE"({ i64*, i8 }* align 8 dereferenceable(16) %custom_id)
          to label %bb11 unwind label %cleanup1

bb11:                                             ; preds = %bb10
  %_27 = load i32, i32* %_28, align 4
; invoke std::collections::hash::map::Entry<K,V>::or_insert
  %_21 = invoke align 4 dereferenceable(4) i32* @"_ZN3std11collections4hash3map18Entry$LT$K$C$V$GT$9or_insert17h1a83f9084e716f88E"(%"std::collections::hash::map::Entry<std::thread::ThreadId, i32>"* noalias nocapture dereferenceable(32) %_22, i32 %_27)
          to label %bb12 unwind label %cleanup1

bb12:                                             ; preds = %bb11
  %_20 = load i32, i32* %_21, align 4
  store i32 %_20, i32* %curr_id, align 4
  %_31 = load i32, i32* %curr_id, align 4
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
  %_33 = invoke align 4 dereferenceable(4) i32* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4d0ea0b4a27f775bE"({ i64*, i8 }* align 8 dereferenceable(16) %custom_id)
          to label %bb13 unwind label %cleanup1

bb13:                                             ; preds = %bb12
  %_32 = load i32, i32* %_33, align 4
  %_30 = icmp eq i32 %_31, %_32
  br i1 %_30, label %bb14, label %bb17

bb17:                                             ; preds = %bb16, %bb13
; invoke core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  invoke void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h8a0966216e5866c0E"({ i64*, i8 }* %custom_id)
          to label %bb18 unwind label %cleanup

bb14:                                             ; preds = %bb13
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_35 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hcb66cc1892196f25E"({ i64*, i8 }* align 8 dereferenceable(16) %custom_id)
          to label %bb15 unwind label %cleanup1

bb15:                                             ; preds = %bb14
  %20 = load i32, i32* %_35, align 4
  %21 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %20, i32 1)
  %_37.0 = extractvalue { i32, i1 } %21, 0
  %_37.1 = extractvalue { i32, i1 } %21, 1
  %22 = call i1 @llvm.expect.i1(i1 %_37.1, i1 false)
  br i1 %22, label %panic, label %bb16

bb16:                                             ; preds = %bb15
  store i32 %_37.0, i32* %_35, align 4
  br label %bb17

panic:                                            ; preds = %bb15
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.4 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc730 to %"core::panic::location::Location"*)) #20
          to label %unreachable unwind label %cleanup1

unreachable:                                      ; preds = %panic
  unreachable

bb22:                                             ; preds = %bb21
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28
}

; probe::__record_thread_exe_order
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5probe25__record_thread_exe_order17h441c9367396f9070E(i32 %tid, i32 %parent_tid, i32 %line_num, i32 %func_num, [0 x i8]* nonnull align 1 %func_name.0, i64 %func_name.1, i64 %var_addr.0, i8* %var_addr.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_38 = alloca %_ProbeNode, align 8
  %_27 = alloca %"alloc::vec::Vec<_ProbeNode>", align 8
  %_12 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>", align 8
  %thrd_vec = alloca { i64*, i8 }, align 8
  %1 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_EXE17hb3ee71562d869e1cE to {}**), align 8
  %2 = icmp eq {}* %1, null
  %_9 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_9, 1
  br i1 %3, label %bb1, label %bb15

bb1:                                              ; preds = %start
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_14 = call align 8 dereferenceable(40) %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h35e4a8216d4bf9a7E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN5probe15_PROBE_THRD_EXE17hb3ee71562d869e1cE to i64**))
  br label %bb2

bb15:                                             ; preds = %bb14, %start
  ret void

bb2:                                              ; preds = %bb1
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h7129a9f664b9b485E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>") dereferenceable(24) %_12, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* align 8 dereferenceable(40) %_14)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::result::Result<T,E>::unwrap
  %4 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h5e40491ab103111cE"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* noalias nocapture dereferenceable(24) %_12, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc732 to %"core::panic::location::Location"*))
  store { i64*, i8 } %4, { i64*, i8 }* %thrd_vec, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
  %_21 = invoke align 8 dereferenceable(24) %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3009dca64cb46b9eE"({ i64*, i8 }* align 8 dereferenceable(16) %thrd_vec)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke alloc::vec::Vec<T,A>::len
  %_19 = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hc7bd20c65ce1ffc1E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %_21)
          to label %bb6 unwind label %cleanup

bb16:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>
  call void @"_ZN4core3ptr120drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$17h08690209491720deE"({ i64*, i8 }* %thrd_vec) #21
  br label %bb17

cleanup:                                          ; preds = %bb13, %bb12, %panic, %bb10, %bb9, %bb8, %bb7, %bb5, %bb4
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb16

bb6:                                              ; preds = %bb5
  %_18 = trunc i64 %_19 to i32
  %_16 = icmp sgt i32 %tid, %_18
  br i1 %_16, label %bb7, label %bb10

bb10:                                             ; preds = %bb18, %bb6
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_32 = invoke align 8 dereferenceable(24) %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hf5fbe57b986f1031E"({ i64*, i8 }* align 8 dereferenceable(16) %thrd_vec)
          to label %bb11 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_25 = invoke align 8 dereferenceable(24) %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hf5fbe57b986f1031E"({ i64*, i8 }* align 8 dereferenceable(16) %thrd_vec)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hac3d51c04ae6b72fE"(%"alloc::vec::Vec<_ProbeNode>"* noalias nocapture sret(%"alloc::vec::Vec<_ProbeNode>") dereferenceable(24) %_27)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hd50270fb45f3f664E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %_25, %"alloc::vec::Vec<_ProbeNode>"* noalias nocapture dereferenceable(24) %_27)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb9
  br label %bb10

bb11:                                             ; preds = %bb10
  %_35 = sext i32 %tid to i64
  %10 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_35, i64 1)
  %_37.0 = extractvalue { i64, i1 } %10, 0
  %_37.1 = extractvalue { i64, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_37.1, i1 false)
  br i1 %11, label %panic, label %bb12

bb12:                                             ; preds = %bb11
; invoke <alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut
  %_30 = invoke align 8 dereferenceable(24) %"alloc::vec::Vec<_ProbeNode>"* @"_ZN84_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..IndexMut$LT$I$GT$$GT$9index_mut17hf3b4195e906fee55E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 dereferenceable(24) %_32, i64 %_37.0, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc736 to %"core::panic::location::Location"*))
          to label %bb13 unwind label %cleanup

panic:                                            ; preds = %bb11
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.n to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc734 to %"core::panic::location::Location"*)) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb13:                                             ; preds = %bb12
  %12 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %_38, i32 0, i32 2
  store i32 %tid, i32* %12, align 8
  %13 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %_38, i32 0, i32 3
  store i32 %parent_tid, i32* %13, align 4
  %14 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %_38, i32 0, i32 4
  store i32 %line_num, i32* %14, align 8
  %15 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %_38, i32 0, i32 5
  store i32 %func_num, i32* %15, align 4
  %16 = bitcast %_ProbeNode* %_38 to { [0 x i8]*, i64 }*
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0
  store [0 x i8]* %func_name.0, [0 x i8]** %17, align 8
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1
  store i64 %func_name.1, i64* %18, align 8
  %19 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %_38, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %19, i32 0, i32 0
  store i64 %var_addr.0, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %19, i32 0, i32 1
  store i8* %var_addr.1, i8** %21, align 8
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hba27a2738773ba46E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 dereferenceable(24) %_30, %_ProbeNode* noalias nocapture dereferenceable(48) %_38)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe::_ProbeNode>>>>
  call void @"_ZN4core3ptr120drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe.._ProbeNode$GT$$GT$$GT$$GT$17h08690209491720deE"({ i64*, i8 }* %thrd_vec)
  br label %bb15

bb17:                                             ; preds = %bb16
  %22 = bitcast { i8*, i32 }* %0 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; probe::_ProbeSemaphore::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5probe15_ProbeSemaphore3new17h642f8d7369a072e8E(%_ProbeSemaphore* noalias nocapture sret(%_ProbeSemaphore) dereferenceable(32) %0, i32 %count) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i128, align 8
  %2 = alloca { i8*, i32 }, align 8
  %3 = alloca i128, align 8
  %_4 = alloca %"std::sync::condvar::Condvar", align 8
  %_2 = alloca %"std::sync::mutex::Mutex<i32>", align 8
; call std::sync::mutex::Mutex<T>::new
  %4 = call i128 @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h98151f38a867f203E"(i32 %count)
  store i128 %4, i128* %3, align 8
  %5 = bitcast %"std::sync::mutex::Mutex<i32>"* %_2 to i8*
  %6 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; invoke std::sync::condvar::Condvar::new
  %7 = invoke i128 @_ZN3std4sync7condvar7Condvar3new17hd7f2ff5e47d3962fE()
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i128 %7, i128* %1, align 8
  %8 = bitcast %"std::sync::condvar::Condvar"* %_4 to i8*
  %9 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = bitcast %_ProbeSemaphore* %0 to %"std::sync::mutex::Mutex<i32>"*
  %11 = bitcast %"std::sync::mutex::Mutex<i32>"* %10 to i8*
  %12 = bitcast %"std::sync::mutex::Mutex<i32>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  %13 = getelementptr inbounds %_ProbeSemaphore, %_ProbeSemaphore* %0, i32 0, i32 1
  %14 = bitcast %"std::sync::condvar::Condvar"* %13 to i8*
  %15 = bitcast %"std::sync::condvar::Condvar"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false)
  ret void

bb3:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<i32>>
  call void @"_ZN4core3ptr55drop_in_place$LT$std..sync..mutex..Mutex$LT$i32$GT$$GT$17he055f369a53c8fbbE"(%"std::sync::mutex::Mutex<i32>"* %_2) #21
  br label %bb4

cleanup:                                          ; preds = %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %21 = bitcast { i8*, i32 }* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26
}

; probe::_ProbeSemaphore::dec
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5probe15_ProbeSemaphore3dec17h85ef06136d5bea8cE(%_ProbeSemaphore* align 8 dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_16 = alloca i8, align 1
  %_13 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>", align 8
  %_3 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>", align 8
  %lock = alloca { i64*, i8 }, align 8
  store i8 0, i8* %_16, align 1
  %_4 = bitcast %_ProbeSemaphore* %self to %"std::sync::mutex::Mutex<i32>"*
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h5daacf6ccc61ca94E"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %_3, %"std::sync::mutex::Mutex<i32>"* align 8 dereferenceable(16) %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::unwrap
  %1 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17he9515649a8b3536bE"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture dereferenceable(24) %_3, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc738 to %"core::panic::location::Location"*))
  store { i64*, i8 } %1, { i64*, i8 }* %lock, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_16, align 1
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_5 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hcb66cc1892196f25E"({ i64*, i8 }* align 8 dereferenceable(16) %lock)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %2 = load i32, i32* %_5, align 4
  %3 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %2, i32 1)
  %_7.0 = extractvalue { i32, i1 } %3, 0
  %_7.1 = extractvalue { i32, i1 } %3, 1
  %4 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false)
  br i1 %4, label %panic, label %bb4

bb14:                                             ; preds = %cleanup
  %5 = load i8, i8* %_16, align 1, !range !4
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb13, label %bb12

cleanup:                                          ; preds = %bb8, %bb7, %bb5, %panic, %bb2
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb14

bb4:                                              ; preds = %bb3
  store i32 %_7.0, i32* %_5, align 4
  br label %bb5

panic:                                            ; preds = %bb3
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.n to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc740 to %"core::panic::location::Location"*)) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb5:                                              ; preds = %bb9, %bb4
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
  %_10 = invoke align 4 dereferenceable(4) i32* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4d0ea0b4a27f775bE"({ i64*, i8 }* align 8 dereferenceable(16) %lock)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_9 = load i32, i32* %_10, align 4
  %_8 = icmp slt i32 %_9, 0
  br i1 %_8, label %bb7, label %bb10

bb10:                                             ; preds = %bb6
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h8a0966216e5866c0E"({ i64*, i8 }* %lock)
  br label %bb11

bb7:                                              ; preds = %bb6
  %_14 = getelementptr inbounds %_ProbeSemaphore, %_ProbeSemaphore* %self, i32 0, i32 1
  store i8 0, i8* %_16, align 1
  %12 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %lock, i32 0, i32 0
  %_15.0 = load i64*, i64** %12, align 8, !nonnull !3
  %13 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %lock, i32 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !4
  %_15.1 = trunc i8 %14 to i1
; invoke std::sync::condvar::Condvar::wait
  invoke void @_ZN3std4sync7condvar7Condvar4wait17hecfa1b9ed17ab9ccE(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %_13, %"std::sync::condvar::Condvar"* align 8 dereferenceable(16) %_14, i64* align 8 dereferenceable(16) %_15.0, i1 zeroext %_15.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke core::result::Result<T,E>::unwrap
  %15 = invoke { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17he9515649a8b3536bE"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture dereferenceable(24) %_13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc742 to %"core::panic::location::Location"*))
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %_12.0 = extractvalue { i64*, i8 } %15, 0
  %16 = extractvalue { i64*, i8 } %15, 1
  %_12.1 = trunc i8 %16 to i1
  store i8 1, i8* %_16, align 1
  %17 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %lock, i32 0, i32 0
  store i64* %_12.0, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %lock, i32 0, i32 1
  %19 = zext i1 %_12.1 to i8
  store i8 %19, i8* %18, align 8
  br label %bb5

bb12:                                             ; preds = %bb13, %bb14
  %20 = bitcast { i8*, i32 }* %0 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  resume { i8*, i32 } %25

bb13:                                             ; preds = %bb14
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h8a0966216e5866c0E"({ i64*, i8 }* %lock) #21
  br label %bb12

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_16, align 1
  ret void
}

; probe::_ProbeSemaphore::inc
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5probe15_ProbeSemaphore3inc17hcb2d7d2459e58c30E(%_ProbeSemaphore* align 8 dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_3 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>", align 8
  %lock = alloca { i64*, i8 }, align 8
  %_4 = bitcast %_ProbeSemaphore* %self to %"std::sync::mutex::Mutex<i32>"*
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h5daacf6ccc61ca94E"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %_3, %"std::sync::mutex::Mutex<i32>"* align 8 dereferenceable(16) %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::unwrap
  %1 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17he9515649a8b3536bE"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture dereferenceable(24) %_3, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc744 to %"core::panic::location::Location"*))
  store { i64*, i8 } %1, { i64*, i8 }* %lock, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_5 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hcb66cc1892196f25E"({ i64*, i8 }* align 8 dereferenceable(16) %lock)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %2 = load i32, i32* %_5, align 4
  %3 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 1)
  %_7.0 = extractvalue { i32, i1 } %3, 0
  %_7.1 = extractvalue { i32, i1 } %3, 1
  %4 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false)
  br i1 %4, label %panic, label %bb4

bb9:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h8a0966216e5866c0E"({ i64*, i8 }* %lock) #21
  br label %bb10

cleanup:                                          ; preds = %bb6, %bb4, %panic, %bb2
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
  store i32 %_7.0, i32* %_5, align 4
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
  %_10 = invoke align 4 dereferenceable(4) i32* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4d0ea0b4a27f775bE"({ i64*, i8 }* align 8 dereferenceable(16) %lock)
          to label %bb5 unwind label %cleanup

panic:                                            ; preds = %bb3
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.4 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc746 to %"core::panic::location::Location"*)) #20
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb5:                                              ; preds = %bb4
  %_9 = load i32, i32* %_10, align 4
  %_8 = icmp sle i32 %_9, 0
  br i1 %_8, label %bb6, label %bb7

bb7:                                              ; preds = %bb11, %bb5
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h8a0966216e5866c0E"({ i64*, i8 }* %lock)
  br label %bb8

bb6:                                              ; preds = %bb5
  %_13 = getelementptr inbounds %_ProbeSemaphore, %_ProbeSemaphore* %self, i32 0, i32 1
; invoke std::sync::condvar::Condvar::notify_one
  invoke void @_ZN3std4sync7condvar7Condvar10notify_one17hb275bf503c25f2f4E(%"std::sync::condvar::Condvar"* align 8 dereferenceable(16) %_13)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb6
  br label %bb7

bb10:                                             ; preds = %bb9
  %10 = bitcast { i8*, i32 }* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb8:                                              ; preds = %bb7
  ret void
}

; <probe::_ProbeNode as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN56_$LT$probe.._ProbeNode$u20$as$u20$core..fmt..Display$GT$3fmt17h4e054377c9d9d8c2E"(%_ProbeNode* align 8 dereferenceable(48) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %_58 = alloca { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, align 8
  %_57 = alloca [5 x { i8*, i64* }], align 8
  %_50 = alloca %"core::fmt::Arguments", align 8
  %_14 = alloca { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, align 8
  %_13 = alloca [6 x { i8*, i64* }], align 8
  %_6 = alloca %"core::fmt::Arguments", align 8
  %var_addr = alloca i64*, align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 1
  %2 = bitcast { i64, i8* }* %1 to i64*
  %_3 = load i64, i64* %2, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %_59 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 2
  %_60 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 3
  %_61 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 4
  %_62 = bitcast %_ProbeNode* %self to { [0 x i8]*, i64 }*
  %_63 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 5
  %3 = bitcast { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58 to i32**
  store i32* %_59, i32** %3, align 8
  %4 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 1
  store i32* %_60, i32** %4, align 8
  %5 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 2
  store i32* %_61, i32** %5, align 8
  %6 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 3
  store { [0 x i8]*, i64 }* %_62, { [0 x i8]*, i64 }** %6, align 8
  %7 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 4
  store i32* %_63, i32** %7, align 8
  %8 = bitcast { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58 to i32**
  %arg01 = load i32*, i32** %8, align 8, !nonnull !3
  %9 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 1
  %arg12 = load i32*, i32** %9, align 8, !nonnull !3
  %10 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 2
  %arg23 = load i32*, i32** %10, align 8, !nonnull !3
  %11 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 3
  %arg34 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %11, align 8, !nonnull !3
  %12 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 4
  %arg45 = load i32*, i32** %12, align 8, !nonnull !3
; call core::fmt::ArgumentV1::new
  %13 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg01, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_69.0 = extractvalue { i8*, i64* } %13, 0
  %_69.1 = extractvalue { i8*, i64* } %13, 1
  br label %bb12

bb3:                                              ; preds = %start
  %14 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 1
  %15 = bitcast { i64, i8* }* %14 to %"core::option::Option<*const u64>::Some"*
  %16 = getelementptr inbounds %"core::option::Option<*const u64>::Some", %"core::option::Option<*const u64>::Some"* %15, i32 0, i32 1
  %17 = load i64*, i64** %16, align 8
  store i64* %17, i64** %var_addr, align 8
  %_15 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 2
  %_16 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 3
  %_17 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 4
  %_18 = bitcast %_ProbeNode* %self to { [0 x i8]*, i64 }*
  %_19 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 5
  %18 = bitcast { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14 to i32**
  store i32* %_15, i32** %18, align 8
  %19 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 1
  store i32* %_16, i32** %19, align 8
  %20 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 2
  store i32* %_17, i32** %20, align 8
  %21 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 3
  store { [0 x i8]*, i64 }* %_18, { [0 x i8]*, i64 }** %21, align 8
  %22 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 4
  store i32* %_19, i32** %22, align 8
  %23 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 5
  store i64** %var_addr, i64*** %23, align 8
  %24 = bitcast { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14 to i32**
  %arg0 = load i32*, i32** %24, align 8, !nonnull !3
  %25 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 1
  %arg1 = load i32*, i32** %25, align 8, !nonnull !3
  %26 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 2
  %arg2 = load i32*, i32** %26, align 8, !nonnull !3
  %27 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 3
  %arg3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %27, align 8, !nonnull !3
  %28 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 4
  %arg4 = load i32*, i32** %28, align 8, !nonnull !3
  %29 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 5
  %arg5 = load i64**, i64*** %29, align 8, !nonnull !3
; call core::fmt::ArgumentV1::new
  %30 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg0, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_27.0 = extractvalue { i8*, i64* } %30, 0
  %_27.1 = extractvalue { i8*, i64* } %30, 1
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::fmt::ArgumentV1::new
  %31 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg1, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_30.0 = extractvalue { i8*, i64* } %31, 0
  %_30.1 = extractvalue { i8*, i64* } %31, 1
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::fmt::ArgumentV1::new
  %32 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg2, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_33.0 = extractvalue { i8*, i64* } %32, 0
  %_33.1 = extractvalue { i8*, i64* } %32, 1
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::fmt::ArgumentV1::new
  %33 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h21e82606826b264cE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %arg3, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h62cc0c0fa08558c9E")
  %_36.0 = extractvalue { i8*, i64* } %33, 0
  %_36.1 = extractvalue { i8*, i64* } %33, 1
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::fmt::ArgumentV1::new
  %34 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg4, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_39.0 = extractvalue { i8*, i64* } %34, 0
  %_39.1 = extractvalue { i8*, i64* } %34, 1
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::fmt::ArgumentV1::new
  %35 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h5a7cae8ee0ce0cc4E(i64** align 8 dereferenceable(8) %arg5, i1 (i64**, %"core::fmt::Formatter"*)* nonnull @"_ZN52_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3b226f65c3ff7f07E")
  %_42.0 = extractvalue { i8*, i64* } %35, 0
  %_42.1 = extractvalue { i8*, i64* } %35, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %36 = bitcast [6 x { i8*, i64* }]* %_13 to { i8*, i64* }*
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %36, i32 0, i32 0
  store i8* %_27.0, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %36, i32 0, i32 1
  store i64* %_27.1, i64** %38, align 8
  %39 = getelementptr inbounds [6 x { i8*, i64* }], [6 x { i8*, i64* }]* %_13, i32 0, i32 1
  %40 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %39, i32 0, i32 0
  store i8* %_30.0, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %39, i32 0, i32 1
  store i64* %_30.1, i64** %41, align 8
  %42 = getelementptr inbounds [6 x { i8*, i64* }], [6 x { i8*, i64* }]* %_13, i32 0, i32 2
  %43 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %42, i32 0, i32 0
  store i8* %_33.0, i8** %43, align 8
  %44 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %42, i32 0, i32 1
  store i64* %_33.1, i64** %44, align 8
  %45 = getelementptr inbounds [6 x { i8*, i64* }], [6 x { i8*, i64* }]* %_13, i32 0, i32 3
  %46 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %45, i32 0, i32 0
  store i8* %_36.0, i8** %46, align 8
  %47 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %45, i32 0, i32 1
  store i64* %_36.1, i64** %47, align 8
  %48 = getelementptr inbounds [6 x { i8*, i64* }], [6 x { i8*, i64* }]* %_13, i32 0, i32 4
  %49 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %48, i32 0, i32 0
  store i8* %_39.0, i8** %49, align 8
  %50 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %48, i32 0, i32 1
  store i64* %_39.1, i64** %50, align 8
  %51 = getelementptr inbounds [6 x { i8*, i64* }], [6 x { i8*, i64* }]* %_13, i32 0, i32 5
  %52 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %51, i32 0, i32 0
  store i8* %_42.0, i8** %52, align 8
  %53 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %51, i32 0, i32 1
  store i64* %_42.1, i64** %53, align 8
  %_10.0 = bitcast [6 x { i8*, i64* }]* %_13 to [0 x { i8*, i64* }]*
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17h534abb8b47cf1117E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_6, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc170 to [0 x { [0 x i8]*, i64 }]*), i64 6, [0 x { i8*, i64* }]* nonnull align 8 %_10.0, i64 6, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [336 x i8] }>* @alloc215 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 6)
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::fmt::Formatter::write_fmt
  %54 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h9d6b4d9dd2c64373E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_6)
  %55 = zext i1 %54 to i8
  store i8 %55, i8* %0, align 1
  br label %bb19

bb19:                                             ; preds = %bb18, %bb11
  %56 = load i8, i8* %0, align 1, !range !4
  %57 = trunc i8 %56 to i1
  ret i1 %57

bb12:                                             ; preds = %bb1
; call core::fmt::ArgumentV1::new
  %58 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg12, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_72.0 = extractvalue { i8*, i64* } %58, 0
  %_72.1 = extractvalue { i8*, i64* } %58, 1
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::fmt::ArgumentV1::new
  %59 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg23, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_75.0 = extractvalue { i8*, i64* } %59, 0
  %_75.1 = extractvalue { i8*, i64* } %59, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::fmt::ArgumentV1::new
  %60 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h21e82606826b264cE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %arg34, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h62cc0c0fa08558c9E")
  %_78.0 = extractvalue { i8*, i64* } %60, 0
  %_78.1 = extractvalue { i8*, i64* } %60, 1
  br label %bb15

bb15:                                             ; preds = %bb14
; call core::fmt::ArgumentV1::new
  %61 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h8888cbe9fbf99b56E(i32* align 4 dereferenceable(4) %arg45, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_81.0 = extractvalue { i8*, i64* } %61, 0
  %_81.1 = extractvalue { i8*, i64* } %61, 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %62 = bitcast [5 x { i8*, i64* }]* %_57 to { i8*, i64* }*
  %63 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %62, i32 0, i32 0
  store i8* %_69.0, i8** %63, align 8
  %64 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %62, i32 0, i32 1
  store i64* %_69.1, i64** %64, align 8
  %65 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_57, i32 0, i32 1
  %66 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %65, i32 0, i32 0
  store i8* %_72.0, i8** %66, align 8
  %67 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %65, i32 0, i32 1
  store i64* %_72.1, i64** %67, align 8
  %68 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_57, i32 0, i32 2
  %69 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %68, i32 0, i32 0
  store i8* %_75.0, i8** %69, align 8
  %70 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %68, i32 0, i32 1
  store i64* %_75.1, i64** %70, align 8
  %71 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_57, i32 0, i32 3
  %72 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %71, i32 0, i32 0
  store i8* %_78.0, i8** %72, align 8
  %73 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %71, i32 0, i32 1
  store i64* %_78.1, i64** %73, align 8
  %74 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_57, i32 0, i32 4
  %75 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %74, i32 0, i32 0
  store i8* %_81.0, i8** %75, align 8
  %76 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %74, i32 0, i32 1
  store i64* %_81.1, i64** %76, align 8
  %_54.0 = bitcast [5 x { i8*, i64* }]* %_57 to [0 x { i8*, i64* }]*
  br label %bb17

bb17:                                             ; preds = %bb16
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17h534abb8b47cf1117E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_50, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc157 to [0 x { [0 x i8]*, i64 }]*), i64 6, [0 x { i8*, i64* }]* nonnull align 8 %_54.0, i64 5, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [280 x i8] }>* @alloc243 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 5)
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::fmt::Formatter::write_fmt
  %77 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h9d6b4d9dd2c64373E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_50)
  %78 = zext i1 %77 to i8
  store i8 %78, i8* %0, align 1
  br label %bb19
}

; probe::_ShuffledOrder::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5probe14_ShuffledOrder3new17h7a2159c6a68ed458E(%_ShuffledOrder* noalias nocapture sret(%_ShuffledOrder) dereferenceable(96) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %shuffle_order_str) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i128, align 8
  %2 = alloca i128, align 8
  %3 = alloca i128, align 8
  %4 = alloca i64, align 8
  %5 = alloca { i8*, i32 }, align 8
  %_34 = alloca i8, align 1
  %_32 = alloca %"std::sync::mutex::Mutex<()>", align 8
  %_31 = alloca %"std::sync::condvar::Condvar", align 8
  %_29 = alloca %"std::sync::rwlock::RwLock<i32>", align 8
  %_28 = alloca %"alloc::collections::vec_deque::VecDeque<i32>", align 8
  %_27 = alloca %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", align 8
  %_22 = alloca %"core::result::Result<i32, core::num::error::ParseIntError>", align 4
  %_12 = alloca { i8*, i64 }, align 8
  %iter = alloca %"alloc::vec::into_iter::IntoIter<&str>", align 8
  %_9 = alloca %"alloc::vec::Vec<&str>", align 8
  %_8 = alloca %"alloc::vec::into_iter::IntoIter<&str>", align 8
  %_4 = alloca %"core::str::iter::SplitWhitespace", align 8
  %str_vec = alloca %"alloc::vec::Vec<&str>", align 8
  %order = alloca %"alloc::collections::vec_deque::VecDeque<i32>", align 8
  store i8 0, i8* %_34, align 1
; invoke alloc::collections::vec_deque::VecDeque<T>::new
  invoke void @"_ZN5alloc11collections9vec_deque17VecDeque$LT$T$GT$3new17hbc1e5c15c23a133aE"(%"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture sret(%"alloc::collections::vec_deque::VecDeque<i32>") dereferenceable(32) %order)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 1, i8* %_34, align 1
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %6 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3aacae195121207fE"(%"alloc::string::String"* align 8 dereferenceable(24) %shuffle_order_str)
          to label %bb2 unwind label %cleanup1

bb25:                                             ; preds = %bb27, %bb28, %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h6ede43792275be04E"(%"alloc::string::String"* %shuffle_order_str) #21
  br label %bb26

cleanup:                                          ; preds = %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb25

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { [0 x i8]*, i64 } %6, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %6, 1
; invoke core::str::<impl str>::split_whitespace
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$16split_whitespace17h2df7a096f59df582E"(%"core::str::iter::SplitWhitespace"* noalias nocapture sret(%"core::str::iter::SplitWhitespace") dereferenceable(64) %_4, [0 x i8]* nonnull align 1 %_6.0, i64 %_6.1)
          to label %bb3 unwind label %cleanup1

bb28:                                             ; preds = %bb23, %bb24, %cleanup1
  %12 = load i8, i8* %_34, align 1, !range !4
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb27, label %bb25

cleanup1:                                         ; preds = %bb15, %bb14, %bb13, %bb8, %bb4, %bb3, %bb2, %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb28

bb3:                                              ; preds = %bb2
; invoke core::iter::traits::iterator::Iterator::collect
  invoke void @_ZN4core4iter6traits8iterator8Iterator7collect17h82f4f9d6313649b3E(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %str_vec, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %_4)
          to label %bb4 unwind label %cleanup1

bb4:                                              ; preds = %bb3
  %19 = bitcast %"alloc::vec::Vec<&str>"* %_9 to i8*
  %20 = bitcast %"alloc::vec::Vec<&str>"* %str_vec to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false)
; invoke <alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN90_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h6bb526491a767431E"(%"alloc::vec::into_iter::IntoIter<&str>"* noalias nocapture sret(%"alloc::vec::into_iter::IntoIter<&str>") dereferenceable(32) %_8, %"alloc::vec::Vec<&str>"* noalias nocapture dereferenceable(24) %_9)
          to label %bb5 unwind label %cleanup1

bb5:                                              ; preds = %bb4
  %21 = bitcast %"alloc::vec::into_iter::IntoIter<&str>"* %iter to i8*
  %22 = bitcast %"alloc::vec::into_iter::IntoIter<&str>"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 32, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb29, %bb5
; invoke <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::next
  %23 = invoke { i8*, i64 } @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9faa5f88aab080eaE"(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %iter)
          to label %bb7 unwind label %cleanup2

bb7:                                              ; preds = %bb6
  store { i8*, i64 } %23, { i8*, i64 }* %_12, align 8
  %24 = bitcast { i8*, i64 }* %_12 to {}**
  %25 = load {}*, {}** %24, align 8
  %26 = icmp eq {}* %25, null
  %_15 = select i1 %26, i64 0, i64 1
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb24:                                             ; preds = %cleanup2
; call core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<&str>>
  call void @"_ZN4core3ptr67drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$17hf4700a368b2d4e61E"(%"alloc::vec::into_iter::IntoIter<&str>"* %iter) #21
  br label %bb28

cleanup2:                                         ; preds = %bb12, %bb11, %bb10, %bb6
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb24

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
; invoke core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<&str>>
  invoke void @"_ZN4core3ptr67drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$17hf4700a368b2d4e61E"(%"alloc::vec::into_iter::IntoIter<&str>"* %iter)
          to label %bb13 unwind label %cleanup1

bb10:                                             ; preds = %bb7
  %32 = bitcast { i8*, i64 }* %_12 to { [0 x i8]*, i64 }*
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0
  %val.0 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !3
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1
  %val.1 = load i64, i64* %34, align 8
; invoke core::str::<impl str>::parse
  %35 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17hfbd10a7820b4037aE"([0 x i8]* nonnull align 1 %val.0, i64 %val.1)
          to label %bb11 unwind label %cleanup2

bb11:                                             ; preds = %bb10
  store i64 %35, i64* %4, align 8
  %36 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %_22 to i8*
  %37 = bitcast i64* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 8 %37, i64 8, i1 false)
  %38 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %_22 to i64*
  %39 = load i64, i64* %38, align 4
; invoke core::result::Result<T,E>::unwrap
  %_21 = invoke i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h1e60228dd5dda1bcE"(i64 %39, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc748 to %"core::panic::location::Location"*))
          to label %bb12 unwind label %cleanup2

bb12:                                             ; preds = %bb11
; invoke alloc::collections::vec_deque::VecDeque<T,A>::push_back
  invoke void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$9push_back17h3e7b987af523ec8cE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %order, i32 %_21)
          to label %bb29 unwind label %cleanup2

bb29:                                             ; preds = %bb12
  br label %bb6

bb13:                                             ; preds = %bb8
; invoke alloc::collections::vec_deque::VecDeque<T,A>::pop_front
  %40 = invoke { i32, i32 } @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$9pop_front17h72e3770e59225659E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %order)
          to label %bb14 unwind label %cleanup1

bb14:                                             ; preds = %bb13
  %_25.0 = extractvalue { i32, i32 } %40, 0
  %_25.1 = extractvalue { i32, i32 } %40, 1
; invoke core::option::Option<T>::unwrap
  %next_exe_init = invoke i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h6ec028b62e171dc2E"(i32 %_25.0, i32 %_25.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc750 to %"core::panic::location::Location"*))
          to label %bb15 unwind label %cleanup1

bb15:                                             ; preds = %bb14
  store i8 0, i8* %_34, align 1
  %41 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %_28 to i8*
  %42 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %order to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 32, i1 false)
; invoke std::sync::mutex::Mutex<T>::new
  invoke void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17hf4a326059a1f3b38E"(%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* noalias nocapture sret(%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>") dereferenceable(48) %_27, %"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture dereferenceable(32) %_28)
          to label %bb16 unwind label %cleanup1

bb16:                                             ; preds = %bb15
; invoke std::sync::rwlock::RwLock<T>::new
  %43 = invoke i128 @"_ZN3std4sync6rwlock15RwLock$LT$T$GT$3new17h4d4f45c94d5ba133E"(i32 %next_exe_init)
          to label %bb17 unwind label %cleanup3

bb17:                                             ; preds = %bb16
  store i128 %43, i128* %3, align 8
  %44 = bitcast %"std::sync::rwlock::RwLock<i32>"* %_29 to i8*
  %45 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 16, i1 false)
; invoke std::sync::condvar::Condvar::new
  %46 = invoke i128 @_ZN3std4sync7condvar7Condvar3new17hd7f2ff5e47d3962fE()
          to label %bb18 unwind label %cleanup4

bb23:                                             ; preds = %bb22, %cleanup3
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>>
  call void @"_ZN4core3ptr102drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h208a2ee2999e08b3E"(%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %_27) #21
  br label %bb28

cleanup3:                                         ; preds = %bb16
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  %49 = extractvalue { i8*, i32 } %47, 1
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %49, i32* %51, align 8
  br label %bb23

bb18:                                             ; preds = %bb17
  store i128 %46, i128* %2, align 8
  %52 = bitcast %"std::sync::condvar::Condvar"* %_31 to i8*
  %53 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 16, i1 false)
; invoke std::sync::mutex::Mutex<T>::new
  %54 = invoke i128 @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17he70e54143d7100bbE"()
          to label %bb19 unwind label %cleanup5

bb22:                                             ; preds = %bb21, %cleanup4
; call core::ptr::drop_in_place<std::sync::rwlock::RwLock<i32>>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sync..rwlock..RwLock$LT$i32$GT$$GT$17h4c1556b8335c0937E"(%"std::sync::rwlock::RwLock<i32>"* %_29) #21
  br label %bb23

cleanup4:                                         ; preds = %bb17
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  %57 = extractvalue { i8*, i32 } %55, 1
  %58 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %56, i8** %58, align 8
  %59 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %57, i32* %59, align 8
  br label %bb22

bb19:                                             ; preds = %bb18
  store i128 %54, i128* %1, align 8
  %60 = bitcast %"std::sync::mutex::Mutex<()>"* %_32 to i8*
  %61 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 16, i1 false)
  %62 = bitcast %_ShuffledOrder* %0 to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*
  %63 = bitcast %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %62 to i8*
  %64 = bitcast %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %_27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 48, i1 false)
  %65 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %0, i32 0, i32 1
  %66 = bitcast %"std::sync::rwlock::RwLock<i32>"* %65 to i8*
  %67 = bitcast %"std::sync::rwlock::RwLock<i32>"* %_29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 16, i1 false)
  %68 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %0, i32 0, i32 2
  %69 = bitcast %"std::sync::condvar::Condvar"* %68 to i8*
  %70 = bitcast %"std::sync::condvar::Condvar"* %_31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 16, i1 false)
  %71 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %0, i32 0, i32 3
  %72 = bitcast %"std::sync::mutex::Mutex<()>"* %71 to i8*
  %73 = bitcast %"std::sync::mutex::Mutex<()>"* %_32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 16, i1 false)
  store i8 0, i8* %_34, align 1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h6ede43792275be04E"(%"alloc::string::String"* %shuffle_order_str)
  br label %bb20

bb21:                                             ; preds = %cleanup5
; call core::ptr::drop_in_place<std::sync::condvar::Condvar>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..sync..condvar..Condvar$GT$17h2d257ddeeab9688aE"(%"std::sync::condvar::Condvar"* %_31) #21
  br label %bb22

cleanup5:                                         ; preds = %bb18
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  %76 = extractvalue { i8*, i32 } %74, 1
  %77 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %75, i8** %77, align 8
  %78 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %76, i32* %78, align 8
  br label %bb21

bb27:                                             ; preds = %bb28
; call core::ptr::drop_in_place<alloc::collections::vec_deque::VecDeque<i32>>
  call void @"_ZN4core3ptr71drop_in_place$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$17h8b92a4cead11df23E"(%"alloc::collections::vec_deque::VecDeque<i32>"* %order) #21
  br label %bb25

bb26:                                             ; preds = %bb25
  %79 = bitcast { i8*, i32 }* %5 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = insertvalue { i8*, i32 } undef, i8* %80, 0
  %84 = insertvalue { i8*, i32 } %83, i32 %82, 1
  resume { i8*, i32 } %84

bb20:                                             ; preds = %bb19
  ret void
}

; probe::_ShuffledOrder::wait_or_pass
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5probe14_ShuffledOrder12wait_or_pass17h675d8cbf9fa3b5ceE(%_ShuffledOrder* align 8 dereferenceable(96) %self, i32 %exe_num) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_45 = alloca i8, align 1
  %_44 = alloca i8, align 1
  %_37 = alloca %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>", align 8
  %w = alloca { i64*, i8 }, align 8
  %_30 = alloca { i32, i32 }, align 4
  %_28 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>", align 8
  %order_queue = alloca { i64*, i8 }, align 8
  %_17 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>", align 8
  %next_exe_guard = alloca i64*, align 8
  %_4 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>", align 8
  %guard = alloca { i64*, i8 }, align 8
  store i8 0, i8* %_44, align 1
  store i8 0, i8* %_45, align 1
  %_5 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %self, i32 0, i32 3
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h93445635c1b90ef9E"(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %_4, %"std::sync::mutex::Mutex<()>"* align 8 dereferenceable(16) %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::unwrap
  %1 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hd05e2fd2cc177441E"(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture dereferenceable(24) %_4, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc752 to %"core::panic::location::Location"*))
  store { i64*, i8 } %1, { i64*, i8 }* %guard, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_45, align 1
  %_8 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %self, i32 0, i32 1
; invoke std::sync::rwlock::RwLock<T>::read
  %2 = invoke { i64, i8* } @"_ZN3std4sync6rwlock15RwLock$LT$T$GT$4read17he4f2c18380bac321E"(%"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %_8)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_7.0 = extractvalue { i64, i8* } %2, 0
  %_7.1 = extractvalue { i64, i8* } %2, 1
; invoke core::result::Result<T,E>::unwrap
  %3 = invoke align 8 dereferenceable(16) i64* @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h0f9aa9d41e4e1452E"(i64 %_7.0, i8* %_7.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc754 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb36:                                             ; preds = %bb33, %bb34, %cleanup
  %4 = load i8, i8* %_45, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb35, label %bb32

cleanup:                                          ; preds = %bb3, %bb2
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb36

bb4:                                              ; preds = %bb3
  store i64* %3, i64** %next_exe_guard, align 8
  store i8 1, i8* %_44, align 1
  br label %bb5

bb5:                                              ; preds = %bb12, %bb4
; invoke <std::sync::rwlock::RwLockReadGuard<T> as core::ops::deref::Deref>::deref
  %_11 = invoke align 4 dereferenceable(4) i32* @"_ZN87_$LT$std..sync..rwlock..RwLockReadGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hbeb7a8b734660e76E"(i64** align 8 dereferenceable(8) %next_exe_guard)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5
  %_10 = load i32, i32* %_11, align 4
  %_9 = icmp ne i32 %_10, %exe_num
  br i1 %_9, label %bb7, label %bb13

bb34:                                             ; preds = %bb31, %cleanup1
  %11 = load i8, i8* %_44, align 1, !range !4
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb33, label %bb36

cleanup1:                                         ; preds = %bb27, %bb17, %bb16, %bb15, %bb14, %bb13, %bb11, %bb10, %bb9, %bb8, %bb7, %bb5
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb34

bb13:                                             ; preds = %bb6
  store i8 0, i8* %_44, align 1
  %_24 = load i64*, i64** %next_exe_guard, align 8, !nonnull !3
; invoke core::mem::drop
  invoke void @_ZN4core3mem4drop17h2ec33aa22f7a10f7E(i64* align 8 dereferenceable(16) %_24)
          to label %bb14 unwind label %cleanup1

bb7:                                              ; preds = %bb6
  store i8 0, i8* %_44, align 1
  %_15 = load i64*, i64** %next_exe_guard, align 8, !nonnull !3
; invoke core::mem::drop
  invoke void @_ZN4core3mem4drop17h2ec33aa22f7a10f7E(i64* align 8 dereferenceable(16) %_15)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
  %_18 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %self, i32 0, i32 2
  store i8 0, i8* %_45, align 1
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  %_19.0 = load i64*, i64** %18, align 8, !nonnull !3
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %20 = load i8, i8* %19, align 8, !range !4
  %_19.1 = trunc i8 %20 to i1
; invoke std::sync::condvar::Condvar::wait
  invoke void @_ZN3std4sync7condvar7Condvar4wait17h7e48308164e57e12E(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %_17, %"std::sync::condvar::Condvar"* align 8 dereferenceable(16) %_18, i64* align 8 dereferenceable(16) %_19.0, i1 zeroext %_19.1)
          to label %bb9 unwind label %cleanup1

bb9:                                              ; preds = %bb8
; invoke core::result::Result<T,E>::unwrap
  %21 = invoke { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hd05e2fd2cc177441E"(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture dereferenceable(24) %_17, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc756 to %"core::panic::location::Location"*))
          to label %bb10 unwind label %cleanup1

bb10:                                             ; preds = %bb9
  %_16.0 = extractvalue { i64*, i8 } %21, 0
  %22 = extractvalue { i64*, i8 } %21, 1
  %_16.1 = trunc i8 %22 to i1
  store i8 1, i8* %_45, align 1
  %23 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  store i64* %_16.0, i64** %23, align 8
  %24 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %25 = zext i1 %_16.1 to i8
  store i8 %25, i8* %24, align 8
  %_22 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %self, i32 0, i32 1
; invoke std::sync::rwlock::RwLock<T>::read
  %26 = invoke { i64, i8* } @"_ZN3std4sync6rwlock15RwLock$LT$T$GT$4read17he4f2c18380bac321E"(%"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %_22)
          to label %bb11 unwind label %cleanup1

bb11:                                             ; preds = %bb10
  %_21.0 = extractvalue { i64, i8* } %26, 0
  %_21.1 = extractvalue { i64, i8* } %26, 1
; invoke core::result::Result<T,E>::unwrap
  %_20 = invoke align 8 dereferenceable(16) i64* @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h0f9aa9d41e4e1452E"(i64 %_21.0, i8* %_21.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc758 to %"core::panic::location::Location"*))
          to label %bb12 unwind label %cleanup1

bb12:                                             ; preds = %bb11
  store i8 1, i8* %_44, align 1
  store i64* %_20, i64** %next_exe_guard, align 8
  br label %bb5

bb14:                                             ; preds = %bb13
; invoke core::time::Duration::from_millis
  %27 = invoke { i64, i32 } @_ZN4core4time8Duration11from_millis17heb330d5b4d994c52E(i64 20)
          to label %bb15 unwind label %cleanup1

bb15:                                             ; preds = %bb14
  %_26.0 = extractvalue { i64, i32 } %27, 0
  %_26.1 = extractvalue { i64, i32 } %27, 1
; invoke std::thread::sleep
  invoke void @_ZN3std6thread5sleep17h5f3e2ec71796842dE(i64 %_26.0, i32 %_26.1)
          to label %bb16 unwind label %cleanup1

bb16:                                             ; preds = %bb15
  %_29 = bitcast %_ShuffledOrder* %self to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*
; invoke std::sync::mutex::Mutex<T>::lock
  invoke void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h32273d4a7a559da0E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>") dereferenceable(24) %_28, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* align 8 dereferenceable(48) %_29)
          to label %bb17 unwind label %cleanup1

bb17:                                             ; preds = %bb16
; invoke core::result::Result<T,E>::unwrap
  %28 = invoke { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3f53b0b3da020188E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture dereferenceable(24) %_28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc760 to %"core::panic::location::Location"*))
          to label %bb18 unwind label %cleanup1

bb18:                                             ; preds = %bb17
  store { i64*, i8 } %28, { i64*, i8 }* %order_queue, align 8
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_32 = invoke align 8 dereferenceable(32) %"alloc::collections::vec_deque::VecDeque<i32>"* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hf8bb24c7eddc12a3E"({ i64*, i8 }* align 8 dereferenceable(16) %order_queue)
          to label %bb19 unwind label %cleanup2

bb19:                                             ; preds = %bb18
; invoke alloc::collections::vec_deque::VecDeque<T,A>::pop_front
  %29 = invoke { i32, i32 } @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$9pop_front17h72e3770e59225659E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %_32)
          to label %bb20 unwind label %cleanup2

bb31:                                             ; preds = %bb30, %cleanup2
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>
  call void @"_ZN4core3ptr107drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h1ea3cb36011a5c6dE"({ i64*, i8 }* %order_queue) #21
  br label %bb34

cleanup2:                                         ; preds = %bb26, %bb25, %bb23, %bb22, %bb19, %bb18
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  %32 = extractvalue { i8*, i32 } %30, 1
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %32, i32* %34, align 8
  br label %bb31

bb20:                                             ; preds = %bb19
  store { i32, i32 } %29, { i32, i32 }* %_30, align 4
  %35 = bitcast { i32, i32 }* %_30 to i32*
  %36 = load i32, i32* %35, align 4, !range !61
  %_34 = zext i32 %36 to i64
  switch i64 %_34, label %bb21 [
    i64 0, label %bb26
    i64 1, label %bb22
  ]

bb21:                                             ; preds = %bb20
  unreachable

bb26:                                             ; preds = %bb25, %bb20
  %_43 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %self, i32 0, i32 2
; invoke std::sync::condvar::Condvar::notify_all
  invoke void @_ZN3std4sync7condvar7Condvar10notify_all17h9b1caab06f6bd730E(%"std::sync::condvar::Condvar"* align 8 dereferenceable(16) %_43)
          to label %bb27 unwind label %cleanup2

bb22:                                             ; preds = %bb20
  %37 = bitcast { i32, i32 }* %_30 to %"core::option::Option<i32>::Some"*
  %38 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %37, i32 0, i32 1
  %next_exe_num = load i32, i32* %38, align 4
  %_38 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %self, i32 0, i32 1
; invoke std::sync::rwlock::RwLock<T>::write
  invoke void @"_ZN3std4sync6rwlock15RwLock$LT$T$GT$5write17h3a4c8dedd894a963E"(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>") dereferenceable(24) %_37, %"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %_38)
          to label %bb23 unwind label %cleanup2

bb23:                                             ; preds = %bb22
; invoke core::result::Result<T,E>::unwrap
  %39 = invoke { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h64d23646540b2296E"(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture dereferenceable(24) %_37, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc762 to %"core::panic::location::Location"*))
          to label %bb24 unwind label %cleanup2

bb24:                                             ; preds = %bb23
  store { i64*, i8 } %39, { i64*, i8 }* %w, align 8
; invoke <std::sync::rwlock::RwLockWriteGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_40 = invoke align 4 dereferenceable(4) i32* @"_ZN91_$LT$std..sync..rwlock..RwLockWriteGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h1fd4e3faeaca7da9E"({ i64*, i8 }* align 8 dereferenceable(16) %w)
          to label %bb25 unwind label %cleanup3

bb25:                                             ; preds = %bb24
  store i32 %next_exe_num, i32* %_40, align 4
; invoke core::ptr::drop_in_place<std::sync::rwlock::RwLockWriteGuard<i32>>
  invoke void @"_ZN4core3ptr67drop_in_place$LT$std..sync..rwlock..RwLockWriteGuard$LT$i32$GT$$GT$17h0571f2f9628123b1E"({ i64*, i8 }* %w)
          to label %bb26 unwind label %cleanup2

bb30:                                             ; preds = %cleanup3
; call core::ptr::drop_in_place<std::sync::rwlock::RwLockWriteGuard<i32>>
  call void @"_ZN4core3ptr67drop_in_place$LT$std..sync..rwlock..RwLockWriteGuard$LT$i32$GT$$GT$17h0571f2f9628123b1E"({ i64*, i8 }* %w) #21
  br label %bb31

cleanup3:                                         ; preds = %bb24
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  %42 = extractvalue { i8*, i32 } %40, 1
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %42, i32* %44, align 8
  br label %bb30

bb27:                                             ; preds = %bb26
; invoke core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>
  invoke void @"_ZN4core3ptr107drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h1ea3cb36011a5c6dE"({ i64*, i8 }* %order_queue)
          to label %bb28 unwind label %cleanup1

bb28:                                             ; preds = %bb27
  store i8 0, i8* %_44, align 1
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<()>>
  call void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$17haacb45849dcb6ae5E"({ i64*, i8 }* %guard)
  br label %bb29

bb33:                                             ; preds = %bb34
; call core::ptr::drop_in_place<std::sync::rwlock::RwLockReadGuard<i32>>
  call void @"_ZN4core3ptr66drop_in_place$LT$std..sync..rwlock..RwLockReadGuard$LT$i32$GT$$GT$17hc4e57e7e0691015aE"(i64** %next_exe_guard) #21
  br label %bb36

bb32:                                             ; preds = %bb35, %bb36
  %45 = bitcast { i8*, i32 }* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1
  resume { i8*, i32 } %50

bb35:                                             ; preds = %bb36
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<()>>
  call void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$17haacb45849dcb6ae5E"({ i64*, i8 }* %guard) #21
  br label %bb32

bb29:                                             ; preds = %bb28
  store i8 0, i8* %_45, align 1
  ret void
}

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #10

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17hf6d6ed6dae21e8e9E(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17h811b684e8de6a021E(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index26slice_start_index_len_fail17h429384a76db70f0fE(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #11

; std::sys_common::condvar::check::SameMutexCheck::verify
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std10sys_common7condvar5check14SameMutexCheck6verify17h05fd77e152fcfa51E(%"std::sys_common::condvar::check::SameMutexCheck"* align 8 dereferenceable(8), i64** align 8 dereferenceable(8)) unnamed_addr #0

; std::sys_common::mutex::MovableMutex::raw
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(40) %"std::sys::unix::mutex::Mutex"* @_ZN3std10sys_common5mutex12MovableMutex3raw17h291a5d574400a240E(i64** align 8 dereferenceable(8)) unnamed_addr #0

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

; std::sys::unix::rand::hashmap_random_keys
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN3std3sys4unix4rand19hashmap_random_keys17hef8077cc4ee723c6E() unnamed_addr #0

; std::fs::OpenOptions::_open
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std2fs11OpenOptions5_open17hf9a7f113c14c71dfE(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24), %"std::fs::OpenOptions"* align 4 dereferenceable(16), %"std::path::Path"* nonnull align 1, i64) unnamed_addr #0

; <std::fs::File as std::io::Write>::write
; Function Attrs: nonlazybind uwtable
declare void @"_ZN48_$LT$std..fs..File$u20$as$u20$std..io..Write$GT$5write17h03102cc4fd32491dE"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<usize, std::io::error::Error>") dereferenceable(24), i32* align 4 dereferenceable(4), [0 x i8]* nonnull align 1, i64) unnamed_addr #0

; core::fmt::write
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt5write17h182b3dab33fa727dE({}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #0

; std::sys::unix::decode_error_kind
; Function Attrs: nonlazybind uwtable
declare i8 @_ZN3std3sys4unix17decode_error_kind17h0b4b195659215c25E(i32) unnamed_addr #0

; Function Attrs: nonlazybind uwtable
declare i32 @pthread_mutex_lock(%"libc::unix::linux_like::linux::pthread_mutex_t"*) unnamed_addr #0

; Function Attrs: nonlazybind uwtable
declare i32 @pthread_mutex_unlock(%"libc::unix::linux_like::linux::pthread_mutex_t"*) unnamed_addr #0

; Function Attrs: nonlazybind uwtable
declare i32 @pthread_rwlock_unlock(%"libc::unix::linux_like::linux::pthread_rwlock_t"*) unnamed_addr #0

; Function Attrs: nonlazybind uwtable
declare i32 @pthread_rwlock_rdlock(%"libc::unix::linux_like::linux::pthread_rwlock_t"*) unnamed_addr #0

; Function Attrs: nonlazybind uwtable
declare i32 @pthread_rwlock_wrlock(%"libc::unix::linux_like::linux::pthread_rwlock_t"*) unnamed_addr #0

; Function Attrs: nonlazybind uwtable
declare i32 @pthread_cond_wait(%"libc::unix::linux_like::linux::pthread_cond_t"*, %"libc::unix::linux_like::linux::pthread_mutex_t"*) unnamed_addr #0

; std::sys_common::mutex::MovableMutex::new
; Function Attrs: nonlazybind uwtable
declare noalias nonnull align 8 i64* @_ZN3std10sys_common5mutex12MovableMutex3new17h2bb8f0e9b979bf81E() unnamed_addr #0

; std::sync::poison::Flag::new
; Function Attrs: nonlazybind uwtable
declare i8 @_ZN3std4sync6poison4Flag3new17h47827b134c610a5eE() unnamed_addr #0

; std::sys_common::rwlock::MovableRWLock::new
; Function Attrs: nonlazybind uwtable
declare noalias nonnull align 8 i64* @_ZN3std10sys_common6rwlock13MovableRWLock3new17h8cb6241447c11387E() unnamed_addr #0

; std::sys::unix::thread_local_dtor::register_dtor
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix17thread_local_dtor13register_dtor17h23209ede0e49f302E(i8*, void (i8*)* nonnull) unnamed_addr #0

; core::panic::location::Location::caller
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(24) %"core::panic::location::Location"* @_ZN4core5panic8location8Location6caller17h5348652b54841341E(%"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #0

; std::panicking::rust_panic_with_hook
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN3std9panicking20rust_panic_with_hook17h00e530dc19739cc5E({}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), i64* align 8 dereferenceable_or_null(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #13

; std::panicking::panic_count::is_zero_slow_path
; Function Attrs: cold noinline nonlazybind uwtable
declare zeroext i1 @_ZN3std9panicking11panic_count17is_zero_slow_path17h88139735fad522c1E() unnamed_addr #9

; <str as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hc7fdfa9efeb52994E"([0 x i8]* nonnull align 1, i64, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #14

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #11

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h0354e4a24413a363E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17hd38ace2d8b112396E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h964ee865e084bf23E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17hec07c72f4ac49b15E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hea1df36702709463E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.fshl.i64(i64, i64, i64) #15

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #15

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.uadd.sat.i64(i64, i64) #15

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #15

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #15

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #15

; <std::sys_common::condvar::Condvar as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN75_$LT$std..sys_common..condvar..Condvar$u20$as$u20$core..ops..drop..Drop$GT$4drop17h83b8ba3d0c35aabaE"(%"std::sys_common::condvar::Condvar"* align 8 dereferenceable(16)) unnamed_addr #0

; <std::sys_common::mutex::MovableMutex as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN78_$LT$std..sys_common..mutex..MovableMutex$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha55fce36199af4d5E"(i64** align 8 dereferenceable(8)) unnamed_addr #0

; <std::sys_common::rwlock::MovableRWLock as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN80_$LT$std..sys_common..rwlock..MovableRWLock$u20$as$u20$core..ops..drop..Drop$GT$4drop17haffd3c1b234564a3E"(i64** align 8 dereferenceable(8)) unnamed_addr #0

; core::num::<impl core::str::traits::FromStr for i32>::from_str
; Function Attrs: nonlazybind uwtable
declare i64 @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$i32$GT$8from_str17h501abcb150b3d434E"([0 x i8]* nonnull align 1, i64) unnamed_addr #0

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h3993b2255ce6d89bE"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17hbfd18ed1d8ed03e1E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #16

; core::unicode::unicode_data::white_space::lookup
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core7unicode12unicode_data11white_space6lookup17hd6f8b9b07e22cd88E(i32) unnamed_addr #0

; <std::io::error::Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h827e52fb911077aeE"(%"std::io::error::Error"* align 8 dereferenceable(16), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; <std::thread::local::AccessError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN68_$LT$std..thread..local..AccessError$u20$as$u20$core..fmt..Debug$GT$3fmt17h4742560aef5d22b8E"(%"std::thread::local::AccessError"* nonnull align 1, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; <core::num::error::ParseIntError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN68_$LT$core..num..error..ParseIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17he685b773c162151eE"(i8* align 1 dereferenceable(1), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; <core::num::error::TryFromIntError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN70_$LT$core..num..error..TryFromIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17h3e45209909fb04c2E"(%"core::num::error::TryFromIntError"* nonnull align 1, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; <core::alloc::layout::LayoutError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17h18b08294eb593cf2E"(%"core::alloc::layout::LayoutError"* nonnull align 1, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; <core::str::error::Utf8Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h1c178a3c145491d4E"(%"core::str::error::Utf8Error"* align 8 dereferenceable(16), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; Function Attrs: nounwind readnone
declare i32 @llvm.x86.sse2.pmovmskb.128(<16 x i8>) unnamed_addr #17

; core::panicking::assert_failed_inner
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN4core9panicking19assert_failed_inner17h53988bbf3ad10cb2E(i8, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #13

; core::fmt::Formatter::alternate
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9alternate17h38ef9de37e051e79E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; Function Attrs: nounwind nonlazybind uwtable
declare i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #18

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nounwind nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h4346a7dd05d4a0b2E(i64, i64) unnamed_addr #19

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #18

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #18

; Function Attrs: nounwind nonlazybind uwtable
declare i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #18

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17hf5949ba689b42eeeE() unnamed_addr #13

; core::fmt::Formatter::debug_tuple
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter11debug_tuple17h7224d0bd130049f1E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24), %"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #0

; core::fmt::builders::DebugTuple::field
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17hf9e554966e8175aaE(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #0

; core::fmt::builders::DebugTuple::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17hb124e78f94d89d10E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24)) unnamed_addr #0

; core::fmt::Formatter::write_str
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17h183551d38569a8c9E(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #0

; Function Attrs: nonlazybind uwtable
declare i32 @close(i32) unnamed_addr #0

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h0ced462d12697fe9E(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; core::fmt::Formatter::debug_struct
; Function Attrs: nonlazybind uwtable
declare i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #0

; core::fmt::builders::DebugStruct::finish_non_exhaustive
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16)) unnamed_addr #0

; std::process::abort
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN3std7process5abort17h354795bd2c752f7eE() unnamed_addr #7

; hashbrown::raw::Fallibility::capacity_overflow
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN9hashbrown3raw11Fallibility17capacity_overflow17ha2b11c71af18eee4E(i1 zeroext) unnamed_addr #0

; hashbrown::raw::Fallibility::alloc_err
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN9hashbrown3raw11Fallibility9alloc_err17h60f2cc5601366693E(i1 zeroext, i64, i64) unnamed_addr #0

; hashbrown::raw::sse2::Group::static_empty
; Function Attrs: nonlazybind uwtable
declare align 1 dereferenceable(16) [16 x i8]* @_ZN9hashbrown3raw4sse25Group12static_empty17haefe8c9146b05cbaE() unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.cttz.i16(i16, i1 immarg) #15

; std::fs::OpenOptions::new
; Function Attrs: nonlazybind uwtable
declare i128 @_ZN3std2fs11OpenOptions3new17h6b9455b7cbc43679E() unnamed_addr #0

; std::fs::OpenOptions::write
; Function Attrs: nonlazybind uwtable
declare align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions5write17h7a3ac3ee6d53c986E(%"std::fs::OpenOptions"* align 4 dereferenceable(16), i1 zeroext) unnamed_addr #0

; std::fs::OpenOptions::create
; Function Attrs: nonlazybind uwtable
declare align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions6create17h844069579c36805bE(%"std::fs::OpenOptions"* align 4 dereferenceable(16), i1 zeroext) unnamed_addr #0

; std::fs::OpenOptions::append
; Function Attrs: nonlazybind uwtable
declare align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions6append17h8434c75b524a9103E(%"std::fs::OpenOptions"* align 4 dereferenceable(16), i1 zeroext) unnamed_addr #0

; std::fs::OpenOptions::read
; Function Attrs: nonlazybind uwtable
declare align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions4read17h7dd9beaf9e60b894E(%"std::fs::OpenOptions"* align 4 dereferenceable(16), i1 zeroext) unnamed_addr #0

; std::io::stdio::_print
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std2io5stdio6_print17hfd70903caad28085E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #0

; <std::fs::File as std::io::Read>::read_to_string
; Function Attrs: nonlazybind uwtable
declare void @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$14read_to_string17h7565b43626013008E"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<usize, std::io::error::Error>") dereferenceable(24), i32* align 4 dereferenceable(4), %"alloc::string::String"* align 8 dereferenceable(24)) unnamed_addr #0

; core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #15

; std::thread::current
; Function Attrs: nonlazybind uwtable
declare nonnull i64* @_ZN3std6thread7current17hb893d0f3bb410e20E() unnamed_addr #0

; std::thread::Thread::id
; Function Attrs: nonlazybind uwtable
declare i64 @_ZN3std6thread6Thread2id17h09f5841d274de3ecE(i64** align 8 dereferenceable(8)) unnamed_addr #0

; Function Attrs: nonlazybind uwtable
declare i64 @time(i64*) unnamed_addr #0

; Function Attrs: nonlazybind uwtable
declare void @srand(i32) unnamed_addr #0

; Function Attrs: nonlazybind uwtable
declare i32 @rand() unnamed_addr #0

; std::thread::sleep
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std6thread5sleep17h5f3e2ec71796842dE(i64, i32) unnamed_addr #0

; std::ffi::c_str::CStr::from_ptr
; Function Attrs: nonlazybind uwtable
declare { %"std::ffi::c_str::CStr"*, i64 } @_ZN3std3ffi5c_str4CStr8from_ptr17hf488328b45c6fe23E(i8*) unnamed_addr #0

; std::ffi::c_str::CStr::to_str
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3ffi5c_str4CStr6to_str17hd770c2be353b80beE(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture sret(%"core::result::Result<&str, core::str::error::Utf8Error>") dereferenceable(24), %"std::ffi::c_str::CStr"* nonnull align 1, i64) unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #15

; std::sync::condvar::Condvar::new
; Function Attrs: nonlazybind uwtable
declare i128 @_ZN3std4sync7condvar7Condvar3new17hd7f2ff5e47d3962fE() unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #15

; std::sync::condvar::Condvar::notify_one
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std4sync7condvar7Condvar10notify_one17hb275bf503c25f2f4E(%"std::sync::condvar::Condvar"* align 8 dereferenceable(16)) unnamed_addr #0

; core::fmt::Formatter::write_fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h9d6b4d9dd2c64373E(%"core::fmt::Formatter"* align 8 dereferenceable(64), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #0

; std::sync::condvar::Condvar::notify_all
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std4sync7condvar7Condvar10notify_all17h9b1caab06f6bd730E(%"std::sync::condvar::Condvar"* align 8 dereferenceable(16)) unnamed_addr #0

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #16

attributes #0 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #5 = { inlinehint noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #6 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" "target-features"="+sse2" }
attributes #7 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #8 = { cold nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #9 = { cold noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #10 = { nofree nosync nounwind readnone willreturn }
attributes #11 = { argmemonly nofree nounwind willreturn }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #16 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #17 = { nounwind readnone }
attributes #18 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #19 = { cold noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #20 = { noreturn }
attributes #21 = { noinline }
attributes #22 = { nounwind }
attributes #23 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 7, !"PIC Level", i32 2}
!1 = !{i32 2, !"RtLibUseGOT", i32 1}
!2 = !{i64 0, i64 2}
!3 = !{}
!4 = !{i8 0, i8 2}
!5 = !{i8 0, i8 41}
!6 = !{i8 0, i8 4}
!7 = !{i8 0, i8 5}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h12dc4a45a95636a7E: argument 0"}
!10 = distinct !{!10, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h12dc4a45a95636a7E"}
!11 = !{!12}
!12 = distinct !{!12, !10, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h12dc4a45a95636a7E: %value"}
!13 = !{i32 0, i32 -1}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h1955e37413669640E: argument 0"}
!16 = distinct !{!16, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h1955e37413669640E"}
!17 = !{!18}
!18 = distinct !{!18, !16, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h1955e37413669640E: %value"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h5e3aced182d2107bE: argument 0"}
!21 = distinct !{!21, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h5e3aced182d2107bE"}
!22 = !{!23}
!23 = distinct !{!23, !21, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h5e3aced182d2107bE: %value"}
!24 = !{i8 0, i8 3}
!25 = !{i8 -1, i8 2}
!26 = !{i64 1, i64 0}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h168daefaddf96f52E: argument 0"}
!29 = distinct !{!29, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h168daefaddf96f52E"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h5793e92b5278f3e4E: argument 0"}
!32 = distinct !{!32, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h5793e92b5278f3e4E"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h4f56d026bc2150c4E: argument 0"}
!35 = distinct !{!35, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h4f56d026bc2150c4E"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hc685bb8c18e86e4cE: argument 0"}
!38 = distinct !{!38, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hc685bb8c18e86e4cE"}
!39 = !{!40}
!40 = distinct !{!40, !38, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hc685bb8c18e86e4cE: %self"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h6f14d41fbaa9b759E: argument 0"}
!43 = distinct !{!43, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h6f14d41fbaa9b759E"}
!44 = !{!45}
!45 = distinct !{!45, !43, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h6f14d41fbaa9b759E: %slot"}
!46 = !{!42, !45}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h65c0fa408d51b94cE: argument 0"}
!49 = distinct !{!49, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h65c0fa408d51b94cE"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h98dd32fc21b7f856E: argument 0"}
!52 = distinct !{!52, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h98dd32fc21b7f856E"}
!53 = !{!54}
!54 = distinct !{!54, !52, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h98dd32fc21b7f856E: %self"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h2f6c37bf66bcc48bE: argument 0"}
!57 = distinct !{!57, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h2f6c37bf66bcc48bE"}
!58 = !{!59}
!59 = distinct !{!59, !57, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h2f6c37bf66bcc48bE: %slot"}
!60 = !{!56, !59}
!61 = !{i32 0, i32 2}
!62 = !{i64 0, i64 3}
!63 = !{i32 0, i32 1114112}
!64 = !{i32 3178076}
!65 = !{i32 0, i32 1114113}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h6ca253c27cb6cd0aE: argument 0"}
!68 = distinct !{!68, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h6ca253c27cb6cd0aE"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h0a4ffb1605a0cd90E: argument 0"}
!71 = distinct !{!71, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h0a4ffb1605a0cd90E"}
!72 = !{!73}
!73 = distinct !{!73, !71, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h0a4ffb1605a0cd90E: %self"}
!74 = !{!70, !73}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hb3445deb0effa73dE: argument 0"}
!77 = distinct !{!77, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hb3445deb0effa73dE"}
!78 = !{!79}
!79 = distinct !{!79, !77, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hb3445deb0effa73dE: %slot"}
!80 = !{!76, !70, !73}
!81 = !{!76, !70}
!82 = !{!79, !73}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h950a2277f04f0a6dE: %value"}
!85 = distinct !{!85, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h950a2277f04f0a6dE"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hb08a3a3880177597E: %value"}
!88 = distinct !{!88, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hb08a3a3880177597E"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h638db94e3bc4d4eaE: %value.0"}
!91 = distinct !{!91, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h638db94e3bc4d4eaE"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hf07a944795c1ab38E: %value"}
!94 = distinct !{!94, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hf07a944795c1ab38E"}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hfff3f779e12efed5E: %value"}
!97 = distinct !{!97, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hfff3f779e12efed5E"}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h2a929efbbd2db1f7E: %value"}
!100 = distinct !{!100, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h2a929efbbd2db1f7E"}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17ha74546af7d18ed3fE: %value"}
!103 = distinct !{!103, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17ha74546af7d18ed3fE"}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hb396c7871daed074E: argument 0"}
!106 = distinct !{!106, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hb396c7871daed074E"}
!107 = !{!108}
!108 = distinct !{!108, !106, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hb396c7871daed074E: %value"}
