; ModuleID = 'probe_RSE.2652ab29-cgu.0'
source_filename = "probe_RSE.2652ab29-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"core::sync::atomic::AtomicUsize" = type { i64 }
%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]" = type {}
%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]" = type {}
%"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]" = type { i64*, i64*, { [0 x i8]*, i64 }* }
%"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[core::mem::maybe_uninit::MaybeUninit<u8>]>>::get_unchecked_mut::{closure#0}]" = type { i64*, i64*, { [0 x i8]*, i64 }* }
%"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]" = type { i64*, i64*, { [0 x i8]*, i64 }* }
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"alloc::vec::Vec<&str>" = type { { i64*, i64 }, i64 }
%"core::str::iter::Split<&str>" = type { %"core::str::iter::SplitInternal<&str>" }
%"core::str::iter::SplitInternal<&str>" = type { i64, i64, %"core::str::pattern::StrSearcher", i8, i8, [6 x i8] }
%"core::str::pattern::StrSearcher" = type { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, %"core::str::pattern::StrSearcherImpl" }
%"core::str::pattern::StrSearcherImpl" = type { i64, [8 x i64] }
%"alloc::vec::Vec<u8>" = type { { i8*, i64 }, i64 }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::alloc::AllocError" = type {}
%"std::thread::local::AccessError" = type {}
%"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::alloc::layout::LayoutError" = type {}
%"std::sys_common::mutex::MovableMutex" = type { %"std::sys::unix::locks::futex::Mutex" }
%"std::sys::unix::locks::futex::Mutex" = type { %"core::sync::atomic::AtomicU32" }
%"core::sync::atomic::AtomicU32" = type { i32 }
%"std::sys::unix::locks::futex::Condvar" = type { %"core::sync::atomic::AtomicU32" }
%"std::sys_common::condvar::Condvar" = type { %"std::sys::unix::locks::futex::Condvar", %"std::sys_common::condvar::check::NoCheck" }
%"std::sys_common::condvar::check::NoCheck" = type {}
%"core::result::Result<std::fs::File, std::io::error::Error>" = type { i32, [3 x i32] }
%"std::fs::OpenOptions" = type { %"std::sys::unix::fs::OpenOptions" }
%"std::sys::unix::fs::OpenOptions" = type { i32, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }
%"std::path::Path" = type { %"std::ffi::os_str::OsStr" }
%"std::ffi::os_str::OsStr" = type { %"std::sys::unix::os_str::Slice" }
%"std::sys::unix::os_str::Slice" = type { [0 x i8] }
%"core::result::Result<usize, std::io::error::Error>" = type { i64, [1 x i64] }
%"core::result::Result<usize, std::io::error::Error>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<usize, std::io::error::Error>::Err" = type { [1 x i64], i8* }
%"std::io::error::SimpleMessage" = type { { [0 x i8]*, i64 }, i8, [7 x i8] }
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"std::io::error::ErrorData<&std::io::error::Custom>" = type { i8, [15 x i8] }
%"std::io::error::ErrorData<&std::io::error::Custom>::Os" = type { [1 x i32], i32 }
%"std::io::error::Custom" = type { { {}*, [3 x i64]* }, i8, [7 x i8] }
%"std::io::error::ErrorData<&std::io::error::Custom>::Custom" = type { [1 x i64], %"std::io::error::Custom"* }
%"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage" = type { [1 x i64], %"std::io::error::SimpleMessage"* }
%"std::io::error::ErrorData<&std::io::error::Custom>::Simple" = type { [1 x i8], i8 }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>" = type { i8, [15 x i8] }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os" = type { [1 x i32], i32 }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom" = type { [1 x i64], %"std::io::error::Custom"* }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage" = type { [1 x i64], %"std::io::error::SimpleMessage"* }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple" = type { [1 x i8], i8 }
%"std::sync::mutex::Mutex<i32>" = type { %"std::sys_common::mutex::MovableMutex", %"std::sync::poison::Flag", [3 x i8], i32 }
%"std::sync::poison::Flag" = type { %"core::sync::atomic::AtomicBool" }
%"core::sync::atomic::AtomicBool" = type { i8 }
%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>" = type { %"std::sys_common::mutex::MovableMutex", %"std::sync::poison::Flag", [3 x i8], %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>" }
%"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>" = type { %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>" }
%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>" = type { { i64*, i64 }, i64 }
%"std::sync::mutex::Mutex<std::fs::File>" = type { %"std::sys_common::mutex::MovableMutex", %"std::sync::poison::Flag", [3 x i8], i32 }
%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>" = type { i64, [2 x i64] }
%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>" = type { i64, [2 x i64] }
%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>" = type { i64, [2 x i64] }
%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err" = type { [1 x i64], { i32*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok" = type { [1 x i64], { i32*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Err" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Ok" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err" = type { [1 x i64], { i32*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok" = type { [1 x i64], { i32*, i8 } }
%"std::sync::condvar::Condvar" = type { %"std::sys_common::condvar::Condvar" }
%"[closure@./probe_RSE.rs:141:34: 144:18]" = type { i8**, %"core::cell::RefCell<alloc::string::String>"**, i32* }
%"core::cell::RefCell<alloc::string::String>" = type { i64, %"core::cell::UnsafeCell<alloc::string::String>" }
%"core::cell::UnsafeCell<alloc::string::String>" = type { %"alloc::string::String" }
%"alloc::string::String" = type { %"alloc::vec::Vec<u8>" }
%"[closure@./probe_RSE.rs:118:30: 121:14]" = type { i8**, %"core::cell::RefCell<alloc::string::String>"**, i32*, { [0 x i8]*, i64 }* }
%"[closure@./probe_RSE.rs:97:18: 103:10]" = type { i32*, i8**, i32*, { [0 x i8]*, i64 }*, i64** }
%"[closure@./probe_RSE.rs:116:18: 122:10]" = type { i32*, i8**, i32*, { [0 x i8]*, i64 }* }
%"[closure@./probe_RSE.rs:136:27: 145:14]" = type { %"core::cell::RefCell<alloc::string::String>"**, i8**, i32* }
%"[closure@./probe_RSE.rs:99:30: 102:14]" = type { i8**, %"core::cell::RefCell<alloc::string::String>"**, i32*, { [0 x i8]*, i64 }*, i64** }
%"[closure@./probe_RSE.rs:134:18: 146:10]" = type { i32*, i8**, i32* }
%"std::thread::local::fast::Key<core::cell::RefCell<usize>>" = type { %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<usize>>", i8, [7 x i8] }
%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<usize>>" = type { %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<usize>>>" }
%"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<usize>>>" = type { %"core::option::Option<core::cell::RefCell<usize>>" }
%"core::option::Option<core::cell::RefCell<usize>>" = type { i64, [2 x i64] }
%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>" = type { %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>", i8, [7 x i8] }
%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>" = type { %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>" }
%"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>" = type { %"core::option::Option<core::cell::RefCell<alloc::string::String>>" }
%"core::option::Option<core::cell::RefCell<alloc::string::String>>" = type { i64, [4 x i64] }
%"std::thread::local::fast::Key<core::cell::RefCell<i32>>" = type { %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>", i8, [7 x i8] }
%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>" = type { %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>" }
%"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>" = type { %"core::option::Option<core::cell::RefCell<i32>>" }
%"core::option::Option<core::cell::RefCell<i32>>" = type { i64, [2 x i64] }
%"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some" = type { [1 x i64], %"core::cell::RefCell<alloc::string::String>" }
%"core::option::Option<core::cell::RefCell<i32>>::Some" = type { [1 x i64], { i64, i32 } }
%"core::option::Option<core::cell::RefCell<usize>>::Some" = type { [1 x i64], { i64, i64 } }
%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%_ProbeNode = type { %"alloc::string::String", { [0 x i8]*, i64 }, { i64, i8* }, %"alloc::string::String", i32, [1 x i32] }
%"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]" = type { i8**, i8**, i64* }
%"[closure@core::intrinsics::copy_nonoverlapping<core::mem::maybe_uninit::MaybeUninit<u8>>::{closure#0}]" = type { i8**, i8**, i64* }
%"core::ffi::c_str::CStr" = type { [0 x i8] }
%"core::fmt::Opaque" = type {}
%"core::fmt::rt::v1::Argument" = type { i64, %"core::fmt::rt::v1::FormatSpec" }
%"core::fmt::rt::v1::FormatSpec" = type { { i64, i64 }, { i64, i64 }, i32, i32, i8, [7 x i8] }
%"alloc::sync::ArcInner<_ProbeSemaphore>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %_ProbeSemaphore }
%_ProbeSemaphore = type { %"std::sync::mutex::Mutex<i32>", %"std::sync::condvar::Condvar" }
%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>" }
%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"std::sync::mutex::Mutex<std::fs::File>", [1 x i32] }
%"core::panic::panic_info::PanicInfo" = type { { {}*, [3 x i64]* }, i64*, %"core::panic::location::Location"*, i8, [7 x i8] }
%"alloc::vec::Vec<_ProbeNode>" = type { { i64*, i64 }, i64 }
%"core::fmt::Error" = type {}
%"core::cell::BorrowError" = type {}
%"core::cell::BorrowMutError" = type {}
%"core::str::error::Utf8Error" = type { i64, { i8, i8 }, [6 x i8] }
%"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<alloc::string::String>>>" = type { %"core::option::Option<core::cell::RefCell<alloc::string::String>>" }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>" = type { [5 x i64] }
%"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<usize>>>" = type { %"core::option::Option<core::cell::RefCell<usize>>" }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<usize>>>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<alloc::string::String>" = type { %"alloc::string::String" }
%"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<i32>>>" = type { %"core::option::Option<core::cell::RefCell<i32>>" }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>" = type { [3 x i64] }
%"core::num::error::TryFromIntError" = type { {} }
%"core::option::Option<alloc::string::String>" = type { {}*, [2 x i64] }
%"core::option::Option<alloc::string::String>::Some" = type { %"alloc::string::String" }
%"core::result::Result<std::fs::File, std::io::error::Error>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<std::fs::File, std::io::error::Error>::Err" = type { [1 x i64], i8* }
%"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[_ProbeNode]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<_ProbeNode>]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrComponents<u8>" = type { {}*, {} }
%"core::ptr::metadata::PtrRepr<u8>" = type { [1 x i64] }
%"core::ptr::metadata::PtrRepr<[&str]>" = type { [2 x i64] }
%"core::option::Option<(usize, usize)>" = type { i64, [2 x i64] }
%"core::option::Option<(usize, usize)>::Some" = type { [1 x i64], { i64, i64 } }
%"core::str::pattern::TwoWaySearcher" = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%"core::str::pattern::SearchStep" = type { i64, [2 x i64] }
%"core::result::Result<&core::cell::RefCell<usize>, std::thread::local::AccessError>::Err" = type { %"std::thread::local::AccessError" }
%"core::result::Result<&core::cell::RefCell<i32>, std::thread::local::AccessError>::Err" = type { %"std::thread::local::AccessError" }
%"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<&core::cell::RefCell<alloc::string::String>, std::thread::local::AccessError>::Err" = type { %"std::thread::local::AccessError" }
%"core::result::Result<&str, core::str::error::Utf8Error>" = type { i64, [2 x i64] }
%"core::result::Result<&str, core::str::error::Utf8Error>::Ok" = type { [1 x i64], { [0 x i8]*, i64 } }
%"core::result::Result<&str, core::str::error::Utf8Error>::Err" = type { [1 x i64], %"core::str::error::Utf8Error" }
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok" = type { {} }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"alloc::alloc::Global" = type {}
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { [2 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::fmt::builders::DebugStruct" = type { %"core::fmt::Formatter"*, i8, i8, [6 x i8] }
%"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err" = type { %"std::thread::local::AccessError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::RefCell<alloc::string::String>>::Break" = type { %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err" }
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::RefCell<usize>>::Break" = type { %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break" = type { %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::RefCell<i32>>::Break" = type { %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err" }
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue" = type { {} }
%"core::str::pattern::StrSearcherImpl::TwoWay" = type { [1 x i64], %"core::str::pattern::TwoWaySearcher" }
%"core::str::pattern::SearchStep::Match" = type { [1 x i64], i64, i64 }
%"core::str::pattern::StrSearcherImpl::Empty" = type { [1 x i64], %"core::str::pattern::EmptyNeedle" }
%"core::str::pattern::EmptyNeedle" = type { i64, i64, i8, i8, i8, [5 x i8] }
%"core::str::pattern::SearchStep::Reject" = type { [1 x i64], i64, i64 }
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@alloc353 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"#" }>, align 1
@alloc648 = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"/rustc/43347397f7c5ca9a670a3bb3890c7187e24a52ab/library/std/src/io/mod.rs" }>, align 1
@alloc649 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [73 x i8] }>, <{ [73 x i8] }>* @alloc648, i32 0, i32 0, i32 0), [16 x i8] c"I\00\00\00\00\00\00\00\03\06\00\00!\00\00\00" }>, align 8
@alloc348 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"failed to write whole buffer" }>, align 1
@alloc351 = private unnamed_addr constant <{ i8*, [9 x i8], [7 x i8] }> <{ i8* getelementptr inbounds (<{ [28 x i8] }>, <{ [28 x i8] }>* @alloc348, i32 0, i32 0, i32 0), [9 x i8] c"\1C\00\00\00\00\00\00\00\17", [7 x i8] undef }>, align 8
@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8* }> <{ i8* bitcast (void ({ i32*, i8* }*)* @"_ZN4core3ptr76drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..fs..File$GT$$GT$17h646dc496cf61cd3eE" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i32*, i8* }*, [0 x i8]*, i64)* @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h7ad4762307c07efbE" to i8*), i8* bitcast (i1 ({ i32*, i8* }*, i32)* @_ZN4core3fmt5Write10write_char17h71075877e8117c5bE to i8*), i8* bitcast (i1 ({ i32*, i8* }*, %"core::fmt::Arguments"*)* @_ZN4core3fmt5Write9write_fmt17h4af0c010c9cce504E to i8*) }>, align 8
@alloc341 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"formatter error" }>, align 1
@alloc344 = private unnamed_addr constant <{ i8*, [9 x i8], [7 x i8] }> <{ i8* getelementptr inbounds (<{ [15 x i8] }>, <{ [15 x i8] }>* @alloc341, i32 0, i32 0, i32 0), [9 x i8] c"\0F\00\00\00\00\00\00\00(", [7 x i8] undef }>, align 8
@alloc658 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"internal error: entered unreachable code" }>, align 1
@alloc656 = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/rustc/43347397f7c5ca9a670a3bb3890c7187e24a52ab/library/std/src/io/error/repr_bitpacked.rs" }>, align 1
@alloc657 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc656, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\0F\01\00\00\0D\00\00\00" }>, align 8
@alloc672 = private unnamed_addr constant <{ [70 x i8] }> <{ [70 x i8] c"cannot access a Thread Local Storage value during or after destruction" }>, align 1
@alloc673 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/43347397f7c5ca9a670a3bb3890c7187e24a52ab/library/std/src/thread/local.rs" }>, align 1
@alloc661 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc673, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\A5\01\00\00\1A\00\00\00" }>, align 8
@alloc674 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc673, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\BC\01\00\00 \00\00\00" }>, align 8
@_ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17hbdafec5367c29702E = external global %"core::sync::atomic::AtomicUsize"
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8* }> <{ i8* bitcast (void (%"alloc::string::String"*)* @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E" to i8*), [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"alloc::string::String"*, [0 x i8]*, i64)* @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17he5943151ef74dfafE" to i8*), i8* bitcast (i1 (%"alloc::string::String"*, i32)* @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h5086c5c6294a93bbE" to i8*), i8* bitcast (i1 (%"alloc::string::String"*, %"core::fmt::Arguments"*)* @_ZN4core3fmt5Write9write_fmt17h593c63e97458c52aE to i8*) }>, align 8
@alloc680 = private unnamed_addr constant <{ [55 x i8] }> <{ [55 x i8] c"a Display implementation returned an error unexpectedly" }>, align 1
@alloc681 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/43347397f7c5ca9a670a3bb3890c7187e24a52ab/library/alloc/src/string.rs" }>, align 1
@alloc682 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc681, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\BA\09\00\00\0E\00\00\00" }>, align 8
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8* }> <{ i8* bitcast (void ({ i32*, i8* }**)* @"_ZN4core3ptr88drop_in_place$LT$$RF$mut$u20$std..io..Write..write_fmt..Adapter$LT$std..fs..File$GT$$GT$17ha489f31b6c4efb0dE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i32*, i8* }**, [0 x i8]*, i64)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h5cd4a60194bdede9E" to i8*), i8* bitcast (i1 ({ i32*, i8* }**, i32)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h2085213c73451cefE" to i8*), i8* bitcast (i1 ({ i32*, i8* }**, %"core::fmt::Arguments"*)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17he8b31c3c8c7f50d7E" to i8*) }>, align 8
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8* }> <{ i8* bitcast (void (%"alloc::string::String"**)* @"_ZN4core3ptr54drop_in_place$LT$$RF$mut$u20$alloc..string..String$GT$17h52547f9fdce9ab4aE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"alloc::string::String"**, [0 x i8]*, i64)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h243dd22d0783e4daE" to i8*), i8* bitcast (i1 (%"alloc::string::String"**, i32)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h19f5a9fc9da38a44E" to i8*), i8* bitcast (i1 (%"alloc::string::String"**, %"core::fmt::Arguments"*)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h36a6cfe93b04b59dE" to i8*) }>, align 8
@alloc222 = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc183 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc184 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc183, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc694 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/43347397f7c5ca9a670a3bb3890c7187e24a52ab/library/core/src/fmt/mod.rs" }>, align 1
@alloc695 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc694, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\87\01\00\00\0D\00\00\00" }>, align 8
@alloc696 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/43347397f7c5ca9a670a3bb3890c7187e24a52ab/library/core/src/ptr/mod.rs" }>, align 1
@alloc697 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc696, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\80\04\00\00\0D\00\00\00" }>, align 8
@alloc702 = private unnamed_addr constant <{ [83 x i8] }> <{ [83 x i8] c"/rustc/43347397f7c5ca9a670a3bb3890c7187e24a52ab/library/core/src/str/validations.rs" }>, align 1
@alloc699 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc702, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\001\00\00\00$\00\00\00" }>, align 8
@alloc701 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc702, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\008\00\00\00(\00\00\00" }>, align 8
@alloc703 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc702, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00@\00\00\00,\00\00\00" }>, align 8
@alloc803 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/43347397f7c5ca9a670a3bb3890c7187e24a52ab/library/core/src/str/pattern.rs" }>, align 1
@alloc705 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc803, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\8C\05\00\00\14\00\00\00" }>, align 8
@alloc707 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc803, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\8C\05\00\00!\00\00\00" }>, align 8
@alloc709 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc803, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\98\05\00\00\14\00\00\00" }>, align 8
@alloc711 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc803, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\98\05\00\00!\00\00\00" }>, align 8
@alloc714 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"already borrowed" }>, align 1
@alloc716 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"already mutably borrowed" }>, align 1
@alloc721 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/43347397f7c5ca9a670a3bb3890c7187e24a52ab/library/core/src/char/methods.rs" }>, align 1
@alloc718 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc721, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\83\06\00\00\16\00\00\00" }>, align 8
@alloc720 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc721, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\9D\06\00\00\0A\00\00\00" }>, align 8
@alloc355 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"encode_utf8: need " }>, align 1
@alloc357 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c" bytes to encode U+" }>, align 1
@alloc358 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c", but the buffer has " }>, align 1
@alloc356 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc355, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc357, i32 0, i32 0, i32 0), [8 x i8] c"\13\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc358, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc722 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc721, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\96\06\00\00\0E\00\00\00" }>, align 8
@alloc319 = private unnamed_addr constant <{ [49 x i8] }> <{ [49 x i8] c"there is no such thing as an acquire/release load" }>, align 1
@alloc320 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [49 x i8] }>, <{ [49 x i8] }>* @alloc319, i32 0, i32 0, i32 0), [8 x i8] c"1\00\00\00\00\00\00\00" }>, align 8
@alloc737 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/43347397f7c5ca9a670a3bb3890c7187e24a52ab/library/core/src/sync/atomic.rs" }>, align 1
@alloc724 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc737, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00$\0A\00\00\17\00\00\00" }>, align 8
@alloc324 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"there is no such thing as a release load" }>, align 1
@alloc325 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [40 x i8] }>, <{ [40 x i8] }>* @alloc324, i32 0, i32 0, i32 0), [8 x i8] c"(\00\00\00\00\00\00\00" }>, align 8
@alloc726 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc737, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00#\0A\00\00\18\00\00\00" }>, align 8
@alloc329 = private unnamed_addr constant <{ [50 x i8] }> <{ [50 x i8] c"there is no such thing as an acquire/release store" }>, align 1
@alloc330 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [50 x i8] }>, <{ [50 x i8] }>* @alloc329, i32 0, i32 0, i32 0), [8 x i8] c"2\00\00\00\00\00\00\00" }>, align 8
@alloc728 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc737, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\16\0A\00\00\17\00\00\00" }>, align 8
@alloc334 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"there is no such thing as an acquire store" }>, align 1
@alloc335 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [42 x i8] }>, <{ [42 x i8] }>* @alloc334, i32 0, i32 0, i32 0), [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc730 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc737, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\15\0A\00\00\18\00\00\00" }>, align 8
@alloc292 = private unnamed_addr constant <{ [60 x i8] }> <{ [60 x i8] c"a failure ordering can't be stronger than a success ordering" }>, align 1
@alloc293 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [60 x i8] }>, <{ [60 x i8] }>* @alloc292, i32 0, i32 0, i32 0), [8 x i8] c"<\00\00\00\00\00\00\00" }>, align 8
@alloc732 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc737, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00o\0A\00\00\12\00\00\00" }>, align 8
@alloc297 = private unnamed_addr constant <{ [61 x i8] }> <{ [61 x i8] c"there is no such thing as an acquire/release failure ordering" }>, align 1
@alloc298 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [61 x i8] }>, <{ [61 x i8] }>* @alloc297, i32 0, i32 0, i32 0), [8 x i8] c"=\00\00\00\00\00\00\00" }>, align 8
@alloc734 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc737, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00m\0A\00\00\1C\00\00\00" }>, align 8
@alloc302 = private unnamed_addr constant <{ [52 x i8] }> <{ [52 x i8] c"there is no such thing as a release failure ordering" }>, align 1
@alloc303 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [52 x i8] }>, <{ [52 x i8] }>* @alloc302, i32 0, i32 0, i32 0), [8 x i8] c"4\00\00\00\00\00\00\00" }>, align 8
@alloc736 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc737, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00n\0A\00\00\1D\00\00\00" }>, align 8
@alloc178 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"there is no such thing as a relaxed fence" }>, align 1
@alloc179 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [41 x i8] }>, <{ [41 x i8] }>* @alloc178, i32 0, i32 0, i32 0), [8 x i8] c")\00\00\00\00\00\00\00" }>, align 8
@alloc738 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc737, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00c\0B\00\00\18\00\00\00" }>, align 8
@alloc739 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/43347397f7c5ca9a670a3bb3890c7187e24a52ab/library/core/src/alloc/layout.rs" }>, align 1
@alloc740 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc739, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\97\01\00\00\1A\00\00\00" }>, align 8
@alloc741 = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: mid <= self.len()" }>, align 1
@vtable.4 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h40e63bf6e01db46fE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"core::fmt::Formatter"*)* @"_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h0105867e837c5397E" to i8*) }>, align 8
@vtable.5 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (%"core::cell::BorrowError"*)* @"_ZN4core3ptr44drop_in_place$LT$core..cell..BorrowError$GT$17hbdc327fc0c766312E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::cell::BorrowError"*, %"core::fmt::Formatter"*)* @"_ZN60_$LT$core..cell..BorrowError$u20$as$u20$core..fmt..Debug$GT$3fmt17h72cd10022f05d097E" to i8*) }>, align 8
@vtable.6 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (%"std::thread::local::AccessError"*)* @"_ZN4core3ptr52drop_in_place$LT$std..thread..local..AccessError$GT$17h7e759a795d6355ecE" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::thread::local::AccessError"*, %"core::fmt::Formatter"*)* @"_ZN68_$LT$std..thread..local..AccessError$u20$as$u20$core..fmt..Debug$GT$3fmt17h34b34bfb4b17421aE" to i8*) }>, align 8
@vtable.7 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (%"core::cell::BorrowMutError"*)* @"_ZN4core3ptr47drop_in_place$LT$core..cell..BorrowMutError$GT$17h83972e3e95d77b74E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::cell::BorrowMutError"*, %"core::fmt::Formatter"*)* @"_ZN63_$LT$core..cell..BorrowMutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hc351f090db32f140E" to i8*) }>, align 8
@vtable.8 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (%"core::fmt::Error"*)* @"_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17h73dc73bb78a6021dE" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::fmt::Error"*, %"core::fmt::Formatter"*)* @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h5047489994ec6febE" to i8*) }>, align 8
@alloc775 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.9 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (%"core::num::error::TryFromIntError"*)* @"_ZN4core3ptr54drop_in_place$LT$core..num..error..TryFromIntError$GT$17h839a7c0c4efc941aE" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::num::error::TryFromIntError"*, %"core::fmt::Formatter"*)* @"_ZN70_$LT$core..num..error..TryFromIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17hdc6f451ac6548ca8E" to i8*) }>, align 8
@vtable.a = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (%"core::str::error::Utf8Error"*)* @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h086ad9ca9bd849e5E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::str::error::Utf8Error"*, %"core::fmt::Formatter"*)* @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h095ae28033eaf4f9E" to i8*) }>, align 8
@vtable.b = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ({ i32*, i8 }*)* @"_ZN4core3ptr98drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$$GT$17h3af6d6f6447e4e59E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i32*, i8 }*, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hb60005733391d9f1E" to i8*) }>, align 8
@vtable.c = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ({ i64*, i8 }*)* @"_ZN4core3ptr162drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$$GT$17hd16bc80bfb8b53e2E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64*, i8 }*, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b125b91bcf889eE" to i8*) }>, align 8
@vtable.d = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ({ i32*, i8 }*)* @"_ZN4core3ptr108drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$$GT$17h16682211493c70a8E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i32*, i8 }*, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hbc7e5de43e347243E" to i8*) }>, align 8
@alloc779 = private unnamed_addr constant <{ [53 x i8] }> <{ [53 x i8] c"attempt to join into collection with len > usize::MAX" }>, align 1
@alloc782 = private unnamed_addr constant <{ [72 x i8] }> <{ [72 x i8] c"/rustc/43347397f7c5ca9a670a3bb3890c7187e24a52ab/library/alloc/src/str.rs" }>, align 1
@alloc781 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [72 x i8] }>, <{ [72 x i8] }>* @alloc782, i32 0, i32 0, i32 0), [16 x i8] c"H\00\00\00\00\00\00\00\AB\00\00\00\0A\00\00\00" }>, align 8
@alloc783 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [72 x i8] }>, <{ [72 x i8] }>* @alloc782, i32 0, i32 0, i32 0), [16 x i8] c"H\00\00\00\00\00\00\00\C2\00\00\00\16\00\00\00" }>, align 8
@0 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@1 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc788 = private unnamed_addr constant <{ [74 x i8] }> <{ [74 x i8] c"/rustc/43347397f7c5ca9a670a3bb3890c7187e24a52ab/library/alloc/src/alloc.rs" }>, align 1
@alloc785 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc788, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\AC\00\00\00\1B\00\00\00" }>, align 8
@alloc787 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc788, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\CC\00\00\00\1B\00\00\00" }>, align 8
@alloc789 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc788, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\D9\00\00\00\1F\00\00\00" }>, align 8
@alloc798 = private unnamed_addr constant <{ [76 x i8] }> <{ [76 x i8] c"/rustc/43347397f7c5ca9a670a3bb3890c7187e24a52ab/library/alloc/src/raw_vec.rs" }>, align 1
@alloc791 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc798, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\C8\01\00\00\16\00\00\00" }>, align 8
@alloc793 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc798, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\CA\01\00\00\05\00\00\00" }>, align 8
@alloc795 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc798, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\F7\00\00\00;\00\00\00" }>, align 8
@alloc797 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc798, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\86\01\00\00\1C\00\00\00" }>, align 8
@alloc799 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc798, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\90\01\00\00\13\00\00\00" }>, align 8
@alloc802 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"PoisonError" }>, align 1
@alloc804 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc803, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\1C\04\00\00\17\00\00\00" }>, align 8
@_ZN9probe_RSE9_PROBE_FP17heeddb26bdf91b043E = internal global <{ [8 x i8] }> zeroinitializer, align 8
@_ZN9probe_RSE15_PROBE_THRD_SEM17h8031662f11c75f52E = internal global <{ [8 x i8] }> zeroinitializer, align 8
@_ZN9probe_RSE20_PROBE_NEW_THREAD_ID17hb3c5bb923c61dc6aE = internal global <{ [8 x i8], [16 x i8] }> <{ [8 x i8] zeroinitializer, [16 x i8] undef }>, align 8
@_ZN9probe_RSE15_PROBE_THRD_EXE17h6cfd9f0d4be367c8E = internal global <{ [8 x i8] }> zeroinitializer, align 8
@alloc225 = private unnamed_addr constant <{ [39 x i8] }> <{ [39 x i8] c"***** INITIATING PROBE FUNCTINOS *****\0A" }>, align 1
@alloc226 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [39 x i8] }>, <{ [39 x i8] }>* @alloc225, i32 0, i32 0, i32 0), [8 x i8] c"'\00\00\00\00\00\00\00" }>, align 8
@alloc805 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"log" }>, align 1
@alloc921 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"./probe_RSE.rs" }>, align 1
@alloc807 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\002\00\00\00.\00\00\00" }>, align 8
@alloc819 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"struct" }>, align 1
@alloc563 = private unnamed_addr constant <{ i8* }> <{ i8* bitcast (i64* (i64*)* @_ZN9probe_RSE11EXE_NODE_ID7__getit17h8b72b9ffbc5aba84E to i8*) }>, align 8
@alloc554 = private unnamed_addr constant <{ i8* }> <{ i8* bitcast (i64* (i64*)* @_ZN9probe_RSE3TID7__getit17hbf808cfb437c2ed1E to i8*) }>, align 8
@vtable.e = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8* }> <{ i8* bitcast (void ({ i8*, i64* }*)* @"_ZN4core3ptr67drop_in_place$LT$probe_RSE.._init_..$u7b$$u7b$closure$u7d$$u7d$$GT$17hbd64bf292dedb01fE" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (void ({ i8*, i64* }*, %"core::panic::panic_info::PanicInfo"*)* @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17ha275d01ff2c3f421E" to i8*), i8* bitcast (void ({ i8*, i64* }*, %"core::panic::panic_info::PanicInfo"*)* @"_ZN9probe_RSE6_init_28_$u7b$$u7b$closure$u7d$$u7d$17h424f42a2ccf1e0b6E" to i8*), i8* bitcast (void ({ i8*, i64* }*, %"core::panic::panic_info::PanicInfo"*)* @"_ZN9probe_RSE6_init_28_$u7b$$u7b$closure$u7d$$u7d$17h424f42a2ccf1e0b6E" to i8*) }>, align 8
@alloc815 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00>\00\00\00\15\00\00\00" }>, align 8
@alloc816 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"1" }>, align 1
@alloc818 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00A\00\00\00\0D\00\00\00" }>, align 8
@alloc821 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00N\00\00\00m\00\00\00" }>, align 8
@alloc823 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00O\00\00\00.\00\00\00" }>, align 8
@alloc274 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"tid " }>, align 1
@alloc276 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c" --------\0A" }>, align 1
@alloc275 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc274, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [10 x i8] }>, <{ [10 x i8] }>* @alloc276, i32 0, i32 0, i32 0), [8 x i8] c"\0A\00\00\00\00\00\00\00" }>, align 8
@alloc901 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"write failed\0A" }>, align 1
@alloc826 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00R\00\00\00?\00\00\00" }>, align 8
@alloc828 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00S\00\00\00\11\00\00\00" }>, align 8
@str.f = internal constant [28 x i8] c"attempt to add with overflow"
@alloc280 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\09" }>, align 1
@alloc282 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\0A" }>, align 1
@alloc281 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc280, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc282, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc831 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00U\00\00\00;\00\00\00" }>, align 8
@alloc833 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00`\00\00\00@\00\00\00" }>, align 8
@alloc835 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00b\00\00\00\1D\00\00\00" }>, align 8
@alloc837 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00d\00\00\00H\00\00\00" }>, align 8
@alloc839 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00e\00\00\008\00\00\00" }>, align 8
@alloc841 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00e\00\00\00H\00\00\00" }>, align 8
@alloc843 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00m\00\00\00,\00\00\00" }>, align 8
@alloc515 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"join" }>, align 1
@alloc516 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc515, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc845 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00u\00\00\00\1D\00\00\00" }>, align 8
@alloc847 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00w\00\00\00H\00\00\00" }>, align 8
@alloc849 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00x\00\00\008\00\00\00" }>, align 8
@alloc851 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00x\00\00\00F\00\00\00" }>, align 8
@alloc853 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\87\00\00\00\1D\00\00\00" }>, align 8
@alloc543 = private unnamed_addr constant <{ i8* }> <{ i8* bitcast (i64* (i64*)* @_ZN9probe_RSE8CHILD_ID7__getit17h28aa4e647d59bb4aE to i8*) }>, align 8
@alloc855 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\89\00\00\00-\00\00\00" }>, align 8
@alloc547 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"." }>, align 1
@alloc546 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* bitcast (<{}>* @alloc222 to i8*), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc547, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc857 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\8A\00\00\00C\00\00\00" }>, align 8
@alloc859 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\8B\00\00\00\11\00\00\00" }>, align 8
@alloc861 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\8E\00\00\00H\00\00\00" }>, align 8
@alloc863 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\8F\00\00\00<\00\00\00" }>, align 8
@alloc865 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\8F\00\00\00J\00\00\00" }>, align 8
@alloc866 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"spawning" }>, align 1
@alloc868 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\99\00\00\00\15\00\00\00" }>, align 8
@alloc870 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\A4\00\00\00\1D\00\00\00" }>, align 8
@alloc872 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\A9\00\00\008\00\00\00" }>, align 8
@alloc874 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\AA\00\00\00!\00\00\00" }>, align 8
@alloc876 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\AE\00\00\008\00\00\00" }>, align 8
@alloc878 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\AE\00\00\00F\00\00\00" }>, align 8
@alloc879 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"spawned" }>, align 1
@alloc893 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"/" }>, align 1
@alloc882 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\C4\00\00\00\14\00\00\00" }>, align 8
@alloc476 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c".." }>, align 1
@alloc477 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc476, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc884 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\C5\00\00\00\1D\00\00\00" }>, align 8
@alloc886 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\C6\00\00\00$\00\00\00" }>, align 8
@str.g = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc888 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\C6\00\00\00\1D\00\00\00" }>, align 8
@alloc890 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\C7\00\00\00\15\00\00\00" }>, align 8
@alloc892 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\C9\00\00\00\11\00\00\00" }>, align 8
@alloc409 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"None" }>, align 1
@alloc896 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\D1\00\00\000\00\00\00" }>, align 8
@alloc898 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\D2\00\00\00\0D\00\00\00" }>, align 8
@alloc900 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\E0\00\00\001\00\00\00" }>, align 8
@alloc465 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"-" }>, align 1
@alloc466 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"+" }>, align 1
@alloc464 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* bitcast (<{}>* @alloc222 to i8*), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc465, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc466, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc903 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\E1\00\00\00:\00\00\00" }>, align 8
@alloc905 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\E9\00\00\00*\00\00\00" }>, align 8
@alloc907 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\EA\00\00\00'\00\00\00" }>, align 8
@alloc909 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\EB\00\00\003\00\00\00" }>, align 8
@str.h = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc911 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\FC\00\00\00*\00\00\00" }>, align 8
@alloc913 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\FD\00\00\00\09\00\00\00" }>, align 8
@alloc915 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\FF\00\00\00)\00\00\00" }>, align 8
@alloc917 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\03\01\00\00*\00\00\00" }>, align 8
@alloc919 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\04\01\00\00\09\00\00\00" }>, align 8
@alloc368 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"tid: " }>, align 1
@alloc370 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c" | func_name: " }>, align 1
@alloc371 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c" | lock_var_addr: " }>, align 1
@alloc372 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c" | " }>, align 1
@alloc373 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c" : " }>, align 1
@alloc369 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc368, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc370, i32 0, i32 0, i32 0), [8 x i8] c"\0E\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc371, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc372, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc373, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc437 = private unnamed_addr constant <{ [280 x i8] }> <{ [280 x i8] c}>, align 8
@alloc410 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc409, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc920 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"none" }>, align 1
@_ZN9probe_RSE3TID7__getit5__KEY17h24d0998fa9957dc6E = internal thread_local global <{ [8 x i8], [32 x i8], [1 x i8], [7 x i8] }> <{ [8 x i8] zeroinitializer, [32 x i8] undef, [1 x i8] zeroinitializer, [7 x i8] undef }>, align 8
@alloc216 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"internal error: entered unreachable code: " }>, align 1
@alloc217 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [42 x i8] }>, <{ [42 x i8] }>* @alloc216, i32 0, i32 0, i32 0), [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc219 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"missing default value" }>, align 1
@alloc220 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc219, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc922 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc921, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00$\00\00\00\01\00\00\00" }>, align 8
@_ZN9probe_RSE8CHILD_ID7__getit5__KEY17hd6e5d27321e3878bE = internal thread_local global <{ [8 x i8], [16 x i8], [1 x i8], [7 x i8] }> <{ [8 x i8] zeroinitializer, [16 x i8] undef, [1 x i8] zeroinitializer, [7 x i8] undef }>, align 8
@_ZN9probe_RSE11EXE_NODE_ID7__getit5__KEY17ha76a9dd8d26a4195E = internal thread_local global <{ [8 x i8], [16 x i8], [1 x i8], [7 x i8] }> <{ [8 x i8] zeroinitializer, [16 x i8] undef, [1 x i8] zeroinitializer, [7 x i8] undef }>, align 8

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc4188a3c8445a678E"({ i64*, i64* }* align 8 %self) unnamed_addr #0 {
start:
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_2 = call align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffafa6fa6d8619a9E"({ i64*, i64* }* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = bitcast { i64*, i64* }* %self to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*
; call core::option::Option<T>::map
  %0 = call { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17he52d688dcc123096E"(i64* align 8 %_2, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_4)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17h632cd1c3cab99aa2E"({ i64*, i64* }* align 8 %self, i64 %init) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  store i8 1, i8* %_10, align 1
  %_8 = bitcast { i64*, i64* }* %self to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"*
; invoke core::iter::adapters::map::map_try_fold
  %_6 = invoke align 1 i8* @_ZN4core4iter8adapters3map12map_try_fold17h5293b540203e666dE(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* align 1 %_8)
          to label %bb1 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %1 = load i8, i8* %_10, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
; invoke core::iter::traits::iterator::Iterator::try_fold
  %8 = invoke { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator8try_fold17h8ed5c081d2f2f638E({ i64*, i64* }* align 8 %self, i64 %init, i8* align 1 %_6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = extractvalue { i64, i64 } %8, 1
  %11 = insertvalue { i64, i64 } undef, i64 %9, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12

bb3:                                              ; preds = %bb4, %bb5
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb4:                                              ; preds = %bb5
  br label %bb3
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h060cfd2b8f8bf0f9E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %runtime = alloca %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]", align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_5 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hd58cfd309dc5a254E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_5, i64 %self.0
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17he804afec0262035eE(i8* %2, i64 %_8)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1570bbd9c6a35587E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %runtime = alloca %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[core::mem::maybe_uninit::MaybeUninit<u8>]>>::get_unchecked_mut::{closure#0}]", align 8
  %1 = bitcast [0 x i8]* %slice.0 to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, i8* %1, i64 %self.0
  store i8* %2, i8** %0, align 8
  %_3.i = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts_mut
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17ha9e715d5f5f1ce18E(i8* %_3.i, i64 %_8)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1dbcd93f2021dac9E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %runtime = alloca %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]", align 8
  %1 = bitcast [0 x i8]* %slice.0 to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, i8* %1, i64 %self.0
  store i8* %2, i8** %0, align 8
  %_3.i = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts_mut
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h899b5789493e1550E(i8* %_3.i, i64 %_8)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h9c3af7c513b440a4E"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
  %_4 = icmp ugt i64 %self.0, %self.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_10 = icmp ugt i64 %self.1, %slice.1
  br i1 %_10, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h550c73f3adb5cd24E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0) #16
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1dbcd93f2021dac9E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1)
  %_20.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_20.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17haf0079bd512d9735E(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) #16
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_20.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_20.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h510b6e60c0fce059E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = bitcast { i64, i64 }* %_3 to i64*
  store i64 0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %self, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %6 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1570bbd9c6a35587E"(i64 %3, i64 %5, [0 x i8]* %slice.0, i64 %slice.1)
  %7 = extractvalue { [0 x i8]*, i64 } %6, 0
  %8 = extractvalue { [0 x i8]*, i64 } %6, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %7, 0
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %8, 1
  ret { [0 x i8]*, i64 } %10
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4227a535bf8711b0E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
  %_5 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_5 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %self, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %7 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h9c3af7c513b440a4E"(i64 %4, i64 %6, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %7, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %9
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h7e529af2272ac3f2E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_5 = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17hd7ef5f947e4a64edE"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast { i64, i64 }* %_3 to i64*
  store i64 %self, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %_5, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %6 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h060cfd2b8f8bf0f9E"(i64 %3, i64 %5, [0 x i8]* %slice.0, i64 %slice.1)
  %7 = extractvalue { [0 x i8]*, i64 } %6, 0
  %8 = extractvalue { [0 x i8]*, i64 } %6, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %7, 0
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %8, 1
  ret { [0 x i8]*, i64 } %10
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hf39f8fea8c7a2862E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
  %_3 = icmp ugt i64 %self, %slice.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h7e529af2272ac3f2E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1)
  %_11.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_11.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb3

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17h06f2a0f4777a1797E(i64 %self, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) #16
  unreachable

bb3:                                              ; preds = %bb2
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_11.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_11.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h4c773666d88b70bcE"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, %"core::str::iter::Split<&str>"* %iterator) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_26 = alloca i8, align 1
  %_25 = alloca i8, align 1
  %_24 = alloca %"core::str::iter::Split<&str>", align 8
  %vector1 = alloca %"alloc::vec::Vec<&str>", align 8
  %_8 = alloca { i64, { i64, i64 } }, align 8
  %_3 = alloca { i8*, i64 }, align 8
  %vector = alloca %"alloc::vec::Vec<&str>", align 8
  store i8 1, i8* %_26, align 1
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf96ea85dee7c4f28E"(%"core::str::iter::Split<&str>"* align 8 %iterator)
          to label %bb1 unwind label %cleanup

bb21:                                             ; preds = %bb15, %bb18, %bb19, %cleanup
  %4 = load i8, i8* %_26, align 1, !range !2, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb20, label %bb17

cleanup:                                          ; preds = %bb4, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb21

bb1:                                              ; preds = %start
  store { i8*, i64 } %3, { i8*, i64 }* %_3, align 8
  %11 = bitcast { i8*, i64 }* %_3 to {}**
  %12 = load {}*, {}** %11, align 8
  %13 = icmp eq {}* %12, null
  %_5 = select i1 %13, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hbcec205d23fa69faE"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0)
          to label %bb13 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_25, align 1
  %14 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0
  %element.0 = load [0 x i8]*, [0 x i8]** %15, align 8, !nonnull !3, !align !4, !noundef !3
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1
  %element.1 = load i64, i64* %16, align 8
; invoke core::iter::traits::iterator::Iterator::size_hint
  invoke void @_ZN4core4iter6traits8iterator8Iterator9size_hint17h5a0d6300c820b1a6E({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %_8, %"core::str::iter::Split<&str>"* align 8 %iterator)
          to label %bb5 unwind label %cleanup2

bb19:                                             ; preds = %bb16, %cleanup2
  %17 = load i8, i8* %_25, align 1, !range !2, !noundef !3
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb18, label %bb21

cleanup2:                                         ; preds = %bb7, %bb6, %bb2
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %21, i32* %23, align 8
  br label %bb19

bb5:                                              ; preds = %bb2
  %24 = bitcast { i64, { i64, i64 } }* %_8 to i64*
  %lower = load i64, i64* %24, align 8
  %25 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1)
  store i64 %25, i64* %1, align 8
  %26 = load i64, i64* %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
; invoke core::cmp::max
  %initial_capacity = invoke i64 @_ZN4core3cmp3max17h4bf4c75e9e56bd50E(i64 4, i64 %26)
          to label %bb7 unwind label %cleanup2

bb7:                                              ; preds = %bb6
; invoke alloc::vec::Vec<T>::with_capacity
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h67ed10aeff11f1acE"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %vector1, i64 %initial_capacity)
          to label %bb8 unwind label %cleanup2

bb8:                                              ; preds = %bb7
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_16 = invoke { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h197f6d120c9fd40bE"(%"alloc::vec::Vec<&str>"* align 8 %vector1)
          to label %bb9 unwind label %cleanup3

bb16:                                             ; preds = %cleanup3
; invoke core::ptr::drop_in_place<alloc::vec::Vec<&str>>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17hb406b4f70dcf6f14E"(%"alloc::vec::Vec<&str>"* %vector1) #17
          to label %bb19 unwind label %abort

cleanup3:                                         ; preds = %bb10, %bb9, %bb8
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb16

bb9:                                              ; preds = %bb8
  store i8 0, i8* %_25, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h99d4dee62def0415E({ [0 x i8]*, i64 }* %_16, [0 x i8]* align 1 %element.0, i64 %element.1)
          to label %bb10 unwind label %cleanup3

bb10:                                             ; preds = %bb9
; invoke alloc::vec::Vec<T,A>::set_len
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h5576cbaa08133531E"(%"alloc::vec::Vec<&str>"* align 8 %vector1, i64 1)
          to label %bb11 unwind label %cleanup3

bb11:                                             ; preds = %bb10
  %32 = bitcast %"alloc::vec::Vec<&str>"* %vector to i8*
  %33 = bitcast %"alloc::vec::Vec<&str>"* %vector1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false)
  store i8 0, i8* %_26, align 1
  %34 = bitcast %"core::str::iter::Split<&str>"* %_24 to i8*
  %35 = bitcast %"core::str::iter::Split<&str>"* %iterator to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 128, i1 false)
; invoke <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  invoke void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h6a707b43e076b3a3E"(%"alloc::vec::Vec<&str>"* align 8 %vector, %"core::str::iter::Split<&str>"* %_24)
          to label %bb12 unwind label %cleanup4

abort:                                            ; preds = %bb15, %bb16
  %36 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb18:                                             ; preds = %bb19
  br label %bb21

bb15:                                             ; preds = %cleanup4
; invoke core::ptr::drop_in_place<alloc::vec::Vec<&str>>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17hb406b4f70dcf6f14E"(%"alloc::vec::Vec<&str>"* %vector) #17
          to label %bb21 unwind label %abort

cleanup4:                                         ; preds = %bb11
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  %39 = extractvalue { i8*, i32 } %37, 1
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %39, i32* %41, align 8
  br label %bb15

bb12:                                             ; preds = %bb11
  %42 = bitcast %"alloc::vec::Vec<&str>"* %0 to i8*
  %43 = bitcast %"alloc::vec::Vec<&str>"* %vector to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false)
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  ret void

bb13:                                             ; preds = %bb4
  br label %bb14

bb17:                                             ; preds = %bb20, %bb21
  %44 = bitcast { i8*, i32 }* %2 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = insertvalue { i8*, i32 } undef, i8* %45, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

bb20:                                             ; preds = %bb21
  br label %bb17
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h4725f0854164ead4E"(i8* %unique) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h051062658672e4a5E"(i8* %unique)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h173a8eb22b73bb4fE"(i8* %pointer) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  store i8* %pointer, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !3, !noundef !3
  ret i8* %1
}

; <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h2de1272d8a168fceE"(i64* %pointer) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  store i64* %pointer, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %1
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h4ec2a546377b354fE"(i64 %kind.0, i64 %kind.1) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !5, !noundef !3
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17h0ed7dfebe6849a3eE"(%"alloc::vec::Vec<u8>"* align 8 %self, i8* %0, i8* %1) unnamed_addr #1 {
start:
  %iterator = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 0
  store i8* %0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 1
  store i8* %1, i8** %3, align 8
; call core::slice::iter::Iter<T>::as_slice
  %4 = call { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17ha9ea2fd6b8f1b850E"({ i8*, i8* }* align 8 %iterator)
  %slice.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %slice.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::append_elements
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17hb12f1c001b5e5bd2E"(%"alloc::vec::Vec<u8>"* align 8 %self, [0 x i8]* %slice.0, i64 %slice.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h12550c67f1637bd4E"(i64 %0, i64 %1, %"core::panic::location::Location"* align 8 %2) unnamed_addr #0 {
start:
  %3 = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %7, align 8, !range !5, !noundef !3
; call <T as core::convert::From<T>>::from
  %8 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd2fdbaf5456dcc2cE"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %8, 0
  %_3.1 = extractvalue { i64, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %_3.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %_3.1, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %14 = load i64, i64* %13, align 8, !range !6, !noundef !3
  %15 = insertvalue { i64, i64 } undef, i64 %12, 0
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1
  ret { i64, i64 } %16
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h1ae2b7e1477cb71cE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i64 %1, i64 %2, %"core::panic::location::Location"* align 8 %3) unnamed_addr #0 {
start:
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %7, align 8, !range !5, !noundef !3
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %8 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h4ec2a546377b354fE"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %8, 0
  %_3.1 = extractvalue { i64, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  store i64 %_3.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  store i64 %_3.1, i64* %12, align 8
  %13 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %13, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h2d7ed7d383fed839E"(%"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
  %1 = alloca { i8*, i64 }, align 8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h86ee170481628c12E"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i8*, i64 }* %1 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err"*
  %3 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err"* %2 to %"core::alloc::AllocError"*
  %4 = bitcast { i8*, i64 }* %1 to {}**
  store {}* null, {}** %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h61bd8778b8fa1757E"(%"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
  %1 = alloca i8, align 1
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb5cb9745d6b3d002E"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr i8, i8* %1, i64 1
  %3 = bitcast i8* %2 to %"std::thread::local::AccessError"*
  store i8 1, i8* %1, align 1
  %4 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h83964b414e5103b7E"(%"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
  %1 = alloca { i64, i64 }, align 8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h84aa608d90102d00E"()
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %1 to %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err"*
  %3 = bitcast %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err"* %2 to %"core::alloc::layout::LayoutError"*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8, !range !5, !noundef !3
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc7a131b66f5147b5E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i64 %1, i64 %2, %"core::panic::location::Location"* align 8 %3) unnamed_addr #0 {
start:
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %7, align 8, !range !5, !noundef !3
; call <T as core::convert::From<T>>::from
  %8 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd2fdbaf5456dcc2cE"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %8, 0
  %_3.1 = extractvalue { i64, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  store i64 %_3.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  store i64 %_3.1, i64* %12, align 8
  %13 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %13, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd462cfabd6a3984aE"(i64 %0, i64 %1, %"core::panic::location::Location"* align 8 %2) unnamed_addr #0 {
start:
  %3 = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %7, align 8, !range !5, !noundef !3
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %8 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h4ec2a546377b354fE"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %8, 0
  %_3.1 = extractvalue { i64, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %_3.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %_3.1, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %14 = load i64, i64* %13, align 8, !range !6, !noundef !3
  %15 = insertvalue { i64, i64 } undef, i64 %12, 0
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1
  ret { i64, i64 } %16
}

; std::sys_common::mutex::MovableMutex::raw_unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17ha75d423e1e710008E(%"std::sys_common::mutex::MovableMutex"* align 4 %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"std::sys_common::mutex::MovableMutex"* %self to %"std::sys::unix::locks::futex::Mutex"*
; call std::sys::unix::locks::futex::Mutex::unlock
  call void @_ZN3std3sys4unix5locks5futex5Mutex6unlock17h4ef5422a83d44a02E(%"std::sys::unix::locks::futex::Mutex"* align 4 %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::sys_common::mutex::MovableMutex::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN3std10sys_common5mutex12MovableMutex3new17hc7ecaa10d5f4770fE() unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_1 = alloca %"std::sys::unix::locks::futex::Mutex", align 4
  %1 = alloca %"std::sys_common::mutex::MovableMutex", align 4
; call std::sys::unix::locks::futex::Mutex::new
  %2 = call i32 @_ZN3std3sys4unix5locks5futex5Mutex3new17h0320f81318398a9cE()
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"std::sys::unix::locks::futex::Mutex"* %_1 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"std::sys_common::mutex::MovableMutex"* %1 to %"std::sys::unix::locks::futex::Mutex"*
  %6 = bitcast %"std::sys::unix::locks::futex::Mutex"* %5 to i8*
  %7 = bitcast %"std::sys::unix::locks::futex::Mutex"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"std::sys_common::mutex::MovableMutex"* %1 to i32*
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; std::sys_common::mutex::MovableMutex::raw_lock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17h5f137073161fe057E(%"std::sys_common::mutex::MovableMutex"* align 4 %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"std::sys_common::mutex::MovableMutex"* %self to %"std::sys::unix::locks::futex::Mutex"*
; call std::sys::unix::locks::futex::Mutex::lock
  call void @_ZN3std3sys4unix5locks5futex5Mutex4lock17hebaaf8cf282d1eb8E(%"std::sys::unix::locks::futex::Mutex"* align 4 %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::sys_common::condvar::Condvar::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN3std10sys_common7condvar7Condvar3new17hdd14ed96d39e2418E() unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_1 = alloca %"std::sys::unix::locks::futex::Condvar", align 4
  %1 = alloca %"std::sys_common::condvar::Condvar", align 4
; call std::sys::unix::locks::futex::Condvar::new
  %2 = call i32 @_ZN3std3sys4unix5locks5futex7Condvar3new17h50339753cc4f5a8aE()
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"std::sys::unix::locks::futex::Condvar"* %_1 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sys_common::condvar::check::NoCheck::new
  call void @_ZN3std10sys_common7condvar5check7NoCheck3new17hdcda4e15b3855677E()
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast %"std::sys_common::condvar::Condvar"* %1 to %"std::sys::unix::locks::futex::Condvar"*
  %6 = bitcast %"std::sys::unix::locks::futex::Condvar"* %5 to i8*
  %7 = bitcast %"std::sys::unix::locks::futex::Condvar"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"std::sys_common::condvar::Condvar"* %1 to i32*
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; std::sys_common::condvar::Condvar::wait
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common7condvar7Condvar4wait17h01b385252ace90c6E(%"std::sys_common::condvar::Condvar"* align 4 %self, %"std::sys_common::mutex::MovableMutex"* align 4 %mutex) unnamed_addr #0 {
start:
  %_4 = getelementptr inbounds %"std::sys_common::condvar::Condvar", %"std::sys_common::condvar::Condvar"* %self, i32 0, i32 1
; call std::sys_common::condvar::check::NoCheck::verify
  call void @_ZN3std10sys_common7condvar5check7NoCheck6verify17h3d36dcb4d41125a4E(%"std::sys_common::condvar::check::NoCheck"* align 1 %_4, %"std::sys_common::mutex::MovableMutex"* align 4 %mutex)
  br label %bb1

bb1:                                              ; preds = %start
  %_6 = bitcast %"std::sys_common::condvar::Condvar"* %self to %"std::sys::unix::locks::futex::Condvar"*
; call std::sys_common::mutex::MovableMutex::raw
  %_8 = call align 4 %"std::sys::unix::locks::futex::Mutex"* @_ZN3std10sys_common5mutex12MovableMutex3raw17h877bd82121b58baeE(%"std::sys_common::mutex::MovableMutex"* align 4 %mutex)
  br label %bb2

bb2:                                              ; preds = %bb1
; call std::sys::unix::locks::futex::Condvar::wait
  call void @_ZN3std3sys4unix5locks5futex7Condvar4wait17h46be168019e02852E(%"std::sys::unix::locks::futex::Condvar"* align 4 %_6, %"std::sys::unix::locks::futex::Mutex"* align 4 %_8)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; std::fs::OpenOptions::open
; Function Attrs: nonlazybind uwtable
define void @_ZN3std2fs11OpenOptions4open17h1cacde18989112ccE(%"core::result::Result<std::fs::File, std::io::error::Error>"* sret(%"core::result::Result<std::fs::File, std::io::error::Error>") %0, %"std::fs::OpenOptions"* align 4 %self, [0 x i8]* align 1 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %path = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %path, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %path, i32 0, i32 1
  store i64 %2, i64* %5, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %6 = invoke { %"std::path::Path"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h0d358ce8916a281cE"({ [0 x i8]*, i64 }* align 8 %path)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { %"std::path::Path"*, i64 } %6, 0
  %_5.1 = extractvalue { %"std::path::Path"*, i64 } %6, 1
; invoke std::fs::OpenOptions::_open
  invoke void @_ZN3std2fs11OpenOptions5_open17h0acb4f6ef6573b83E(%"core::result::Result<std::fs::File, std::io::error::Error>"* sret(%"core::result::Result<std::fs::File, std::io::error::Error>") %0, %"std::fs::OpenOptions"* align 4 %self, %"std::path::Path"* align 1 %_5.0, i64 %_5.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  br label %bb3

bb5:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %3 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17

bb3:                                              ; preds = %bb2
  ret void
}

; std::io::Write::write_all
; Function Attrs: nonlazybind uwtable
define i8* @_ZN3std2io5Write9write_all17ha0d05a93835ab957E(i32* align 4 %self, [0 x i8]* align 1 %0, i64 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_24 = alloca i8, align 1
  %e = alloca i8**, align 8
  %_18 = alloca i64, align 8
  %_6 = alloca %"core::result::Result<usize, std::io::error::Error>", align 8
  %3 = alloca i8*, align 8
  %buf = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  br label %bb1

bb1:                                              ; preds = %bb20, %start
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  %_5.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !3, !align !4, !noundef !3
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  %_5.1 = load i64, i64* %7, align 8
; call core::slice::<impl [T]>::is_empty
  %_4 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17ha3628f14e52a3427E"([0 x i8]* align 1 %_5.0, i64 %_5.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb3, label %bb16

bb16:                                             ; preds = %bb2
  %8 = bitcast i8** %3 to {}**
  store {}* null, {}** %8, align 8
  br label %bb18

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  %_8.0 = load [0 x i8]*, [0 x i8]** %9, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  %_8.1 = load i64, i64* %10, align 8
; call <std::fs::File as std::io::Write>::write
  call void @"_ZN48_$LT$std..fs..File$u20$as$u20$std..io..Write$GT$5write17h48eccdc7891d1e28E"(%"core::result::Result<usize, std::io::error::Error>"* sret(%"core::result::Result<usize, std::io::error::Error>") %_6, i32* align 4 %self, [0 x i8]* align 1 %_8.0, i64 %_8.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %11 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to i64*
  %_9 = load i64, i64* %11, align 8, !range !7, !noundef !3
  switch i64 %_9, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb11
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %12 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Ok"*
  %13 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Ok", %"core::result::Result<usize, std::io::error::Error>::Ok"* %12, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %bb7, label %bb9

bb11:                                             ; preds = %bb4
  %16 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %17 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %16, i32 0, i32 1
  store i8** %17, i8*** %e, align 8
  %_34 = load i8**, i8*** %e, align 8, !nonnull !3, !align !8, !noundef !3
; invoke std::io::error::Error::kind
  %18 = invoke i8 @_ZN3std2io5error5Error4kind17h3290eed79eac23d4E(i8** align 8 %_34)
          to label %bb12 unwind label %cleanup, !range !9

bb26:                                             ; preds = %cleanup
  %19 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to i64*
  %_33 = load i64, i64* %19, align 8, !range !7, !noundef !3
  %20 = icmp eq i64 %_33, 1
  br i1 %20, label %bb24, label %bb19

cleanup:                                          ; preds = %bb7, %bb9, %bb12, %bb11
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb26

bb12:                                             ; preds = %bb11
  store i8 %18, i8* %_24, align 1
; invoke <std::io::error::ErrorKind as core::cmp::PartialEq>::eq
  %_22 = invoke zeroext i1 @"_ZN66_$LT$std..io..error..ErrorKind$u20$as$u20$core..cmp..PartialEq$GT$2eq17hec5376d7a016f81fE"(i8* align 1 %_24, i8* align 1 getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc353, i32 0, i32 0, i32 0))
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb12
  br i1 %_22, label %bb14, label %bb15

bb15:                                             ; preds = %bb13
  %26 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %27 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %26, i32 0, i32 1
  %e1 = load i8*, i8** %27, align 8, !nonnull !3, !noundef !3
  store i8* %e1, i8** %3, align 8
  br label %bb17

bb14:                                             ; preds = %bb13
  br label %bb23

bb23:                                             ; preds = %bb10, %bb14
  %28 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to i64*
  %_32 = load i64, i64* %28, align 8, !range !7, !noundef !3
  %29 = icmp eq i64 %_32, 1
  br i1 %29, label %bb21, label %bb20

bb17:                                             ; preds = %bb8, %bb15
  br label %bb18

bb7:                                              ; preds = %bb5
; invoke std::io::error::Error::from_static_message
  %_10 = invoke i8* @_ZN3std2io5error5Error19from_static_message17h13e557da5018ca10E(%"std::io::error::SimpleMessage"* align 8 bitcast (<{ i8*, [9 x i8], [7 x i8] }>* @alloc351 to %"std::io::error::SimpleMessage"*))
          to label %bb8 unwind label %cleanup

bb9:                                              ; preds = %bb5
  %30 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Ok"*
  %31 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Ok", %"core::result::Result<usize, std::io::error::Error>::Ok"* %30, i32 0, i32 1
  %n = load i64, i64* %31, align 8
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  %_17.0 = load [0 x i8]*, [0 x i8]** %32, align 8, !nonnull !3, !align !4, !noundef !3
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  %_17.1 = load i64, i64* %33, align 8
  store i64 %n, i64* %_18, align 8
  %34 = load i64, i64* %_18, align 8
; invoke core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %35 = invoke { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17ha5680e0da09c4ce4E"([0 x i8]* align 1 %_17.0, i64 %_17.1, i64 %34, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc649 to %"core::panic::location::Location"*))
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %_16.0 = extractvalue { [0 x i8]*, i64 } %35, 0
  %_16.1 = extractvalue { [0 x i8]*, i64 } %35, 1
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  store [0 x i8]* %_16.0, [0 x i8]** %36, align 8
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  store i64 %_16.1, i64* %37, align 8
  br label %bb23

bb21:                                             ; preds = %bb23
  br i1 true, label %bb22, label %bb20

bb20:                                             ; preds = %bb22, %bb21, %bb23
  br label %bb1

bb22:                                             ; preds = %bb21
  %38 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %39 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %38, i32 0, i32 1
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h40e63bf6e01db46fE"(i8** %39)
  br label %bb20

bb8:                                              ; preds = %bb7
  store i8* %_10, i8** %3, align 8
  br label %bb17

bb24:                                             ; preds = %bb26
  br i1 true, label %bb25, label %bb19

bb19:                                             ; preds = %bb25, %bb24, %bb26
  %40 = bitcast { i8*, i32 }* %2 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = insertvalue { i8*, i32 } undef, i8* %41, 0
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1
  resume { i8*, i32 } %45

bb25:                                             ; preds = %bb24
  %46 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %47 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %46, i32 0, i32 1
; invoke core::ptr::drop_in_place<std::io::error::Error>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h40e63bf6e01db46fE"(i8** %47) #17
          to label %bb19 unwind label %abort

abort:                                            ; preds = %bb25
  %48 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb18:                                             ; preds = %bb16, %bb17
  %49 = load i8*, i8** %3, align 8
  ret i8* %49
}

; std::io::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define i8* @_ZN3std2io5Write9write_fmt17h0ce8b27eee387111E(i32* align 4 %self, %"core::fmt::Arguments"* %fmt) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_10 = alloca %"core::fmt::Arguments", align 8
  %_6 = alloca i8, align 1
  %_5 = alloca i8*, align 8
  %output = alloca { i32*, i8* }, align 8
  %1 = alloca i8*, align 8
  %2 = bitcast i8** %_5 to {}**
  store {}* null, {}** %2, align 8
  store i8 1, i8* %_18, align 1
  %3 = bitcast { i32*, i8* }* %output to i32**
  store i32* %self, i32** %3, align 8
  %4 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %output, i32 0, i32 1
  %5 = load i8*, i8** %_5, align 8
  store i8* %5, i8** %4, align 8
  %_7.0 = bitcast { i32*, i8* }* %output to {}*
  %6 = bitcast %"core::fmt::Arguments"* %_10 to i8*
  %7 = bitcast %"core::fmt::Arguments"* %fmt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 48, i1 false)
; invoke core::fmt::write
  %8 = invoke zeroext i1 @_ZN4core3fmt5write17h5c45f38d408cd7eeE({}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8*, i8*, i8* }>* @vtable.0 to [3 x i64]*), %"core::fmt::Arguments"* %_10)
          to label %bb1 unwind label %cleanup

bb10:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::io::Write::write_fmt::Adapter<std::fs::File>>
  invoke void @"_ZN4core3ptr76drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..fs..File$GT$$GT$17h646dc496cf61cd3eE"({ i32*, i8* }* %output) #17
          to label %bb11 unwind label %abort

cleanup:                                          ; preds = %bb7, %bb2, %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb10

bb1:                                              ; preds = %start
  %14 = zext i1 %8 to i8
  store i8 %14, i8* %_6, align 1
  %15 = load i8, i8* %_6, align 1, !range !2, !noundef !3
  %16 = trunc i8 %15 to i1
  %_11 = zext i1 %16 to i64
  switch i64 %_11, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %17 = bitcast i8** %1 to {}**
  store {}* null, {}** %17, align 8
  br label %bb14

bb2:                                              ; preds = %bb1
  %_13 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %output, i32 0, i32 1
; invoke core::result::Result<T,E>::is_err
  %_12 = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h8d2fd85775a7798aE"(i8** align 8 %_13)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb2
  br i1 %_12, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
; invoke std::io::error::Error::from_static_message
  %_14 = invoke i8* @_ZN3std2io5error5Error19from_static_message17h13e557da5018ca10E(%"std::io::error::SimpleMessage"* align 8 bitcast (<{ i8*, [9 x i8], [7 x i8] }>* @alloc344 to %"std::io::error::SimpleMessage"*))
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_18, align 1
  %18 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %output, i32 0, i32 1
  %19 = load i8*, i8** %18, align 8
  store i8* %19, i8** %1, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb6
  br label %bb14

bb8:                                              ; preds = %bb7
  store i8* %_14, i8** %1, align 8
  br label %bb9

abort:                                            ; preds = %bb10
  %20 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb11:                                             ; preds = %bb10
  %21 = bitcast { i8*, i32 }* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26

bb14:                                             ; preds = %bb4, %bb9
  %27 = load i8, i8* %_18, align 1, !range !2, !noundef !3
  %28 = trunc i8 %27 to i1
  br i1 %28, label %bb13, label %bb12

bb12:                                             ; preds = %bb13, %bb14
  %29 = load i8*, i8** %1, align 8
  ret i8* %29

bb13:                                             ; preds = %bb14
  %30 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %output, i32 0, i32 1
; call core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  call void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17hc5791f008c85b35fE"(i8** %30)
  br label %bb12
}

; std::io::error::repr_bitpacked::decode_repr
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN3std2io5error14repr_bitpacked11decode_repr17h0471ca073c727322E(%"std::io::error::ErrorData<&std::io::error::Custom>"* sret(%"std::io::error::ErrorData<&std::io::error::Custom>") %0, i8* %ptr) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_37 = alloca i8, align 1
  %_34 = alloca i64*, align 8
  %_19 = alloca i64*, align 8
  %bits = alloca i64, align 8
  store i8 1, i8* %_37, align 1
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = invoke {}* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h354de0dc25515eabE"(i8* %ptr)
          to label %bb1 unwind label %cleanup

bb22:                                             ; preds = %cleanup
  %2 = load i8, i8* %_37, align 1, !range !2, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb21, label %bb19

cleanup:                                          ; preds = %bb6, %bb5, %bb9, %bb8, %bb15, %bb13, %bb11, %bb3, %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb22

bb1:                                              ; preds = %start
; invoke core::ptr::mut_ptr::<impl *mut T>::addr
  %9 = invoke i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h8252082fb26de1b2E"({}* %_4)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i64 %9, i64* %bits, align 8
  %_7 = load i64, i64* %bits, align 8
  %_6 = and i64 %_7, 3
  switch i64 %_6, label %bb3 [
    i64 2, label %bb4
    i64 3, label %bb5
    i64 0, label %bb8
    i64 1, label %bb11
  ]

bb3:                                              ; preds = %bb2
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h1efed56daac899acE([0 x i8]* align 1 bitcast (<{ [40 x i8] }>* @alloc658 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc657 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %bb2
  %_11 = load i64, i64* %bits, align 8
  %_9 = ashr i64 %_11, 32
  %code = trunc i64 %_9 to i32
  %10 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to %"std::io::error::ErrorData<&std::io::error::Custom>::Os"*
  %11 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Os", %"std::io::error::ErrorData<&std::io::error::Custom>::Os"* %10, i32 0, i32 1
  store i32 %code, i32* %11, align 4
  %12 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to i8*
  store i8 0, i8* %12, align 8
  br label %bb17

bb5:                                              ; preds = %bb2
  %_15 = load i64, i64* %bits, align 8
  %_14 = lshr i64 %_15, 32
  %kind_bits = trunc i64 %_14 to i32
; invoke std::io::error::repr_bitpacked::kind_from_prim
  %_17 = invoke i8 @_ZN3std2io5error14repr_bitpacked14kind_from_prim17hecedb18643c0dd7eE(i32 %kind_bits)
          to label %bb6 unwind label %cleanup, !range !10

bb8:                                              ; preds = %bb2
; invoke core::ptr::non_null::NonNull<T>::cast
  %_25 = invoke i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h9b21c027af18fc12E"(i8* %ptr)
          to label %bb9 unwind label %cleanup

bb11:                                             ; preds = %bb2
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_30 = invoke {}* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h354de0dc25515eabE"(i8* %ptr)
          to label %bb12 unwind label %cleanup

unreachable:                                      ; preds = %bb3
  unreachable

bb12:                                             ; preds = %bb11
  %13 = bitcast {}* %_30 to i8*
  br label %bb13

bb13:                                             ; preds = %bb12
; invoke core::ptr::mut_ptr::<impl *mut T>::wrapping_sub
  %_28 = invoke i8* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_sub17he07ac483090619a9E"(i8* %13, i64 1)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %14 = bitcast i8* %_28 to %"std::io::error::Custom"*
  br label %bb15

bb15:                                             ; preds = %bb14
  store i8 0, i8* %_37, align 1
  %15 = bitcast i64** %_34 to %"std::io::error::Custom"**
  store %"std::io::error::Custom"* %14, %"std::io::error::Custom"** %15, align 8
  %16 = load i64*, i64** %_34, align 8
  %17 = bitcast i64* %16 to %"std::io::error::Custom"*
; invoke std::io::error::repr_bitpacked::Repr::data::{{closure}}
  %_32 = invoke align 8 %"std::io::error::Custom"* @"_ZN3std2io5error14repr_bitpacked4Repr4data28_$u7b$$u7b$closure$u7d$$u7d$17h81f04933d3e0cfe6E"(%"std::io::error::Custom"* %17)
          to label %bb16 unwind label %cleanup

bb16:                                             ; preds = %bb15
  %18 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to %"std::io::error::ErrorData<&std::io::error::Custom>::Custom"*
  %19 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Custom", %"std::io::error::ErrorData<&std::io::error::Custom>::Custom"* %18, i32 0, i32 1
  store %"std::io::error::Custom"* %_32, %"std::io::error::Custom"** %19, align 8
  %20 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to i8*
  store i8 3, i8* %20, align 8
  br label %bb17

bb17:                                             ; preds = %bb4, %bb7, %bb10, %bb16
  %21 = load i8, i8* %_37, align 1, !range !2, !noundef !3
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb20, label %bb18

bb9:                                              ; preds = %bb8
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_24 = invoke %"std::io::error::SimpleMessage"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f94846b3c04e2c0E"(i64* %_25)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %23 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to %"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage"*
  %24 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage", %"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage"* %23, i32 0, i32 1
  store %"std::io::error::SimpleMessage"* %_24, %"std::io::error::SimpleMessage"** %24, align 8
  %25 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to i8*
  store i8 2, i8* %25, align 8
  br label %bb17

bb6:                                              ; preds = %bb5
  store i64* %bits, i64** %_19, align 8
  %26 = load i64*, i64** %_19, align 8, !nonnull !3, !align !8, !noundef !3
; invoke core::option::Option<T>::unwrap_or_else
  %kind = invoke i8 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hd12a4600f51f31e9E"(i8 %_17, i64* align 8 %26)
          to label %bb7 unwind label %cleanup, !range !9

bb7:                                              ; preds = %bb6
  %27 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to %"std::io::error::ErrorData<&std::io::error::Custom>::Simple"*
  %28 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Simple", %"std::io::error::ErrorData<&std::io::error::Custom>::Simple"* %27, i32 0, i32 1
  store i8 %kind, i8* %28, align 1
  %29 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to i8*
  store i8 1, i8* %29, align 8
  br label %bb17

bb19:                                             ; preds = %bb21, %bb22
  %30 = bitcast { i8*, i32 }* %1 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = insertvalue { i8*, i32 } undef, i8* %31, 0
  %35 = insertvalue { i8*, i32 } %34, i32 %33, 1
  resume { i8*, i32 } %35

bb21:                                             ; preds = %bb22
  br label %bb19

bb18:                                             ; preds = %bb20, %bb17
  ret void

bb20:                                             ; preds = %bb17
  br label %bb18
}

; std::io::error::repr_bitpacked::decode_repr
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN3std2io5error14repr_bitpacked11decode_repr17h3629a2e1bcf13274E(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* sret(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>") %0, i8* %ptr) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_37 = alloca i8, align 1
  %_34 = alloca i64*, align 8
  %_19 = alloca i64*, align 8
  %bits = alloca i64, align 8
  store i8 1, i8* %_37, align 1
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = invoke {}* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h354de0dc25515eabE"(i8* %ptr)
          to label %bb1 unwind label %cleanup

bb22:                                             ; preds = %cleanup
  %2 = load i8, i8* %_37, align 1, !range !2, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb21, label %bb19

cleanup:                                          ; preds = %bb6, %bb5, %bb9, %bb8, %bb15, %bb13, %bb11, %bb3, %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb22

bb1:                                              ; preds = %start
; invoke core::ptr::mut_ptr::<impl *mut T>::addr
  %9 = invoke i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h8252082fb26de1b2E"({}* %_4)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i64 %9, i64* %bits, align 8
  %_7 = load i64, i64* %bits, align 8
  %_6 = and i64 %_7, 3
  switch i64 %_6, label %bb3 [
    i64 2, label %bb4
    i64 3, label %bb5
    i64 0, label %bb8
    i64 1, label %bb11
  ]

bb3:                                              ; preds = %bb2
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h1efed56daac899acE([0 x i8]* align 1 bitcast (<{ [40 x i8] }>* @alloc658 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc657 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %bb2
  %_11 = load i64, i64* %bits, align 8
  %_9 = ashr i64 %_11, 32
  %code = trunc i64 %_9 to i32
  %10 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os"*
  %11 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os"* %10, i32 0, i32 1
  store i32 %code, i32* %11, align 4
  %12 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*
  store i8 0, i8* %12, align 8
  br label %bb17

bb5:                                              ; preds = %bb2
  %_15 = load i64, i64* %bits, align 8
  %_14 = lshr i64 %_15, 32
  %kind_bits = trunc i64 %_14 to i32
; invoke std::io::error::repr_bitpacked::kind_from_prim
  %_17 = invoke i8 @_ZN3std2io5error14repr_bitpacked14kind_from_prim17hecedb18643c0dd7eE(i32 %kind_bits)
          to label %bb6 unwind label %cleanup, !range !10

bb8:                                              ; preds = %bb2
; invoke core::ptr::non_null::NonNull<T>::cast
  %_25 = invoke i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h9b21c027af18fc12E"(i8* %ptr)
          to label %bb9 unwind label %cleanup

bb11:                                             ; preds = %bb2
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_30 = invoke {}* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h354de0dc25515eabE"(i8* %ptr)
          to label %bb12 unwind label %cleanup

unreachable:                                      ; preds = %bb3
  unreachable

bb12:                                             ; preds = %bb11
  %13 = bitcast {}* %_30 to i8*
  br label %bb13

bb13:                                             ; preds = %bb12
; invoke core::ptr::mut_ptr::<impl *mut T>::wrapping_sub
  %_28 = invoke i8* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_sub17he07ac483090619a9E"(i8* %13, i64 1)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %14 = bitcast i8* %_28 to %"std::io::error::Custom"*
  br label %bb15

bb15:                                             ; preds = %bb14
  store i8 0, i8* %_37, align 1
  %15 = bitcast i64** %_34 to %"std::io::error::Custom"**
  store %"std::io::error::Custom"* %14, %"std::io::error::Custom"** %15, align 8
  %16 = load i64*, i64** %_34, align 8
  %17 = bitcast i64* %16 to %"std::io::error::Custom"*
; invoke <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{{closure}}
  %_32 = invoke align 8 %"std::io::error::Custom"* @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17ha79ba72a39a31787E"(%"std::io::error::Custom"* %17)
          to label %bb16 unwind label %cleanup

bb16:                                             ; preds = %bb15
  %18 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"*
  %19 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"* %18, i32 0, i32 1
  store %"std::io::error::Custom"* %_32, %"std::io::error::Custom"** %19, align 8
  %20 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*
  store i8 3, i8* %20, align 8
  br label %bb17

bb17:                                             ; preds = %bb4, %bb7, %bb10, %bb16
  %21 = load i8, i8* %_37, align 1, !range !2, !noundef !3
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb20, label %bb18

bb9:                                              ; preds = %bb8
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_24 = invoke %"std::io::error::SimpleMessage"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f94846b3c04e2c0E"(i64* %_25)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %23 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage"*
  %24 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage"* %23, i32 0, i32 1
  store %"std::io::error::SimpleMessage"* %_24, %"std::io::error::SimpleMessage"** %24, align 8
  %25 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*
  store i8 2, i8* %25, align 8
  br label %bb17

bb6:                                              ; preds = %bb5
  store i64* %bits, i64** %_19, align 8
  %26 = load i64*, i64** %_19, align 8, !nonnull !3, !align !8, !noundef !3
; invoke core::option::Option<T>::unwrap_or_else
  %kind = invoke i8 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h66ebd028a52c824fE"(i8 %_17, i64* align 8 %26)
          to label %bb7 unwind label %cleanup, !range !9

bb7:                                              ; preds = %bb6
  %27 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple"*
  %28 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple"* %27, i32 0, i32 1
  store i8 %kind, i8* %28, align 1
  %29 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*
  store i8 1, i8* %29, align 8
  br label %bb17

bb19:                                             ; preds = %bb21, %bb22
  %30 = bitcast { i8*, i32 }* %1 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = insertvalue { i8*, i32 } undef, i8* %31, 0
  %35 = insertvalue { i8*, i32 } %34, i32 %33, 1
  resume { i8*, i32 } %35

bb21:                                             ; preds = %bb22
  br label %bb19

bb18:                                             ; preds = %bb20, %bb17
  ret void

bb20:                                             ; preds = %bb17
  br label %bb18
}

; std::io::error::repr_bitpacked::decode_repr::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17ha1e61c62da321c00E"(i64* align 8 %_1) unnamed_addr #0 {
start:
; call core::hint::unreachable_unchecked
  call void @_ZN4core4hint21unreachable_unchecked17he36bd9722d6f5c7dE() #16
  unreachable
}

; std::io::error::repr_bitpacked::decode_repr::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17hdb99c0d9cdab527bE"(i64* align 8 %_1) unnamed_addr #0 {
start:
; call core::hint::unreachable_unchecked
  call void @_ZN4core4hint21unreachable_unchecked17he36bd9722d6f5c7dE() #16
  unreachable
}

; std::io::error::repr_bitpacked::kind_from_prim
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN3std2io5error14repr_bitpacked14kind_from_prim17hecedb18643c0dd7eE(i32 %0) unnamed_addr #0 {
start:
  %1 = alloca i8, align 1
  %ek = alloca i32, align 4
  store i32 %0, i32* %ek, align 4
  %_5 = load i32, i32* %ek, align 4
  %_4 = icmp eq i32 %_5, 0
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_10 = load i32, i32* %ek, align 4
  %_9 = icmp eq i32 %_10, 1
  br i1 %_9, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i8 0, i8* %1, align 1
  br label %bb83

bb83:                                             ; preds = %bb82, %bb81, %bb79, %bb77, %bb75, %bb73, %bb71, %bb69, %bb67, %bb65, %bb63, %bb61, %bb59, %bb57, %bb55, %bb53, %bb51, %bb49, %bb47, %bb45, %bb43, %bb41, %bb39, %bb37, %bb35, %bb33, %bb31, %bb29, %bb27, %bb25, %bb23, %bb21, %bb19, %bb17, %bb15, %bb13, %bb11, %bb9, %bb7, %bb5, %bb3, %bb1
  %2 = load i8, i8* %1, align 1, !range !10, !noundef !3
  ret i8 %2

bb4:                                              ; preds = %bb2
  %_15 = load i32, i32* %ek, align 4
  %_14 = icmp eq i32 %_15, 2
  br i1 %_14, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  store i8 1, i8* %1, align 1
  br label %bb83

bb6:                                              ; preds = %bb4
  %_20 = load i32, i32* %ek, align 4
  %_19 = icmp eq i32 %_20, 3
  br i1 %_19, label %bb7, label %bb8

bb5:                                              ; preds = %bb4
  store i8 2, i8* %1, align 1
  br label %bb83

bb8:                                              ; preds = %bb6
  %_25 = load i32, i32* %ek, align 4
  %_24 = icmp eq i32 %_25, 4
  br i1 %_24, label %bb9, label %bb10

bb7:                                              ; preds = %bb6
  store i8 3, i8* %1, align 1
  br label %bb83

bb10:                                             ; preds = %bb8
  %_30 = load i32, i32* %ek, align 4
  %_29 = icmp eq i32 %_30, 5
  br i1 %_29, label %bb11, label %bb12

bb9:                                              ; preds = %bb8
  store i8 4, i8* %1, align 1
  br label %bb83

bb12:                                             ; preds = %bb10
  %_35 = load i32, i32* %ek, align 4
  %_34 = icmp eq i32 %_35, 6
  br i1 %_34, label %bb13, label %bb14

bb11:                                             ; preds = %bb10
  store i8 5, i8* %1, align 1
  br label %bb83

bb14:                                             ; preds = %bb12
  %_40 = load i32, i32* %ek, align 4
  %_39 = icmp eq i32 %_40, 7
  br i1 %_39, label %bb15, label %bb16

bb13:                                             ; preds = %bb12
  store i8 6, i8* %1, align 1
  br label %bb83

bb16:                                             ; preds = %bb14
  %_45 = load i32, i32* %ek, align 4
  %_44 = icmp eq i32 %_45, 8
  br i1 %_44, label %bb17, label %bb18

bb15:                                             ; preds = %bb14
  store i8 7, i8* %1, align 1
  br label %bb83

bb18:                                             ; preds = %bb16
  %_50 = load i32, i32* %ek, align 4
  %_49 = icmp eq i32 %_50, 9
  br i1 %_49, label %bb19, label %bb20

bb17:                                             ; preds = %bb16
  store i8 8, i8* %1, align 1
  br label %bb83

bb20:                                             ; preds = %bb18
  %_55 = load i32, i32* %ek, align 4
  %_54 = icmp eq i32 %_55, 10
  br i1 %_54, label %bb21, label %bb22

bb19:                                             ; preds = %bb18
  store i8 9, i8* %1, align 1
  br label %bb83

bb22:                                             ; preds = %bb20
  %_60 = load i32, i32* %ek, align 4
  %_59 = icmp eq i32 %_60, 11
  br i1 %_59, label %bb23, label %bb24

bb21:                                             ; preds = %bb20
  store i8 10, i8* %1, align 1
  br label %bb83

bb24:                                             ; preds = %bb22
  %_65 = load i32, i32* %ek, align 4
  %_64 = icmp eq i32 %_65, 12
  br i1 %_64, label %bb25, label %bb26

bb23:                                             ; preds = %bb22
  store i8 11, i8* %1, align 1
  br label %bb83

bb26:                                             ; preds = %bb24
  %_70 = load i32, i32* %ek, align 4
  %_69 = icmp eq i32 %_70, 13
  br i1 %_69, label %bb27, label %bb28

bb25:                                             ; preds = %bb24
  store i8 12, i8* %1, align 1
  br label %bb83

bb28:                                             ; preds = %bb26
  %_75 = load i32, i32* %ek, align 4
  %_74 = icmp eq i32 %_75, 14
  br i1 %_74, label %bb29, label %bb30

bb27:                                             ; preds = %bb26
  store i8 13, i8* %1, align 1
  br label %bb83

bb30:                                             ; preds = %bb28
  %_80 = load i32, i32* %ek, align 4
  %_79 = icmp eq i32 %_80, 15
  br i1 %_79, label %bb31, label %bb32

bb29:                                             ; preds = %bb28
  store i8 14, i8* %1, align 1
  br label %bb83

bb32:                                             ; preds = %bb30
  %_85 = load i32, i32* %ek, align 4
  %_84 = icmp eq i32 %_85, 16
  br i1 %_84, label %bb33, label %bb34

bb31:                                             ; preds = %bb30
  store i8 15, i8* %1, align 1
  br label %bb83

bb34:                                             ; preds = %bb32
  %_90 = load i32, i32* %ek, align 4
  %_89 = icmp eq i32 %_90, 17
  br i1 %_89, label %bb35, label %bb36

bb33:                                             ; preds = %bb32
  store i8 16, i8* %1, align 1
  br label %bb83

bb36:                                             ; preds = %bb34
  %_95 = load i32, i32* %ek, align 4
  %_94 = icmp eq i32 %_95, 18
  br i1 %_94, label %bb37, label %bb38

bb35:                                             ; preds = %bb34
  store i8 17, i8* %1, align 1
  br label %bb83

bb38:                                             ; preds = %bb36
  %_100 = load i32, i32* %ek, align 4
  %_99 = icmp eq i32 %_100, 19
  br i1 %_99, label %bb39, label %bb40

bb37:                                             ; preds = %bb36
  store i8 18, i8* %1, align 1
  br label %bb83

bb40:                                             ; preds = %bb38
  %_105 = load i32, i32* %ek, align 4
  %_104 = icmp eq i32 %_105, 20
  br i1 %_104, label %bb41, label %bb42

bb39:                                             ; preds = %bb38
  store i8 19, i8* %1, align 1
  br label %bb83

bb42:                                             ; preds = %bb40
  %_110 = load i32, i32* %ek, align 4
  %_109 = icmp eq i32 %_110, 21
  br i1 %_109, label %bb43, label %bb44

bb41:                                             ; preds = %bb40
  store i8 20, i8* %1, align 1
  br label %bb83

bb44:                                             ; preds = %bb42
  %_115 = load i32, i32* %ek, align 4
  %_114 = icmp eq i32 %_115, 22
  br i1 %_114, label %bb45, label %bb46

bb43:                                             ; preds = %bb42
  store i8 21, i8* %1, align 1
  br label %bb83

bb46:                                             ; preds = %bb44
  %_120 = load i32, i32* %ek, align 4
  %_119 = icmp eq i32 %_120, 23
  br i1 %_119, label %bb47, label %bb48

bb45:                                             ; preds = %bb44
  store i8 22, i8* %1, align 1
  br label %bb83

bb48:                                             ; preds = %bb46
  %_125 = load i32, i32* %ek, align 4
  %_124 = icmp eq i32 %_125, 24
  br i1 %_124, label %bb49, label %bb50

bb47:                                             ; preds = %bb46
  store i8 23, i8* %1, align 1
  br label %bb83

bb50:                                             ; preds = %bb48
  %_130 = load i32, i32* %ek, align 4
  %_129 = icmp eq i32 %_130, 25
  br i1 %_129, label %bb51, label %bb52

bb49:                                             ; preds = %bb48
  store i8 24, i8* %1, align 1
  br label %bb83

bb52:                                             ; preds = %bb50
  %_135 = load i32, i32* %ek, align 4
  %_134 = icmp eq i32 %_135, 26
  br i1 %_134, label %bb53, label %bb54

bb51:                                             ; preds = %bb50
  store i8 25, i8* %1, align 1
  br label %bb83

bb54:                                             ; preds = %bb52
  %_140 = load i32, i32* %ek, align 4
  %_139 = icmp eq i32 %_140, 27
  br i1 %_139, label %bb55, label %bb56

bb53:                                             ; preds = %bb52
  store i8 26, i8* %1, align 1
  br label %bb83

bb56:                                             ; preds = %bb54
  %_145 = load i32, i32* %ek, align 4
  %_144 = icmp eq i32 %_145, 28
  br i1 %_144, label %bb57, label %bb58

bb55:                                             ; preds = %bb54
  store i8 27, i8* %1, align 1
  br label %bb83

bb58:                                             ; preds = %bb56
  %_150 = load i32, i32* %ek, align 4
  %_149 = icmp eq i32 %_150, 29
  br i1 %_149, label %bb59, label %bb60

bb57:                                             ; preds = %bb56
  store i8 28, i8* %1, align 1
  br label %bb83

bb60:                                             ; preds = %bb58
  %_155 = load i32, i32* %ek, align 4
  %_154 = icmp eq i32 %_155, 30
  br i1 %_154, label %bb61, label %bb62

bb59:                                             ; preds = %bb58
  store i8 29, i8* %1, align 1
  br label %bb83

bb62:                                             ; preds = %bb60
  %_160 = load i32, i32* %ek, align 4
  %_159 = icmp eq i32 %_160, 31
  br i1 %_159, label %bb63, label %bb64

bb61:                                             ; preds = %bb60
  store i8 30, i8* %1, align 1
  br label %bb83

bb64:                                             ; preds = %bb62
  %_165 = load i32, i32* %ek, align 4
  %_164 = icmp eq i32 %_165, 32
  br i1 %_164, label %bb65, label %bb66

bb63:                                             ; preds = %bb62
  store i8 31, i8* %1, align 1
  br label %bb83

bb66:                                             ; preds = %bb64
  %_170 = load i32, i32* %ek, align 4
  %_169 = icmp eq i32 %_170, 33
  br i1 %_169, label %bb67, label %bb68

bb65:                                             ; preds = %bb64
  store i8 32, i8* %1, align 1
  br label %bb83

bb68:                                             ; preds = %bb66
  %_175 = load i32, i32* %ek, align 4
  %_174 = icmp eq i32 %_175, 34
  br i1 %_174, label %bb69, label %bb70

bb67:                                             ; preds = %bb66
  store i8 33, i8* %1, align 1
  br label %bb83

bb70:                                             ; preds = %bb68
  %_180 = load i32, i32* %ek, align 4
  %_179 = icmp eq i32 %_180, 35
  br i1 %_179, label %bb71, label %bb72

bb69:                                             ; preds = %bb68
  store i8 34, i8* %1, align 1
  br label %bb83

bb72:                                             ; preds = %bb70
  %_185 = load i32, i32* %ek, align 4
  %_184 = icmp eq i32 %_185, 39
  br i1 %_184, label %bb73, label %bb74

bb71:                                             ; preds = %bb70
  store i8 35, i8* %1, align 1
  br label %bb83

bb74:                                             ; preds = %bb72
  %_190 = load i32, i32* %ek, align 4
  %_189 = icmp eq i32 %_190, 37
  br i1 %_189, label %bb75, label %bb76

bb73:                                             ; preds = %bb72
  store i8 39, i8* %1, align 1
  br label %bb83

bb76:                                             ; preds = %bb74
  %_195 = load i32, i32* %ek, align 4
  %_194 = icmp eq i32 %_195, 36
  br i1 %_194, label %bb77, label %bb78

bb75:                                             ; preds = %bb74
  store i8 37, i8* %1, align 1
  br label %bb83

bb78:                                             ; preds = %bb76
  %_200 = load i32, i32* %ek, align 4
  %_199 = icmp eq i32 %_200, 38
  br i1 %_199, label %bb79, label %bb80

bb77:                                             ; preds = %bb76
  store i8 36, i8* %1, align 1
  br label %bb83

bb80:                                             ; preds = %bb78
  %_205 = load i32, i32* %ek, align 4
  %_204 = icmp eq i32 %_205, 40
  br i1 %_204, label %bb81, label %bb82

bb79:                                             ; preds = %bb78
  store i8 38, i8* %1, align 1
  br label %bb83

bb82:                                             ; preds = %bb80
  store i8 41, i8* %1, align 1
  br label %bb83

bb81:                                             ; preds = %bb80
  store i8 40, i8* %1, align 1
  br label %bb83
}

; std::io::error::repr_bitpacked::Repr::new_simple_message
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN3std2io5error14repr_bitpacked4Repr18new_simple_message17h4c49cefe9604dc68E(%"std::io::error::SimpleMessage"* align 8 %m) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %_3 = bitcast %"std::io::error::SimpleMessage"* %m to {}*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h660131231ad28a8aE"({}* %_3)
  br label %bb1

bb1:                                              ; preds = %start
  store i8* %_2, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !3, !noundef !3
  ret i8* %1
}

; std::io::error::repr_bitpacked::Repr::data
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std2io5error14repr_bitpacked4Repr4data17he106b01c56c8f702E(%"std::io::error::ErrorData<&std::io::error::Custom>"* sret(%"std::io::error::ErrorData<&std::io::error::Custom>") %0, i8** align 8 %self) unnamed_addr #0 {
start:
  %_2 = load i8*, i8** %self, align 8, !nonnull !3, !noundef !3
; call std::io::error::repr_bitpacked::decode_repr
  call void @_ZN3std2io5error14repr_bitpacked11decode_repr17h0471ca073c727322E(%"std::io::error::ErrorData<&std::io::error::Custom>"* sret(%"std::io::error::ErrorData<&std::io::error::Custom>") %0, i8* %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::io::error::repr_bitpacked::Repr::data::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"std::io::error::Custom"* @"_ZN3std2io5error14repr_bitpacked4Repr4data28_$u7b$$u7b$closure$u7d$$u7d$17h81f04933d3e0cfe6E"(%"std::io::error::Custom"* %c) unnamed_addr #0 {
start:
  ret %"std::io::error::Custom"* %c
}

; std::io::error::Error::from_static_message
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN3std2io5error5Error19from_static_message17h13e557da5018ca10E(%"std::io::error::SimpleMessage"* align 8 %msg) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call std::io::error::repr_bitpacked::Repr::new_simple_message
  %_2 = call i8* @_ZN3std2io5error14repr_bitpacked4Repr18new_simple_message17h4c49cefe9604dc68E(%"std::io::error::SimpleMessage"* align 8 %msg)
  br label %bb1

bb1:                                              ; preds = %start
  store i8* %_2, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !3, !noundef !3
  ret i8* %1
}

; std::io::error::Error::kind
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN3std2io5error5Error4kind17h3290eed79eac23d4E(i8** align 8 %self) unnamed_addr #0 {
start:
  %_2 = alloca %"std::io::error::ErrorData<&std::io::error::Custom>", align 8
  %0 = alloca i8, align 1
; call std::io::error::repr_bitpacked::Repr::data
  call void @_ZN3std2io5error14repr_bitpacked4Repr4data17he106b01c56c8f702E(%"std::io::error::ErrorData<&std::io::error::Custom>"* sret(%"std::io::error::ErrorData<&std::io::error::Custom>") %_2, i8** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %_2 to i8*
  %2 = load i8, i8* %1, align 8, !range !11, !noundef !3
  %_4 = zext i8 %2 to i64
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb7
    i64 2, label %bb2
    i64 3, label %bb6
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %3 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %_2 to %"std::io::error::ErrorData<&std::io::error::Custom>::Os"*
  %4 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Os", %"std::io::error::ErrorData<&std::io::error::Custom>::Os"* %3, i32 0, i32 1
  %code = load i32, i32* %4, align 4
; call std::sys::unix::decode_error_kind
  %5 = call i8 @_ZN3std3sys4unix17decode_error_kind17hc6c2f8ac2883b3fbE(i32 %code), !range !9
  store i8 %5, i8* %0, align 1
  br label %bb5

bb7:                                              ; preds = %bb1
  %6 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %_2 to %"std::io::error::ErrorData<&std::io::error::Custom>::Simple"*
  %7 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Simple", %"std::io::error::ErrorData<&std::io::error::Custom>::Simple"* %6, i32 0, i32 1
  %kind = load i8, i8* %7, align 1, !range !9, !noundef !3
  store i8 %kind, i8* %0, align 1
  br label %bb8

bb2:                                              ; preds = %bb1
  %8 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %_2 to %"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage"*
  %9 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage", %"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage"* %8, i32 0, i32 1
  %m = load %"std::io::error::SimpleMessage"*, %"std::io::error::SimpleMessage"** %9, align 8, !nonnull !3, !align !8, !noundef !3
  %10 = getelementptr inbounds %"std::io::error::SimpleMessage", %"std::io::error::SimpleMessage"* %m, i32 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !9, !noundef !3
  store i8 %11, i8* %0, align 1
  br label %bb8

bb6:                                              ; preds = %bb1
  %12 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %_2 to %"std::io::error::ErrorData<&std::io::error::Custom>::Custom"*
  %13 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Custom", %"std::io::error::ErrorData<&std::io::error::Custom>::Custom"* %12, i32 0, i32 1
  %c = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %13, align 8, !nonnull !3, !align !8, !noundef !3
  %14 = getelementptr inbounds %"std::io::error::Custom", %"std::io::error::Custom"* %c, i32 0, i32 1
  %15 = load i8, i8* %14, align 8, !range !9, !noundef !3
  store i8 %15, i8* %0, align 1
  br label %bb8

bb8:                                              ; preds = %bb5, %bb7, %bb2, %bb6
  %16 = load i8, i8* %0, align 1, !range !9, !noundef !3
  ret i8 %16

bb5:                                              ; preds = %bb4
  br label %bb8
}

; std::ffi::os_str::OsStr::from_inner
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::os_str::OsStr"*, i64 } @_ZN3std3ffi6os_str5OsStr10from_inner17he73f39e06dcce55cE(%"std::sys::unix::os_str::Slice"* align 1 %inner.0, i64 %inner.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast %"std::sys::unix::os_str::Slice"* %inner.0 to %"std::ffi::os_str::OsStr"*
  %0 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } undef, %"std::ffi::os_str::OsStr"* %_2.0, 0
  %1 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } %0, i64 %inner.1, 1
  ret { %"std::ffi::os_str::OsStr"*, i64 } %1
}

; std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h572200d01c081a5cE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call std::sys::unix::os_str::Slice::from_str
  %0 = call { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice8from_str17hbbfe2b3bf0788d2fE([0 x i8]* align 1 %self.0, i64 %self.1)
  %_3.0 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %0, 0
  %_3.1 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::ffi::os_str::OsStr::from_inner
  %1 = call { %"std::ffi::os_str::OsStr"*, i64 } @_ZN3std3ffi6os_str5OsStr10from_inner17he73f39e06dcce55cE(%"std::sys::unix::os_str::Slice"* align 1 %_3.0, i64 %_3.1)
  %2 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %1, 0
  %3 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } undef, %"std::ffi::os_str::OsStr"* %2, 0
  %5 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } %4, i64 %3, 1
  ret { %"std::ffi::os_str::OsStr"*, i64 } %5
}

; std::sys::unix::locks::futex::Mutex::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN3std3sys4unix5locks5futex5Mutex3new17h0320f81318398a9cE() unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_1 = alloca %"core::sync::atomic::AtomicU32", align 4
  %1 = alloca %"std::sys::unix::locks::futex::Mutex", align 4
; call core::sync::atomic::AtomicU32::new
  %2 = call i32 @_ZN4core4sync6atomic9AtomicU323new17h6a848cb390595eacE(i32 0)
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"core::sync::atomic::AtomicU32"* %_1 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"std::sys::unix::locks::futex::Mutex"* %1 to %"core::sync::atomic::AtomicU32"*
  %6 = bitcast %"core::sync::atomic::AtomicU32"* %5 to i8*
  %7 = bitcast %"core::sync::atomic::AtomicU32"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"std::sys::unix::locks::futex::Mutex"* %1 to i32*
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; std::sys::unix::locks::futex::Mutex::lock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix5locks5futex5Mutex4lock17hebaaf8cf282d1eb8E(%"std::sys::unix::locks::futex::Mutex"* align 4 %self) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %_6 = alloca i8, align 1
  %_4 = alloca { i32, i32 }, align 4
  %_5 = bitcast %"std::sys::unix::locks::futex::Mutex"* %self to %"core::sync::atomic::AtomicU32"*
  store i8 2, i8* %_6, align 1
  store i8 0, i8* %_7, align 1
  %0 = load i8, i8* %_6, align 1, !range !12, !noundef !3
  %1 = load i8, i8* %_7, align 1, !range !12, !noundef !3
; call core::sync::atomic::AtomicU32::compare_exchange
  %2 = call { i32, i32 } @_ZN4core4sync6atomic9AtomicU3216compare_exchange17hdd65b8796c108cf2E(%"core::sync::atomic::AtomicU32"* align 4 %_5, i32 0, i32 1, i8 %0, i8 %1)
  store { i32, i32 } %2, { i32, i32 }* %_4, align 4
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::is_err
  %_2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h60ee057c9c7fe3b3E"({ i32, i32 }* align 4 %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_2, label %bb3, label %bb5

bb5:                                              ; preds = %bb4, %bb2
  ret void

bb3:                                              ; preds = %bb2
; call std::sys::unix::locks::futex::Mutex::lock_contended
  call void @_ZN3std3sys4unix5locks5futex5Mutex14lock_contended17h2b2c34d3d35da8a3E(%"std::sys::unix::locks::futex::Mutex"* align 4 %self)
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb5
}

; std::sys::unix::locks::futex::Mutex::unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix5locks5futex5Mutex6unlock17h4ef5422a83d44a02E(%"std::sys::unix::locks::futex::Mutex"* align 4 %self) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  %_3 = bitcast %"std::sys::unix::locks::futex::Mutex"* %self to %"core::sync::atomic::AtomicU32"*
  store i8 1, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !12, !noundef !3
; call core::sync::atomic::AtomicU32::swap
  %_2 = call i32 @_ZN4core4sync6atomic9AtomicU324swap17h4f2c8964d1f6135cE(%"core::sync::atomic::AtomicU32"* align 4 %_3, i32 0, i8 %0)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i32 %_2, 2
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
; call std::sys::unix::locks::futex::Mutex::wake
  call void @_ZN3std3sys4unix5locks5futex5Mutex4wake17h2c0716e4d3c63bd3E(%"std::sys::unix::locks::futex::Mutex"* align 4 %self)
  br label %bb3

bb4:                                              ; preds = %bb1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  ret void

bb3:                                              ; preds = %bb2
  br label %bb5
}

; std::sys::unix::locks::futex::Condvar::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN3std3sys4unix5locks5futex7Condvar3new17h50339753cc4f5a8aE() unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_1 = alloca %"core::sync::atomic::AtomicU32", align 4
  %1 = alloca %"std::sys::unix::locks::futex::Condvar", align 4
; call core::sync::atomic::AtomicU32::new
  %2 = call i32 @_ZN4core4sync6atomic9AtomicU323new17h6a848cb390595eacE(i32 0)
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"core::sync::atomic::AtomicU32"* %_1 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"std::sys::unix::locks::futex::Condvar"* %1 to %"core::sync::atomic::AtomicU32"*
  %6 = bitcast %"core::sync::atomic::AtomicU32"* %5 to i8*
  %7 = bitcast %"core::sync::atomic::AtomicU32"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"std::sys::unix::locks::futex::Condvar"* %1 to i32*
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; std::sys::unix::os_str::Slice::from_u8_slice
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice13from_u8_slice17hbf3957f44d49890cE([0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %0 = alloca { %"std::sys::unix::os_str::Slice"*, i64 }, align 8
  %1 = bitcast { %"std::sys::unix::os_str::Slice"*, i64 }* %0 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %s.1, i64* %3, align 8
  %4 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 0
  %5 = load %"std::sys::unix::os_str::Slice"*, %"std::sys::unix::os_str::Slice"** %4, align 8, !nonnull !3, !align !4, !noundef !3
  %6 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } undef, %"std::sys::unix::os_str::Slice"* %5, 0
  %9 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } %8, i64 %7, 1
  ret { %"std::sys::unix::os_str::Slice"*, i64 } %9
}

; std::sys::unix::os_str::Slice::from_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice8from_str17hbbfe2b3bf0788d2fE([0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !3, !align !4, !noundef !3
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %_3.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::sys::unix::os_str::Slice::from_u8_slice
  %9 = call { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice13from_u8_slice17hbf3957f44d49890cE([0 x i8]* align 1 %_3.0, i64 %_3.1)
  %10 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %9, 0
  %11 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %9, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %12 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } undef, %"std::sys::unix::os_str::Slice"* %10, 0
  %13 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } %12, i64 %11, 1
  ret { %"std::sys::unix::os_str::Slice"*, i64 } %13
}

; std::path::Path::new
; Function Attrs: nonlazybind uwtable
define { %"std::path::Path"*, i64 } @_ZN3std4path4Path3new17hd268ca2e37986029E([0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
; call std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
  %0 = call { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h572200d01c081a5cE"([0 x i8]* align 1 %s.0, i64 %s.1)
  %_4.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %0, 0
  %_4.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2.0 = bitcast %"std::ffi::os_str::OsStr"* %_4.0 to %"std::path::Path"*
  %1 = insertvalue { %"std::path::Path"*, i64 } undef, %"std::path::Path"* %_2.0, 0
  %2 = insertvalue { %"std::path::Path"*, i64 } %1, i64 %_4.1, 1
  ret { %"std::path::Path"*, i64 } %2
}

; std::path::<impl core::convert::AsRef<std::path::Path> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::path::Path"*, i64 } @"_ZN3std4path77_$LT$impl$u20$core..convert..AsRef$LT$std..path..Path$GT$$u20$for$u20$str$GT$6as_ref17h36d54f2eb451c02cE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call std::path::Path::new
  %0 = call { %"std::path::Path"*, i64 } @_ZN3std4path4Path3new17hd268ca2e37986029E([0 x i8]* align 1 %self.0, i64 %self.1)
  %1 = extractvalue { %"std::path::Path"*, i64 } %0, 0
  %2 = extractvalue { %"std::path::Path"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { %"std::path::Path"*, i64 } undef, %"std::path::Path"* %1, 0
  %4 = insertvalue { %"std::path::Path"*, i64 } %3, i64 %2, 1
  ret { %"std::path::Path"*, i64 } %4
}

; std::sync::mutex::guard_lock
; Function Attrs: nonlazybind uwtable
define align 4 %"std::sys_common::mutex::MovableMutex"* @_ZN3std4sync5mutex10guard_lock17hbc2b1c5ee0782ecaE({ i32*, i8 }* align 8 %guard) unnamed_addr #1 {
start:
  %0 = bitcast { i32*, i8 }* %guard to %"std::sync::mutex::Mutex<i32>"**
  %_2 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %0, align 8, !nonnull !3, !align !13, !noundef !3
  %1 = bitcast %"std::sync::mutex::Mutex<i32>"* %_2 to %"std::sys_common::mutex::MovableMutex"*
  ret %"std::sys_common::mutex::MovableMutex"* %1
}

; std::sync::mutex::guard_poison
; Function Attrs: nonlazybind uwtable
define align 1 %"std::sync::poison::Flag"* @_ZN3std4sync5mutex12guard_poison17h2c0cff045a9eff05E({ i32*, i8 }* align 8 %guard) unnamed_addr #1 {
start:
  %0 = bitcast { i32*, i8 }* %guard to %"std::sync::mutex::Mutex<i32>"**
  %_2 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %0, align 8, !nonnull !3, !align !13, !noundef !3
  %1 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %_2, i32 0, i32 1
  ret %"std::sync::poison::Flag"* %1
}

; std::sync::mutex::Mutex<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h56f2fedaa4d6e0bbE"(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* sret(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>") %0, %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %t) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %_2.i = alloca %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", align 8
  %1 = alloca i8, align 1
  %2 = alloca i32, align 4
  %3 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_5 = alloca %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", align 8
  %_4 = alloca %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", align 8
  %_3 = alloca %"std::sync::poison::Flag", align 1
  %_2 = alloca %"std::sys_common::mutex::MovableMutex", align 4
  store i8 1, i8* %_6, align 1
; invoke std::sys_common::mutex::MovableMutex::new
  %4 = invoke i32 @_ZN3std10sys_common5mutex12MovableMutex3new17hc7ecaa10d5f4770fE()
          to label %bb1 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  %5 = load i8, i8* %_6, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb5, label %bb4

cleanup:                                          ; preds = %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb6

bb1:                                              ; preds = %start
  store i32 %4, i32* %2, align 4
  %12 = bitcast %"std::sys_common::mutex::MovableMutex"* %_2 to i8*
  %13 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 4, i1 false)
; invoke std::sync::poison::Flag::new
  %14 = invoke i8 @_ZN3std4sync6poison4Flag3new17h0a63b6ad95bf565eE()
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i8 %14, i8* %1, align 1
  %15 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %1, i64 1, i1 false)
  store i8 0, i8* %_6, align 1
  %16 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_5 to i8*
  %17 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  %18 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_2.i to i8*
  %19 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false)
  %20 = bitcast %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_4 to %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"*
  %21 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %20 to i8*
  %22 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  %23 = bitcast %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %0 to %"std::sys_common::mutex::MovableMutex"*
  %24 = bitcast %"std::sys_common::mutex::MovableMutex"* %23 to i8*
  %25 = bitcast %"std::sys_common::mutex::MovableMutex"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 4 %25, i64 4, i1 false)
  %26 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %0, i32 0, i32 1
  %27 = bitcast %"std::sync::poison::Flag"* %26 to i8*
  %28 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 1 %28, i64 1, i1 false)
  %29 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %0, i32 0, i32 3
  %30 = bitcast %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %29 to i8*
  %31 = bitcast %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false)
  ret void

bb4:                                              ; preds = %bb5, %bb6
  %32 = bitcast { i8*, i32 }* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = insertvalue { i8*, i32 } undef, i8* %33, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  resume { i8*, i32 } %37

bb5:                                              ; preds = %bb6
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>
  invoke void @"_ZN4core3ptr88drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$17hbbd851914b219a57E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %t) #17
          to label %bb4 unwind label %abort

abort:                                            ; preds = %bb5
  %38 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable
}

; std::sync::mutex::Mutex<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h9286fd783ce50440E"(%"std::sync::mutex::Mutex<std::fs::File>"* sret(%"std::sync::mutex::Mutex<std::fs::File>") %0, i32 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_3 = alloca %"std::sync::poison::Flag", align 1
  %_2 = alloca %"std::sys_common::mutex::MovableMutex", align 4
  %t = alloca i32, align 4
  store i32 %1, i32* %t, align 4
  store i8 1, i8* %_6, align 1
; invoke std::sys_common::mutex::MovableMutex::new
  %6 = invoke i32 @_ZN3std10sys_common5mutex12MovableMutex3new17hc7ecaa10d5f4770fE()
          to label %bb1 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  %7 = load i8, i8* %_6, align 1, !range !2, !noundef !3
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb5, label %bb4

cleanup:                                          ; preds = %bb1, %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb6

bb1:                                              ; preds = %start
  store i32 %6, i32* %4, align 4
  %14 = bitcast %"std::sys_common::mutex::MovableMutex"* %_2 to i8*
  %15 = bitcast i32* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 4, i1 false)
; invoke std::sync::poison::Flag::new
  %16 = invoke i8 @_ZN3std4sync6poison4Flag3new17h0a63b6ad95bf565eE()
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i8 %16, i8* %3, align 1
  %17 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %3, i64 1, i1 false)
  store i8 0, i8* %_6, align 1
  %_5 = load i32, i32* %t, align 4, !range !14, !noundef !3
  store i32 %_5, i32* %2, align 4
  %18 = load i32, i32* %2, align 4, !range !14, !noundef !3
  br label %bb3

bb3:                                              ; preds = %bb2
  %19 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %0 to %"std::sys_common::mutex::MovableMutex"*
  %20 = bitcast %"std::sys_common::mutex::MovableMutex"* %19 to i8*
  %21 = bitcast %"std::sys_common::mutex::MovableMutex"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %21, i64 4, i1 false)
  %22 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %0, i32 0, i32 1
  %23 = bitcast %"std::sync::poison::Flag"* %22 to i8*
  %24 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 1 %24, i64 1, i1 false)
  %25 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %0, i32 0, i32 3
  store i32 %18, i32* %25, align 4
  ret void

bb4:                                              ; preds = %bb5, %bb6
  %26 = bitcast { i8*, i32 }* %5 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31

bb5:                                              ; preds = %bb6
; invoke core::ptr::drop_in_place<std::fs::File>
  invoke void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17he19acbe034eaa267E"(i32* %t) #17
          to label %bb4 unwind label %abort

abort:                                            ; preds = %bb5
  %32 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable
}

; std::sync::mutex::Mutex<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17hb42a7453e1e1ba2bE"(%"std::sync::mutex::Mutex<i32>"* sret(%"std::sync::mutex::Mutex<i32>") %0, i32 %t) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i32, align 4
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_3 = alloca %"std::sync::poison::Flag", align 1
  %_2 = alloca %"std::sys_common::mutex::MovableMutex", align 4
  store i8 1, i8* %_6, align 1
; invoke std::sys_common::mutex::MovableMutex::new
  %5 = invoke i32 @_ZN3std10sys_common5mutex12MovableMutex3new17hc7ecaa10d5f4770fE()
          to label %bb1 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  %6 = load i8, i8* %_6, align 1, !range !2, !noundef !3
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb5, label %bb4

cleanup:                                          ; preds = %bb1, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb6

bb1:                                              ; preds = %start
  store i32 %5, i32* %3, align 4
  %13 = bitcast %"std::sys_common::mutex::MovableMutex"* %_2 to i8*
  %14 = bitcast i32* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 4, i1 false)
; invoke std::sync::poison::Flag::new
  %15 = invoke i8 @_ZN3std4sync6poison4Flag3new17h0a63b6ad95bf565eE()
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i8 %15, i8* %2, align 1
  %16 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %2, i64 1, i1 false)
  store i8 0, i8* %_6, align 1
  store i32 %t, i32* %1, align 4
  %17 = load i32, i32* %1, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  %18 = bitcast %"std::sync::mutex::Mutex<i32>"* %0 to %"std::sys_common::mutex::MovableMutex"*
  %19 = bitcast %"std::sys_common::mutex::MovableMutex"* %18 to i8*
  %20 = bitcast %"std::sys_common::mutex::MovableMutex"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 4, i1 false)
  %21 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %0, i32 0, i32 1
  %22 = bitcast %"std::sync::poison::Flag"* %21 to i8*
  %23 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 1 %23, i64 1, i1 false)
  %24 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %0, i32 0, i32 3
  store i32 %17, i32* %24, align 4
  ret void

bb4:                                              ; preds = %bb5, %bb6
  %25 = bitcast { i8*, i32 }* %4 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = insertvalue { i8*, i32 } undef, i8* %26, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  resume { i8*, i32 } %30

bb5:                                              ; preds = %bb6
  br label %bb4
}

; std::sync::mutex::Mutex<T>::lock
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h6db853d776ba8611E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>") %0, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* align 8 %self) unnamed_addr #1 {
start:
  %_3 = bitcast %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %self to %"std::sys_common::mutex::MovableMutex"*
; call std::sys_common::mutex::MovableMutex::raw_lock
  call void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17h5f137073161fe057E(%"std::sys_common::mutex::MovableMutex"* align 4 %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::mutex::MutexGuard<T>::new
  call void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17hce1d2e5ec97d58c6E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>") %0, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* align 8 %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::Mutex<T>::lock
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17hcd80d8b0b86df56cE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") %0, %"std::sync::mutex::Mutex<std::fs::File>"* align 4 %self) unnamed_addr #1 {
start:
  %_3 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %self to %"std::sys_common::mutex::MovableMutex"*
; call std::sys_common::mutex::MovableMutex::raw_lock
  call void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17h5f137073161fe057E(%"std::sys_common::mutex::MovableMutex"* align 4 %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::mutex::MutexGuard<T>::new
  call void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h7bbbc3d52cbd2bcfE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") %0, %"std::sync::mutex::Mutex<std::fs::File>"* align 4 %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::Mutex<T>::lock
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17hf54553982b26d4d4E"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") %0, %"std::sync::mutex::Mutex<i32>"* align 4 %self) unnamed_addr #1 {
start:
  %_3 = bitcast %"std::sync::mutex::Mutex<i32>"* %self to %"std::sys_common::mutex::MovableMutex"*
; call std::sys_common::mutex::MovableMutex::raw_lock
  call void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17h5f137073161fe057E(%"std::sys_common::mutex::MovableMutex"* align 4 %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::mutex::MutexGuard<T>::new
  call void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h2dc25d9a886726b6E"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") %0, %"std::sync::mutex::Mutex<i32>"* align 4 %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h2dc25d9a886726b6E"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") %0, %"std::sync::mutex::Mutex<i32>"* align 4 %lock) unnamed_addr #1 {
start:
  %_4 = alloca i32*, align 8
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %lock, i32 0, i32 1
; call std::sync::poison::Flag::guard
  %1 = call { i8, i8 } @_ZN3std4sync6poison4Flag5guard17h1b82bfe732d0aa0dE(%"std::sync::poison::Flag"* align 1 %_3)
  %2 = extractvalue { i8, i8 } %1, 0
  %_2.0 = trunc i8 %2 to i1
  %_2.1 = extractvalue { i8, i8 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i32** %_4 to %"std::sync::mutex::Mutex<i32>"**
  store %"std::sync::mutex::Mutex<i32>"* %lock, %"std::sync::mutex::Mutex<i32>"** %3, align 8
  %4 = load i32*, i32** %_4, align 8, !nonnull !3, !align !13, !noundef !3
; call std::sync::poison::map_result
  call void @_ZN3std4sync6poison10map_result17h3c29881e0e459d75E(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") %0, i1 zeroext %_2.0, i8 %_2.1, i32* align 4 %4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h7bbbc3d52cbd2bcfE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") %0, %"std::sync::mutex::Mutex<std::fs::File>"* align 4 %lock) unnamed_addr #1 {
start:
  %_4 = alloca i32*, align 8
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %lock, i32 0, i32 1
; call std::sync::poison::Flag::guard
  %1 = call { i8, i8 } @_ZN3std4sync6poison4Flag5guard17h1b82bfe732d0aa0dE(%"std::sync::poison::Flag"* align 1 %_3)
  %2 = extractvalue { i8, i8 } %1, 0
  %_2.0 = trunc i8 %2 to i1
  %_2.1 = extractvalue { i8, i8 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i32** %_4 to %"std::sync::mutex::Mutex<std::fs::File>"**
  store %"std::sync::mutex::Mutex<std::fs::File>"* %lock, %"std::sync::mutex::Mutex<std::fs::File>"** %3, align 8
  %4 = load i32*, i32** %_4, align 8, !nonnull !3, !align !13, !noundef !3
; call std::sync::poison::map_result
  call void @_ZN3std4sync6poison10map_result17h5fe0112d0177ec68E(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") %0, i1 zeroext %_2.0, i8 %_2.1, i32* align 4 %4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17hce1d2e5ec97d58c6E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>") %0, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* align 8 %lock) unnamed_addr #1 {
start:
  %_4 = alloca i64*, align 8
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %lock, i32 0, i32 1
; call std::sync::poison::Flag::guard
  %1 = call { i8, i8 } @_ZN3std4sync6poison4Flag5guard17h1b82bfe732d0aa0dE(%"std::sync::poison::Flag"* align 1 %_3)
  %2 = extractvalue { i8, i8 } %1, 0
  %_2.0 = trunc i8 %2 to i1
  %_2.1 = extractvalue { i8, i8 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_4 to %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"**
  store %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %lock, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"** %3, align 8
  %4 = load i64*, i64** %_4, align 8, !nonnull !3, !align !8, !noundef !3
; call std::sync::poison::map_result
  call void @_ZN3std4sync6poison10map_result17h45fa046d01d4c527E(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>") %0, i1 zeroext %_2.0, i8 %_2.1, i64* align 8 %4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h1be5852950153506E"(i32* align 4 %_1, i1 zeroext %guard) unnamed_addr #0 {
start:
  %0 = alloca { i32*, i8 }, align 8
  %_5 = bitcast i32* %_1 to %"std::sync::mutex::Mutex<std::fs::File>"*
  %1 = bitcast { i32*, i8 }* %0 to %"std::sync::mutex::Mutex<std::fs::File>"**
  store %"std::sync::mutex::Mutex<std::fs::File>"* %_5, %"std::sync::mutex::Mutex<std::fs::File>"** %1, align 8
  %2 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8, !nonnull !3, !align !13, !noundef !3
  %6 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2, !noundef !3
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i32*, i8 } undef, i32* %5, 0
  %11 = insertvalue { i32*, i8 } %10, i8 %9, 1
  ret { i32*, i8 } %11
}

; std::sync::mutex::MutexGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h30fcde9a8c46f404E"(i32* align 4 %_1, i1 zeroext %guard) unnamed_addr #0 {
start:
  %0 = alloca { i32*, i8 }, align 8
  %_5 = bitcast i32* %_1 to %"std::sync::mutex::Mutex<i32>"*
  %1 = bitcast { i32*, i8 }* %0 to %"std::sync::mutex::Mutex<i32>"**
  store %"std::sync::mutex::Mutex<i32>"* %_5, %"std::sync::mutex::Mutex<i32>"** %1, align 8
  %2 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8, !nonnull !3, !align !13, !noundef !3
  %6 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2, !noundef !3
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i32*, i8 } undef, i32* %5, 0
  %11 = insertvalue { i32*, i8 } %10, i8 %9, 1
  ret { i32*, i8 } %11
}

; std::sync::mutex::MutexGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17hb1a257bc056d5e18E"(i64* align 8 %_1, i1 zeroext %guard) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %_5 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"*
  %1 = bitcast { i64*, i8 }* %0 to %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"**
  store %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_5, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3, !align !8, !noundef !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2, !noundef !3
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i64*, i8 } undef, i64* %5, 0
  %11 = insertvalue { i64*, i8 } %10, i8 %9, 1
  ret { i64*, i8 } %11
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync6poison10map_result17h3c29881e0e459d75E(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") %0, i1 zeroext %1, i8 %2, i32* align 4 %f) unnamed_addr #1 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %2, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !2, !noundef !3
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  %10 = load i8, i8* %9, align 1, !range !2, !noundef !3
  %t = trunc i8 %10 to i1
  %11 = zext i1 %t to i8
  store i8 %11, i8* %_7, align 1
  %12 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %13 = trunc i8 %12 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %14 = call { i32*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h30fcde9a8c46f404E"(i32* align 4 %f, i1 zeroext %13)
  %_5.0 = extractvalue { i32*, i8 } %14, 0
  %15 = extractvalue { i32*, i8 } %14, 1
  %_5.1 = trunc i8 %15 to i1
  br label %bb4

bb1:                                              ; preds = %start
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  %17 = load i8, i8* %16, align 1, !range !2, !noundef !3
  %guard = trunc i8 %17 to i1
  %18 = zext i1 %guard to i8
  store i8 %18, i8* %_13, align 1
  %19 = load i8, i8* %_13, align 1, !range !2, !noundef !3
  %20 = trunc i8 %19 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %21 = call { i32*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h30fcde9a8c46f404E"(i32* align 4 %f, i1 zeroext %20)
  %_11.0 = extractvalue { i32*, i8 } %21, 0
  %22 = extractvalue { i32*, i8 } %21, 1
  %_11.1 = trunc i8 %22 to i1
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %23 = call { i32*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17hd9e21a00ac206dd8E"(i32* align 4 %_11.0, i1 zeroext %_11.1)
  %_10.0 = extractvalue { i32*, i8 } %23, 0
  %24 = extractvalue { i32*, i8 } %23, 1
  %_10.1 = trunc i8 %24 to i1
  br label %bb6

bb6:                                              ; preds = %bb5
  %25 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"*
  %26 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"* %25, i32 0, i32 1
  %27 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %26, i32 0, i32 0
  store i32* %_10.0, i32** %27, align 8
  %28 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %26, i32 0, i32 1
  %29 = zext i1 %_10.1 to i8
  store i8 %29, i8* %28, align 8
  %30 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to i64*
  store i64 1, i64* %30, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  ret void

bb4:                                              ; preds = %bb3
  %31 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"*
  %32 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"* %31, i32 0, i32 1
  %33 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %32, i32 0, i32 0
  store i32* %_5.0, i32** %33, align 8
  %34 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %32, i32 0, i32 1
  %35 = zext i1 %_5.1 to i8
  store i8 %35, i8* %34, align 8
  %36 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to i64*
  store i64 0, i64* %36, align 8
  br label %bb7
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync6poison10map_result17h45fa046d01d4c527E(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>") %0, i1 zeroext %1, i8 %2, i64* align 8 %f) unnamed_addr #1 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %2, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !2, !noundef !3
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  %10 = load i8, i8* %9, align 1, !range !2, !noundef !3
  %t = trunc i8 %10 to i1
  %11 = zext i1 %t to i8
  store i8 %11, i8* %_7, align 1
  %12 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %13 = trunc i8 %12 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %14 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17hb1a257bc056d5e18E"(i64* align 8 %f, i1 zeroext %13)
  %_5.0 = extractvalue { i64*, i8 } %14, 0
  %15 = extractvalue { i64*, i8 } %14, 1
  %_5.1 = trunc i8 %15 to i1
  br label %bb4

bb1:                                              ; preds = %start
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  %17 = load i8, i8* %16, align 1, !range !2, !noundef !3
  %guard = trunc i8 %17 to i1
  %18 = zext i1 %guard to i8
  store i8 %18, i8* %_13, align 1
  %19 = load i8, i8* %_13, align 1, !range !2, !noundef !3
  %20 = trunc i8 %19 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %21 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17hb1a257bc056d5e18E"(i64* align 8 %f, i1 zeroext %20)
  %_11.0 = extractvalue { i64*, i8 } %21, 0
  %22 = extractvalue { i64*, i8 } %21, 1
  %_11.1 = trunc i8 %22 to i1
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %23 = call { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h1630830503b41435E"(i64* align 8 %_11.0, i1 zeroext %_11.1)
  %_10.0 = extractvalue { i64*, i8 } %23, 0
  %24 = extractvalue { i64*, i8 } %23, 1
  %_10.1 = trunc i8 %24 to i1
  br label %bb6

bb6:                                              ; preds = %bb5
  %25 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Err"*
  %26 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Err"* %25, i32 0, i32 1
  %27 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %26, i32 0, i32 0
  store i64* %_10.0, i64** %27, align 8
  %28 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %26, i32 0, i32 1
  %29 = zext i1 %_10.1 to i8
  store i8 %29, i8* %28, align 8
  %30 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %0 to i64*
  store i64 1, i64* %30, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  ret void

bb4:                                              ; preds = %bb3
  %31 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Ok"*
  %32 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Ok"* %31, i32 0, i32 1
  %33 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %32, i32 0, i32 0
  store i64* %_5.0, i64** %33, align 8
  %34 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %32, i32 0, i32 1
  %35 = zext i1 %_5.1 to i8
  store i8 %35, i8* %34, align 8
  %36 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %0 to i64*
  store i64 0, i64* %36, align 8
  br label %bb7
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync6poison10map_result17h5fe0112d0177ec68E(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") %0, i1 zeroext %1, i8 %2, i32* align 4 %f) unnamed_addr #1 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %2, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !2, !noundef !3
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  %10 = load i8, i8* %9, align 1, !range !2, !noundef !3
  %t = trunc i8 %10 to i1
  %11 = zext i1 %t to i8
  store i8 %11, i8* %_7, align 1
  %12 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %13 = trunc i8 %12 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %14 = call { i32*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h1be5852950153506E"(i32* align 4 %f, i1 zeroext %13)
  %_5.0 = extractvalue { i32*, i8 } %14, 0
  %15 = extractvalue { i32*, i8 } %14, 1
  %_5.1 = trunc i8 %15 to i1
  br label %bb4

bb1:                                              ; preds = %start
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  %17 = load i8, i8* %16, align 1, !range !2, !noundef !3
  %guard = trunc i8 %17 to i1
  %18 = zext i1 %guard to i8
  store i8 %18, i8* %_13, align 1
  %19 = load i8, i8* %_13, align 1, !range !2, !noundef !3
  %20 = trunc i8 %19 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %21 = call { i32*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h1be5852950153506E"(i32* align 4 %f, i1 zeroext %20)
  %_11.0 = extractvalue { i32*, i8 } %21, 0
  %22 = extractvalue { i32*, i8 } %21, 1
  %_11.1 = trunc i8 %22 to i1
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %23 = call { i32*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17hff50488340250dd5E"(i32* align 4 %_11.0, i1 zeroext %_11.1)
  %_10.0 = extractvalue { i32*, i8 } %23, 0
  %24 = extractvalue { i32*, i8 } %23, 1
  %_10.1 = trunc i8 %24 to i1
  br label %bb6

bb6:                                              ; preds = %bb5
  %25 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err"*
  %26 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err"* %25, i32 0, i32 1
  %27 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %26, i32 0, i32 0
  store i32* %_10.0, i32** %27, align 8
  %28 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %26, i32 0, i32 1
  %29 = zext i1 %_10.1 to i8
  store i8 %29, i8* %28, align 8
  %30 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %0 to i64*
  store i64 1, i64* %30, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  ret void

bb4:                                              ; preds = %bb3
  %31 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok"*
  %32 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok"* %31, i32 0, i32 1
  %33 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %32, i32 0, i32 0
  store i32* %_5.0, i32** %33, align 8
  %34 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %32, i32 0, i32 1
  %35 = zext i1 %_5.1 to i8
  store i8 %35, i8* %34, align 8
  %36 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %0 to i64*
  store i64 0, i64* %36, align 8
  br label %bb7
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h1630830503b41435E"(i64* align 8 %guard.0, i1 zeroext %guard.1) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  store i64* %guard.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard.1 to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3, !align !8, !noundef !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2, !noundef !3
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i64*, i8 } undef, i64* %5, 0
  %11 = insertvalue { i64*, i8 } %10, i8 %9, 1
  ret { i64*, i8 } %11
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h217205d2212b9cd8E"(i1 zeroext %guard) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = zext i1 %guard to i8
  store i8 %1, i8* %0, align 1
  %2 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define { i32*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17hd9e21a00ac206dd8E"(i32* align 4 %guard.0, i1 zeroext %guard.1) unnamed_addr #1 {
start:
  %0 = alloca { i32*, i8 }, align 8
  %1 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %0, i32 0, i32 0
  store i32* %guard.0, i32** %1, align 8
  %2 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard.1 to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8, !nonnull !3, !align !13, !noundef !3
  %6 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2, !noundef !3
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i32*, i8 } undef, i32* %5, 0
  %11 = insertvalue { i32*, i8 } %10, i8 %9, 1
  ret { i32*, i8 } %11
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define { i32*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17hff50488340250dd5E"(i32* align 4 %guard.0, i1 zeroext %guard.1) unnamed_addr #1 {
start:
  %0 = alloca { i32*, i8 }, align 8
  %1 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %0, i32 0, i32 0
  store i32* %guard.0, i32** %1, align 8
  %2 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard.1 to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8, !nonnull !3, !align !13, !noundef !3
  %6 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2, !noundef !3
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i32*, i8 } undef, i32* %5, 0
  %11 = insertvalue { i32*, i8 } %10, i8 %9, 1
  ret { i32*, i8 } %11
}

; std::sync::poison::Flag::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std4sync6poison4Flag3get17h32b8bf3c4104a38bE(%"std::sync::poison::Flag"* align 1 %self) unnamed_addr #0 {
start:
  %_3 = alloca i8, align 1
  %_2 = bitcast %"std::sync::poison::Flag"* %self to %"core::sync::atomic::AtomicBool"*
  store i8 0, i8* %_3, align 1
  %0 = load i8, i8* %_3, align 1, !range !12, !noundef !3
; call core::sync::atomic::AtomicBool::load
  %1 = call zeroext i1 @_ZN4core4sync6atomic10AtomicBool4load17h8eae756223149182E(%"core::sync::atomic::AtomicBool"* align 1 %_2, i8 %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; std::sync::poison::Flag::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN3std4sync6poison4Flag3new17h0a63b6ad95bf565eE() unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %_1 = alloca %"core::sync::atomic::AtomicBool", align 1
  %1 = alloca %"std::sync::poison::Flag", align 1
; call core::sync::atomic::AtomicBool::new
  %2 = call i8 @_ZN4core4sync6atomic10AtomicBool3new17h5d50cce8b9091b9aE(i1 zeroext false)
  store i8 %2, i8* %0, align 1
  %3 = bitcast %"core::sync::atomic::AtomicBool"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %0, i64 1, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"std::sync::poison::Flag"* %1 to %"core::sync::atomic::AtomicBool"*
  %5 = bitcast %"core::sync::atomic::AtomicBool"* %4 to i8*
  %6 = bitcast %"core::sync::atomic::AtomicBool"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 1, i1 false)
  %7 = bitcast %"std::sync::poison::Flag"* %1 to i8*
  %8 = load i8, i8* %7, align 1
  ret i8 %8
}

; std::sync::poison::Flag::done
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std4sync6poison4Flag4done17h46dcba1c0700218dE(%"std::sync::poison::Flag"* align 1 %self, i8* align 1 %guard) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %0 = load i8, i8* %guard, align 1, !range !2, !noundef !3
  %_5 = trunc i8 %0 to i1
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_3, align 1
  br label %bb3

bb2:                                              ; preds = %start
; call std::thread::panicking
  %_6 = call zeroext i1 @_ZN3std6thread9panicking17h2074bddaa1d59810E()
  br label %bb4

bb4:                                              ; preds = %bb2
  %1 = zext i1 %_6 to i8
  store i8 %1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb4
  %2 = load i8, i8* %_3, align 1, !range !2, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb3
  %_8 = bitcast %"std::sync::poison::Flag"* %self to %"core::sync::atomic::AtomicBool"*
  store i8 0, i8* %_9, align 1
  %4 = load i8, i8* %_9, align 1, !range !12, !noundef !3
; call core::sync::atomic::AtomicBool::store
  call void @_ZN4core4sync6atomic10AtomicBool5store17hfcd593176a579d4fE(%"core::sync::atomic::AtomicBool"* align 1 %_8, i1 zeroext true, i8 %4)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; std::sync::poison::Flag::guard
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8, i8 } @_ZN3std4sync6poison4Flag5guard17h1b82bfe732d0aa0dE(%"std::sync::poison::Flag"* align 1 %self) unnamed_addr #0 {
start:
  %ret = alloca i8, align 1
  %0 = alloca { i8, i8 }, align 1
; call std::thread::panicking
  %_3 = call zeroext i1 @_ZN3std6thread9panicking17h2074bddaa1d59810E()
  br label %bb1

bb1:                                              ; preds = %start
  %1 = zext i1 %_3 to i8
  store i8 %1, i8* %ret, align 1
; call std::sync::poison::Flag::get
  %_4 = call zeroext i1 @_ZN3std4sync6poison4Flag3get17h32b8bf3c4104a38bE(%"std::sync::poison::Flag"* align 1 %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_4, label %bb3, label %bb5

bb5:                                              ; preds = %bb2
  %2 = load i8, i8* %ret, align 1, !range !2, !noundef !3
  %_8 = trunc i8 %2 to i1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1
  %4 = zext i1 %_8 to i8
  store i8 %4, i8* %3, align 1
  %5 = bitcast { i8, i8 }* %0 to i8*
  store i8 0, i8* %5, align 1
  br label %bb6

bb3:                                              ; preds = %bb2
  %6 = load i8, i8* %ret, align 1, !range !2, !noundef !3
  %_7 = trunc i8 %6 to i1
; call std::sync::poison::PoisonError<T>::new
  %_6 = call zeroext i1 @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h217205d2212b9cd8E"(i1 zeroext %_7)
  br label %bb4

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1
  %8 = zext i1 %_6 to i8
  store i8 %8, i8* %7, align 1
  %9 = bitcast { i8, i8 }* %0 to i8*
  store i8 1, i8* %9, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %10 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 0
  %11 = load i8, i8* %10, align 1, !range !2, !noundef !3
  %12 = trunc i8 %11 to i1
  %13 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = zext i1 %12 to i8
  %16 = insertvalue { i8, i8 } undef, i8 %15, 0
  %17 = insertvalue { i8, i8 } %16, i8 %14, 1
  ret { i8, i8 } %17
}

; std::sync::condvar::Condvar::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN3std4sync7condvar7Condvar3new17hc4a1ce7986357493E() unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %_1 = alloca %"std::sys_common::condvar::Condvar", align 4
  %1 = alloca %"std::sync::condvar::Condvar", align 4
; call std::sys_common::condvar::Condvar::new
  %2 = call i32 @_ZN3std10sys_common7condvar7Condvar3new17hdd14ed96d39e2418E()
  store i32 %2, i32* %0, align 4
  %3 = bitcast %"std::sys_common::condvar::Condvar"* %_1 to i8*
  %4 = bitcast i32* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"std::sync::condvar::Condvar"* %1 to %"std::sys_common::condvar::Condvar"*
  %6 = bitcast %"std::sys_common::condvar::Condvar"* %5 to i8*
  %7 = bitcast %"std::sys_common::condvar::Condvar"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 4, i1 false)
  %8 = bitcast %"std::sync::condvar::Condvar"* %1 to i32*
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; std::sync::condvar::Condvar::wait
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync7condvar7Condvar4wait17h58f6201f6e3c46b8E(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") %0, %"std::sync::condvar::Condvar"* align 4 %self, i32* align 4 %1, i1 zeroext %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %guard = alloca { i32*, i8 }, align 8
  %4 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %guard, i32 0, i32 0
  store i32* %1, i32** %4, align 8
  %5 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %guard, i32 0, i32 1
  %6 = zext i1 %2 to i8
  store i8 %6, i8* %5, align 8
  store i8 1, i8* %_18, align 1
; invoke std::sync::mutex::guard_lock
  %lock = invoke align 4 %"std::sys_common::mutex::MovableMutex"* @_ZN3std4sync5mutex10guard_lock17hbc2b1c5ee0782ecaE({ i32*, i8 }* align 8 %guard)
          to label %bb1 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %7 = load i8, i8* %_18, align 1, !range !2, !noundef !3
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb10, label %bb9

cleanup:                                          ; preds = %bb5, %bb3, %bb2, %bb1, %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb11

bb1:                                              ; preds = %start
  %_8 = bitcast %"std::sync::condvar::Condvar"* %self to %"std::sys_common::condvar::Condvar"*
; invoke std::sys_common::condvar::Condvar::wait
  invoke void @_ZN3std10sys_common7condvar7Condvar4wait17h01b385252ace90c6E(%"std::sys_common::condvar::Condvar"* align 4 %_8, %"std::sys_common::mutex::MovableMutex"* align 4 %lock)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke std::sync::mutex::guard_poison
  %_11 = invoke align 1 %"std::sync::poison::Flag"* @_ZN3std4sync5mutex12guard_poison17h2c0cff045a9eff05E({ i32*, i8 }* align 8 %guard)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke std::sync::poison::Flag::get
  %poisoned = invoke zeroext i1 @_ZN3std4sync6poison4Flag3get17h32b8bf3c4104a38bE(%"std::sync::poison::Flag"* align 1 %_11)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  br i1 %poisoned, label %bb5, label %bb7

bb7:                                              ; preds = %bb4
  %14 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %guard, i32 0, i32 0
  %_17.0 = load i32*, i32** %14, align 8, !nonnull !3, !align !13, !noundef !3
  %15 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %guard, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !2, !noundef !3
  %_17.1 = trunc i8 %16 to i1
  %17 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %18, i32 0, i32 0
  store i32* %_17.0, i32** %19, align 8
  %20 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %18, i32 0, i32 1
  %21 = zext i1 %_17.1 to i8
  store i8 %21, i8* %20, align 8
  %22 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to i64*
  store i64 0, i64* %22, align 8
  br label %bb8

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_18, align 1
  %23 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %guard, i32 0, i32 0
  %_16.0 = load i32*, i32** %23, align 8, !nonnull !3, !align !13, !noundef !3
  %24 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %guard, i32 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2, !noundef !3
  %_16.1 = trunc i8 %25 to i1
; invoke std::sync::poison::PoisonError<T>::new
  %26 = invoke { i32*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17hd9e21a00ac206dd8E"(i32* align 4 %_16.0, i1 zeroext %_16.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_15.0 = extractvalue { i32*, i8 } %26, 0
  %27 = extractvalue { i32*, i8 } %26, 1
  %_15.1 = trunc i8 %27 to i1
  %28 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"*
  %29 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"* %28, i32 0, i32 1
  %30 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %29, i32 0, i32 0
  store i32* %_15.0, i32** %30, align 8
  %31 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %29, i32 0, i32 1
  %32 = zext i1 %_15.1 to i8
  store i8 %32, i8* %31, align 8
  %33 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to i64*
  store i64 1, i64* %33, align 8
  br label %bb8

bb9:                                              ; preds = %bb10, %bb11
  %34 = bitcast { i8*, i32 }* %3 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

bb10:                                             ; preds = %bb11
; invoke core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  invoke void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h474c10dddfe9366aE"({ i32*, i8 }* %guard) #17
          to label %bb9 unwind label %abort

abort:                                            ; preds = %bb10
  %40 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb8:                                              ; preds = %bb7, %bb6
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h071f1d2e6692564dE"(i64** align 8 %self, %"[closure@./probe_RSE.rs:141:34: 144:18]"* %f) unnamed_addr #1 {
start:
  %_5 = alloca %"[closure@./probe_RSE.rs:141:34: 144:18]", align 8
  %0 = bitcast %"[closure@./probe_RSE.rs:141:34: 144:18]"* %_5 to i8*
  %1 = bitcast %"[closure@./probe_RSE.rs:141:34: 144:18]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17ha42f41e08da46c68E"(i64** align 8 %self, %"[closure@./probe_RSE.rs:141:34: 144:18]"* %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9df7766df9cb2ea7E"(i1 zeroext %_3, [0 x i8]* align 1 bitcast (<{ [70 x i8] }>* @alloc672 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h14e14c20e2c776faE"(i64** align 8 %self, i64* align 8 %f.0, i32* align 4 %f.1) unnamed_addr #1 {
start:
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17hfdea2e1f6be24d06E"(i64** align 8 %self, i64* align 8 %f.0, i32* align 4 %f.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9df7766df9cb2ea7E"(i1 zeroext %_3, [0 x i8]* align 1 bitcast (<{ [70 x i8] }>* @alloc672 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h21ffc1a568d3044aE"(i64** align 8 %self, %"[closure@./probe_RSE.rs:118:30: 121:14]"* %f) unnamed_addr #1 {
start:
  %_5 = alloca %"[closure@./probe_RSE.rs:118:30: 121:14]", align 8
  %0 = bitcast %"[closure@./probe_RSE.rs:118:30: 121:14]"* %_5 to i8*
  %1 = bitcast %"[closure@./probe_RSE.rs:118:30: 121:14]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 32, i1 false)
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h24306e07e29ad9f7E"(i64** align 8 %self, %"[closure@./probe_RSE.rs:118:30: 121:14]"* %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9df7766df9cb2ea7E"(i1 zeroext %_3, [0 x i8]* align 1 bitcast (<{ [70 x i8] }>* @alloc672 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h33b0847ebcbc2decE"(i64** align 8 %self) unnamed_addr #1 {
start:
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h2e597f6818d4f568E"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9df7766df9cb2ea7E"(i1 zeroext %_3, [0 x i8]* align 1 bitcast (<{ [70 x i8] }>* @alloc672 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h36ccf6f60364f7e5E"(i64** align 8 %self) unnamed_addr #1 {
start:
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h59b65e81c7d3cc11E"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9df7766df9cb2ea7E"(i1 zeroext %_3, [0 x i8]* align 1 bitcast (<{ [70 x i8] }>* @alloc672 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h4da1e174e6473303E"(i64** align 8 %self, %"[closure@./probe_RSE.rs:97:18: 103:10]"* %f) unnamed_addr #1 {
start:
  %_5 = alloca %"[closure@./probe_RSE.rs:97:18: 103:10]", align 8
  %0 = bitcast %"[closure@./probe_RSE.rs:97:18: 103:10]"* %_5 to i8*
  %1 = bitcast %"[closure@./probe_RSE.rs:97:18: 103:10]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 40, i1 false)
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h87b98d66a3f6dca1E"(i64** align 8 %self, %"[closure@./probe_RSE.rs:97:18: 103:10]"* %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9df7766df9cb2ea7E"(i1 zeroext %_3, [0 x i8]* align 1 bitcast (<{ [70 x i8] }>* @alloc672 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h62a8ea36ce9e120fE"(i64** align 8 %self, i32* align 4 %f.0, i32* align 4 %f.1) unnamed_addr #1 {
start:
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17ha4f1fb6b53ca5d91E"(i64** align 8 %self, i32* align 4 %f.0, i32* align 4 %f.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9df7766df9cb2ea7E"(i1 zeroext %_3, [0 x i8]* align 1 bitcast (<{ [70 x i8] }>* @alloc672 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h7e698ac1446a5e62E"(i64** align 8 %self, %"[closure@./probe_RSE.rs:116:18: 122:10]"* %f) unnamed_addr #1 {
start:
  %_5 = alloca %"[closure@./probe_RSE.rs:116:18: 122:10]", align 8
  %0 = bitcast %"[closure@./probe_RSE.rs:116:18: 122:10]"* %_5 to i8*
  %1 = bitcast %"[closure@./probe_RSE.rs:116:18: 122:10]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 32, i1 false)
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h6209a25851af2fedE"(i64** align 8 %self, %"[closure@./probe_RSE.rs:116:18: 122:10]"* %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9df7766df9cb2ea7E"(i1 zeroext %_3, [0 x i8]* align 1 bitcast (<{ [70 x i8] }>* @alloc672 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h86dd68af219dacb3E"(i64** align 8 %self, %"[closure@./probe_RSE.rs:136:27: 145:14]"* %f) unnamed_addr #1 {
start:
  %_5 = alloca %"[closure@./probe_RSE.rs:136:27: 145:14]", align 8
  %0 = bitcast %"[closure@./probe_RSE.rs:136:27: 145:14]"* %_5 to i8*
  %1 = bitcast %"[closure@./probe_RSE.rs:136:27: 145:14]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h42e6852968268884E"(i64** align 8 %self, %"[closure@./probe_RSE.rs:136:27: 145:14]"* %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9df7766df9cb2ea7E"(i1 zeroext %_3, [0 x i8]* align 1 bitcast (<{ [70 x i8] }>* @alloc672 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17hbe5b2c299862664cE"(i64** align 8 %self, %"[closure@./probe_RSE.rs:99:30: 102:14]"* %f) unnamed_addr #1 {
start:
  %_5 = alloca %"[closure@./probe_RSE.rs:99:30: 102:14]", align 8
  %0 = bitcast %"[closure@./probe_RSE.rs:99:30: 102:14]"* %_5 to i8*
  %1 = bitcast %"[closure@./probe_RSE.rs:99:30: 102:14]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 40, i1 false)
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h09ecb3bda54d119cE"(i64** align 8 %self, %"[closure@./probe_RSE.rs:99:30: 102:14]"* %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9df7766df9cb2ea7E"(i1 zeroext %_3, [0 x i8]* align 1 bitcast (<{ [70 x i8] }>* @alloc672 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17hde55851a68d1a64dE"(i64** align 8 %self) unnamed_addr #1 {
start:
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h72764220386ee6dcE"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9df7766df9cb2ea7E"(i1 zeroext %_3, [0 x i8]* align 1 bitcast (<{ [70 x i8] }>* @alloc672 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17hf827740a087f6acfE"(i64** align 8 %self, %"[closure@./probe_RSE.rs:134:18: 146:10]"* %f) unnamed_addr #1 {
start:
  %_5 = alloca %"[closure@./probe_RSE.rs:134:18: 146:10]", align 8
  %0 = bitcast %"[closure@./probe_RSE.rs:134:18: 146:10]"* %_5 to i8*
  %1 = bitcast %"[closure@./probe_RSE.rs:134:18: 146:10]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17ha3ccdf14dd544f2eE"(i64** align 8 %self, %"[closure@./probe_RSE.rs:134:18: 146:10]"* %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9df7766df9cb2ea7E"(i1 zeroext %_3, [0 x i8]* align 1 bitcast (<{ [70 x i8] }>* @alloc672 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h09ecb3bda54d119cE"(i64** align 8 %self, %"[closure@./probe_RSE.rs:99:30: 102:14]"* %f) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_16 = alloca i64*, align 8
  %_15 = alloca %"[closure@./probe_RSE.rs:99:30: 102:14]", align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 1, i8* %_18, align 1
  %2 = bitcast i64** %self to i64* (i64*)**
  %_7 = load i64* (i64*)*, i64* (i64*)** %2, align 8, !nonnull !3, !noundef !3
  %3 = bitcast i64** %_8 to {}**
  store {}* null, {}** %3, align 8
  %4 = load i64*, i64** %_8, align 8, !align !8
  %_6 = invoke align 8 i64* %_7(i64* align 8 %4)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %5 = load i8, i8* %_18, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb12

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h0edc951b00b43dc2E"(i64* align 8 %_6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = invoke align 8 i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a421a2288584c59E"(i64* align 8 %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %12, i64** %_4, align 8
  %13 = bitcast i64** %_4 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_10 = select i1 %15, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %16 = bitcast i64** %_4 to { i64, i64 }**
  %val = load { i64, i64 }*, { i64, i64 }** %16, align 8, !nonnull !3, !align !8, !noundef !3
  store i8 0, i8* %_18, align 1
  %17 = bitcast %"[closure@./probe_RSE.rs:99:30: 102:14]"* %_15 to i8*
  %18 = bitcast %"[closure@./probe_RSE.rs:99:30: 102:14]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 40, i1 false)
  %19 = bitcast i64** %_16 to { i64, i64 }**
  store { i64, i64 }* %val, { i64, i64 }** %19, align 8
  %20 = load i64*, i64** %_16, align 8, !nonnull !3, !align !8, !noundef !3
  %21 = bitcast i64* %20 to { i64, i64 }*
; invoke probe_RSE::_probe_mutex_::{{closure}}::{{closure}}
  invoke void @"_ZN9probe_RSE13_probe_mutex_28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hff64a96d592ddac7E"(%"[closure@./probe_RSE.rs:99:30: 102:14]"* %_15, { i64, i64 }* align 8 %21)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %22 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h61bd8778b8fa1757E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc674 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %24 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %25 = trunc i8 %24 to i1
  ret i1 %25

bb8:                                              ; preds = %bb4
  %26 = getelementptr i8, i8* %1, i64 1
  %27 = bitcast i8* %26 to {}*
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %28 = bitcast { i8*, i32 }* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h24306e07e29ad9f7E"(i64** align 8 %self, %"[closure@./probe_RSE.rs:118:30: 121:14]"* %f) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_16 = alloca i64*, align 8
  %_15 = alloca %"[closure@./probe_RSE.rs:118:30: 121:14]", align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 1, i8* %_18, align 1
  %2 = bitcast i64** %self to i64* (i64*)**
  %_7 = load i64* (i64*)*, i64* (i64*)** %2, align 8, !nonnull !3, !noundef !3
  %3 = bitcast i64** %_8 to {}**
  store {}* null, {}** %3, align 8
  %4 = load i64*, i64** %_8, align 8, !align !8
  %_6 = invoke align 8 i64* %_7(i64* align 8 %4)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %5 = load i8, i8* %_18, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb12

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h0edc951b00b43dc2E"(i64* align 8 %_6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = invoke align 8 i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a421a2288584c59E"(i64* align 8 %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %12, i64** %_4, align 8
  %13 = bitcast i64** %_4 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_10 = select i1 %15, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %16 = bitcast i64** %_4 to { i64, i64 }**
  %val = load { i64, i64 }*, { i64, i64 }** %16, align 8, !nonnull !3, !align !8, !noundef !3
  store i8 0, i8* %_18, align 1
  %17 = bitcast %"[closure@./probe_RSE.rs:118:30: 121:14]"* %_15 to i8*
  %18 = bitcast %"[closure@./probe_RSE.rs:118:30: 121:14]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false)
  %19 = bitcast i64** %_16 to { i64, i64 }**
  store { i64, i64 }* %val, { i64, i64 }** %19, align 8
  %20 = load i64*, i64** %_16, align 8, !nonnull !3, !align !8, !noundef !3
  %21 = bitcast i64* %20 to { i64, i64 }*
; invoke probe_RSE::_probe_func_::{{closure}}::{{closure}}
  invoke void @"_ZN9probe_RSE12_probe_func_28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h796570f6fd38a9d4E"(%"[closure@./probe_RSE.rs:118:30: 121:14]"* %_15, { i64, i64 }* align 8 %21)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %22 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h61bd8778b8fa1757E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc674 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %24 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %25 = trunc i8 %24 to i1
  ret i1 %25

bb8:                                              ; preds = %bb4
  %26 = getelementptr i8, i8* %1, i64 1
  %27 = bitcast i8* %26 to {}*
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %28 = bitcast { i8*, i32 }* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h2e597f6818d4f568E"(i64** align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_16 = alloca i64*, align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 1, i8* %_18, align 1
  %2 = bitcast i64** %self to i64* (i64*)**
  %_7 = load i64* (i64*)*, i64* (i64*)** %2, align 8, !nonnull !3, !noundef !3
  %3 = bitcast i64** %_8 to {}**
  store {}* null, {}** %3, align 8
  %4 = load i64*, i64** %_8, align 8, !align !8
  %_6 = invoke align 8 i64* %_7(i64* align 8 %4)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %5 = load i8, i8* %_18, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb12

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17hb78672a47d47c489E"(i64* align 8 %_6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = invoke align 8 i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h366739adea08c8e6E"(i64* align 8 %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %12, i64** %_4, align 8
  %13 = bitcast i64** %_4 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_10 = select i1 %15, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %16 = bitcast i64** %_4 to %"core::cell::RefCell<alloc::string::String>"**
  %val = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %16, align 8, !nonnull !3, !align !8, !noundef !3
  store i8 0, i8* %_18, align 1
  %17 = bitcast i64** %_16 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %val, %"core::cell::RefCell<alloc::string::String>"** %17, align 8
  %18 = load i64*, i64** %_16, align 8, !nonnull !3, !align !8, !noundef !3
  %19 = bitcast i64* %18 to %"core::cell::RefCell<alloc::string::String>"*
; invoke probe_RSE::_probe_spawned_::{{closure}}
  invoke void @"_ZN9probe_RSE15_probe_spawned_28_$u7b$$u7b$closure$u7d$$u7d$17h3280b470c70e3ec3E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %19)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h61bd8778b8fa1757E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc674 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %22 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %23 = trunc i8 %22 to i1
  ret i1 %23

bb8:                                              ; preds = %bb4
  %24 = getelementptr i8, i8* %1, i64 1
  %25 = bitcast i8* %24 to {}*
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h42e6852968268884E"(i64** align 8 %self, %"[closure@./probe_RSE.rs:136:27: 145:14]"* %f) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_16 = alloca i64*, align 8
  %_15 = alloca %"[closure@./probe_RSE.rs:136:27: 145:14]", align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 1, i8* %_18, align 1
  %2 = bitcast i64** %self to i64* (i64*)**
  %_7 = load i64* (i64*)*, i64* (i64*)** %2, align 8, !nonnull !3, !noundef !3
  %3 = bitcast i64** %_8 to {}**
  store {}* null, {}** %3, align 8
  %4 = load i64*, i64** %_8, align 8, !align !8
  %_6 = invoke align 8 i64* %_7(i64* align 8 %4)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %5 = load i8, i8* %_18, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb12

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h3d867e9606a62aa4E"(i64* align 8 %_6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = invoke align 8 i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9d2cbeb3fdbb5df6E"(i64* align 8 %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %12, i64** %_4, align 8
  %13 = bitcast i64** %_4 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_10 = select i1 %15, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %16 = bitcast i64** %_4 to { i64, i32 }**
  %val = load { i64, i32 }*, { i64, i32 }** %16, align 8, !nonnull !3, !align !8, !noundef !3
  store i8 0, i8* %_18, align 1
  %17 = bitcast %"[closure@./probe_RSE.rs:136:27: 145:14]"* %_15 to i8*
  %18 = bitcast %"[closure@./probe_RSE.rs:136:27: 145:14]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false)
  %19 = bitcast i64** %_16 to { i64, i32 }**
  store { i64, i32 }* %val, { i64, i32 }** %19, align 8
  %20 = load i64*, i64** %_16, align 8, !nonnull !3, !align !8, !noundef !3
  %21 = bitcast i64* %20 to { i64, i32 }*
; invoke probe_RSE::_probe_spawning_::{{closure}}::{{closure}}
  invoke void @"_ZN9probe_RSE16_probe_spawning_28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h6c113c8a9b0ba016E"(%"[closure@./probe_RSE.rs:136:27: 145:14]"* %_15, { i64, i32 }* align 8 %21)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %22 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h61bd8778b8fa1757E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc674 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %24 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %25 = trunc i8 %24 to i1
  ret i1 %25

bb8:                                              ; preds = %bb4
  %26 = getelementptr i8, i8* %1, i64 1
  %27 = bitcast i8* %26 to {}*
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %28 = bitcast { i8*, i32 }* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h59b65e81c7d3cc11E"(i64** align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_16 = alloca i64*, align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 1, i8* %_18, align 1
  %2 = bitcast i64** %self to i64* (i64*)**
  %_7 = load i64* (i64*)*, i64* (i64*)** %2, align 8, !nonnull !3, !noundef !3
  %3 = bitcast i64** %_8 to {}**
  store {}* null, {}** %3, align 8
  %4 = load i64*, i64** %_8, align 8, !align !8
  %_6 = invoke align 8 i64* %_7(i64* align 8 %4)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %5 = load i8, i8* %_18, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb12

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17hb78672a47d47c489E"(i64* align 8 %_6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = invoke align 8 i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h366739adea08c8e6E"(i64* align 8 %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %12, i64** %_4, align 8
  %13 = bitcast i64** %_4 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_10 = select i1 %15, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %16 = bitcast i64** %_4 to %"core::cell::RefCell<alloc::string::String>"**
  %val = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %16, align 8, !nonnull !3, !align !8, !noundef !3
  store i8 0, i8* %_18, align 1
  %17 = bitcast i64** %_16 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %val, %"core::cell::RefCell<alloc::string::String>"** %17, align 8
  %18 = load i64*, i64** %_16, align 8, !nonnull !3, !align !8, !noundef !3
  %19 = bitcast i64* %18 to %"core::cell::RefCell<alloc::string::String>"*
; invoke probe_RSE::_init_::{{closure}}
  invoke void @"_ZN9probe_RSE6_init_28_$u7b$$u7b$closure$u7d$$u7d$17hc7655921b88410f0E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %19)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h61bd8778b8fa1757E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc674 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %22 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %23 = trunc i8 %22 to i1
  ret i1 %23

bb8:                                              ; preds = %bb4
  %24 = getelementptr i8, i8* %1, i64 1
  %25 = bitcast i8* %24 to {}*
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h6209a25851af2fedE"(i64** align 8 %self, %"[closure@./probe_RSE.rs:116:18: 122:10]"* %f) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_16 = alloca i64*, align 8
  %_15 = alloca %"[closure@./probe_RSE.rs:116:18: 122:10]", align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 1, i8* %_18, align 1
  %2 = bitcast i64** %self to i64* (i64*)**
  %_7 = load i64* (i64*)*, i64* (i64*)** %2, align 8, !nonnull !3, !noundef !3
  %3 = bitcast i64** %_8 to {}**
  store {}* null, {}** %3, align 8
  %4 = load i64*, i64** %_8, align 8, !align !8
  %_6 = invoke align 8 i64* %_7(i64* align 8 %4)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %5 = load i8, i8* %_18, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb12

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17hb78672a47d47c489E"(i64* align 8 %_6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = invoke align 8 i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h366739adea08c8e6E"(i64* align 8 %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %12, i64** %_4, align 8
  %13 = bitcast i64** %_4 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_10 = select i1 %15, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %16 = bitcast i64** %_4 to %"core::cell::RefCell<alloc::string::String>"**
  %val = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %16, align 8, !nonnull !3, !align !8, !noundef !3
  store i8 0, i8* %_18, align 1
  %17 = bitcast %"[closure@./probe_RSE.rs:116:18: 122:10]"* %_15 to i8*
  %18 = bitcast %"[closure@./probe_RSE.rs:116:18: 122:10]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false)
  %19 = bitcast i64** %_16 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %val, %"core::cell::RefCell<alloc::string::String>"** %19, align 8
  %20 = load i64*, i64** %_16, align 8, !nonnull !3, !align !8, !noundef !3
  %21 = bitcast i64* %20 to %"core::cell::RefCell<alloc::string::String>"*
; invoke probe_RSE::_probe_func_::{{closure}}
  invoke void @"_ZN9probe_RSE12_probe_func_28_$u7b$$u7b$closure$u7d$$u7d$17h66e1240a7d701e70E"(%"[closure@./probe_RSE.rs:116:18: 122:10]"* %_15, %"core::cell::RefCell<alloc::string::String>"* align 8 %21)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %22 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h61bd8778b8fa1757E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc674 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %24 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %25 = trunc i8 %24 to i1
  ret i1 %25

bb8:                                              ; preds = %bb4
  %26 = getelementptr i8, i8* %1, i64 1
  %27 = bitcast i8* %26 to {}*
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %28 = bitcast { i8*, i32 }* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h72764220386ee6dcE"(i64** align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_16 = alloca i64*, align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 1, i8* %_18, align 1
  %2 = bitcast i64** %self to i64* (i64*)**
  %_7 = load i64* (i64*)*, i64* (i64*)** %2, align 8, !nonnull !3, !noundef !3
  %3 = bitcast i64** %_8 to {}**
  store {}* null, {}** %3, align 8
  %4 = load i64*, i64** %_8, align 8, !align !8
  %_6 = invoke align 8 i64* %_7(i64* align 8 %4)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %5 = load i8, i8* %_18, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb12

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h0edc951b00b43dc2E"(i64* align 8 %_6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = invoke align 8 i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a421a2288584c59E"(i64* align 8 %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %12, i64** %_4, align 8
  %13 = bitcast i64** %_4 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_10 = select i1 %15, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %16 = bitcast i64** %_4 to { i64, i64 }**
  %val = load { i64, i64 }*, { i64, i64 }** %16, align 8, !nonnull !3, !align !8, !noundef !3
  store i8 0, i8* %_18, align 1
  %17 = bitcast i64** %_16 to { i64, i64 }**
  store { i64, i64 }* %val, { i64, i64 }** %17, align 8
  %18 = load i64*, i64** %_16, align 8, !nonnull !3, !align !8, !noundef !3
  %19 = bitcast i64* %18 to { i64, i64 }*
; invoke probe_RSE::_init_::{{closure}}
  invoke void @"_ZN9probe_RSE6_init_28_$u7b$$u7b$closure$u7d$$u7d$17h7a8476bda1794bd5E"({ i64, i64 }* align 8 %19)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h61bd8778b8fa1757E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc674 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %22 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %23 = trunc i8 %22 to i1
  ret i1 %23

bb8:                                              ; preds = %bb4
  %24 = getelementptr i8, i8* %1, i64 1
  %25 = bitcast i8* %24 to {}*
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h87b98d66a3f6dca1E"(i64** align 8 %self, %"[closure@./probe_RSE.rs:97:18: 103:10]"* %f) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_16 = alloca i64*, align 8
  %_15 = alloca %"[closure@./probe_RSE.rs:97:18: 103:10]", align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 1, i8* %_18, align 1
  %2 = bitcast i64** %self to i64* (i64*)**
  %_7 = load i64* (i64*)*, i64* (i64*)** %2, align 8, !nonnull !3, !noundef !3
  %3 = bitcast i64** %_8 to {}**
  store {}* null, {}** %3, align 8
  %4 = load i64*, i64** %_8, align 8, !align !8
  %_6 = invoke align 8 i64* %_7(i64* align 8 %4)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %5 = load i8, i8* %_18, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb12

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17hb78672a47d47c489E"(i64* align 8 %_6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = invoke align 8 i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h366739adea08c8e6E"(i64* align 8 %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %12, i64** %_4, align 8
  %13 = bitcast i64** %_4 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_10 = select i1 %15, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %16 = bitcast i64** %_4 to %"core::cell::RefCell<alloc::string::String>"**
  %val = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %16, align 8, !nonnull !3, !align !8, !noundef !3
  store i8 0, i8* %_18, align 1
  %17 = bitcast %"[closure@./probe_RSE.rs:97:18: 103:10]"* %_15 to i8*
  %18 = bitcast %"[closure@./probe_RSE.rs:97:18: 103:10]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 40, i1 false)
  %19 = bitcast i64** %_16 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %val, %"core::cell::RefCell<alloc::string::String>"** %19, align 8
  %20 = load i64*, i64** %_16, align 8, !nonnull !3, !align !8, !noundef !3
  %21 = bitcast i64* %20 to %"core::cell::RefCell<alloc::string::String>"*
; invoke probe_RSE::_probe_mutex_::{{closure}}
  invoke void @"_ZN9probe_RSE13_probe_mutex_28_$u7b$$u7b$closure$u7d$$u7d$17hd390cecbc402f9c1E"(%"[closure@./probe_RSE.rs:97:18: 103:10]"* %_15, %"core::cell::RefCell<alloc::string::String>"* align 8 %21)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %22 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h61bd8778b8fa1757E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc674 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %24 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %25 = trunc i8 %24 to i1
  ret i1 %25

bb8:                                              ; preds = %bb4
  %26 = getelementptr i8, i8* %1, i64 1
  %27 = bitcast i8* %26 to {}*
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %28 = bitcast { i8*, i32 }* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17ha3ccdf14dd544f2eE"(i64** align 8 %self, %"[closure@./probe_RSE.rs:134:18: 146:10]"* %f) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_16 = alloca i64*, align 8
  %_15 = alloca %"[closure@./probe_RSE.rs:134:18: 146:10]", align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 1, i8* %_18, align 1
  %2 = bitcast i64** %self to i64* (i64*)**
  %_7 = load i64* (i64*)*, i64* (i64*)** %2, align 8, !nonnull !3, !noundef !3
  %3 = bitcast i64** %_8 to {}**
  store {}* null, {}** %3, align 8
  %4 = load i64*, i64** %_8, align 8, !align !8
  %_6 = invoke align 8 i64* %_7(i64* align 8 %4)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %5 = load i8, i8* %_18, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb12

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17hb78672a47d47c489E"(i64* align 8 %_6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = invoke align 8 i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h366739adea08c8e6E"(i64* align 8 %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %12, i64** %_4, align 8
  %13 = bitcast i64** %_4 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_10 = select i1 %15, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %16 = bitcast i64** %_4 to %"core::cell::RefCell<alloc::string::String>"**
  %val = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %16, align 8, !nonnull !3, !align !8, !noundef !3
  store i8 0, i8* %_18, align 1
  %17 = bitcast %"[closure@./probe_RSE.rs:134:18: 146:10]"* %_15 to i8*
  %18 = bitcast %"[closure@./probe_RSE.rs:134:18: 146:10]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false)
  %19 = bitcast i64** %_16 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %val, %"core::cell::RefCell<alloc::string::String>"** %19, align 8
  %20 = load i64*, i64** %_16, align 8, !nonnull !3, !align !8, !noundef !3
  %21 = bitcast i64* %20 to %"core::cell::RefCell<alloc::string::String>"*
; invoke probe_RSE::_probe_spawning_::{{closure}}
  invoke void @"_ZN9probe_RSE16_probe_spawning_28_$u7b$$u7b$closure$u7d$$u7d$17h9001f0b13128967dE"(%"[closure@./probe_RSE.rs:134:18: 146:10]"* %_15, %"core::cell::RefCell<alloc::string::String>"* align 8 %21)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %22 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h61bd8778b8fa1757E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc674 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %24 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %25 = trunc i8 %24 to i1
  ret i1 %25

bb8:                                              ; preds = %bb4
  %26 = getelementptr i8, i8* %1, i64 1
  %27 = bitcast i8* %26 to {}*
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %28 = bitcast { i8*, i32 }* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17ha42f41e08da46c68E"(i64** align 8 %self, %"[closure@./probe_RSE.rs:141:34: 144:18]"* %f) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_16 = alloca i64*, align 8
  %_15 = alloca %"[closure@./probe_RSE.rs:141:34: 144:18]", align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 1, i8* %_18, align 1
  %2 = bitcast i64** %self to i64* (i64*)**
  %_7 = load i64* (i64*)*, i64* (i64*)** %2, align 8, !nonnull !3, !noundef !3
  %3 = bitcast i64** %_8 to {}**
  store {}* null, {}** %3, align 8
  %4 = load i64*, i64** %_8, align 8, !align !8
  %_6 = invoke align 8 i64* %_7(i64* align 8 %4)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %5 = load i8, i8* %_18, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb12

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h0edc951b00b43dc2E"(i64* align 8 %_6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = invoke align 8 i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a421a2288584c59E"(i64* align 8 %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %12, i64** %_4, align 8
  %13 = bitcast i64** %_4 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_10 = select i1 %15, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %16 = bitcast i64** %_4 to { i64, i64 }**
  %val = load { i64, i64 }*, { i64, i64 }** %16, align 8, !nonnull !3, !align !8, !noundef !3
  store i8 0, i8* %_18, align 1
  %17 = bitcast %"[closure@./probe_RSE.rs:141:34: 144:18]"* %_15 to i8*
  %18 = bitcast %"[closure@./probe_RSE.rs:141:34: 144:18]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false)
  %19 = bitcast i64** %_16 to { i64, i64 }**
  store { i64, i64 }* %val, { i64, i64 }** %19, align 8
  %20 = load i64*, i64** %_16, align 8, !nonnull !3, !align !8, !noundef !3
  %21 = bitcast i64* %20 to { i64, i64 }*
; invoke probe_RSE::_probe_spawning_::{{closure}}::{{closure}}::{{closure}}
  invoke void @"_ZN9probe_RSE16_probe_spawning_28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h51e77ad9a7d4b14bE"(%"[closure@./probe_RSE.rs:141:34: 144:18]"* %_15, { i64, i64 }* align 8 %21)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %22 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h61bd8778b8fa1757E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc674 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %24 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %25 = trunc i8 %24 to i1
  ret i1 %25

bb8:                                              ; preds = %bb4
  %26 = getelementptr i8, i8* %1, i64 1
  %27 = bitcast i8* %26 to {}*
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %28 = bitcast { i8*, i32 }* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17ha4f1fb6b53ca5d91E"(i64** align 8 %self, i32* align 4 %f.0, i32* align 4 %f.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_16 = alloca i64*, align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 1, i8* %_18, align 1
  %2 = bitcast i64** %self to i64* (i64*)**
  %_7 = load i64* (i64*)*, i64* (i64*)** %2, align 8, !nonnull !3, !noundef !3
  %3 = bitcast i64** %_8 to {}**
  store {}* null, {}** %3, align 8
  %4 = load i64*, i64** %_8, align 8, !align !8
  %_6 = invoke align 8 i64* %_7(i64* align 8 %4)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %5 = load i8, i8* %_18, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb12

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17hb78672a47d47c489E"(i64* align 8 %_6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = invoke align 8 i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h366739adea08c8e6E"(i64* align 8 %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %12, i64** %_4, align 8
  %13 = bitcast i64** %_4 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_10 = select i1 %15, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %16 = bitcast i64** %_4 to %"core::cell::RefCell<alloc::string::String>"**
  %val = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %16, align 8, !nonnull !3, !align !8, !noundef !3
  store i8 0, i8* %_18, align 1
  %17 = bitcast i64** %_16 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %val, %"core::cell::RefCell<alloc::string::String>"** %17, align 8
  %18 = load i64*, i64** %_16, align 8, !nonnull !3, !align !8, !noundef !3
  %19 = bitcast i64* %18 to %"core::cell::RefCell<alloc::string::String>"*
; invoke probe_RSE::_probe_spawned_::{{closure}}
  invoke void @"_ZN9probe_RSE15_probe_spawned_28_$u7b$$u7b$closure$u7d$$u7d$17h90342812813d831bE"(i32* align 4 %f.0, i32* align 4 %f.1, %"core::cell::RefCell<alloc::string::String>"* align 8 %19)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h61bd8778b8fa1757E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc674 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %22 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %23 = trunc i8 %22 to i1
  ret i1 %23

bb8:                                              ; preds = %bb4
  %24 = getelementptr i8, i8* %1, i64 1
  %25 = bitcast i8* %24 to {}*
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17hfdea2e1f6be24d06E"(i64** align 8 %self, i64* align 8 %f.0, i32* align 4 %f.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_16 = alloca i64*, align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 1, i8* %_18, align 1
  %2 = bitcast i64** %self to i64* (i64*)**
  %_7 = load i64* (i64*)*, i64* (i64*)** %2, align 8, !nonnull !3, !noundef !3
  %3 = bitcast i64** %_8 to {}**
  store {}* null, {}** %3, align 8
  %4 = load i64*, i64** %_8, align 8, !align !8
  %_6 = invoke align 8 i64* %_7(i64* align 8 %4)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %5 = load i8, i8* %_18, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb12

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h0edc951b00b43dc2E"(i64* align 8 %_6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = invoke align 8 i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a421a2288584c59E"(i64* align 8 %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %12, i64** %_4, align 8
  %13 = bitcast i64** %_4 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_10 = select i1 %15, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %16 = bitcast i64** %_4 to { i64, i64 }**
  %val = load { i64, i64 }*, { i64, i64 }** %16, align 8, !nonnull !3, !align !8, !noundef !3
  store i8 0, i8* %_18, align 1
  %17 = bitcast i64** %_16 to { i64, i64 }**
  store { i64, i64 }* %val, { i64, i64 }** %17, align 8
  %18 = load i64*, i64** %_16, align 8, !nonnull !3, !align !8, !noundef !3
  %19 = bitcast i64* %18 to { i64, i64 }*
; invoke probe_RSE::_probe_spawned_::{{closure}}::{{closure}}
  invoke void @"_ZN9probe_RSE15_probe_spawned_28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h8d44ddc251ed47d4E"(i64* align 8 %f.0, i32* align 4 %f.1, { i64, i64 }* align 8 %19)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h61bd8778b8fa1757E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc674 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %22 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %23 = trunc i8 %22 to i1
  ret i1 %23

bb8:                                              ; preds = %bb4
  %24 = getelementptr i8, i8* %1, i64 1
  %25 = bitcast i8* %24 to {}*
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::fast::Key<T>::try_initialize
; Function Attrs: noinline nonlazybind uwtable
define align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h48743a2f6da12994E"(%"std::thread::local::fast::Key<core::cell::RefCell<usize>>"* align 8 %self, i64* align 8 %init) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_12 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %1 = alloca i64*, align 8
  store i8 1, i8* %_12, align 1
; invoke core::mem::needs_drop
  %_5 = invoke zeroext i1 @_ZN4core3mem10needs_drop17h9799f9c602192a91E()
          to label %bb4 unwind label %cleanup

bb14:                                             ; preds = %cleanup
  %2 = load i8, i8* %_12, align 1, !range !2, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb13, label %bb11

cleanup:                                          ; preds = %bb6, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb14

bb4:                                              ; preds = %start
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %bb4
; invoke std::thread::local::fast::Key<T>::try_register_dtor
  %_6 = invoke zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17h2b7b301ab4a5b7d3E"(%"std::thread::local::fast::Key<core::cell::RefCell<usize>>"* align 8 %self)
          to label %bb5 unwind label %cleanup

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb5, %bb1
  %9 = load i8, i8* %_3, align 1, !range !2, !noundef !3
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb8

bb5:                                              ; preds = %bb2
  %11 = zext i1 %_6 to i8
  store i8 %11, i8* %_3, align 1
  br label %bb3

bb8:                                              ; preds = %bb3
  %12 = bitcast i64** %1 to {}**
  store {}* null, {}** %12, align 8
  br label %bb9

bb6:                                              ; preds = %bb3
  %_10 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<usize>>"* %self to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<usize>>"*
  store i8 0, i8* %_12, align 1
; invoke std::thread::local::lazy::LazyKeyInner<T>::initialize
  %_9 = invoke align 8 { i64, i64 }* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17hb2c6fd3d7391716fE"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<usize>>"* align 8 %_10, i64* align 8 %init)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %13 = bitcast i64** %1 to { i64, i64 }**
  store { i64, i64 }* %_9, { i64, i64 }** %13, align 8
  br label %bb9

bb11:                                             ; preds = %bb13, %bb14
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb13:                                             ; preds = %bb14
  br label %bb11

bb9:                                              ; preds = %bb8, %bb7
  %20 = load i8, i8* %_12, align 1, !range !2, !noundef !3
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb12, label %bb10

bb10:                                             ; preds = %bb12, %bb9
  %22 = load i64*, i64** %1, align 8, !align !8
  ret i64* %22

bb12:                                             ; preds = %bb9
  br label %bb10
}

; std::thread::local::fast::Key<T>::try_initialize
; Function Attrs: noinline nonlazybind uwtable
define align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h4a2cde97d67154d0E"(%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* align 8 %self, i64* align 8 %init) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_12 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %1 = alloca i64*, align 8
  store i8 1, i8* %_12, align 1
; invoke core::mem::needs_drop
  %_5 = invoke zeroext i1 @_ZN4core3mem10needs_drop17he57bc6bfeb2453fcE()
          to label %bb4 unwind label %cleanup

bb14:                                             ; preds = %cleanup
  %2 = load i8, i8* %_12, align 1, !range !2, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb13, label %bb11

cleanup:                                          ; preds = %bb6, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb14

bb4:                                              ; preds = %start
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %bb4
; invoke std::thread::local::fast::Key<T>::try_register_dtor
  %_6 = invoke zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17h25e65c848b718242E"(%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* align 8 %self)
          to label %bb5 unwind label %cleanup

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb5, %bb1
  %9 = load i8, i8* %_3, align 1, !range !2, !noundef !3
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb8

bb5:                                              ; preds = %bb2
  %11 = zext i1 %_6 to i8
  store i8 %11, i8* %_3, align 1
  br label %bb3

bb8:                                              ; preds = %bb3
  %12 = bitcast i64** %1 to {}**
  store {}* null, {}** %12, align 8
  br label %bb9

bb6:                                              ; preds = %bb3
  %_10 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %self to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"*
  store i8 0, i8* %_12, align 1
; invoke std::thread::local::lazy::LazyKeyInner<T>::initialize
  %_9 = invoke align 8 %"core::cell::RefCell<alloc::string::String>"* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17h16140c7c37eac8faE"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* align 8 %_10, i64* align 8 %init)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %13 = bitcast i64** %1 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %_9, %"core::cell::RefCell<alloc::string::String>"** %13, align 8
  br label %bb9

bb11:                                             ; preds = %bb13, %bb14
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb13:                                             ; preds = %bb14
  br label %bb11

bb9:                                              ; preds = %bb8, %bb7
  %20 = load i8, i8* %_12, align 1, !range !2, !noundef !3
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb12, label %bb10

bb10:                                             ; preds = %bb12, %bb9
  %22 = load i64*, i64** %1, align 8, !align !8
  ret i64* %22

bb12:                                             ; preds = %bb9
  br label %bb10
}

; std::thread::local::fast::Key<T>::try_initialize
; Function Attrs: noinline nonlazybind uwtable
define align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h5d4f3396eb5909c4E"(%"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* align 8 %self, i64* align 8 %init) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_12 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %1 = alloca i64*, align 8
  store i8 1, i8* %_12, align 1
; invoke core::mem::needs_drop
  %_5 = invoke zeroext i1 @_ZN4core3mem10needs_drop17h86129beae735a375E()
          to label %bb4 unwind label %cleanup

bb14:                                             ; preds = %cleanup
  %2 = load i8, i8* %_12, align 1, !range !2, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb13, label %bb11

cleanup:                                          ; preds = %bb6, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb14

bb4:                                              ; preds = %start
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %bb4
; invoke std::thread::local::fast::Key<T>::try_register_dtor
  %_6 = invoke zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17h948540736d249e07E"(%"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* align 8 %self)
          to label %bb5 unwind label %cleanup

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb5, %bb1
  %9 = load i8, i8* %_3, align 1, !range !2, !noundef !3
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb8

bb5:                                              ; preds = %bb2
  %11 = zext i1 %_6 to i8
  store i8 %11, i8* %_3, align 1
  br label %bb3

bb8:                                              ; preds = %bb3
  %12 = bitcast i64** %1 to {}**
  store {}* null, {}** %12, align 8
  br label %bb9

bb6:                                              ; preds = %bb3
  %_10 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* %self to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"*
  store i8 0, i8* %_12, align 1
; invoke std::thread::local::lazy::LazyKeyInner<T>::initialize
  %_9 = invoke align 8 { i64, i32 }* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17h3b181cc6e99a3ca3E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* align 8 %_10, i64* align 8 %init)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %13 = bitcast i64** %1 to { i64, i32 }**
  store { i64, i32 }* %_9, { i64, i32 }** %13, align 8
  br label %bb9

bb11:                                             ; preds = %bb13, %bb14
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb13:                                             ; preds = %bb14
  br label %bb11

bb9:                                              ; preds = %bb8, %bb7
  %20 = load i8, i8* %_12, align 1, !range !2, !noundef !3
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb12, label %bb10

bb10:                                             ; preds = %bb12, %bb9
  %22 = load i64*, i64** %1, align 8, !align !8
  ret i64* %22

bb12:                                             ; preds = %bb9
  br label %bb10
}

; std::thread::local::fast::Key<T>::try_register_dtor
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17h25e65c848b718242E"(%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* align 8 %self) unnamed_addr #1 {
start:
  %_12 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_3 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>", %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %self, i32 0, i32 1
; call core::cell::Cell<T>::get
  %1 = call i8 @"_ZN4core4cell13Cell$LT$T$GT$3get17hb648ee4e7ebd69cfE"(i8* align 1 %_3), !range !15
  store i8 %1, i8* %_2, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load i8, i8* %_2, align 1, !range !15, !noundef !3
  %_4 = zext i8 %2 to i64
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb7
    i64 2, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %_6 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %self to i8*
; call std::sys::unix::thread_local_dtor::register_dtor
  call void @_ZN3std3sys4unix17thread_local_dtor13register_dtor17h0b2d131ff119ed65E(i8* %_6, void (i8*)* @_ZN3std6thread5local4fast13destroy_value17h59ec7bf05a80ee8dE)
  br label %bb5

bb7:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb8

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7, %bb2
  %3 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  %_11 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>", %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %self, i32 0, i32 1
  store i8 1, i8* %_12, align 1
  %5 = load i8, i8* %_12, align 1, !range !15, !noundef !3
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h3dbab661062f6228E"(i8* align 1 %_11, i8 %5)
  br label %bb6

bb6:                                              ; preds = %bb5
  store i8 1, i8* %0, align 1
  br label %bb8
}

; std::thread::local::fast::Key<T>::try_register_dtor
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17h2b7b301ab4a5b7d3E"(%"std::thread::local::fast::Key<core::cell::RefCell<usize>>"* align 8 %self) unnamed_addr #1 {
start:
  %_12 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_3 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::RefCell<usize>>", %"std::thread::local::fast::Key<core::cell::RefCell<usize>>"* %self, i32 0, i32 1
; call core::cell::Cell<T>::get
  %1 = call i8 @"_ZN4core4cell13Cell$LT$T$GT$3get17hb648ee4e7ebd69cfE"(i8* align 1 %_3), !range !15
  store i8 %1, i8* %_2, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load i8, i8* %_2, align 1, !range !15, !noundef !3
  %_4 = zext i8 %2 to i64
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb7
    i64 2, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %_6 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<usize>>"* %self to i8*
; call std::sys::unix::thread_local_dtor::register_dtor
  call void @_ZN3std3sys4unix17thread_local_dtor13register_dtor17h0b2d131ff119ed65E(i8* %_6, void (i8*)* @_ZN3std6thread5local4fast13destroy_value17h1f37fa90ba197792E)
  br label %bb5

bb7:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb8

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7, %bb2
  %3 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  %_11 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::RefCell<usize>>", %"std::thread::local::fast::Key<core::cell::RefCell<usize>>"* %self, i32 0, i32 1
  store i8 1, i8* %_12, align 1
  %5 = load i8, i8* %_12, align 1, !range !15, !noundef !3
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h3dbab661062f6228E"(i8* align 1 %_11, i8 %5)
  br label %bb6

bb6:                                              ; preds = %bb5
  store i8 1, i8* %0, align 1
  br label %bb8
}

; std::thread::local::fast::Key<T>::try_register_dtor
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17h948540736d249e07E"(%"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* align 8 %self) unnamed_addr #1 {
start:
  %_12 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_3 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::RefCell<i32>>", %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* %self, i32 0, i32 1
; call core::cell::Cell<T>::get
  %1 = call i8 @"_ZN4core4cell13Cell$LT$T$GT$3get17hb648ee4e7ebd69cfE"(i8* align 1 %_3), !range !15
  store i8 %1, i8* %_2, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load i8, i8* %_2, align 1, !range !15, !noundef !3
  %_4 = zext i8 %2 to i64
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb7
    i64 2, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %_6 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* %self to i8*
; call std::sys::unix::thread_local_dtor::register_dtor
  call void @_ZN3std3sys4unix17thread_local_dtor13register_dtor17h0b2d131ff119ed65E(i8* %_6, void (i8*)* @_ZN3std6thread5local4fast13destroy_value17h652a69e857559765E)
  br label %bb5

bb7:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb8

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7, %bb2
  %3 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  %_11 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::RefCell<i32>>", %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* %self, i32 0, i32 1
  store i8 1, i8* %_12, align 1
  %5 = load i8, i8* %_12, align 1, !range !15, !noundef !3
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h3dbab661062f6228E"(i8* align 1 %_11, i8 %5)
  br label %bb6

bb6:                                              ; preds = %bb5
  store i8 1, i8* %0, align 1
  br label %bb8
}

; std::thread::local::fast::Key<T>::get
; Function Attrs: nonlazybind uwtable
define align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17h1a5e8fb09b683633E"(%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* align 8 %self, i64* align 8 %init) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_3 = alloca i64*, align 8
  %1 = alloca i64*, align 8
  store i8 1, i8* %_10, align 1
  %_4 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %self to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"*
; invoke std::thread::local::lazy::LazyKeyInner<T>::get
  %2 = invoke align 8 i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17hcac36fa2b261e638E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* align 8 %_4)
          to label %bb1 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %3 = load i8, i8* %_10, align 1, !range !2, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb10, label %bb8

cleanup:                                          ; preds = %bb2, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb11

bb1:                                              ; preds = %start
  store i64* %2, i64** %_3, align 8
  %10 = bitcast i64** %_3 to {}**
  %11 = load {}*, {}** %10, align 8
  %12 = icmp eq {}* %11, null
  %_5 = select i1 %12, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_10, align 1
; invoke std::thread::local::fast::Key<T>::try_initialize
  %13 = invoke align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h4a2cde97d67154d0E"(%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* align 8 %self, i64* align 8 %init)
          to label %bb5 unwind label %cleanup

bb4:                                              ; preds = %bb1
  %14 = bitcast i64** %_3 to %"core::cell::RefCell<alloc::string::String>"**
  %val = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %14, align 8, !nonnull !3, !align !8, !noundef !3
  %15 = bitcast i64** %1 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %val, %"core::cell::RefCell<alloc::string::String>"** %15, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %16 = load i8, i8* %_10, align 1, !range !2, !noundef !3
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb9, label %bb7

bb5:                                              ; preds = %bb2
  store i64* %13, i64** %1, align 8
  br label %bb6

bb8:                                              ; preds = %bb10, %bb11
  %18 = bitcast { i8*, i32 }* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23

bb10:                                             ; preds = %bb11
  br label %bb8

bb7:                                              ; preds = %bb9, %bb6
  %24 = load i64*, i64** %1, align 8, !align !8
  ret i64* %24

bb9:                                              ; preds = %bb6
  br label %bb7
}

; std::thread::local::fast::Key<T>::get
; Function Attrs: nonlazybind uwtable
define align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17h1d91bade4be6e03eE"(%"std::thread::local::fast::Key<core::cell::RefCell<usize>>"* align 8 %self, i64* align 8 %init) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_3 = alloca i64*, align 8
  %1 = alloca i64*, align 8
  store i8 1, i8* %_10, align 1
  %_4 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<usize>>"* %self to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<usize>>"*
; invoke std::thread::local::lazy::LazyKeyInner<T>::get
  %2 = invoke align 8 i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17h7526c92c2839df91E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<usize>>"* align 8 %_4)
          to label %bb1 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %3 = load i8, i8* %_10, align 1, !range !2, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb10, label %bb8

cleanup:                                          ; preds = %bb2, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb11

bb1:                                              ; preds = %start
  store i64* %2, i64** %_3, align 8
  %10 = bitcast i64** %_3 to {}**
  %11 = load {}*, {}** %10, align 8
  %12 = icmp eq {}* %11, null
  %_5 = select i1 %12, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_10, align 1
; invoke std::thread::local::fast::Key<T>::try_initialize
  %13 = invoke align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h48743a2f6da12994E"(%"std::thread::local::fast::Key<core::cell::RefCell<usize>>"* align 8 %self, i64* align 8 %init)
          to label %bb5 unwind label %cleanup

bb4:                                              ; preds = %bb1
  %14 = bitcast i64** %_3 to { i64, i64 }**
  %val = load { i64, i64 }*, { i64, i64 }** %14, align 8, !nonnull !3, !align !8, !noundef !3
  %15 = bitcast i64** %1 to { i64, i64 }**
  store { i64, i64 }* %val, { i64, i64 }** %15, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %16 = load i8, i8* %_10, align 1, !range !2, !noundef !3
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb9, label %bb7

bb5:                                              ; preds = %bb2
  store i64* %13, i64** %1, align 8
  br label %bb6

bb8:                                              ; preds = %bb10, %bb11
  %18 = bitcast { i8*, i32 }* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23

bb10:                                             ; preds = %bb11
  br label %bb8

bb7:                                              ; preds = %bb9, %bb6
  %24 = load i64*, i64** %1, align 8, !align !8
  ret i64* %24

bb9:                                              ; preds = %bb6
  br label %bb7
}

; std::thread::local::fast::Key<T>::get
; Function Attrs: nonlazybind uwtable
define align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17h418d86ac29da7ddfE"(%"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* align 8 %self, i64* align 8 %init) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_3 = alloca i64*, align 8
  %1 = alloca i64*, align 8
  store i8 1, i8* %_10, align 1
  %_4 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* %self to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"*
; invoke std::thread::local::lazy::LazyKeyInner<T>::get
  %2 = invoke align 8 i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17h7b3ea7cf7eeb6db6E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* align 8 %_4)
          to label %bb1 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %3 = load i8, i8* %_10, align 1, !range !2, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb10, label %bb8

cleanup:                                          ; preds = %bb2, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb11

bb1:                                              ; preds = %start
  store i64* %2, i64** %_3, align 8
  %10 = bitcast i64** %_3 to {}**
  %11 = load {}*, {}** %10, align 8
  %12 = icmp eq {}* %11, null
  %_5 = select i1 %12, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_10, align 1
; invoke std::thread::local::fast::Key<T>::try_initialize
  %13 = invoke align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h5d4f3396eb5909c4E"(%"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* align 8 %self, i64* align 8 %init)
          to label %bb5 unwind label %cleanup

bb4:                                              ; preds = %bb1
  %14 = bitcast i64** %_3 to { i64, i32 }**
  %val = load { i64, i32 }*, { i64, i32 }** %14, align 8, !nonnull !3, !align !8, !noundef !3
  %15 = bitcast i64** %1 to { i64, i32 }**
  store { i64, i32 }* %val, { i64, i32 }** %15, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %16 = load i8, i8* %_10, align 1, !range !2, !noundef !3
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb9, label %bb7

bb5:                                              ; preds = %bb2
  store i64* %13, i64** %1, align 8
  br label %bb6

bb8:                                              ; preds = %bb10, %bb11
  %18 = bitcast { i8*, i32 }* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23

bb10:                                             ; preds = %bb11
  br label %bb8

bb7:                                              ; preds = %bb9, %bb6
  %24 = load i64*, i64** %1, align 8, !align !8
  ret i64* %24

bb9:                                              ; preds = %bb6
  br label %bb7
}

; std::thread::local::fast::destroy_value
; Function Attrs: nonlazybind uwtable
define void @_ZN3std6thread5local4fast13destroy_value17h1f37fa90ba197792E(i8* %ptr) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca %"core::option::Option<core::cell::RefCell<usize>>", align 8
  %_8 = alloca i8, align 1
  %value = alloca %"core::option::Option<core::cell::RefCell<usize>>", align 8
  %ptr1 = bitcast i8* %ptr to %"std::thread::local::fast::Key<core::cell::RefCell<usize>>"*
  %_5 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<usize>>"* %ptr1 to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<usize>>"*
; invoke std::thread::local::lazy::LazyKeyInner<T>::take
  invoke void @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17he1f044cdaeb17f98E"(%"core::option::Option<core::cell::RefCell<usize>>"* sret(%"core::option::Option<core::cell::RefCell<usize>>") %value, %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<usize>>"* align 8 %_5)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

cleanup:                                          ; preds = %bb2, %bb1, %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_7 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::RefCell<usize>>", %"std::thread::local::fast::Key<core::cell::RefCell<usize>>"* %ptr1, i32 0, i32 1
  store i8 2, i8* %_8, align 1
  %6 = load i8, i8* %_8, align 1, !range !15, !noundef !3
; invoke core::cell::Cell<T>::set
  invoke void @"_ZN4core4cell13Cell$LT$T$GT$3set17h3dbab661062f6228E"(i8* align 1 %_7, i8 %6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %7 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %_10 to i8*
  %8 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
; invoke core::mem::drop
  invoke void @_ZN4core3mem4drop17h64f6117a21bd728aE(%"core::option::Option<core::cell::RefCell<usize>>"* %_10)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  ret void
}

; std::thread::local::fast::destroy_value
; Function Attrs: nonlazybind uwtable
define void @_ZN3std6thread5local4fast13destroy_value17h59ec7bf05a80ee8dE(i8* %ptr) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca %"core::option::Option<core::cell::RefCell<alloc::string::String>>", align 8
  %_8 = alloca i8, align 1
  %value = alloca %"core::option::Option<core::cell::RefCell<alloc::string::String>>", align 8
  %ptr1 = bitcast i8* %ptr to %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"*
  %_5 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %ptr1 to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"*
; invoke std::thread::local::lazy::LazyKeyInner<T>::take
  invoke void @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17h2965030d708157a7E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") %value, %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* align 8 %_5)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

cleanup:                                          ; preds = %bb2, %bb1, %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_7 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>", %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %ptr1, i32 0, i32 1
  store i8 2, i8* %_8, align 1
  %6 = load i8, i8* %_8, align 1, !range !15, !noundef !3
; invoke core::cell::Cell<T>::set
  invoke void @"_ZN4core4cell13Cell$LT$T$GT$3set17h3dbab661062f6228E"(i8* align 1 %_7, i8 %6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %7 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_10 to i8*
  %8 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 40, i1 false)
; invoke core::mem::drop
  invoke void @_ZN4core3mem4drop17h48cc06860fc55691E(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_10)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  ret void
}

; std::thread::local::fast::destroy_value
; Function Attrs: nonlazybind uwtable
define void @_ZN3std6thread5local4fast13destroy_value17h652a69e857559765E(i8* %ptr) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca %"core::option::Option<core::cell::RefCell<i32>>", align 8
  %_8 = alloca i8, align 1
  %value = alloca %"core::option::Option<core::cell::RefCell<i32>>", align 8
  %ptr1 = bitcast i8* %ptr to %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"*
  %_5 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* %ptr1 to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"*
; invoke std::thread::local::lazy::LazyKeyInner<T>::take
  invoke void @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17h9eb56d3bb49c2574E"(%"core::option::Option<core::cell::RefCell<i32>>"* sret(%"core::option::Option<core::cell::RefCell<i32>>") %value, %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* align 8 %_5)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

cleanup:                                          ; preds = %bb2, %bb1, %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_7 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::RefCell<i32>>", %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* %ptr1, i32 0, i32 1
  store i8 2, i8* %_8, align 1
  %6 = load i8, i8* %_8, align 1, !range !15, !noundef !3
; invoke core::cell::Cell<T>::set
  invoke void @"_ZN4core4cell13Cell$LT$T$GT$3set17h3dbab661062f6228E"(i8* align 1 %_7, i8 %6)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %7 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_10 to i8*
  %8 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
; invoke core::mem::drop
  invoke void @_ZN4core3mem4drop17hc3a4937046dc6884E(%"core::option::Option<core::cell::RefCell<i32>>"* %_10)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  ret void
}

; std::thread::local::lazy::LazyKeyInner<T>::initialize
; Function Attrs: nonlazybind uwtable
define align 8 %"core::cell::RefCell<alloc::string::String>"* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17h16140c7c37eac8faE"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* align 8 %self, i64* align 8 %init) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_15 = alloca i8, align 1
  %_12 = alloca %"core::cell::RefCell<alloc::string::String>", align 8
  %_11 = alloca %"core::option::Option<core::cell::RefCell<alloc::string::String>>", align 8
  %_8 = alloca %"core::option::Option<core::cell::RefCell<alloc::string::String>>", align 8
  %value = alloca %"core::cell::RefCell<alloc::string::String>", align 8
; call probe_RSE::TID::__getit::{{closure}}
  call void @"_ZN9probe_RSE3TID7__getit28_$u7b$$u7b$closure$u7d$$u7d$17he557099d5b4fb8abE"(%"core::cell::RefCell<alloc::string::String>"* sret(%"core::cell::RefCell<alloc::string::String>") %value, i64* align 8 %init)
  br label %bb1

bb1:                                              ; preds = %start
  store i8 1, i8* %_15, align 1
  %_7 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_7 to %"core::option::Option<core::cell::RefCell<alloc::string::String>>"*
  br label %bb2

bb10:                                             ; preds = %cleanup
  %1 = load i8, i8* %_15, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb9, label %bb8

cleanup:                                          ; preds = %bb5, %bb3, %bb2
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_15, align 1
  %8 = bitcast %"core::cell::RefCell<alloc::string::String>"* %_12 to i8*
  %9 = bitcast %"core::cell::RefCell<alloc::string::String>"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  %10 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_11 to %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"*
  %11 = getelementptr inbounds %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some", %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"* %10, i32 0, i32 1
  %12 = bitcast %"core::cell::RefCell<alloc::string::String>"* %11 to i8*
  %13 = bitcast %"core::cell::RefCell<alloc::string::String>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false)
  %14 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_11 to i64*
  store i64 1, i64* %14, align 8
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17h5b6e4439db812dbeE(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") %_8, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* align 8 %_2.i, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_11)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::option::Option<core::cell::RefCell<alloc::string::String>>>
  invoke void @"_ZN4core3ptr97drop_in_place$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17h5681b90f8c3e3136E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_8)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %15 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_2.i to i64*
  %_13 = load i64, i64* %15, align 8, !range !7, !noundef !3
  switch i64 %_13, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
; invoke core::hint::unreachable_unchecked
  invoke void @_ZN4core4hint21unreachable_unchecked17he36bd9722d6f5c7dE() #16
          to label %unreachable unwind label %cleanup

bb7:                                              ; preds = %bb4
  %16 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_2.i to %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"*
  %x = getelementptr inbounds %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some", %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"* %16, i32 0, i32 1
  ret %"core::cell::RefCell<alloc::string::String>"* %x

unreachable:                                      ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb9, %bb10
  %17 = bitcast { i8*, i32 }* %0 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22

bb9:                                              ; preds = %bb10
; invoke core::ptr::drop_in_place<core::cell::RefCell<alloc::string::String>>
  invoke void @"_ZN4core3ptr69drop_in_place$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$17h3668d8037f1a408fE"(%"core::cell::RefCell<alloc::string::String>"* %value) #17
          to label %bb8 unwind label %abort

abort:                                            ; preds = %bb9
  %23 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable
}

; std::thread::local::lazy::LazyKeyInner<T>::initialize
; Function Attrs: nonlazybind uwtable
define align 8 { i64, i32 }* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17h3b181cc6e99a3ca3E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* align 8 %self, i64* align 8 %init) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_15 = alloca i8, align 1
  %_11 = alloca %"core::option::Option<core::cell::RefCell<i32>>", align 8
  %_8 = alloca %"core::option::Option<core::cell::RefCell<i32>>", align 8
; call probe_RSE::CHILD_ID::__getit::{{closure}}
  %1 = call { i64, i32 } @"_ZN9probe_RSE8CHILD_ID7__getit28_$u7b$$u7b$closure$u7d$$u7d$17hf4d91aa70291960dE"(i64* align 8 %init)
  %value.0 = extractvalue { i64, i32 } %1, 0
  %value.1 = extractvalue { i64, i32 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  store i8 1, i8* %_15, align 1
  %_7 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>"* %_7 to %"core::option::Option<core::cell::RefCell<i32>>"*
  br label %bb2

bb10:                                             ; preds = %cleanup
  %2 = load i8, i8* %_15, align 1, !range !2, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb9, label %bb8

cleanup:                                          ; preds = %bb5, %bb2
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_15, align 1
  %9 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_11 to %"core::option::Option<core::cell::RefCell<i32>>::Some"*
  %10 = getelementptr inbounds %"core::option::Option<core::cell::RefCell<i32>>::Some", %"core::option::Option<core::cell::RefCell<i32>>::Some"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %10, i32 0, i32 0
  store i64 %value.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %10, i32 0, i32 1
  store i32 %value.1, i32* %12, align 8
  %13 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_11 to i64*
  store i64 1, i64* %13, align 8
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17hf475b08506f3ee60E(%"core::option::Option<core::cell::RefCell<i32>>"* sret(%"core::option::Option<core::cell::RefCell<i32>>") %_8, %"core::option::Option<core::cell::RefCell<i32>>"* align 8 %_2.i, %"core::option::Option<core::cell::RefCell<i32>>"* %_11)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %14 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_2.i to i64*
  %_13 = load i64, i64* %14, align 8, !range !7, !noundef !3
  switch i64 %_13, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
; invoke core::hint::unreachable_unchecked
  invoke void @_ZN4core4hint21unreachable_unchecked17he36bd9722d6f5c7dE() #16
          to label %unreachable unwind label %cleanup

bb7:                                              ; preds = %bb4
  %15 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_2.i to %"core::option::Option<core::cell::RefCell<i32>>::Some"*
  %x = getelementptr inbounds %"core::option::Option<core::cell::RefCell<i32>>::Some", %"core::option::Option<core::cell::RefCell<i32>>::Some"* %15, i32 0, i32 1
  ret { i64, i32 }* %x

unreachable:                                      ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb9, %bb10
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb9:                                              ; preds = %bb10
  br label %bb8
}

; std::thread::local::lazy::LazyKeyInner<T>::initialize
; Function Attrs: nonlazybind uwtable
define align 8 { i64, i64 }* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17hb2c6fd3d7391716fE"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<usize>>"* align 8 %self, i64* align 8 %init) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_15 = alloca i8, align 1
  %_11 = alloca %"core::option::Option<core::cell::RefCell<usize>>", align 8
  %_8 = alloca %"core::option::Option<core::cell::RefCell<usize>>", align 8
; call probe_RSE::EXE_NODE_ID::__getit::{{closure}}
  %1 = call { i64, i64 } @"_ZN9probe_RSE11EXE_NODE_ID7__getit28_$u7b$$u7b$closure$u7d$$u7d$17h6924ae22c5267a72E"(i64* align 8 %init)
  %value.0 = extractvalue { i64, i64 } %1, 0
  %value.1 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  store i8 1, i8* %_15, align 1
  %_7 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<usize>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<usize>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<usize>>>"* %_7 to %"core::option::Option<core::cell::RefCell<usize>>"*
  br label %bb2

bb10:                                             ; preds = %cleanup
  %2 = load i8, i8* %_15, align 1, !range !2, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb9, label %bb8

cleanup:                                          ; preds = %bb5, %bb2
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_15, align 1
  %9 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %_11 to %"core::option::Option<core::cell::RefCell<usize>>::Some"*
  %10 = getelementptr inbounds %"core::option::Option<core::cell::RefCell<usize>>::Some", %"core::option::Option<core::cell::RefCell<usize>>::Some"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  store i64 %value.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  store i64 %value.1, i64* %12, align 8
  %13 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %_11 to i64*
  store i64 1, i64* %13, align 8
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17h90f136330fa652cdE(%"core::option::Option<core::cell::RefCell<usize>>"* sret(%"core::option::Option<core::cell::RefCell<usize>>") %_8, %"core::option::Option<core::cell::RefCell<usize>>"* align 8 %_2.i, %"core::option::Option<core::cell::RefCell<usize>>"* %_11)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %14 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %_2.i to i64*
  %_13 = load i64, i64* %14, align 8, !range !7, !noundef !3
  switch i64 %_13, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
; invoke core::hint::unreachable_unchecked
  invoke void @_ZN4core4hint21unreachable_unchecked17he36bd9722d6f5c7dE() #16
          to label %unreachable unwind label %cleanup

bb7:                                              ; preds = %bb4
  %15 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %_2.i to %"core::option::Option<core::cell::RefCell<usize>>::Some"*
  %x = getelementptr inbounds %"core::option::Option<core::cell::RefCell<usize>>::Some", %"core::option::Option<core::cell::RefCell<usize>>::Some"* %15, i32 0, i32 1
  ret { i64, i64 }* %x

unreachable:                                      ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb9, %bb10
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb9:                                              ; preds = %bb10
  br label %bb8
}

; std::thread::local::lazy::LazyKeyInner<T>::get
; Function Attrs: nonlazybind uwtable
define align 8 i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17h7526c92c2839df91E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<usize>>"* align 8 %self) unnamed_addr #1 {
start:
  %_4 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<usize>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<usize>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<usize>>>"* %_4 to %"core::option::Option<core::cell::RefCell<usize>>"*
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::as_ref
  %0 = call align 8 i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h3d25ef5b50de2317E"(%"core::option::Option<core::cell::RefCell<usize>>"* align 8 %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; std::thread::local::lazy::LazyKeyInner<T>::get
; Function Attrs: nonlazybind uwtable
define align 8 i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17h7b3ea7cf7eeb6db6E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* align 8 %self) unnamed_addr #1 {
start:
  %_4 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>"* %_4 to %"core::option::Option<core::cell::RefCell<i32>>"*
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::as_ref
  %0 = call align 8 i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h1b66484db842b1a2E"(%"core::option::Option<core::cell::RefCell<i32>>"* align 8 %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; std::thread::local::lazy::LazyKeyInner<T>::get
; Function Attrs: nonlazybind uwtable
define align 8 i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17hcac36fa2b261e638E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* align 8 %self) unnamed_addr #1 {
start:
  %_4 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_4 to %"core::option::Option<core::cell::RefCell<alloc::string::String>>"*
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::as_ref
  %0 = call align 8 i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h64962f1ba5da94d3E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* align 8 %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; std::thread::local::lazy::LazyKeyInner<T>::take
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17h2965030d708157a7E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") %0, %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* align 8 %self) unnamed_addr #1 {
start:
  %_4 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_4 to %"core::option::Option<core::cell::RefCell<alloc::string::String>>"*
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::take
  call void @"_ZN4core6option15Option$LT$T$GT$4take17h33d8518500dca0c8E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") %0, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* align 8 %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::lazy::LazyKeyInner<T>::take
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17h9eb56d3bb49c2574E"(%"core::option::Option<core::cell::RefCell<i32>>"* sret(%"core::option::Option<core::cell::RefCell<i32>>") %0, %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* align 8 %self) unnamed_addr #1 {
start:
  %_4 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>"* %_4 to %"core::option::Option<core::cell::RefCell<i32>>"*
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::take
  call void @"_ZN4core6option15Option$LT$T$GT$4take17h5ab29685d261a13eE"(%"core::option::Option<core::cell::RefCell<i32>>"* sret(%"core::option::Option<core::cell::RefCell<i32>>") %0, %"core::option::Option<core::cell::RefCell<i32>>"* align 8 %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::lazy::LazyKeyInner<T>::take
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17he1f044cdaeb17f98E"(%"core::option::Option<core::cell::RefCell<usize>>"* sret(%"core::option::Option<core::cell::RefCell<usize>>") %0, %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<usize>>"* align 8 %self) unnamed_addr #1 {
start:
  %_4 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<usize>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<usize>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<usize>>>"* %_4 to %"core::option::Option<core::cell::RefCell<usize>>"*
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::take
  call void @"_ZN4core6option15Option$LT$T$GT$4take17hf25ba049743cd2d5E"(%"core::option::Option<core::cell::RefCell<usize>>"* sret(%"core::option::Option<core::cell::RefCell<usize>>") %0, %"core::option::Option<core::cell::RefCell<usize>>"* align 8 %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::panicking
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std6thread9panicking17h2074bddaa1d59810E() unnamed_addr #0 {
start:
; call std::panicking::panicking
  %0 = call zeroext i1 @_ZN3std9panicking9panicking17h94f7b01960ab9645E()
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; std::panicking::panic_count::count_is_zero
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std9panicking11panic_count13count_is_zero17h5808ae5f659a0d87E() unnamed_addr #0 {
start:
  %_5 = alloca i8, align 1
  %0 = alloca i8, align 1
  store i8 0, i8* %_5, align 1
  %1 = load i8, i8* %_5, align 1, !range !12, !noundef !3
; call core::sync::atomic::AtomicUsize::load
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize4load17ha2af4492530a1ceaE(%"core::sync::atomic::AtomicUsize"* align 8 @_ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17hbdafec5367c29702E, i8 %1)
  br label %bb1

bb1:                                              ; preds = %start
  %_1 = and i64 %_2, 9223372036854775807
  %2 = icmp eq i64 %_1, 0
  br i1 %2, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb4

bb3:                                              ; preds = %bb1
; call std::panicking::panic_count::is_zero_slow_path
  %3 = call zeroext i1 @_ZN3std9panicking11panic_count17is_zero_slow_path17h0c9abb9b450a53d6E()
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %5 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; std::panicking::panicking
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std9panicking9panicking17h94f7b01960ab9645E() unnamed_addr #0 {
start:
; call std::panicking::panic_count::count_is_zero
  %_1 = call zeroext i1 @_ZN3std9panicking11panic_count13count_is_zero17h5808ae5f659a0d87E()
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_1, true
  ret i1 %0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h42569c91494d3767E"({ i64*, i64* }** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 {
start:
  %_6 = load { i64*, i64* }*, { i64*, i64* }** %self, align 8, !nonnull !3, !align !8, !noundef !3
; call <core::cell::Ref<T> as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN63_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17hcce0fc3ca130ba4cE"({ i64*, i64* }* align 8 %_6, %"core::fmt::Formatter"* align 8 %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h747177dc124c5187E"(%_ProbeNode** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 {
start:
  %_6 = load %_ProbeNode*, %_ProbeNode** %self, align 8, !nonnull !3, !align !8, !noundef !3
; call <probe_RSE::_ProbeNode as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN60_$LT$probe_RSE.._ProbeNode$u20$as$u20$core..fmt..Display$GT$3fmt17hbc755235d42ae378E"(%_ProbeNode* align 8 %_6, %"core::fmt::Formatter"* align 8 %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hce23f12e6046ea36E"({ [0 x i8]*, i64 }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !3, !align !4, !noundef !3
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_6.1 = load i64, i64* %1, align 8
; call <str as core::fmt::Display>::fmt
  %2 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h9abc2910b16df253E"([0 x i8]* align 1 %_6.0, i64 %_6.1, %"core::fmt::Formatter"* align 8 %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <T as alloc::borrow::ToOwned>::to_owned
; Function Attrs: nonlazybind uwtable
define void @"_ZN44_$LT$T$u20$as$u20$alloc..borrow..ToOwned$GT$8to_owned17h6603066356e40ff7E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"alloc::string::String"* align 8 %self) unnamed_addr #1 {
start:
; call <alloc::string::String as core::clone::Clone>::clone
  call void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17h652f7df73894e8cdE"(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"alloc::string::String"* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hacedbccc08cf976dE"(%"alloc::string::String"* sret(%"alloc::string::String") %buf, { i64*, i64* }* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %formatter = alloca %"core::fmt::Formatter", align 8
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hf02ff09acf7701cbE(%"alloc::string::String"* sret(%"alloc::string::String") %buf)
  br label %bb1

bb1:                                              ; preds = %start
  %_3.0 = bitcast %"alloc::string::String"* %buf to {}*
; invoke core::fmt::Formatter::new
  invoke void @_ZN4core3fmt9Formatter3new17h4d8dfe51f7b5f9d5E(%"core::fmt::Formatter"* sret(%"core::fmt::Formatter") %formatter, {}* align 1 %_3.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8*, i8*, i8* }>* @vtable.1 to [3 x i64]*))
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %buf) #17
          to label %bb6 unwind label %abort

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; invoke <core::cell::Ref<T> as core::fmt::Display>::fmt
  %_7 = invoke zeroext i1 @"_ZN63_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17hcce0fc3ca130ba4cE"({ i64*, i64* }* align 8 %self, %"core::fmt::Formatter"* align 8 %formatter)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17ha7301dbb17b8d738E"(i1 zeroext %_7, [0 x i8]* align 1 bitcast (<{ [55 x i8] }>* @alloc680 to [0 x i8]*), i64 55, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc682 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

abort:                                            ; preds = %bb5
  %6 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb6:                                              ; preds = %bb5
  %7 = bitcast { i8*, i32 }* %0 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1
  resume { i8*, i32 } %12
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h4d193116b8f80cffE"(i64 %start1, i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = add nuw i64 %start1, %n
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; <usize as core::iter::range::Step>::backward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17hcacd72a9a485ca8fE"(i64 %start1, i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = sub nuw i64 %start1, %n
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::intrinsics::write_bytes
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics11write_bytes17hd6c8c9fc6f89732cE(i8* %dst, i8 %val, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 1, %count
  call void @llvm.memset.p0i8.i64(i8* align 1 %dst, i8 %val, i64 %0, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics19copy_nonoverlapping17h38d13445a63b4b98E(i8* %src, i8* %dst, i64 %count) unnamed_addr #0 {
start:
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  %0 = mul i64 %count, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %0, i1 false)
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics19copy_nonoverlapping17h3e015404eadd1543E(i8* %src, i8* %dst, i64 %count) unnamed_addr #0 {
start:
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<core::mem::maybe_uninit::MaybeUninit<u8>>::{closure#0}]", align 8
  %0 = mul i64 %count, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %0, i1 false)
  ret void
}

; core::intrinsics::copy
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics4copy17h094c89a71b125d95E({ [0 x i8]*, i64 }* %src, { [0 x i8]*, i64 }* %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 16, %count
  %1 = bitcast { [0 x i8]*, i64 }* %dst to i8*
  %2 = bitcast { [0 x i8]*, i64 }* %src to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 %0, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3Ord3max17h984a194a9e697c74E(i64 %self, i64 %other) unnamed_addr #0 {
start:
; call core::cmp::max_by
  %0 = call i64 @_ZN4core3cmp6max_by17hdab1738dec70fee1E(i64 %self, i64 %other)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::max
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3max17h4bf4c75e9e56bd50E(i64 %v1, i64 %v2) unnamed_addr #0 {
start:
; call core::cmp::Ord::max
  %0 = call i64 @_ZN4core3cmp3Ord3max17h984a194a9e697c74E(i64 %v1, i64 %v2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17ha42b6460f389d33cE"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %_4 = load i64, i64* %self, align 8
  %_5 = load i64, i64* %other, align 8
  %_3 = icmp ult i64 %_4, %_5
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8
  %_8 = load i64, i64* %other, align 8
  %_6 = icmp eq i64 %_7, %_8
  br i1 %_6, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !range !16, !noundef !3
  ret i8 %1

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h0ef5cf6e606d1638E"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 {
start:
  %_3 = load i64, i64* %self, align 8
  %_4 = load i64, i64* %other, align 8
  %0 = icmp ult i64 %_3, %_4
  ret i1 %0
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h9ef71eb360f983c4E"({ [0 x i8]*, i64 }* align 8 %self, { [0 x i8]*, i64 }* align 8 %other) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_5.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !3, !align !4, !noundef !3
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_5.1 = load i64, i64* %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1
  %_6.1 = load i64, i64* %3, align 8
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %4 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h1efb479c8d442082E"([0 x i8]* align 1 %_5.0, i64 %_5.1, [0 x i8]* align 1 %_6.0, i64 %_6.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hcb6083e40cd1af5fE"({ [0 x i8]*, i64 }* align 8 %self, { [0 x i8]*, i64 }* align 8 %other) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_5.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !3, !align !4, !noundef !3
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_5.1 = load i64, i64* %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1
  %_6.1 = load i64, i64* %3, align 8
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %4 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17h4a4f06d7c34d4408E"([0 x i8]* align 1 %_5.0, i64 %_5.1, [0 x i8]* align 1 %_6.0, i64 %_6.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::ne
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2ne17h41d92785e6701561E"({ [0 x i8]*, i64 }* align 8 %self, { [0 x i8]*, i64 }* align 8 %other) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_5.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !3, !align !4, !noundef !3
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_5.1 = load i64, i64* %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1
  %_6.1 = load i64, i64* %3, align 8
; call core::str::traits::<impl core::cmp::PartialEq for str>::ne
  %4 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2ne17h3ad7ee94cbe8eb68E"([0 x i8]* align 1 %_5.0, i64 %_5.1, [0 x i8]* align 1 %_6.0, i64 %_6.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::cmp::max_by
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp6max_by17hdab1738dec70fee1E(i64 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %3 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  store i8 1, i8* %_13, align 1
  store i8 1, i8* %_12, align 1
  %4 = bitcast { i64*, i64* }* %_6 to i64**
  store i64* %v1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  store i64* %v2, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3, !align !8, !noundef !3
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8, !nonnull !3, !align !8, !noundef !3
; invoke core::ops::function::FnOnce::call_once
  %10 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17h31eaa20158685f4aE(i64* align 8 %7, i64* align 8 %9)
          to label %bb1 unwind label %cleanup, !range !16

bb8:                                              ; preds = %cleanup
  br label %bb13

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb8

bb1:                                              ; preds = %start
  store i8 %10, i8* %_4, align 1
  %_11 = load i8, i8* %_4, align 1, !range !16, !noundef !3
  switch i8 %_11, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ]

bb13:                                             ; preds = %bb8
  %16 = load i8, i8* %_13, align 1, !range !2, !noundef !3
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb12, label %bb9

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_12, align 1
  %18 = load i64, i64* %v2, align 8
  store i64 %18, i64* %3, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_13, align 1
  %19 = load i64, i64* %v1, align 8
  store i64 %19, i64* %3, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %20 = load i8, i8* %_12, align 1, !range !2, !noundef !3
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb10, label %bb6

bb6:                                              ; preds = %bb10, %bb5
  %22 = load i8, i8* %_13, align 1, !range !2, !noundef !3
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb11, label %bb7

bb10:                                             ; preds = %bb5
  br label %bb6

bb9:                                              ; preds = %bb12, %bb13
  %24 = bitcast { i8*, i32 }* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb12:                                             ; preds = %bb13
  br label %bb9

bb7:                                              ; preds = %bb11, %bb6
  %30 = load i64, i64* %3, align 8
  ret i64 %30

bb11:                                             ; preds = %bb6
  br label %bb7
}

; core::ffi::c_str::CStr::from_bytes_with_nul_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17h94fe7c610af433d7E([0 x i8]* align 1 %bytes.0, i64 %bytes.1) unnamed_addr #0 {
start:
; call core::ffi::c_str::CStr::_from_bytes_with_nul_unchecked
  %0 = call { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ffi5c_str4CStr30_from_bytes_with_nul_unchecked17hab1463bfd3b55af8E([0 x i8]* align 1 %bytes.0, i64 %bytes.1)
  %1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %0, 0
  %2 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } undef, %"core::ffi::c_str::CStr"* %1, 0
  %4 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } %3, i64 %2, 1
  ret { %"core::ffi::c_str::CStr"*, i64 } %4
}

; core::ffi::c_str::CStr::_from_bytes_with_nul_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ffi5c_str4CStr30_from_bytes_with_nul_unchecked17hab1463bfd3b55af8E([0 x i8]* align 1 %bytes.0, i64 %bytes.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast [0 x i8]* %bytes.0 to %"core::ffi::c_str::CStr"*
  %0 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } undef, %"core::ffi::c_str::CStr"* %_2.0, 0
  %1 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } %0, i64 %bytes.1, 1
  ret { %"core::ffi::c_str::CStr"*, i64 } %1
}

; core::ffi::c_str::CStr::from_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ffi5c_str4CStr8from_ptr17hdc7536f17352db0bE(i8* %ptr) unnamed_addr #0 {
start:
  %len = call i64 @strlen(i8* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  %_9 = add i64 %len, 1
; call core::slice::raw::from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hb3af32f06dd41e01E(i8* %ptr, i64 %_9)
  %_7.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ffi::c_str::CStr::from_bytes_with_nul_unchecked
  %1 = call { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17h94fe7c610af433d7E([0 x i8]* align 1 %_7.0, i64 %_7.1)
  %2 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %1, 0
  %3 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %1, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } undef, %"core::ffi::c_str::CStr"* %2, 0
  %5 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } %4, i64 %3, 1
  ret { %"core::ffi::c_str::CStr"*, i64 } %5
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h2c79311daa69a0d8E(%_ProbeNode** align 8 %x) unnamed_addr #0 {
start:
; call core::fmt::ArgumentV1::new
  %0 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hb2ec8c0affac19d1E(%_ProbeNode** align 8 %x, i1 (%_ProbeNode**, %"core::fmt::Formatter"*)* @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h747177dc124c5187E")
  %1 = extractvalue { i8*, i64* } %0, 0
  %2 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64* } %3, i64* %2, 1
  ret { i8*, i64* } %4
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h35509908dd72e4eeE({ i32*, i64* }* align 8 %x) unnamed_addr #0 {
start:
; call core::fmt::ArgumentV1::new
  %0 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h87695b8c6fefa81aE({ i32*, i64* }* align 8 %x, i1 ({ i32*, i64* }*, %"core::fmt::Formatter"*)* @"_ZN66_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17h058fe8da5778c3e5E")
  %1 = extractvalue { i8*, i64* } %0, 0
  %2 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64* } %3, i64* %2, 1
  ret { i8*, i64* } %4
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h3bd36a8e965164daE(%"alloc::string::String"* align 8 %x) unnamed_addr #0 {
start:
; call core::fmt::ArgumentV1::new
  %0 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h0c2407d7c01e893fE(%"alloc::string::String"* align 8 %x, i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)* @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h1abd42f5566fa5dfE")
  %1 = extractvalue { i8*, i64* } %0, 0
  %2 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64* } %3, i64* %2, 1
  ret { i8*, i64* } %4
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h6de1f7bab5be1818E({ i64*, i64* }** align 8 %x) unnamed_addr #0 {
start:
; call core::fmt::ArgumentV1::new
  %0 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h4b22e33aaefe9869E({ i64*, i64* }** align 8 %x, i1 ({ i64*, i64* }**, %"core::fmt::Formatter"*)* @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h42569c91494d3767E")
  %1 = extractvalue { i8*, i64* } %0, 0
  %2 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64* } %3, i64* %2, 1
  ret { i8*, i64* } %4
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h7ed329f22a7624acE(i32* align 4 %x) unnamed_addr #0 {
start:
; call core::fmt::ArgumentV1::new
  %0 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h543c2b0f7bb9bcc4E(i32* align 4 %x, i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h233a1fd6693c57bcE")
  %1 = extractvalue { i8*, i64* } %0, 0
  %2 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64* } %3, i64* %2, 1
  ret { i8*, i64* } %4
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h9dcec05d7b2f10d9E(i64* align 8 %x) unnamed_addr #0 {
start:
; call core::fmt::ArgumentV1::new
  %0 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17he48ba8b4ed83010bE(i64* align 8 %x, i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hbf95652e534546d1E")
  %1 = extractvalue { i8*, i64* } %0, 0
  %2 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64* } %3, i64* %2, 1
  ret { i8*, i64* } %4
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hdedfc4fff3879a7cE(%"core::fmt::Arguments"* align 8 %x) unnamed_addr #0 {
start:
; call core::fmt::ArgumentV1::new
  %0 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hef2b9160c17202b1E(%"core::fmt::Arguments"* align 8 %x, i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)* @"_ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17h521c0fec020f7a8aE")
  %1 = extractvalue { i8*, i64* } %0, 0
  %2 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64* } %3, i64* %2, 1
  ret { i8*, i64* } %4
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17he4e794f2eedaa811E({ [0 x i8]*, i64 }* align 8 %x) unnamed_addr #0 {
start:
; call core::fmt::ArgumentV1::new
  %0 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17he172411a24f9f107E({ [0 x i8]*, i64 }* align 8 %x, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hce23f12e6046ea36E")
  %1 = extractvalue { i8*, i64* } %0, 0
  %2 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64* } %3, i64* %2, 1
  ret { i8*, i64* } %4
}

; core::fmt::ArgumentV1::new_upper_hex
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV113new_upper_hex17hfa497661979a8342E(i32* align 4 %x) unnamed_addr #0 {
start:
; call core::fmt::ArgumentV1::new
  %0 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hf9e78bfba7130529E(i32* align 4 %x, i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17he6f8b2f549b06d98E")
  %1 = extractvalue { i8*, i64* } %0, 0
  %2 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64* } %3, i64* %2, 1
  ret { i8*, i64* } %4
}

; core::fmt::ArgumentV1::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h0c2407d7c01e893fE(%"alloc::string::String"* align 8 %x, i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)* %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3, !noundef !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"alloc::string::String"* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3, !align !4, !noundef !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h4b22e33aaefe9869E({ i64*, i64* }** align 8 %x, i1 ({ i64*, i64* }**, %"core::fmt::Formatter"*)* %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 ({ i64*, i64* }**, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3, !noundef !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { i64*, i64* }** %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3, !align !4, !noundef !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h543c2b0f7bb9bcc4E(i32* align 4 %x, i1 (i32*, %"core::fmt::Formatter"*)* %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i32*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3, !noundef !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i32* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3, !align !4, !noundef !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h87695b8c6fefa81aE({ i32*, i64* }* align 8 %x, i1 ({ i32*, i64* }*, %"core::fmt::Formatter"*)* %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 ({ i32*, i64* }*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3, !noundef !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { i32*, i64* }* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3, !align !4, !noundef !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h92312a9ea030ab37E(i64** align 8 %x, i1 (i64**, %"core::fmt::Formatter"*)* %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i64**, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3, !noundef !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64** %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3, !align !4, !noundef !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hb2ec8c0affac19d1E(%_ProbeNode** align 8 %x, i1 (%_ProbeNode**, %"core::fmt::Formatter"*)* %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (%_ProbeNode**, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3, !noundef !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %_ProbeNode** %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3, !align !4, !noundef !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17he172411a24f9f107E({ [0 x i8]*, i64 }* align 8 %x, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3, !noundef !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { [0 x i8]*, i64 }* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3, !align !4, !noundef !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17he48ba8b4ed83010bE(i64* align 8 %x, i1 (i64*, %"core::fmt::Formatter"*)* %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i64*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3, !noundef !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3, !align !4, !noundef !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hef2b9160c17202b1E(%"core::fmt::Arguments"* align 8 %x, i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)* %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3, !noundef !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"core::fmt::Arguments"* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3, !align !4, !noundef !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hf9e78bfba7130529E(i32* align 4 %x, i1 (i32*, %"core::fmt::Formatter"*)* %f) unnamed_addr #0 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i32*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3, !noundef !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i32* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3, !align !4, !noundef !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new_debug
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV19new_debug17h88b49f32a251f8d7E(i64** align 8 %x) unnamed_addr #0 {
start:
; call core::fmt::ArgumentV1::new
  %0 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h92312a9ea030ab37E(i64** align 8 %x, i1 (i64**, %"core::fmt::Formatter"*)* @"_ZN52_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hccbbcc369d4abc62E")
  %1 = extractvalue { i8*, i64* } %0, 0
  %2 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64* } %3, i64* %2, 1
  ret { i8*, i64* } %4
}

; core::fmt::Write::write_char
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3fmt5Write10write_char17h71075877e8117c5bE({ i32*, i8* }* align 8 %self, i32 %c) unnamed_addr #1 {
start:
  %_10 = alloca [4 x i8], align 1
  %0 = getelementptr inbounds [4 x i8], [4 x i8]* %_10, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 4, i1 false)
  %_7.0 = bitcast [4 x i8]* %_10 to [0 x i8]*
; call core::char::methods::<impl char>::encode_utf8
  %1 = call { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h0ed165b39ab32042E"(i32 %c, [0 x i8]* align 1 %_7.0, i64 4)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str
  %2 = call zeroext i1 @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h7ad4762307c07efbE"({ i32*, i8* }* align 8 %self, [0 x i8]* align 1 %_5.0, i64 %_5.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %2
}

; core::fmt::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3fmt5Write9write_fmt17h4af0c010c9cce504E({ i32*, i8* }* align 8 %0, %"core::fmt::Arguments"* %args) unnamed_addr #1 {
start:
  %_6 = alloca %"core::fmt::Arguments", align 8
  %self = alloca { i32*, i8* }*, align 8
  store { i32*, i8* }* %0, { i32*, i8* }** %self, align 8
  %_3.0 = bitcast { i32*, i8* }** %self to {}*
  %1 = bitcast %"core::fmt::Arguments"* %_6 to i8*
  %2 = bitcast %"core::fmt::Arguments"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 48, i1 false)
; call core::fmt::write
  %3 = call zeroext i1 @_ZN4core3fmt5write17h5c45f38d408cd7eeE({}* align 1 %_3.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8*, i8*, i8* }>* @vtable.2 to [3 x i64]*), %"core::fmt::Arguments"* %_6)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %3
}

; core::fmt::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3fmt5Write9write_fmt17h593c63e97458c52aE(%"alloc::string::String"* align 8 %0, %"core::fmt::Arguments"* %args) unnamed_addr #1 {
start:
  %_6 = alloca %"core::fmt::Arguments", align 8
  %self = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %0, %"alloc::string::String"** %self, align 8
  %_3.0 = bitcast %"alloc::string::String"** %self to {}*
  %1 = bitcast %"core::fmt::Arguments"* %_6 to i8*
  %2 = bitcast %"core::fmt::Arguments"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 48, i1 false)
; call core::fmt::write
  %3 = call zeroext i1 @_ZN4core3fmt5write17h5c45f38d408cd7eeE({}* align 1 %_3.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8*, i8*, i8* }>* @vtable.3 to [3 x i64]*), %"core::fmt::Arguments"* %_6)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %3
}

; core::fmt::Arguments::new_v1_formatted
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments16new_v1_formatted17ha5aa0030d4c187b9E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %0, [0 x { [0 x i8]*, i64 }]* align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* align 8 %args.0, i64 %args.1, [0 x %"core::fmt::rt::v1::Argument"]* align 8 %fmt.0, i64 %fmt.1) unnamed_addr #0 {
start:
  %_6 = alloca { i64*, i64 }, align 8
  %1 = bitcast { i64*, i64 }* %_6 to { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }*
  %2 = getelementptr inbounds { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }, { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }* %1, i32 0, i32 0
  store [0 x %"core::fmt::rt::v1::Argument"]* %fmt.0, [0 x %"core::fmt::rt::v1::Argument"]** %2, align 8
  %3 = getelementptr inbounds { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }, { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }* %1, i32 0, i32 1
  store i64 %fmt.1, i64* %3, align 8
  %4 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %5 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %4, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %5, align 8
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %4, i32 0, i32 1
  store i64 %pieces.1, i64* %6, align 8
  %7 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8, !align !8
  %10 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %7, i32 0, i32 0
  store i64* %9, i64** %12, align 8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %7, i32 0, i32 1
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2
  %15 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %14, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %15, align 8
  %16 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %14, i32 0, i32 1
  store i64 %args.1, i64* %16, align 8
  ret void
}

; core::fmt::Arguments::as_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN4core3fmt9Arguments6as_str17h622b47d42cc7f8f5E(%"core::fmt::Arguments"* align 8 %self) unnamed_addr #0 {
start:
  %_2 = alloca { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }, align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast %"core::fmt::Arguments"* %self to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %1, i32 0, i32 0
  %_3.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %2, align 8, !nonnull !3, !align !8, !noundef !3
  %3 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %1, i32 0, i32 1
  %_3.1 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %self, i32 0, i32 2
  %5 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %4, i32 0, i32 0
  %_4.0 = load [0 x { i8*, i64* }]*, [0 x { i8*, i64* }]** %5, align 8, !nonnull !3, !align !8, !noundef !3
  %6 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %4, i32 0, i32 1
  %_4.1 = load i64, i64* %6, align 8
  %7 = bitcast { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %8 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %7, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %_3.0, [0 x { [0 x i8]*, i64 }]** %8, align 8
  %9 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %7, i32 0, i32 1
  store i64 %_3.1, i64* %9, align 8
  %10 = getelementptr inbounds { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }, { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2, i32 0, i32 1
  %11 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %10, i32 0, i32 0
  store [0 x { i8*, i64* }]* %_4.0, [0 x { i8*, i64* }]** %11, align 8
  %12 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %10, i32 0, i32 1
  store i64 %_4.1, i64* %12, align 8
  %13 = bitcast { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %14 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %13, i32 0, i32 0
  %_21.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %14, align 8, !nonnull !3, !align !8, !noundef !3
  %15 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %13, i32 0, i32 1
  %_21.1 = load i64, i64* %15, align 8
  %_16 = icmp eq i64 %_21.1, 0
  br i1 %_16, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %16 = bitcast { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %17 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %16, i32 0, i32 0
  %_23.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %17, align 8, !nonnull !3, !align !8, !noundef !3
  %18 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %16, i32 0, i32 1
  %_23.1 = load i64, i64* %18, align 8
  %_13 = icmp eq i64 %_23.1, 1
  br i1 %_13, label %bb4, label %bb2

bb1:                                              ; preds = %start
  %19 = getelementptr inbounds { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }, { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2, i32 0, i32 1
  %20 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 0
  %_22.0 = load [0 x { i8*, i64* }]*, [0 x { i8*, i64* }]** %20, align 8, !nonnull !3, !align !8, !noundef !3
  %21 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 1
  %_22.1 = load i64, i64* %21, align 8
  %_7 = icmp eq i64 %_22.1, 0
  br i1 %_7, label %bb5, label %bb2

bb2:                                              ; preds = %bb4, %bb3, %bb1
  %22 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %22, align 8
  br label %bb7

bb5:                                              ; preds = %bb1
  %23 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 0
  store [0 x i8]* bitcast (<{}>* @alloc222 to [0 x i8]*), [0 x i8]** %24, align 8
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 1
  store i64 0, i64* %25, align 8
  br label %bb7

bb7:                                              ; preds = %bb2, %bb6, %bb5
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8, !align !4
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = insertvalue { i8*, i64 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i64 } %30, i64 %29, 1
  ret { i8*, i64 } %31

bb4:                                              ; preds = %bb3
  %32 = getelementptr inbounds { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }, { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2, i32 0, i32 1
  %33 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %32, i32 0, i32 0
  %_24.0 = load [0 x { i8*, i64* }]*, [0 x { i8*, i64* }]** %33, align 8, !nonnull !3, !align !8, !noundef !3
  %34 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %32, i32 0, i32 1
  %_24.1 = load i64, i64* %34, align 8
  %_10 = icmp eq i64 %_24.1, 0
  br i1 %_10, label %bb6, label %bb2

bb6:                                              ; preds = %bb4
  %35 = bitcast { { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { i8*, i64* }]*, i64 } }* %_2 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %36 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %35, i32 0, i32 0
  %_25.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %36, align 8, !nonnull !3, !align !8, !noundef !3
  %37 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %35, i32 0, i32 1
  %_25.1 = load i64, i64* %37, align 8
  %s = getelementptr inbounds [0 x { [0 x i8]*, i64 }], [0 x { [0 x i8]*, i64 }]* %_25.0, i64 0, i64 0
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_26.0 = load [0 x i8]*, [0 x i8]** %38, align 8, !nonnull !3, !align !4, !noundef !3
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_26.1 = load i64, i64* %39, align 8
  %40 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %40, i32 0, i32 0
  store [0 x i8]* %_26.0, [0 x i8]** %41, align 8
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %40, i32 0, i32 1
  store i64 %_26.1, i64* %42, align 8
  br label %bb7
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %0, [0 x { [0 x i8]*, i64 }]* align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* align 8 %args.0, i64 %args.1) unnamed_addr #0 {
start:
  %_24 = alloca { i64*, i64 }, align 8
  %_16 = alloca %"core::fmt::Arguments", align 8
  %_3 = alloca i8, align 1
  %_4 = icmp ult i64 %pieces.1, %args.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1
  %_9 = icmp ugt i64 %pieces.1, %_12
  %1 = zext i1 %_9 to i8
  store i8 %1, i8* %_3, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i8, i8* %_3, align 1, !range !2, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb6

bb6:                                              ; preds = %bb3
  %4 = bitcast { i64*, i64 }* %_24 to {}**
  store {}* null, {}** %4, align 8
  %5 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %5, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %6, align 8
  %7 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %5, i32 0, i32 1
  store i64 %pieces.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1
  %9 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8, !align !8
  %11 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %8, i32 0, i32 0
  store i64* %10, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %8, i32 0, i32 1
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2
  %16 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %15, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %16, align 8
  %17 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %15, i32 0, i32 1
  store i64 %args.1, i64* %17, align 8
  ret void

bb4:                                              ; preds = %bb3
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_16, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc184 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc222 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"* %_16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc695 to %"core::panic::location::Location"*)) #16
  unreachable
}

; core::mem::needs_drop
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3mem10needs_drop17h86129beae735a375E() unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  store i8 0, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; core::mem::needs_drop
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3mem10needs_drop17h9799f9c602192a91E() unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  store i8 0, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; core::mem::needs_drop
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3mem10needs_drop17he57bc6bfeb2453fcE() unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  store i8 1, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; core::mem::size_of_val
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem11size_of_val17h936acb577fba88a0E([0 x i8]* align 1 %val.0, i64 %val.1) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = mul nsw i64 %val.1, 1
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::mem::valid_align::ValidAlign::as_nonzero
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h15f10fe2180ec73cE(i64 %self) unnamed_addr #0 {
start:
  %0 = icmp uge i64 %self, 1
  call void @llvm.assume(i1 %0)
  %1 = icmp ule i64 %self, -9223372036854775808
  call void @llvm.assume(i1 %1)
; call core::num::nonzero::NonZeroUsize::new_unchecked
  %2 = call i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hb7c9450aeb9a4ee1E(i64 %self), !range !17
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::mem::valid_align::ValidAlign::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h09c3b9608f5865e5E(i64 %align) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 %align, i64* %0, align 8
  %1 = load i64, i64* %0, align 8, !range !18, !noundef !3
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem15size_of_val_raw17h8de78c30a9285da9E(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %val) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 32, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem15size_of_val_raw17hc37e870dc08f2a25E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %val) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 48, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem15size_of_val_raw17he5fb859152835b2aE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %val) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 32, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem16align_of_val_raw17h7773e21790464896E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %val) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem16align_of_val_raw17hafbab06dfb687d44E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %val) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem16align_of_val_raw17he1ec18788f25600bE(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %val) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17h283c059672eea75eE(i64* %0) unnamed_addr #0 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<std::fs::File>>>
  call void @"_ZN4core3ptr90drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$17h4da5ea1fb3c8ab9cE"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17h35c8d34e771ae790E(i64* %0) unnamed_addr #0 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<alloc::sync::Weak<probe_RSE::_ProbeSemaphore>>
  call void @"_ZN4core3ptr72drop_in_place$LT$alloc..sync..Weak$LT$probe_RSE.._ProbeSemaphore$GT$$GT$17h27ffb27093332a60E"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17h48cc06860fc55691E(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_x) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place<core::option::Option<core::cell::RefCell<alloc::string::String>>>
  call void @"_ZN4core3ptr97drop_in_place$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17h5681b90f8c3e3136E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17h5b5b49b559a85a41E(i8 %_x) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17h64f6117a21bd728aE(%"core::option::Option<core::cell::RefCell<usize>>"* %_x) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17hc0667d34842e4bc7E(i64* %0) unnamed_addr #0 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>>
  call void @"_ZN4core3ptr144drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$$GT$17hbb0bd1a8df36e679E"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17hc3a4937046dc6884E(%"core::option::Option<core::cell::RefCell<i32>>"* %_x) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17hc8a22bf316fddce2E(i64 %_x) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem7replace17h5b6e4439db812dbeE(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") %result, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* align 8 %dest, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca %"core::option::Option<core::cell::RefCell<alloc::string::String>>", align 8
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17h41735b0dc41608f8E(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") %result, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %dest)
          to label %bb1 unwind label %cleanup

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %8 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_6 to i8*
  %9 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 40, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h4da5f277be3969a8E(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %dest, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_6)
          to label %bb2 unwind label %cleanup1

bb3:                                              ; preds = %cleanup1
; invoke core::ptr::drop_in_place<core::option::Option<core::cell::RefCell<alloc::string::String>>>
  invoke void @"_ZN4core3ptr97drop_in_place$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17h5681b90f8c3e3136E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %result) #17
          to label %bb6 unwind label %abort

cleanup1:                                         ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3

bb2:                                              ; preds = %bb1
  ret void

abort:                                            ; preds = %bb5, %bb3
  %15 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb4:                                              ; preds = %bb5, %bb6
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb5:                                              ; preds = %bb6
; invoke core::ptr::drop_in_place<core::option::Option<core::cell::RefCell<alloc::string::String>>>
  invoke void @"_ZN4core3ptr97drop_in_place$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17h5681b90f8c3e3136E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %src) #17
          to label %bb4 unwind label %abort
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem7replace17h90f136330fa652cdE(%"core::option::Option<core::cell::RefCell<usize>>"* sret(%"core::option::Option<core::cell::RefCell<usize>>") %result, %"core::option::Option<core::cell::RefCell<usize>>"* align 8 %dest, %"core::option::Option<core::cell::RefCell<usize>>"* %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca %"core::option::Option<core::cell::RefCell<usize>>", align 8
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17hb84230a4cc1bc3fdE(%"core::option::Option<core::cell::RefCell<usize>>"* sret(%"core::option::Option<core::cell::RefCell<usize>>") %result, %"core::option::Option<core::cell::RefCell<usize>>"* %dest)
          to label %bb1 unwind label %cleanup

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %8 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %_6 to i8*
  %9 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h8f3337dad8a2dac2E(%"core::option::Option<core::cell::RefCell<usize>>"* %dest, %"core::option::Option<core::cell::RefCell<usize>>"* %_6)
          to label %bb2 unwind label %cleanup1

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3

bb2:                                              ; preds = %bb1
  ret void

bb4:                                              ; preds = %bb5, %bb6
  %15 = bitcast { i8*, i32 }* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem7replace17ha4d255043d897b27E(%"alloc::string::String"* sret(%"alloc::string::String") %result, %"alloc::string::String"* align 8 %dest, %"alloc::string::String"* %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca %"alloc::string::String", align 8
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17hc62b5dabf063f79aE(%"alloc::string::String"* sret(%"alloc::string::String") %result, %"alloc::string::String"* %dest)
          to label %bb1 unwind label %cleanup

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %8 = bitcast %"alloc::string::String"* %_6 to i8*
  %9 = bitcast %"alloc::string::String"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h92ee4a40cda033f2E(%"alloc::string::String"* %dest, %"alloc::string::String"* %_6)
          to label %bb2 unwind label %cleanup1

bb3:                                              ; preds = %cleanup1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %result) #17
          to label %bb6 unwind label %abort

cleanup1:                                         ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3

bb2:                                              ; preds = %bb1
  ret void

abort:                                            ; preds = %bb5, %bb3
  %15 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb4:                                              ; preds = %bb5, %bb6
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb5:                                              ; preds = %bb6
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %src) #17
          to label %bb4 unwind label %abort
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem7replace17hab01c1885edb21d9E(i64* align 8 %dest, i64 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i64 @_ZN4core3ptr4read17hf71fc7a4122d94daE(i64* %dest)
          to label %bb1 unwind label %cleanup

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h05ac2ab0f9444135E(i64* %dest, i64 %src)
          to label %bb2 unwind label %cleanup1

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb2:                                              ; preds = %bb1
  ret i64 %result

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem7replace17hccf0655e6c47e2aeE(i64* align 8 %dest, i64 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i64 @_ZN4core3ptr4read17hd3d7a92f84b86cdeE(i64* %dest)
          to label %bb1 unwind label %cleanup

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hb5428cbba680a821E(i64* %dest, i64 %src)
          to label %bb2 unwind label %cleanup1

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb2:                                              ; preds = %bb1
  ret i64 %result

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @_ZN4core3mem7replace17hf20d3d6ff5df57b7E(i8* align 1 %dest, i8 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i8 @_ZN4core3ptr4read17hf3e41a1ba5ed45e2E(i8* %dest)
          to label %bb1 unwind label %cleanup, !range !15

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hc770d376ad7da89eE(i8* %dest, i8 %src)
          to label %bb2 unwind label %cleanup1

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb2:                                              ; preds = %bb1
  ret i8 %result

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem7replace17hf475b08506f3ee60E(%"core::option::Option<core::cell::RefCell<i32>>"* sret(%"core::option::Option<core::cell::RefCell<i32>>") %result, %"core::option::Option<core::cell::RefCell<i32>>"* align 8 %dest, %"core::option::Option<core::cell::RefCell<i32>>"* %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca %"core::option::Option<core::cell::RefCell<i32>>", align 8
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17hd6d4fa74d0f6d2d5E(%"core::option::Option<core::cell::RefCell<i32>>"* sret(%"core::option::Option<core::cell::RefCell<i32>>") %result, %"core::option::Option<core::cell::RefCell<i32>>"* %dest)
          to label %bb1 unwind label %cleanup

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %8 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_6 to i8*
  %9 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h3699741a633db402E(%"core::option::Option<core::cell::RefCell<i32>>"* %dest, %"core::option::Option<core::cell::RefCell<i32>>"* %_6)
          to label %bb2 unwind label %cleanup1

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3

bb2:                                              ; preds = %bb1
  ret void

bb4:                                              ; preds = %bb5, %bb6
  %15 = bitcast { i8*, i32 }* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::num::<impl u8>::is_utf8_char_boundary
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$21is_utf8_char_boundary17h29f21a7e2d9ebd33E"(i8 %self) unnamed_addr #0 {
start:
  %0 = icmp sge i8 %self, -64
  ret i1 %0
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h1ad8a36291cc3344E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2, !noundef !3
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !2, !noundef !3
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !2, !noundef !3
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %_5.0, i64* %28, align 8
  %29 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %29, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %30, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %32 = load i64, i64* %31, align 8, !range !7, !noundef !3
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = insertvalue { i64, i64 } undef, i64 %32, 0
  %36 = insertvalue { i64, i64 } %35, i64 %34, 1
  ret { i64, i64 } %36
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h30817b6b7b191694E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2, !noundef !3
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !2, !noundef !3
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !2, !noundef !3
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %_5.0, i64* %28, align 8
  %29 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %29, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %30, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %32 = load i64, i64* %31, align 8, !range !7, !noundef !3
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = insertvalue { i64, i64 } undef, i64 %32, 0
  %36 = insertvalue { i64, i64 } %35, i64 %34, 1
  ret { i64, i64 } %36
}

; core::num::nonzero::NonZeroUsize::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hb7c9450aeb9a4ee1E(i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 %n, i64* %0, align 8
  %1 = load i64, i64* %0, align 8, !range !17, !noundef !3
  ret i64 %1
}

; core::num::nonzero::NonZeroUsize::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize3get17h7319689c6529d142E(i64 %self) unnamed_addr #0 {
start:
  ret i64 %self
}

; core::ops::function::FnMut::call_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core3ops8function5FnMut8call_mut17h1ccefd62e68f6c0aE({}* align 1 %_1, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_2 = alloca { i64, i64 }, align 8
  %2 = bitcast { i64, i64 }* %_2 to i64*
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = bitcast { i64, i64 }* %_2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h1ad8a36291cc3344E"(i64 %5, i64 %7)
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = extractvalue { i64, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %11 = insertvalue { i64, i64 } undef, i64 %9, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17hf5092522fa4ceb6dE"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %self, { [0 x i8]*, i64 }* align 8 %0) unnamed_addr #1 {
start:
  %args = alloca i64*, align 8
  %1 = bitcast i64** %args to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %0, { [0 x i8]*, i64 }** %1, align 8
  %_4 = load i64*, i64** %args, align 8, !nonnull !3, !align !8, !noundef !3
  %2 = bitcast i64* %_4 to { [0 x i8]*, i64 }*
; call alloc::str::join_generic_copy::{{closure}}
  %3 = call { [0 x i8]*, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17hd1102509c0a24d83E"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %self, { [0 x i8]*, i64 }* align 8 %2)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; core::ops::function::FnOnce::call_once{{vtable.shim}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17ha275d01ff2c3f421E"({ i8*, i64* }* %_1, %"core::panic::panic_info::PanicInfo"* align 8 %0) unnamed_addr #0 {
start:
  %_2 = alloca i64*, align 8
  %1 = bitcast i64** %_2 to %"core::panic::panic_info::PanicInfo"**
  store %"core::panic::panic_info::PanicInfo"* %0, %"core::panic::panic_info::PanicInfo"** %1, align 8
  %2 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_1, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_1, i32 0, i32 1
  %5 = load i64*, i64** %4, align 8, !nonnull !3, !align !8, !noundef !3
  %6 = load i64*, i64** %_2, align 8, !nonnull !3, !align !8, !noundef !3
  %7 = bitcast i64* %6 to %"core::panic::panic_info::PanicInfo"*
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17h7ee6c6c10208f50bE(i8* align 1 %3, i64* align 8 %5, %"core::panic::panic_info::PanicInfo"* align 8 %7)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17h31eaa20158685f4aE(i64* align 8 %0, i64* align 8 %1) unnamed_addr #0 {
start:
  %_2 = alloca { i64*, i64* }, align 8
  %2 = bitcast { i64*, i64* }* %_2 to i64**
  store i64* %0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  store i64* %1, i64** %3, align 8
  %4 = bitcast { i64*, i64* }* %_2 to i64**
  %5 = load i64*, i64** %4, align 8, !nonnull !3, !align !8, !noundef !3
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !3, !align !8, !noundef !3
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %8 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17ha42b6460f389d33cE"(i64* align 8 %5, i64* align 8 %7), !range !16
  br label %bb1

bb1:                                              ; preds = %start
  ret i8 %8
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h5c86f35fb2641a89E(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x i8]* align 1 %1, i64 %2) unnamed_addr #0 {
start:
  %_2 = alloca { i8*, i64 }, align 8
  %3 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 0
  %8 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !3, !align !4, !noundef !3
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h4b6b67ee4f32cf84E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x i8]* align 1 %8, i64 %10)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h7ee6c6c10208f50bE(i8* align 1 %0, i64* align 8 %1, %"core::panic::panic_info::PanicInfo"* align 8 %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_2 = alloca i64*, align 8
  %_1 = alloca { i8*, i64* }, align 8
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_1, i32 0, i32 0
  store i8* %0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_1, i32 0, i32 1
  store i64* %1, i64** %5, align 8
  %6 = bitcast i64** %_2 to %"core::panic::panic_info::PanicInfo"**
  store %"core::panic::panic_info::PanicInfo"* %2, %"core::panic::panic_info::PanicInfo"** %6, align 8
  %7 = load i64*, i64** %_2, align 8, !nonnull !3, !align !8, !noundef !3
  %8 = bitcast i64* %7 to %"core::panic::panic_info::PanicInfo"*
; invoke probe_RSE::_init_::{{closure}}
  invoke void @"_ZN9probe_RSE6_init_28_$u7b$$u7b$closure$u7d$$u7d$17h424f42a2ccf1e0b6E"({ i8*, i64* }* align 8 %_1, %"core::panic::panic_info::PanicInfo"* align 8 %8)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<probe_RSE::_init_::{{closure}}>
  invoke void @"_ZN4core3ptr67drop_in_place$LT$probe_RSE.._init_..$u7b$$u7b$closure$u7d$$u7d$$GT$17hbd64bf292dedb01fE"({ i8*, i64* }* %_1) #17
          to label %bb4 unwind label %abort

cleanup:                                          ; preds = %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb3

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<probe_RSE::_init_::{{closure}}>
  call void @"_ZN4core3ptr67drop_in_place$LT$probe_RSE.._init_..$u7b$$u7b$closure$u7d$$u7d$$GT$17hbd64bf292dedb01fE"({ i8*, i64* }* %_1)
  br label %bb2

abort:                                            ; preds = %bb3
  %14 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb4:                                              ; preds = %bb3
  %15 = bitcast { i8*, i32 }* %3 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb2:                                              ; preds = %bb1
  ret void
}

; core::ptr::drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17h8b076db4a92ee006E"(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1 to i8*
  %1 = load i8, i8* %0, align 8, !range !11, !noundef !3
  %_2 = zext i8 %1 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb1
    i64 2, label %bb1
  ]

bb2:                                              ; preds = %start
  %2 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"*
  %3 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"* %2, i32 0, i32 1
; call core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
  call void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17he8a7ac6e9e733bb1E"(%"std::io::error::Custom"** %3)
  br label %bb1

bb1:                                              ; preds = %bb2, %start, %start, %start
  ret void
}

; core::ptr::drop_in_place<std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr106drop_in_place$LT$std..thread..local..fast..Key$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17h308b7934f9ed400cE"(%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %_1 to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"*
; call core::ptr::drop_in_place<std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>>
  call void @"_ZN4core3ptr115drop_in_place$LT$std..thread..local..lazy..LazyKeyInner$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17h5a7c4f5b6033e28dE"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr108drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$$GT$17h16682211493c70a8E"({ i32*, i8 }* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h78d0f88112f077a8E"({ i32*, i8 }* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr115drop_in_place$LT$std..thread..local..lazy..LazyKeyInner$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17h5a7c4f5b6033e28dE"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* %_1 to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"*
; call core::ptr::drop_in_place<core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>>
  call void @"_ZN4core3ptr127drop_in_place$LT$core..cell..UnsafeCell$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$$GT$17h2888850324ff6a0dE"(%"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Sync+core::marker::Send>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$17hb2d0c57585fa00c9E"({ {}*, [3 x i64]* }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %2 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 0
  %4 = load {}*, {}** %3, align 8
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 1
  %6 = load [3 x i64]*, [3 x i64]** %5, align 8, !nonnull !3, !align !8, !noundef !3
  %7 = bitcast [3 x i64]* %6 to void ({}*)**
  %8 = getelementptr inbounds void ({}*)*, void ({}*)** %7, i64 0
  %9 = load void ({}*)*, void ({}*)** %8, align 8, !invariant.load !3, !nonnull !3
  invoke void %9({}* %4)
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %10 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8, !nonnull !3, !noundef !3
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8, !nonnull !3, !align !8, !noundef !3
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17h0fafdaf36ea141c5E(i8* %12, i64* align 8 %14) #17
          to label %bb2 unwind label %abort

cleanup:                                          ; preds = %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %20 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !nonnull !3, !noundef !3
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 1
  %24 = load i64*, i64** %23, align 8, !nonnull !3, !align !8, !noundef !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h0fafdaf36ea141c5E(i8* %22, i64* align 8 %24)
  br label %bb1

abort:                                            ; preds = %bb4
  %25 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb2:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<std::fs::File>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr117drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$$GT$17hdd3cab558fca5789E"(i64** %_1) unnamed_addr #1 {
start:
  %0 = bitcast i64** %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<std::fs::File>>>
  call void @"_ZN4core3ptr89drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$17hc3c28b828fd92724E"(i64** %_1)
  br label %bb1
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr118drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$17h5054de53ad599f4aE"(%"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_1 to %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"*
; call core::ptr::drop_in_place<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>
  call void @"_ZN4core3ptr88drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$17hbbd851914b219a57E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr119drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$17h8c7a080fc28f025cE"(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>
  call void @"_ZN4core3ptr118drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$17h5054de53ad599f4aE"(%"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr124drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$17h8a902d0cfc456658E"({ i64*, i8 }* %_1) unnamed_addr #1 {
start:
; call <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h637977af41ac9c9cE"({ i64*, i8 }* align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr127drop_in_place$LT$core..cell..UnsafeCell$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$$GT$17h2888850324ff6a0dE"(%"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_1 to %"core::option::Option<core::cell::RefCell<alloc::string::String>>"*
; call core::ptr::drop_in_place<core::option::Option<core::cell::RefCell<alloc::string::String>>>
  call void @"_ZN4core3ptr97drop_in_place$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17h5681b90f8c3e3136E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr143drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$$GT$17h96554c80c55a42abE"(i64** %_1) unnamed_addr #1 {
start:
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hec2ad667fbd19319E"(i64** align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr144drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$$GT$17hbb0bd1a8df36e679E"(i64** %_1) unnamed_addr #1 {
start:
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he4d7b8b2b52af483E"(i64** align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr148drop_in_place$LT$alloc..sync..ArcInner$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$$GT$17h739ea2d489486dc7E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_1, i32 0, i32 2
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>
  call void @"_ZN4core3ptr119drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$17h8c7a080fc28f025cE"(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr162drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$$GT$17hd16bc80bfb8b53e2E"({ i64*, i8 }* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>
  call void @"_ZN4core3ptr124drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$17h8a902d0cfc456658E"({ i64*, i8 }* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr171drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$$GT$$GT$17hcc0df788402ecf63E"(i64** %_1) unnamed_addr #1 {
start:
  %0 = bitcast i64** %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>>
  call void @"_ZN4core3ptr143drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$$GT$17h96554c80c55a42abE"(i64** %_1)
  br label %bb1
}

; core::ptr::drop_in_place<dyn core::ops::function::Fn<(&core::panic::panic_info::PanicInfo,)>+Output = ()+core::marker::Sync+core::marker::Send>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr189drop_in_place$LT$dyn$u20$core..ops..function..Fn$LT$$LP$$RF$core..panic..panic_info..PanicInfo$C$$RP$$GT$$u2b$Output$u20$$u3d$$u20$$LP$$RP$$u2b$core..marker..Sync$u2b$core..marker..Send$GT$17h5ff27848a0749117E"({}* %_1.0, [3 x i64]* align 8 %_1.1) unnamed_addr #1 {
start:
  %0 = bitcast [3 x i64]* %_1.1 to void ({}*)**
  %1 = getelementptr inbounds void ({}*)*, void ({}*)** %0, i64 0
  %2 = load void ({}*)*, void ({}*)** %1, align 8, !invariant.load !3, !nonnull !3
  call void %2({}* %_1.0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h1e64144e29ba8856E(i8* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hdc9765f5b56575f6E"(i8* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h398cb17a69808bb9E({}* %_3, i64 %len)
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h4e28318444fdcba6E({ [0 x i8]*, i64 }* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h66d4db7defe23270E"({ [0 x i8]*, i64 }* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hea5f6d929f545e0eE({}* %_3, i64 %len)
  %1 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %0, 0
  %2 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } undef, [0 x { [0 x i8]*, i64 }]* %1, 0
  %4 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %3, i64 %2, 1
  ret { [0 x { [0 x i8]*, i64 }]*, i64 } %4
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h8fc24d3e2686850fE(%"alloc::vec::Vec<_ProbeNode>"* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h2aeb3c7b422a01b7E"(%"alloc::vec::Vec<_ProbeNode>"* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hbbac6fa2e4c492c3E({}* %_3, i64 %len)
  %1 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 0
  %2 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %1, 0
  %4 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %3, i64 %2, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %4
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17he804afec0262035eE(i8* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h400e39e1470088b1E"(i8* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h8abebfedb3d123f4E({}* %_3, i64 %len)
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hf84476906f7120cdE(%_ProbeNode* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb913b368f1f76162E"(%_ProbeNode* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h5bd2ddefacc0ae9eE({}* %_3, i64 %len)
  %1 = extractvalue { [0 x %_ProbeNode]*, i64 } %0, 0
  %2 = extractvalue { [0 x %_ProbeNode]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x %_ProbeNode]*, i64 } undef, [0 x %_ProbeNode]* %1, 0
  %4 = insertvalue { [0 x %_ProbeNode]*, i64 } %3, i64 %2, 1
  ret { [0 x %_ProbeNode]*, i64 } %4
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn core::ops::function::Fn<(&core::panic::panic_info::PanicInfo,)>+Output = ()+core::marker::Sync+core::marker::Send>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr214drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..Fn$LT$$LP$$RF$core..panic..panic_info..PanicInfo$C$$RP$$GT$$u2b$Output$u20$$u3d$$u20$$LP$$RP$$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$17hd7c5b8b906f8d6b3E"({ {}*, [3 x i64]* }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %2 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 0
  %4 = load {}*, {}** %3, align 8
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 1
  %6 = load [3 x i64]*, [3 x i64]** %5, align 8, !nonnull !3, !align !8, !noundef !3
  %7 = bitcast [3 x i64]* %6 to void ({}*)**
  %8 = getelementptr inbounds void ({}*)*, void ({}*)** %7, i64 0
  %9 = load void ({}*)*, void ({}*)** %8, align 8, !invariant.load !3, !nonnull !3
  invoke void %9({}* %4)
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %10 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8, !nonnull !3, !noundef !3
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8, !nonnull !3, !align !8, !noundef !3
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17hc0d085fffd866c52E(i8* %12, i64* align 8 %14) #17
          to label %bb2 unwind label %abort

cleanup:                                          ; preds = %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %20 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !nonnull !3, !noundef !3
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 1
  %24 = load i64*, i64** %23, align 8, !nonnull !3, !align !8, !noundef !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hc0d085fffd866c52E(i8* %22, i64* align 8 %24)
  br label %bb1

abort:                                            ; preds = %bb4
  %25 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb2:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h3401788f4ff7fdb1E(%_ProbeNode* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast %_ProbeNode* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h05197e5ecf4e6453E({}* %0, i64 %len)
  %2 = extractvalue { [0 x %_ProbeNode]*, i64 } %1, 0
  %3 = extractvalue { [0 x %_ProbeNode]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x %_ProbeNode]*, i64 } undef, [0 x %_ProbeNode]* %2, 0
  %5 = insertvalue { [0 x %_ProbeNode]*, i64 } %4, i64 %3, 1
  ret { [0 x %_ProbeNode]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h34e52b72ff86fc97E(%"alloc::vec::Vec<_ProbeNode>"* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h87545ffaf0d59e87E({}* %0, i64 %len)
  %2 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 0
  %3 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %2, 0
  %5 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %4, i64 %3, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h899b5789493e1550E(i8* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast i8* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h230b9f3bc680d53bE({}* %0, i64 %len)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17ha9e715d5f5f1ce18E(i8* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast i8* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hebc9cdf43d7debe4E({}* %0, i64 %len)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hfbb538f3dd4fe013E({ [0 x i8]*, i64 }* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast { [0 x i8]*, i64 }* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h9d1d96ab2121206aE({}* %0, i64 %len)
  %2 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %1, 0
  %3 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } undef, [0 x { [0 x i8]*, i64 }]* %2, 0
  %5 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %4, i64 %3, 1
  ret { [0 x { [0 x i8]*, i64 }]*, i64 } %5
}

; core::ptr::drop_in_place<std::fs::File>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17he19acbe034eaa267E"(i32* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sys::unix::fs::File>
  call void @"_ZN4core3ptr45drop_in_place$LT$std..sys..unix..fs..File$GT$17h210848c5323fb4b9E"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::fmt::Error>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17h73dc73bb78a6021dE"(%"core::fmt::Error"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"alloc::string::String"* %_1 to %"alloc::vec::Vec<u8>"*
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9d76e855da509defE"(%"alloc::vec::Vec<u8>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::BorrowRef>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$core..cell..BorrowRef$GT$17hefc0a659985d934eE"(i64** %_1) unnamed_addr #1 {
start:
; call <core::cell::BorrowRef as core::ops::drop::Drop>::drop
  call void @"_ZN63_$LT$core..cell..BorrowRef$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6f22f2d5a6da4faeE"(i64** align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<probe_RSE::_ProbeNode>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$probe_RSE.._ProbeNode$GT$17h40252f76163ae8d0E"(%_ProbeNode* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = bitcast %_ProbeNode* %_1 to %"alloc::string::String"*
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  %2 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %_1, i32 0, i32 3
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %2) #17
          to label %bb1 unwind label %abort

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %8)
  br label %bb2

abort:                                            ; preds = %bb3
  %9 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb1:                                              ; preds = %bb3
  %10 = bitcast { i8*, i32 }* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<std::io::error::Error>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h40e63bf6e01db46fE"(i8** %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::io::error::repr_bitpacked::Repr>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17hee72db28258cf508E"(i8** %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::io::error::Custom>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17hcbf0a56eeae860efE"(%"std::io::error::Custom"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::io::error::Custom"* %_1 to { {}*, [3 x i64]* }*
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Sync+core::marker::Send>>
  call void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$17hb2d0c57585fa00c9E"({ {}*, [3 x i64]* }* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::BorrowError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr44drop_in_place$LT$core..cell..BorrowError$GT$17hbdc327fc0c766312E"(%"core::cell::BorrowError"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<core::cell::BorrowRefMut>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr45drop_in_place$LT$core..cell..BorrowRefMut$GT$17hd80c5662057d3daaE"(i64** %_1) unnamed_addr #1 {
start:
; call <core::cell::BorrowRefMut as core::ops::drop::Drop>::drop
  call void @"_ZN66_$LT$core..cell..BorrowRefMut$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2fe815f8cb04a2fbE"(i64** align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sys::unix::fs::File>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr45drop_in_place$LT$std..sys..unix..fs..File$GT$17h210848c5323fb4b9E"(i32* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sys::unix::fd::FileDesc>
  call void @"_ZN4core3ptr49drop_in_place$LT$std..sys..unix..fd..FileDesc$GT$17h62bc919531f57d83E"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9d76e855da509defE"(%"alloc::vec::Vec<u8>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h27063ca47600abceE"(%"alloc::vec::Vec<u8>"* align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  invoke void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h41412c6beb7b7277E"({ i8*, i64 }* %1) #17
          to label %bb1 unwind label %abort

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h41412c6beb7b7277E"({ i8*, i64 }* %7)
  br label %bb2

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<core::cell::BorrowMutError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr47drop_in_place$LT$core..cell..BorrowMutError$GT$17h83972e3e95d77b74E"(%"core::cell::BorrowMutError"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<core::str::error::Utf8Error>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h086ad9ca9bd849e5E"(%"core::str::error::Utf8Error"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<std::os::fd::owned::OwnedFd>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17h04abbeea0104ef13E"(i32* %_1) unnamed_addr #1 {
start:
; call <std::os::fd::owned::OwnedFd as core::ops::drop::Drop>::drop
  call void @"_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0bff09c81b3ffd10E"(i32* align 4 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::Ref<usize>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr49drop_in_place$LT$core..cell..Ref$LT$usize$GT$$GT$17h3756d7c001a8867bE"({ i64*, i64* }* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::cell::BorrowRef>
  call void @"_ZN4core3ptr42drop_in_place$LT$core..cell..BorrowRef$GT$17hefc0a659985d934eE"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sys::unix::fd::FileDesc>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr49drop_in_place$LT$std..sys..unix..fd..FileDesc$GT$17h62bc919531f57d83E"(i32* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::os::fd::owned::OwnedFd>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17h04abbeea0104ef13E"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17h41735b0dc41608f8E(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") %0, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %src) unnamed_addr #0 {
start:
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<alloc::string::String>>>", align 8
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>", align 8
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %tmp to %"core::option::Option<core::cell::RefCell<alloc::string::String>>"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %2 to i8*
  %4 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_6 to i8*
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 40, i1 false)
  %7 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_6 to %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<alloc::string::String>>>"*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_3.i to i8*
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 40, i1 false)
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_3.i to %"core::option::Option<core::cell::RefCell<alloc::string::String>>"*
  %11 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %0 to i8*
  %12 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 40, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr4read17h9d1cea0c38a6c272E({ [0 x i8]*, i64 }* %src) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %tmp = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  store { i8*, i64 } %7, { i8*, i64 }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %tmp to { [0 x i8]*, i64 }*
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = bitcast { [0 x i8]*, i64 }* %8 to i8*
  %10 = bitcast { [0 x i8]*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 0
  %_6.0 = load i8*, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 1
  %_6.1 = load i64, i64* %12, align 8
  %13 = bitcast i8* %_6.0 to [0 x i8]*
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %_6.1, 1
  %16 = extractvalue { [0 x i8]*, i64 } %15, 0
  %17 = extractvalue { [0 x i8]*, i64 } %15, 1
  %18 = extractvalue { [0 x i8]*, i64 } %15, 0
  %19 = extractvalue { [0 x i8]*, i64 } %15, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %20 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %18, 0
  %21 = insertvalue { [0 x i8]*, i64 } %20, i64 %19, 1
  ret { [0 x i8]*, i64 } %21
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17hb84230a4cc1bc3fdE(%"core::option::Option<core::cell::RefCell<usize>>"* sret(%"core::option::Option<core::cell::RefCell<usize>>") %0, %"core::option::Option<core::cell::RefCell<usize>>"* %src) unnamed_addr #0 {
start:
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<usize>>>", align 8
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<usize>>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<usize>>>", align 8
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<usize>>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<usize>>>"* %tmp to %"core::option::Option<core::cell::RefCell<usize>>"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %2 to i8*
  %4 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<usize>>>"* %_6 to i8*
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<usize>>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<usize>>>"* %_6 to %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<usize>>>"*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<usize>>>"* %_3.i to i8*
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<usize>>>"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<usize>>>"* %_3.i to %"core::option::Option<core::cell::RefCell<usize>>"*
  %11 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %0 to i8*
  %12 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17hc62b5dabf063f79aE(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"alloc::string::String"* %src) unnamed_addr #0 {
start:
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>", align 8
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>", align 8
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %tmp to %"alloc::string::String"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"alloc::string::String"* %2 to i8*
  %4 = bitcast %"alloc::string::String"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %_6 to i8*
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %_6 to %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"* %_3.i to i8*
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"* %_3.i to %"alloc::string::String"*
  %11 = bitcast %"alloc::string::String"* %0 to i8*
  %12 = bitcast %"alloc::string::String"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr4read17hd3d7a92f84b86cdeE(i64* %src) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %1 = bitcast i64* %0 to {}*
  %2 = load i64, i64* %0, align 8
  store i64 %2, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i64* %tmp to i8*
  %4 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %_6 = load i64, i64* %tmp, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17hd6d4fa74d0f6d2d5E(%"core::option::Option<core::cell::RefCell<i32>>"* sret(%"core::option::Option<core::cell::RefCell<i32>>") %0, %"core::option::Option<core::cell::RefCell<i32>>"* %src) unnamed_addr #0 {
start:
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<i32>>>", align 8
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>", align 8
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>"* %tmp to %"core::option::Option<core::cell::RefCell<i32>>"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %2 to i8*
  %4 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>"* %_6 to i8*
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>"* %_6 to %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<i32>>>"*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<i32>>>"* %_3.i to i8*
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<i32>>>"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<i32>>>"* %_3.i to %"core::option::Option<core::cell::RefCell<i32>>"*
  %11 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %0 to i8*
  %12 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @_ZN4core3ptr4read17hf3e41a1ba5ed45e2E(i8* %src) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %tmp = alloca i8, align 1
  %1 = bitcast i8* %0 to {}*
  %2 = load i8, i8* %0, align 1
  store i8 %2, i8* %tmp, align 1
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %tmp, i8* align 1 %src, i64 1, i1 false)
  %_6 = load i8, i8* %tmp, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr4read17hf71fc7a4122d94daE(i64* %src) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %1 = bitcast i64* %0 to {}*
  %2 = load i64, i64* %0, align 8
  store i64 %2, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i64* %tmp to i8*
  %4 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %_6 = load i64, i64* %tmp, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %_6
}

; core::ptr::drop_in_place<core::cell::RefMut<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr50drop_in_place$LT$core..cell..RefMut$LT$i32$GT$$GT$17h939472ced23394a3E"({ i32*, i64* }* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::cell::BorrowRefMut>
  call void @"_ZN4core3ptr45drop_in_place$LT$core..cell..BorrowRefMut$GT$17hd80c5662057d3daaE"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<&str>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17hb406b4f70dcf6f14E"(%"alloc::vec::Vec<&str>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0c23ec2892382bceE"(%"alloc::vec::Vec<&str>"* align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<&str>"* %_1 to { i64*, i64 }*
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h82d68fa279424319E"({ i64*, i64 }* %1) #17
          to label %bb1 unwind label %abort

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<&str>"* %_1 to { i64*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h82d68fa279424319E"({ i64*, i64 }* %7)
  br label %bb2

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<[probe_RSE::_ProbeNode]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr52drop_in_place$LT$$u5b$probe_RSE.._ProbeNode$u5d$$GT$17h2d3ecd9134fca327E"([0 x %_ProbeNode]* %_1.0, i64 %_1.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_9 = alloca %_ProbeNode*, align 8
  %_4 = alloca i64, align 8
  br i1 false, label %bb7, label %bb12

bb7:                                              ; preds = %start
  store i64 0, i64* %_4, align 8
  br label %bb6

bb12:                                             ; preds = %start
  %1 = bitcast [0 x %_ProbeNode]* %_1.0 to %_ProbeNode*
  store %_ProbeNode* %1, %_ProbeNode** %_9, align 8
  %2 = load %_ProbeNode*, %_ProbeNode** %_9, align 8
  %_10 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %2, i64 %_1.1
  br label %bb11

bb11:                                             ; preds = %bb10, %bb12
  %3 = load %_ProbeNode*, %_ProbeNode** %_9, align 8
  %_14 = icmp eq %_ProbeNode* %3, %_10
  br i1 %_14, label %bb1, label %bb10

bb10:                                             ; preds = %bb11
  %_13 = load %_ProbeNode*, %_ProbeNode** %_9, align 8
  %4 = load %_ProbeNode*, %_ProbeNode** %_9, align 8
  %5 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %4, i64 1
  store %_ProbeNode* %5, %_ProbeNode** %_9, align 8
; invoke core::ptr::drop_in_place<probe_RSE::_ProbeNode>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$probe_RSE.._ProbeNode$GT$17h40252f76163ae8d0E"(%_ProbeNode* %_13)
          to label %bb11 unwind label %cleanup

bb1:                                              ; preds = %bb6, %bb11
  ret void

bb9:                                              ; preds = %bb8, %cleanup
  %6 = load %_ProbeNode*, %_ProbeNode** %_9, align 8
  %_12 = icmp eq %_ProbeNode* %6, %_10
  br i1 %_12, label %bb2, label %bb8

cleanup:                                          ; preds = %bb10
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb9

bb8:                                              ; preds = %bb9
  %_11 = load %_ProbeNode*, %_ProbeNode** %_9, align 8
  %12 = load %_ProbeNode*, %_ProbeNode** %_9, align 8
  %13 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %12, i64 1
  store %_ProbeNode* %13, %_ProbeNode** %_9, align 8
; invoke core::ptr::drop_in_place<probe_RSE::_ProbeNode>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$probe_RSE.._ProbeNode$GT$17h40252f76163ae8d0E"(%_ProbeNode* %_11) #17
          to label %bb9 unwind label %abort

bb2:                                              ; preds = %bb4, %bb9
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

abort:                                            ; preds = %bb3, %bb8
  %20 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb6:                                              ; preds = %bb5, %bb7
  %21 = load i64, i64* %_4, align 8
  %_8 = icmp eq i64 %21, %_1.1
  br i1 %_8, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %22 = load i64, i64* %_4, align 8
  %_7 = getelementptr inbounds [0 x %_ProbeNode], [0 x %_ProbeNode]* %_1.0, i64 0, i64 %22
  %23 = load i64, i64* %_4, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %_4, align 8
; invoke core::ptr::drop_in_place<probe_RSE::_ProbeNode>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$probe_RSE.._ProbeNode$GT$17h40252f76163ae8d0E"(%_ProbeNode* %_7)
          to label %bb6 unwind label %cleanup1

bb4:                                              ; preds = %bb3, %cleanup1
  %25 = load i64, i64* %_4, align 8
  %_6 = icmp eq i64 %25, %_1.1
  br i1 %_6, label %bb2, label %bb3

cleanup1:                                         ; preds = %bb5
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  %28 = extractvalue { i8*, i32 } %26, 1
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %27, i8** %29, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %28, i32* %30, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %31 = load i64, i64* %_4, align 8
  %_5 = getelementptr inbounds [0 x %_ProbeNode], [0 x %_ProbeNode]* %_1.0, i64 0, i64 %31
  %32 = load i64, i64* %_4, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %_4, align 8
; invoke core::ptr::drop_in_place<probe_RSE::_ProbeNode>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$probe_RSE.._ProbeNode$GT$17h40252f76163ae8d0E"(%_ProbeNode* %_5) #17
          to label %bb4 unwind label %abort
}

; core::ptr::drop_in_place<core::cell::RefMut<usize>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr52drop_in_place$LT$core..cell..RefMut$LT$usize$GT$$GT$17h8f1e14a786ae7922E"({ i64*, i64* }* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::cell::BorrowRefMut>
  call void @"_ZN4core3ptr45drop_in_place$LT$core..cell..BorrowRefMut$GT$17hd80c5662057d3daaE"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::thread::local::AccessError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr52drop_in_place$LT$std..thread..local..AccessError$GT$17h7e759a795d6355ecE"(%"std::thread::local::AccessError"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h41412c6beb7b7277E"({ i8*, i64 }* %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfe377038d2334d31E"({ i8*, i64 }* align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<&mut alloc::string::String>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr54drop_in_place$LT$$RF$mut$u20$alloc..string..String$GT$17h52547f9fdce9ab4aE"(%"alloc::string::String"** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<core::num::error::TryFromIntError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr54drop_in_place$LT$core..num..error..TryFromIntError$GT$17h839a7c0c4efc941aE"(%"core::num::error::TryFromIntError"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<std::io::error::repr_bitpacked::Repr>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17hee72db28258cf508E"(i8** %_1) unnamed_addr #1 {
start:
; call <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop
  call void @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h27d3238970988e1cE"(i8** align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h82d68fa279424319E"({ i64*, i64 }* %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0cccc16ec20c5f85E"({ i64*, i64 }* align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h05ac2ab0f9444135E(i64* %dst, i64 %0) unnamed_addr #0 {
start:
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
  %1 = bitcast i64* %dst to i8*
  %2 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h3699741a633db402E(%"core::option::Option<core::cell::RefCell<i32>>"* %dst, %"core::option::Option<core::cell::RefCell<i32>>"* %src) unnamed_addr #0 {
start:
  %0 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %dst to i8*
  %1 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h4da5f277be3969a8E(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %dst, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %src) unnamed_addr #0 {
start:
  %0 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %dst to i8*
  %1 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 40, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h85c4fc776774606aE(%_ProbeNode* %dst, %_ProbeNode* %src) unnamed_addr #0 {
start:
  %0 = bitcast %_ProbeNode* %dst to i8*
  %1 = bitcast %_ProbeNode* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 88, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h8f3337dad8a2dac2E(%"core::option::Option<core::cell::RefCell<usize>>"* %dst, %"core::option::Option<core::cell::RefCell<usize>>"* %src) unnamed_addr #0 {
start:
  %0 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %dst to i8*
  %1 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h92ee4a40cda033f2E(%"alloc::string::String"* %dst, %"alloc::string::String"* %src) unnamed_addr #0 {
start:
  %0 = bitcast %"alloc::string::String"* %dst to i8*
  %1 = bitcast %"alloc::string::String"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h99d4dee62def0415E({ [0 x i8]*, i64 }* %dst, [0 x i8]* align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %src = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = bitcast { [0 x i8]*, i64 }* %dst to i8*
  %5 = bitcast { [0 x i8]*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17ha7f34f9a753f95ffE(i8* %dst, i8 %0) unnamed_addr #0 {
start:
  %src = alloca i8, align 1
  store i8 %0, i8* %src, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 1, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hb5428cbba680a821E(i64* %dst, i64 %0) unnamed_addr #0 {
start:
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
  %1 = bitcast i64* %dst to i8*
  %2 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hc770d376ad7da89eE(i8* %dst, i8 %0) unnamed_addr #0 {
start:
  %src = alloca i8, align 1
  store i8 %0, i8* %src, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 1, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hde5b50688730c5daE(%"alloc::vec::Vec<_ProbeNode>"* %dst, %"alloc::vec::Vec<_ProbeNode>"* %src) unnamed_addr #0 {
start:
  %0 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %dst to i8*
  %1 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h474c10dddfe9366aE"({ i32*, i8 }* %_1) unnamed_addr #1 {
start:
; call <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5b7dea98b0e6d3b5E"({ i32*, i8 }* align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<std::fs::File>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr64drop_in_place$LT$core..cell..UnsafeCell$LT$std..fs..File$GT$$GT$17h82779ffdc3d8edf9E"(i32* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17he19acbe034eaa267E"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<probe_RSE::_ProbeNode>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$17h3e5a72bfbebb33cbE"(%"alloc::vec::Vec<_ProbeNode>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he85196254b0f3720E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %_1 to { i64*, i64 }*
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<probe_RSE::_ProbeNode>>
  invoke void @"_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$probe_RSE.._ProbeNode$GT$$GT$17hbb55bbcda800b1e9E"({ i64*, i64 }* %1) #17
          to label %bb1 unwind label %abort

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %_1 to { i64*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<probe_RSE::_ProbeNode>>
  call void @"_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$probe_RSE.._ProbeNode$GT$$GT$17hbb55bbcda800b1e9E"({ i64*, i64 }* %7)
  br label %bb2

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::cell::BorrowRef>
  call void @"_ZN4core3ptr42drop_in_place$LT$core..cell..BorrowRef$GT$17hefc0a659985d934eE"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::Mutex<std::fs::File>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$17h778bf46131b5f04cE"(%"std::sync::mutex::Mutex<std::fs::File>"* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<core::cell::UnsafeCell<std::fs::File>>
  call void @"_ZN4core3ptr64drop_in_place$LT$core..cell..UnsafeCell$LT$std..fs..File$GT$$GT$17h82779ffdc3d8edf9E"(i32* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<probe_RSE::_init_::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr67drop_in_place$LT$probe_RSE.._init_..$u7b$$u7b$closure$u7d$$u7d$$GT$17hbd64bf292dedb01fE"({ i8*, i64* }* %_1) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64* }* %_1 to { {}*, [3 x i64]* }*
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::ops::function::Fn<(&core::panic::panic_info::PanicInfo,)>+Output = ()+core::marker::Sync+core::marker::Send>>
  call void @"_ZN4core3ptr214drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..Fn$LT$$LP$$RF$core..panic..panic_info..PanicInfo$C$$RP$$GT$$u2b$Output$u20$$u3d$$u20$$LP$$RP$$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$17hd7c5b8b906f8d6b3E"({ {}*, [3 x i64]* }* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17he8a7ac6e9e733bb1E"(%"std::io::error::Custom"** %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = bitcast %"std::io::error::Custom"** %_1 to i64**
  %2 = bitcast i64** %1 to %"std::io::error::Custom"**
  %3 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %2, align 8
; invoke core::ptr::drop_in_place<std::io::error::Custom>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17hcbf0a56eeae860efE"(%"std::io::error::Custom"* %3)
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %4 = bitcast %"std::io::error::Custom"** %_1 to i64**
  %5 = load i64*, i64** %4, align 8, !nonnull !3, !noundef !3
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17hc6f0715c5b20a405E(i64* %5) #17
          to label %bb2 unwind label %abort

cleanup:                                          ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %11 = bitcast %"std::io::error::Custom"** %_1 to i64**
  %12 = load i64*, i64** %11, align 8, !nonnull !3, !noundef !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hc6f0715c5b20a405E(i64* %12)
  br label %bb1

abort:                                            ; preds = %bb4
  %13 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb2:                                              ; preds = %bb4
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<core::cell::RefMut<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr68drop_in_place$LT$core..cell..RefMut$LT$alloc..string..String$GT$$GT$17hc9a43b06e52f5a04E"({ i64*, i64* }* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::cell::BorrowRefMut>
  call void @"_ZN4core3ptr45drop_in_place$LT$core..cell..BorrowRefMut$GT$17hd80c5662057d3daaE"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::RefCell<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr69drop_in_place$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$17h3668d8037f1a408fE"(%"core::cell::RefCell<alloc::string::String>"* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"core::cell::RefCell<alloc::string::String>", %"core::cell::RefCell<alloc::string::String>"* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::string::String>>
  call void @"_ZN4core3ptr72drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..string..String$GT$$GT$17h578296e099daa90eE"(%"core::cell::UnsafeCell<alloc::string::String>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h215e984123570049E"({ [0 x i8]*, i64 }* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_2 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5a9da12769749ad0E"({ [0 x i8]*, i64 }* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  store i64* %_2, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %1
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h2bc4a18a5016f8d7E"(%"std::io::error::Custom"* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_2 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0306b089917bec44E"(%"std::io::error::Custom"* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  store i64* %_2, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %1
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5c99dae1d0335b2bE"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  store i8* %_2, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !3, !noundef !3
  ret i8* %1
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hbad6b5a441008e6cE"(%"alloc::vec::Vec<_ProbeNode>"* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_2 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h00a2b5b892261548E"(%"alloc::vec::Vec<_ProbeNode>"* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  store i64* %_2, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %1
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hca59a299ae736800E"(%_ProbeNode* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_2 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h10c68770b7646b31E"(%_ProbeNode* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  store i64* %_2, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h2f7e3bb35799c758E"(i8* %self.0, i64* align 8 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hfbe45fe714a11e2fE"(i8* %self.0, i64* align 8 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h173a8eb22b73bb4fE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h33c66d42388e949cE"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6baa0f25f295e3ddE"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h173a8eb22b73bb4fE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h4be912dfee48dc9aE"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3a611bbf58f6af38E"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h173a8eb22b73bb4fE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h513301e26e6e15d2E"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17he43962103e5a91e8E"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h173a8eb22b73bb4fE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h86e7a40adbafa37bE"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h4f50e504811562ceE"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h173a8eb22b73bb4fE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17ha823fddb9e4772c2E"(i8* %self.0, i64* align 8 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6afa3b17763ea760E"(i8* %self.0, i64* align 8 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h173a8eb22b73bb4fE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17he4a2ba8f465b151cE"(i8* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h622d54bd5b2d5989E"(i8* %self)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h173a8eb22b73bb4fE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h051062658672e4a5E"(i8* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h5798e50d50d90568E"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h48e3c888979da70dE"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::vec::Vec<_ProbeNode>"* %0
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h75071ed0c53b2610E"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h045696f7015da1fbE"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %0
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha10dbb7c449cf66aE"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h566cc3b78e934cc0E"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %0
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17haa77a50a27769782E"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2668ba30b6e2060cE"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret { [0 x i8]*, i64 }* %0
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hbb5ee70284e03120E"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb0b277d2cfc6cbefE"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %0
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %_ProbeNode* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17he756531420a7d159E"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call %_ProbeNode* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h187f07e9a8077e76E"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %_ProbeNode* %0
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h09a2eac84e692f21E"({ i8*, i64* }* align 8 %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h8f4ad7e29ef5ff83E"({ i8*, i64* }* align 8 %self)
  %1 = extractvalue { {}*, [3 x i64]* } %0, 0
  %2 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %1, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %2, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h1ab98a7040d3d635E"({ i8*, i64* }* align 8 %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h812f5330882a2d79E"({ i8*, i64* }* align 8 %self)
  %1 = extractvalue { {}*, [3 x i64]* } %0, 0
  %2 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %1, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %2, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hbdc3e58e7d93b5ddE"(i64** align 8 %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 %"std::io::error::Custom"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h0dcdf4c815efaa09E"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::io::error::Custom"* %0
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h3a47a2829ecea7a6E"() unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::dangling
  %_1 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h8243240fd2d32a4aE"()
  br label %bb1

bb1:                                              ; preds = %start
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h173a8eb22b73bb4fE"(i8* %_1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17hb39ae4d74540612bE"() unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::dangling
  %_1 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h774c1f98946bab12E"()
  br label %bb1

bb1:                                              ; preds = %start
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %0 = call i64* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h2de1272d8a168fceE"(i64* %_1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17hcab60bc2b9726a26E"(%"core::option::Option<alloc::string::String>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::option::Option<alloc::string::String>"* %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<alloc::string::String>"* %_1 to %"core::option::Option<alloc::string::String>::Some"*
  %5 = bitcast %"core::option::Option<alloc::string::String>::Some"* %4 to %"alloc::string::String"*
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %5)
  br label %bb1
}

; core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h78d0f88112f077a8E"({ i32*, i8 }* %_1) unnamed_addr #1 {
start:
; call <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc5eb041429a507caE"({ i32*, i8 }* align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Arc<probe_RSE::_ProbeSemaphore>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr71drop_in_place$LT$alloc..sync..Arc$LT$probe_RSE.._ProbeSemaphore$GT$$GT$17hac30eb51943f0948E"(i64** %_1) unnamed_addr #1 {
start:
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h367a5493ebe72da7E"(i64** align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<probe_RSE::_ProbeNode>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$probe_RSE.._ProbeNode$GT$$GT$17hbb55bbcda800b1e9E"({ i64*, i64 }* %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc5681820a40eae58E"({ i64*, i64 }* align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Weak<probe_RSE::_ProbeSemaphore>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr72drop_in_place$LT$alloc..sync..Weak$LT$probe_RSE.._ProbeSemaphore$GT$$GT$17h27ffb27093332a60E"(i64** %_1) unnamed_addr #1 {
start:
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6973a29d0d923927E"(i64** align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr72drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..string..String$GT$$GT$17h578296e099daa90eE"(%"core::cell::UnsafeCell<alloc::string::String>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::cell::UnsafeCell<alloc::string::String>"* %_1 to %"alloc::string::String"*
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<[alloc::vec::Vec<probe_RSE::_ProbeNode>]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr75drop_in_place$LT$$u5b$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$u5d$$GT$17h0d3610e516b5640fE"([0 x %"alloc::vec::Vec<_ProbeNode>"]* %_1.0, i64 %_1.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_9 = alloca %"alloc::vec::Vec<_ProbeNode>"*, align 8
  %_4 = alloca i64, align 8
  br i1 false, label %bb7, label %bb12

bb7:                                              ; preds = %start
  store i64 0, i64* %_4, align 8
  br label %bb6

bb12:                                             ; preds = %start
  %1 = bitcast [0 x %"alloc::vec::Vec<_ProbeNode>"]* %_1.0 to %"alloc::vec::Vec<_ProbeNode>"*
  store %"alloc::vec::Vec<_ProbeNode>"* %1, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %2 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %_10 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %2, i64 %_1.1
  br label %bb11

bb11:                                             ; preds = %bb10, %bb12
  %3 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %_14 = icmp eq %"alloc::vec::Vec<_ProbeNode>"* %3, %_10
  br i1 %_14, label %bb1, label %bb10

bb10:                                             ; preds = %bb11
  %_13 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %4 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %5 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %4, i64 1
  store %"alloc::vec::Vec<_ProbeNode>"* %5, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<probe_RSE::_ProbeNode>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$17h3e5a72bfbebb33cbE"(%"alloc::vec::Vec<_ProbeNode>"* %_13)
          to label %bb11 unwind label %cleanup

bb1:                                              ; preds = %bb6, %bb11
  ret void

bb9:                                              ; preds = %bb8, %cleanup
  %6 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %_12 = icmp eq %"alloc::vec::Vec<_ProbeNode>"* %6, %_10
  br i1 %_12, label %bb2, label %bb8

cleanup:                                          ; preds = %bb10
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb9

bb8:                                              ; preds = %bb9
  %_11 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %12 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
  %13 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %12, i64 1
  store %"alloc::vec::Vec<_ProbeNode>"* %13, %"alloc::vec::Vec<_ProbeNode>"** %_9, align 8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<probe_RSE::_ProbeNode>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$17h3e5a72bfbebb33cbE"(%"alloc::vec::Vec<_ProbeNode>"* %_11) #17
          to label %bb9 unwind label %abort

bb2:                                              ; preds = %bb4, %bb9
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

abort:                                            ; preds = %bb3, %bb8
  %20 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb6:                                              ; preds = %bb5, %bb7
  %21 = load i64, i64* %_4, align 8
  %_8 = icmp eq i64 %21, %_1.1
  br i1 %_8, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %22 = load i64, i64* %_4, align 8
  %_7 = getelementptr inbounds [0 x %"alloc::vec::Vec<_ProbeNode>"], [0 x %"alloc::vec::Vec<_ProbeNode>"]* %_1.0, i64 0, i64 %22
  %23 = load i64, i64* %_4, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %_4, align 8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<probe_RSE::_ProbeNode>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$17h3e5a72bfbebb33cbE"(%"alloc::vec::Vec<_ProbeNode>"* %_7)
          to label %bb6 unwind label %cleanup1

bb4:                                              ; preds = %bb3, %cleanup1
  %25 = load i64, i64* %_4, align 8
  %_6 = icmp eq i64 %25, %_1.1
  br i1 %_6, label %bb2, label %bb3

cleanup1:                                         ; preds = %bb5
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  %28 = extractvalue { i8*, i32 } %26, 1
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %27, i8** %29, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %28, i32* %30, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %31 = load i64, i64* %_4, align 8
  %_5 = getelementptr inbounds [0 x %"alloc::vec::Vec<_ProbeNode>"], [0 x %"alloc::vec::Vec<_ProbeNode>"]* %_1.0, i64 0, i64 %31
  %32 = load i64, i64* %_4, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %_4, align 8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<probe_RSE::_ProbeNode>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$17h3e5a72bfbebb33cbE"(%"alloc::vec::Vec<_ProbeNode>"* %_5) #17
          to label %bb4 unwind label %abort
}

; core::ptr::drop_in_place<std::io::Write::write_fmt::Adapter<std::fs::File>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr76drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..fs..File$GT$$GT$17h646dc496cf61cd3eE"({ i32*, i8* }* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  call void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17hc5791f008c85b35fE"(i8** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::mut_ptr::<impl *mut T>::wrapping_sub
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_sub17he07ac483090619a9E"(i8* %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = sub i64 0, %count
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr i8, i8* %self, i64 %1
  store i8* %2, i8** %0, align 8
  %_3.i = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %_3.i
}

; core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h6ed1c47a1e6c89c4E"(i8* %self, i8* %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::mut_ptr::<impl *mut T>::addr
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h8252082fb26de1b2E"({}* %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = bitcast i64* %0 to {}**
  store {}* %self, {}** %1, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::ptr::mut_ptr::<impl *mut T>::addr
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h8efe9d811cc993a9E"(i8* %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = bitcast i64* %0 to i8**
  store i8* %self, i8** %1, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::ptr::mut_ptr::<impl *mut T>::addr
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17ha969293a8447fccdE"({ [0 x i8]*, i64 }* %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = bitcast i64* %0 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %1, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1c5791dd72ff3228E"(%_ProbeNode* %self) unnamed_addr #0 {
start:
  %0 = alloca {}*, align 8
  %_2 = bitcast %_ProbeNode* %self to i8*
  %1 = bitcast {}** %0 to i64*
  store i64 0, i64* %1, align 8
  %2 = load {}*, {}** %0, align 8
; call core::ptr::metadata::from_raw_parts_mut
  %3 = call i8* @_ZN4core3ptr8metadata18from_raw_parts_mut17h112880dfed16ce38E({}* %2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h6ed1c47a1e6c89c4E"(i8* %_2, i8* %3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h68fb6838fe63e5a2E"({ [0 x i8]*, i64 }* %self) unnamed_addr #0 {
start:
  %0 = alloca {}*, align 8
  %_2 = bitcast { [0 x i8]*, i64 }* %self to i8*
  %1 = bitcast {}** %0 to i64*
  store i64 0, i64* %1, align 8
  %2 = load {}*, {}** %0, align 8
; call core::ptr::metadata::from_raw_parts_mut
  %3 = call i8* @_ZN4core3ptr8metadata18from_raw_parts_mut17h112880dfed16ce38E({}* %2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h6ed1c47a1e6c89c4E"(i8* %_2, i8* %3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha52556d6f760bcbeE"(i8* %self) unnamed_addr #0 {
start:
  %0 = alloca {}*, align 8
  %1 = bitcast {}** %0 to i64*
  store i64 0, i64* %1, align 8
  %2 = load {}*, {}** %0, align 8
; call core::ptr::metadata::from_raw_parts_mut
  %3 = call i8* @_ZN4core3ptr8metadata18from_raw_parts_mut17h112880dfed16ce38E({}* %2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h6ed1c47a1e6c89c4E"(i8* %self, i8* %3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hb303bc2295cae1f1E"(%"alloc::vec::Vec<_ProbeNode>"* %self) unnamed_addr #0 {
start:
  %0 = alloca {}*, align 8
  %_2 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %self to i8*
  %1 = bitcast {}** %0 to i64*
  store i64 0, i64* %1, align 8
  %2 = load {}*, {}** %0, align 8
; call core::ptr::metadata::from_raw_parts_mut
  %3 = call i8* @_ZN4core3ptr8metadata18from_raw_parts_mut17h112880dfed16ce38E({}* %2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h6ed1c47a1e6c89c4E"(i8* %_2, i8* %3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17hc5791f008c85b35fE"(i8** %_1) unnamed_addr #1 {
start:
  %0 = bitcast i8** %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h40e63bf6e01db46fE"(i8** %_1)
  br label %bb1
}

; core::ptr::drop_in_place<core::result::Result<std::fs::File,std::io::error::Error>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr86drop_in_place$LT$core..result..Result$LT$std..fs..File$C$std..io..error..Error$GT$$GT$17h4d0d01666eac015eE"(%"core::result::Result<std::fs::File, std::io::error::Error>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %_1 to i32*
  %1 = load i32, i32* %0, align 8, !range !19, !noundef !3
  %_2 = zext i32 %1 to i64
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %_1 to %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Ok", %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"* %3, i32 0, i32 1
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17he19acbe034eaa267E"(i32* %4)
  br label %bb1

bb3:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %_1 to %"core::result::Result<std::fs::File, std::io::error::Error>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Err", %"core::result::Result<std::fs::File, std::io::error::Error>::Err"* %5, i32 0, i32 1
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h40e63bf6e01db46fE"(i8** %6)
  br label %bb1

bb1:                                              ; preds = %bb2, %bb3
  ret void
}

; core::ptr::drop_in_place<&mut std::io::Write::write_fmt::Adapter<std::fs::File>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr88drop_in_place$LT$$RF$mut$u20$std..io..Write..write_fmt..Adapter$LT$std..fs..File$GT$$GT$17ha489f31b6c4efb0dE"({ i32*, i8* }** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr88drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$17hbbd851914b219a57E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb2f14b15fa09dc15E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_1 to { i64*, i64 }*
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$17hd9ffa6da4ca9f6bdE"({ i64*, i64 }* %1) #17
          to label %bb1 unwind label %abort

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_1 to { i64*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>
  call void @"_ZN4core3ptr95drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$17hd9ffa6da4ca9f6bdE"({ i64*, i64 }* %7)
  br label %bb2

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<std::fs::File>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr89drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$17hc3c28b828fd92724E"(i64** %_1) unnamed_addr #1 {
start:
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7559eb5a11871516E"(i64** align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h398cb17a69808bb9E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h5bd2ddefacc0ae9eE({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[_ProbeNode]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[_ProbeNode]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[_ProbeNode]>"* %_3 to { [0 x %_ProbeNode]*, i64 }*
  %10 = getelementptr inbounds { [0 x %_ProbeNode]*, i64 }, { [0 x %_ProbeNode]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %_ProbeNode]*, [0 x %_ProbeNode]** %10, align 8
  %12 = getelementptr inbounds { [0 x %_ProbeNode]*, i64 }, { [0 x %_ProbeNode]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %_ProbeNode]*, i64 } undef, [0 x %_ProbeNode]* %11, 0
  %15 = insertvalue { [0 x %_ProbeNode]*, i64 } %14, i64 %13, 1
  ret { [0 x %_ProbeNode]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h8abebfedb3d123f4E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hbbac6fa2e4c492c3E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<_ProbeNode>]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<_ProbeNode>]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<_ProbeNode>]>"* %_3 to { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }*
  %10 = getelementptr inbounds { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }, { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %"alloc::vec::Vec<_ProbeNode>"]*, [0 x %"alloc::vec::Vec<_ProbeNode>"]** %10, align 8
  %12 = getelementptr inbounds { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }, { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %11, 0
  %15 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %14, i64 %13, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @_ZN4core3ptr8metadata14from_raw_parts17hd784b2c45c387aadE({}* %data_address) unnamed_addr #0 {
start:
  %_4 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds %"core::ptr::metadata::PtrComponents<u8>", %"core::ptr::metadata::PtrComponents<u8>"* %_4, i32 0, i32 1
  %2 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_3 to %"core::ptr::metadata::PtrComponents<u8>"*
  %3 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %2 to i8*
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_3 to i8**
  %6 = load i8*, i8** %5, align 8
  ret i8* %6
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hea5f6d929f545e0eE({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[&str]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[&str]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[&str]>"* %_3 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %10 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %10, align 8
  %12 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } undef, [0 x { [0 x i8]*, i64 }]* %11, 0
  %15 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %14, i64 %13, 1
  ret { [0 x { [0 x i8]*, i64 }]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h05197e5ecf4e6453E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[_ProbeNode]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[_ProbeNode]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[_ProbeNode]>"* %_3 to { [0 x %_ProbeNode]*, i64 }*
  %10 = getelementptr inbounds { [0 x %_ProbeNode]*, i64 }, { [0 x %_ProbeNode]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %_ProbeNode]*, [0 x %_ProbeNode]** %10, align 8
  %12 = getelementptr inbounds { [0 x %_ProbeNode]*, i64 }, { [0 x %_ProbeNode]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %_ProbeNode]*, i64 } undef, [0 x %_ProbeNode]* %11, 0
  %15 = insertvalue { [0 x %_ProbeNode]*, i64 } %14, i64 %13, 1
  ret { [0 x %_ProbeNode]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @_ZN4core3ptr8metadata18from_raw_parts_mut17h112880dfed16ce38E({}* %data_address) unnamed_addr #0 {
start:
  %_4 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds %"core::ptr::metadata::PtrComponents<u8>", %"core::ptr::metadata::PtrComponents<u8>"* %_4, i32 0, i32 1
  %2 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_3 to %"core::ptr::metadata::PtrComponents<u8>"*
  %3 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %2 to i8*
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_3 to i8**
  %6 = load i8*, i8** %5, align 8
  ret i8* %6
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h230b9f3bc680d53bE({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h87545ffaf0d59e87E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<_ProbeNode>]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<_ProbeNode>]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<_ProbeNode>]>"* %_3 to { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }*
  %10 = getelementptr inbounds { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }, { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %"alloc::vec::Vec<_ProbeNode>"]*, [0 x %"alloc::vec::Vec<_ProbeNode>"]** %10, align 8
  %12 = getelementptr inbounds { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }, { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %11, 0
  %15 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %14, i64 %13, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h9d1d96ab2121206aE({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[&str]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[&str]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[&str]>"* %_3 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %10 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %10, align 8
  %12 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } undef, [0 x { [0 x i8]*, i64 }]* %11, 0
  %15 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %14, i64 %13, 1
  ret { [0 x { [0 x i8]*, i64 }]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hebc9cdf43d7debe4E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr8metadata8metadata17ha6c6bc888a3e4b5bE([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %ptr.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h00a2b5b892261548E"(%"alloc::vec::Vec<_ProbeNode>"* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::vec::Vec<_ProbeNode>"**
  store %"alloc::vec::Vec<_ProbeNode>"* %ptr, %"alloc::vec::Vec<_ProbeNode>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0306b089917bec44E"(%"std::io::error::Custom"* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"std::io::error::Custom"**
  store %"std::io::error::Custom"* %ptr, %"std::io::error::Custom"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !3, !noundef !3
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h10c68770b7646b31E"(%_ProbeNode* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %_ProbeNode**
  store %_ProbeNode* %ptr, %_ProbeNode** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h3b31168e317ff166E"([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %ptr.1, i64* %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !3, !noundef !3
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5a9da12769749ad0E"({ [0 x i8]*, i64 }* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h660131231ad28a8aE"({}* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = bitcast i8** %0 to {}**
  store {}* %ptr, {}** %1, align 8
  %2 = load i8*, i8** %0, align 8, !nonnull !3, !noundef !3
  ret i8* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17ha7a921e7f85d7722E"(%"std::io::error::SimpleMessage"* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"std::io::error::SimpleMessage"**
  store %"std::io::error::SimpleMessage"* %ptr, %"std::io::error::SimpleMessage"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd3d3edbdcd68e33aE"(i64* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd8794e3bae9386b5E"(%"alloc::string::String"* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::string::String"**
  store %"alloc::string::String"* %ptr, %"alloc::string::String"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hfbd2cf597620e47fE"(i32* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  store i32* %ptr, i32** %0, align 8
  %1 = load i32*, i32** %0, align 8, !nonnull !3, !noundef !3
  ret i32* %1
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h774d620dffb728acE"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha52556d6f760bcbeE"(i8* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  %1 = bitcast i8** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_5 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %ptr)
  br label %bb3

bb3:                                              ; preds = %bb2
  store i8* %_5, i8** %0, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %2 = load i8*, i8** %0, align 8
  ret i8* %2
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h0e138b66c798cf8fE"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h045696f7015da1fbE"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h173894d03b6bf12aE"(i8* %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h79455db00a6c950dE"(i8* %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to %"alloc::vec::Vec<_ProbeNode>"*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h00a2b5b892261548E"(%"alloc::vec::Vec<_ProbeNode>"* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3a611bbf58f6af38E"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"std::io::error::Custom"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc5a060135ac32dd6E"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"std::io::error::Custom"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h4f50e504811562ceE"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %_ProbeNode* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h187f07e9a8077e76E"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %_ProbeNode* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5ab5d9af92d364b3E"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb0b277d2cfc6cbefE"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5ff4ac1891867cbcE"(i8* %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h79455db00a6c950dE"(i8* %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to %_ProbeNode*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h10c68770b7646b31E"(%_ProbeNode* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h622d54bd5b2d5989E"(i8* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6a58a9255f006314E"(i8* %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h79455db00a6c950dE"(i8* %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to { [0 x i8]*, i64 }*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5a9da12769749ad0E"({ [0 x i8]*, i64 }* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6afa3b17763ea760E"(i8* %self.0, i64* align 8 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h590c3f641ccb1fb0E"(i8* %self.0, i64* align 8 %self.1)
  %_3.0 = extractvalue { {}*, [3 x i64]* } %0, 0
  %_3.1 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast {}* %_3.0 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6baa0f25f295e3ddE"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h48e3c888979da70dE"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h830f356fcee4a203E"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h566cc3b78e934cc0E"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h9b21c027af18fc12E"(i8* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call {}* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h354de0dc25515eabE"(i8* %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast {}* %_3 to %"std::io::error::SimpleMessage"*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17ha7a921e7f85d7722E"(%"std::io::error::SimpleMessage"* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hd974d218b303352dE"(i8* %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h79455db00a6c950dE"(i8* %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17he43962103e5a91e8E"(i64* %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2668ba30b6e2060cE"(i64* %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast { [0 x i8]*, i64 }* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hfbe45fe714a11e2fE"(i8* %self.0, i64* align 8 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc11eb324fa1397b3E"(i8* %self.0, i64* align 8 %self.1)
  %_3.0 = extractvalue { {}*, [3 x i64]* } %0, 0
  %_3.1 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast {}* %_3.0 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::as_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17h1be921262d3b550bE"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_6 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb928c47056db728fE"(i64* %_6)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %_5
}

; core::ptr::non_null::NonNull<T>::as_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::string::String"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17hacfcd61fbf0b9d96E"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_6 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::string::String"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h28d15b99655eacf8E"(i64* %_6)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::string::String"* %_5
}

; core::ptr::non_null::NonNull<T>::as_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17hc5e49e044582e02fE"(i32** align 8 %self) unnamed_addr #0 {
start:
  %_6 = load i32*, i32** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h925bb0c2a8eb0af0E"(i32* %_6)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_5
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h045696f7015da1fbE"(i64* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<_ProbeSemaphore>"*
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %_ProbeNode* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h187f07e9a8077e76E"(i64* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %_ProbeNode*
  ret %_ProbeNode* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2668ba30b6e2060cE"(i64* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to { [0 x i8]*, i64 }*
  ret { [0 x i8]*, i64 }* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::string::String"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h28d15b99655eacf8E"(i64* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::string::String"*
  ret %"alloc::string::String"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h354de0dc25515eabE"(i8* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i8* %self to {}*
  ret {}* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h48e3c888979da70dE"(i64* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::vec::Vec<_ProbeNode>"*
  ret %"alloc::vec::Vec<_ProbeNode>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h566cc3b78e934cc0E"(i64* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"*
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h590c3f641ccb1fb0E"(i8* %self.0, i64* align 8 %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to {}*
  %_2.1 = bitcast i64* %self.1 to [3 x i64]*
  %0 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %1 = insertvalue { {}*, [3 x i64]* } %0, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %1
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"std::io::error::SimpleMessage"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6f94846b3c04e2c0E"(i64* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"std::io::error::SimpleMessage"*
  ret %"std::io::error::SimpleMessage"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h79455db00a6c950dE"(i8* %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to [0 x i8]*
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %self.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h925bb0c2a8eb0af0E"(i32* %self) unnamed_addr #0 {
start:
  ret i32* %self
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb0b277d2cfc6cbefE"(i64* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"*
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb928c47056db728fE"(i64* %self) unnamed_addr #0 {
start:
  ret i64* %self
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %self) unnamed_addr #0 {
start:
  ret i8* %self
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc11eb324fa1397b3E"(i8* %self.0, i64* align 8 %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to {}*
  %_2.1 = bitcast i64* %self.1 to [3 x i64]*
  %0 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %1 = insertvalue { {}*, [3 x i64]* } %0, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %1
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"std::io::error::Custom"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc5a060135ac32dd6E"(i64* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"std::io::error::Custom"*
  ret %"std::io::error::Custom"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"std::io::error::Custom"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h0dcdf4c815efaa09E"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"std::io::error::Custom"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc5a060135ac32dd6E"(i64* %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::io::error::Custom"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h379561a1be7e3775E"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb0b277d2cfc6cbefE"(i64* %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h4fa34fd9f64f714cE"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb928c47056db728fE"(i64* %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h812f5330882a2d79E"({ i8*, i64* }* align 8 %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 1
  %_3.1 = load i64*, i64** %1, align 8, !nonnull !3, !align !8, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %2 = call { {}*, [3 x i64]* } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h590c3f641ccb1fb0E"(i8* %_3.0, i64* align 8 %_3.1)
  %_2.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_2.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h8f4ad7e29ef5ff83E"({ i8*, i64* }* align 8 %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 1
  %_3.1 = load i64*, i64** %1, align 8, !nonnull !3, !align !8, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %2 = call { {}*, [3 x i64]* } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc11eb324fa1397b3E"(i8* %_3.0, i64* align 8 %_3.1)
  %_2.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_2.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17ha6a21f4ce1840bbdE"(i32** align 8 %self) unnamed_addr #0 {
start:
  %_3 = load i32*, i32** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h925bb0c2a8eb0af0E"(i32* %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hce0c139c49c010dbE"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h566cc3b78e934cc0E"(i64* %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::string::String"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hd947d57a4e3304a1E"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::string::String"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h28d15b99655eacf8E"(i64* %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::string::String"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hfcef1f5b35309b73E"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h045696f7015da1fbE"(i64* %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_2
}

; core::ptr::non_null::NonNull<T>::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h774c1f98946bab12E"() unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }*, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { [0 x i8]*, i64 }** %0 to i64*
  store i64 8, i64* %1, align 8
  %2 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %3 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5a9da12769749ad0E"({ [0 x i8]*, i64 }* %2)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64* %3
}

; core::ptr::non_null::NonNull<T>::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h8243240fd2d32a4aE"() unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast i8** %0 to i64*
  store i64 1, i64* %1, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %3 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %2)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %3
}

; core::ptr::non_null::NonNull<[T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h65153d0f2ed0e2cfE"(i8* %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %_2 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h01945b57f4e53a0fE"(i8* %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h01945b57f4e53a0fE"(i8* %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h79455db00a6c950dE"(i8* %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast [0 x i8]* %_3.0 to i8*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %2
}

; core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17heb473572d11ead27E"(i8* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h899b5789493e1550E(i8* %_4, i64 %len)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h3b31168e317ff166E"([0 x i8]* %_3.0, i64 %_3.1)
  %2 = extractvalue { i8*, i64 } %1, 0
  %3 = extractvalue { i8*, i64 } %1, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { i8*, i64 } undef, i8* %2, 0
  %5 = insertvalue { i8*, i64 } %4, i64 %3, 1
  ret { i8*, i64 } %5
}

; core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<std::fs::File>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr90drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$17h4da5ea1fb3c8ab9cE"(i64** %_1) unnamed_addr #1 {
start:
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2ecb787dad0e8de8E"(i64** align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<dyn std::error::Error+core::marker::Sync+core::marker::Send>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr92drop_in_place$LT$dyn$u20$std..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$17h6b9c6999a8bc610fE"({}* %_1.0, [3 x i64]* align 8 %_1.1) unnamed_addr #1 {
start:
  %0 = bitcast [3 x i64]* %_1.1 to void ({}*)**
  %1 = getelementptr inbounds void ({}*)*, void ({}*)** %0, i64 0
  %2 = load void ({}*)*, void ({}*)** %1, align 8, !invariant.load !3, !nonnull !3
  call void %2({}* %_1.0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr94drop_in_place$LT$alloc..sync..ArcInner$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$17h2f929af840b95f79E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_1, i32 0, i32 2
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<std::fs::File>>
  call void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$17h778bf46131b5f04cE"(%"std::sync::mutex::Mutex<std::fs::File>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr95drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$17hd9ffa6da4ca9f6bdE"({ i64*, i64 }* %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hd4abd811e2269644E"({ i64*, i64 }* align 8 %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::option::Option<core::cell::RefCell<alloc::string::String>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr97drop_in_place$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17h5681b90f8c3e3136E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_1 to i64*
  %_2 = load i64, i64* %0, align 8, !range !7, !noundef !3
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %2 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_1 to %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some", %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"* %2, i32 0, i32 1
; call core::ptr::drop_in_place<core::cell::RefCell<alloc::string::String>>
  call void @"_ZN4core3ptr69drop_in_place$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$17h3668d8037f1a408fE"(%"core::cell::RefCell<alloc::string::String>"* %3)
  br label %bb1
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr98drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$$GT$17h3af6d6f6447e4e59E"({ i32*, i8 }* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h474c10dddfe9366aE"({ i32*, i8 }* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<probe_RSE::_ProbeSemaphore>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr99drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$probe_RSE.._ProbeSemaphore$GT$$GT$$GT$17h49a1f2962a4c1c2dE"(i64** %_1) unnamed_addr #1 {
start:
  %0 = bitcast i64** %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::sync::Arc<probe_RSE::_ProbeSemaphore>>
  call void @"_ZN4core3ptr71drop_in_place$LT$alloc..sync..Arc$LT$probe_RSE.._ProbeSemaphore$GT$$GT$17hac30eb51943f0948E"(i64** %_1)
  br label %bb1
}

; core::ptr::const_ptr::<impl *const T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h050e177d0da01693E"(i8* %self, i8* %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::const_ptr::<impl *const T>::copy_to_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17hfd0785c9bd54f5a6E"(i8* %self, i8* %dest, i64 %count) unnamed_addr #0 {
start:
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h38d13445a63b4b98E(i8* %self, i8* %dest, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::const_ptr::<impl *const T>::addr
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h438244cf55e17776E"({}* %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = bitcast i64* %0 to {}**
  store {}* %self, {}** %1, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::ptr::const_ptr::<impl *const T>::addr
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h661c8181a844c31bE"({ [0 x i8]*, i64 }* %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = bitcast i64* %0 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %1, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::ptr::const_ptr::<impl *const T>::addr
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hcbc1b382da729024E"(i8* %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = bitcast i64* %0 to i8**
  store i8* %self, i8** %1, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h2aeb3c7b422a01b7E"(%"alloc::vec::Vec<_ProbeNode>"* %self) unnamed_addr #0 {
start:
  %0 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h400e39e1470088b1E"(i8* %self) unnamed_addr #0 {
start:
  %0 = bitcast i8* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h66d4db7defe23270E"({ [0 x i8]*, i64 }* %self) unnamed_addr #0 {
start:
  %0 = bitcast { [0 x i8]*, i64 }* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb913b368f1f76162E"(%_ProbeNode* %self) unnamed_addr #0 {
start:
  %0 = bitcast %_ProbeNode* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hdc9765f5b56575f6E"(i8* %self) unnamed_addr #0 {
start:
  %0 = bitcast i8* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hf0f98e673ea408d7E"(i8* %self) unnamed_addr #0 {
start:
  ret i8* %self
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h2d47dfafe3598345E"(i8* %self) unnamed_addr #0 {
start:
  %0 = alloca {}*, align 8
  %1 = bitcast {}** %0 to i64*
  store i64 0, i64* %1, align 8
  %2 = load {}*, {}** %0, align 8
; call core::ptr::metadata::from_raw_parts
  %3 = call i8* @_ZN4core3ptr8metadata14from_raw_parts17hd784b2c45c387aadE({}* %2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h050e177d0da01693E"(i8* %self, i8* %3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h6c7cfe12183bd344E"(%"alloc::vec::Vec<_ProbeNode>"* %self) unnamed_addr #0 {
start:
  %0 = alloca {}*, align 8
  %_2 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %self to i8*
  %1 = bitcast {}** %0 to i64*
  store i64 0, i64* %1, align 8
  %2 = load {}*, {}** %0, align 8
; call core::ptr::metadata::from_raw_parts
  %3 = call i8* @_ZN4core3ptr8metadata14from_raw_parts17hd784b2c45c387aadE({}* %2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h050e177d0da01693E"(i8* %_2, i8* %3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha17490f38a27bce8E"(%_ProbeNode* %self) unnamed_addr #0 {
start:
  %0 = alloca {}*, align 8
  %_2 = bitcast %_ProbeNode* %self to i8*
  %1 = bitcast {}** %0 to i64*
  store i64 0, i64* %1, align 8
  %2 = load {}*, {}** %0, align 8
; call core::ptr::metadata::from_raw_parts
  %3 = call i8* @_ZN4core3ptr8metadata14from_raw_parts17hd784b2c45c387aadE({}* %2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h050e177d0da01693E"(i8* %_2, i8* %3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hb532bcddacb8e8e8E"({ [0 x i8]*, i64 }* %self) unnamed_addr #0 {
start:
  %0 = alloca {}*, align 8
  %_2 = bitcast { [0 x i8]*, i64 }* %self to i8*
  %1 = bitcast {}** %0 to i64*
  store i64 0, i64* %1, align 8
  %2 = load {}*, {}** %0, align 8
; call core::ptr::metadata::from_raw_parts
  %3 = call i8* @_ZN4core3ptr8metadata14from_raw_parts17hd784b2c45c387aadE({}* %2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h050e177d0da01693E"(i8* %_2, i8* %3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17hd7ef5f947e4a64edE"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::metadata::metadata
  %0 = call i64 @_ZN4core3ptr8metadata8metadata17ha6c6bc888a3e4b5bE([0 x i8]* %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hd58cfd309dc5a254E"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::str::validations::next_code_point
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @_ZN4core3str11validations15next_code_point17h3c9e347d6a9528d3E({ i8*, i8* }* align 8 %bytes) unnamed_addr #0 {
start:
  %ch = alloca i32, align 4
  %_4 = alloca i8*, align 8
  %0 = alloca { i32, i32 }, align 4
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_5 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5565e6d1ac1a691dE"({ i8*, i8* }* align 8 %bytes)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %1 = call align 1 i8* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb8530702e5107c56E"(i8* align 1 %_5)
  store i8* %1, i8** %_4, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast i8** %_4 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_7 = select i1 %4, i64 1, i64 0
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %val = load i8*, i8** %_4, align 8, !nonnull !3, !align !4, !noundef !3
  %x = load i8, i8* %val, align 1
  %_11 = icmp ult i8 %x, -128
  br i1 %_11, label %bb7, label %bb8

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %5 = call { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h7a2819a4b2b99ea0E"()
  store { i32, i32 } %5, { i32, i32 }* %0, align 4
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb23

bb23:                                             ; preds = %bb7, %bb6
  br label %bb24

bb8:                                              ; preds = %bb3
; call core::str::validations::utf8_first_byte
  %init = call i32 @_ZN4core3str11validations15utf8_first_byte17h3732d8cc20e1c65fE(i8 %x, i32 2)
  br label %bb9

bb7:                                              ; preds = %bb3
  %_13 = zext i8 %x to i32
  %6 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  store i32 %_13, i32* %6, align 4
  %7 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %7, align 4
  br label %bb23

bb24:                                             ; preds = %bb22, %bb23
  %8 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4, !range !19, !noundef !3
  %10 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = insertvalue { i32, i32 } undef, i32 %9, 0
  %13 = insertvalue { i32, i32 } %12, i32 %11, 1
  ret { i32, i32 } %13

bb9:                                              ; preds = %bb8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_19 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5565e6d1ac1a691dE"({ i8*, i8* }* align 8 %bytes)
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::option::Option<T>::unwrap_unchecked
  %_18 = call align 1 i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h57cd20a2111c1f72E"(i8* align 1 %_19, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc699 to %"core::panic::location::Location"*))
  br label %bb11

bb11:                                             ; preds = %bb10
  %y = load i8, i8* %_18, align 1
; call core::str::validations::utf8_acc_cont_byte
  %14 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h331e9e5ecb66ce82E(i32 %init, i8 %y)
  store i32 %14, i32* %ch, align 4
  br label %bb12

bb12:                                             ; preds = %bb11
  %_24 = icmp uge i8 %x, -32
  br i1 %_24, label %bb13, label %bb22

bb22:                                             ; preds = %bb21, %bb12
  %_50 = load i32, i32* %ch, align 4
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  store i32 %_50, i32* %15, align 4
  %16 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %16, align 4
  br label %bb24

bb13:                                             ; preds = %bb12
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_28 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5565e6d1ac1a691dE"({ i8*, i8* }* align 8 %bytes)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::option::Option<T>::unwrap_unchecked
  %_27 = call align 1 i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h57cd20a2111c1f72E"(i8* align 1 %_28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc701 to %"core::panic::location::Location"*))
  br label %bb15

bb15:                                             ; preds = %bb14
  %z = load i8, i8* %_27, align 1
  %_32 = and i8 %y, 63
  %_31 = zext i8 %_32 to i32
; call core::str::validations::utf8_acc_cont_byte
  %y_z = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h331e9e5ecb66ce82E(i32 %_31, i8 %z)
  br label %bb16

bb16:                                             ; preds = %bb15
  %_35 = shl i32 %init, 12
  %17 = or i32 %_35, %y_z
  store i32 %17, i32* %ch, align 4
  %_38 = icmp uge i8 %x, -16
  br i1 %_38, label %bb17, label %bb21

bb21:                                             ; preds = %bb20, %bb16
  br label %bb22

bb17:                                             ; preds = %bb16
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_42 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5565e6d1ac1a691dE"({ i8*, i8* }* align 8 %bytes)
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::option::Option<T>::unwrap_unchecked
  %_41 = call align 1 i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h57cd20a2111c1f72E"(i8* align 1 %_42, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc703 to %"core::panic::location::Location"*))
  br label %bb19

bb19:                                             ; preds = %bb18
  %w = load i8, i8* %_41, align 1
  %_45 = and i32 %init, 7
  %_44 = shl i32 %_45, 18
; call core::str::validations::utf8_acc_cont_byte
  %_47 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h331e9e5ecb66ce82E(i32 %y_z, i8 %w)
  br label %bb20

bb20:                                             ; preds = %bb19
  %18 = or i32 %_44, %_47
  store i32 %18, i32* %ch, align 4
  br label %bb21
}

; core::str::validations::utf8_first_byte
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3str11validations15utf8_first_byte17h3732d8cc20e1c65fE(i8 %byte, i32 %width) unnamed_addr #0 {
start:
  %0 = trunc i32 %width to i8
  %1 = and i8 %0, 7
  %_5 = lshr i8 127, %1
  %_3 = and i8 %byte, %_5
  %2 = zext i8 %_3 to i32
  ret i32 %2
}

; core::str::validations::utf8_acc_cont_byte
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h331e9e5ecb66ce82E(i32 %ch, i8 %byte) unnamed_addr #0 {
start:
  %_3 = shl i32 %ch, 6
  %_6 = and i8 %byte, 63
  %_5 = zext i8 %_6 to i32
  %0 = or i32 %_3, %_5
  ret i32 %0
}

; core::str::<impl str>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17heb0484d6fd35bd87E"([0 x i8]* align 1 %self.0, i64 %self.1, i64 %i.0, i64 %i.1) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h58a835924ccafadbE"(i64 %i.0, i64 %i.1, [0 x i8]* %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::str::<impl str>::is_char_boundary
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hc9d54696ad85861bE"([0 x i8]* align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca i8*, align 8
  %1 = alloca i8, align 1
  %2 = icmp eq i64 %index, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store i8 1, i8* %1, align 1
  br label %bb11

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %6 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !3, !align !4, !noundef !3
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %6, 0
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %8, 1
  %_6.0 = extractvalue { [0 x i8]*, i64 } %10, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %10, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::get
  %11 = call align 1 i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h4ac448c0b41386d4E"([0 x i8]* align 1 %_6.0, i64 %_6.1, i64 %index)
  store i8* %11, i8** %_4, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %12 = bitcast i8** %_4 to {}**
  %13 = load {}*, {}** %12, align 8
  %14 = icmp eq {}* %13, null
  %_9 = select i1 %14, i64 0, i64 1
  switch i64 %_9, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
; call core::str::<impl str>::len
  %_11 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hbd31a0d5f968687bE"([0 x i8]* align 1 %self.0, i64 %self.1)
  br label %bb8

bb5:                                              ; preds = %bb4
  %_15 = load i8*, i8** %_4, align 8, !nonnull !3, !align !4, !noundef !3
  %b = load i8, i8* %_15, align 1
; call core::num::<impl u8>::is_utf8_char_boundary
  %15 = call zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$21is_utf8_char_boundary17h29f21a7e2d9ebd33E"(i8 %b)
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb5
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  br label %bb11

bb8:                                              ; preds = %bb7
  %17 = icmp eq i64 %index, %_11
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %1, align 1
  br label %bb10

bb11:                                             ; preds = %bb1, %bb10
  %19 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %20 = trunc i8 %19 to i1
  ret i1 %20
}

; core::str::<impl str>::len
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hbd31a0d5f968687bE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !3, !align !4, !noundef !3
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %_3.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %_3.1
}

; core::str::<impl str>::chars
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17ha2cc4fda387903e5E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !3, !align !4, !noundef !3
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %10 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hda61e05ab0dfd22eE"([0 x i8]* align 1 %_4.0, i64 %_4.1)
  %_2.0 = extractvalue { i8*, i8* } %10, 0
  %_2.1 = extractvalue { i8*, i8* } %10, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  store i8* %_2.0, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  store i8* %_2.1, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !nonnull !3, !noundef !3
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = insertvalue { i8*, i8* } undef, i8* %14, 0
  %18 = insertvalue { i8*, i8* } %17, i8* %16, 1
  ret { i8*, i8* } %18
}

; core::str::<impl str>::split
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h52e7db32a2a8f3a0E"(%"core::str::iter::Split<&str>"* sret(%"core::str::iter::Split<&str>") %0, [0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %pat.0, i64 %pat.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_6 = alloca %"core::str::pattern::StrSearcher", align 8
  %_3 = alloca %"core::str::iter::SplitInternal<&str>", align 8
  store i8 1, i8* %_9, align 1
; invoke core::str::<impl str>::len
  %_4 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hbd31a0d5f968687bE"([0 x i8]* align 1 %self.0, i64 %self.1)
          to label %bb1 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_9, align 1, !range !2, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; invoke <&str as core::str::pattern::Pattern>::into_searcher
  invoke void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17heda6ea0c3cd31507E"(%"core::str::pattern::StrSearcher"* sret(%"core::str::pattern::StrSearcher") %_6, [0 x i8]* align 1 %pat.0, i64 %pat.1, [0 x i8]* align 1 %self.0, i64 %self.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %9 = bitcast %"core::str::iter::SplitInternal<&str>"* %_3 to i64*
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"core::str::iter::SplitInternal<&str>", %"core::str::iter::SplitInternal<&str>"* %_3, i32 0, i32 1
  store i64 %_4, i64* %10, align 8
  %11 = getelementptr inbounds %"core::str::iter::SplitInternal<&str>", %"core::str::iter::SplitInternal<&str>"* %_3, i32 0, i32 2
  %12 = bitcast %"core::str::pattern::StrSearcher"* %11 to i8*
  %13 = bitcast %"core::str::pattern::StrSearcher"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 104, i1 false)
  %14 = getelementptr inbounds %"core::str::iter::SplitInternal<&str>", %"core::str::iter::SplitInternal<&str>"* %_3, i32 0, i32 3
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"core::str::iter::SplitInternal<&str>", %"core::str::iter::SplitInternal<&str>"* %_3, i32 0, i32 4
  store i8 0, i8* %15, align 1
  %16 = bitcast %"core::str::iter::Split<&str>"* %0 to %"core::str::iter::SplitInternal<&str>"*
  %17 = bitcast %"core::str::iter::SplitInternal<&str>"* %16 to i8*
  %18 = bitcast %"core::str::iter::SplitInternal<&str>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 128, i1 false)
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %19 = bitcast { i8*, i32 }* %1 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::str::iter::SplitInternal<P>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h77b0878a510fff4cE"(%"core::str::iter::SplitInternal<&str>"* align 8 %self) unnamed_addr #0 {
start:
  %_12 = alloca { i64, i64 }, align 8
  %_5 = alloca %"core::option::Option<(usize, usize)>", align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<&str>", %"core::str::iter::SplitInternal<&str>"* %self, i32 0, i32 4
  %2 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %_2 = trunc i8 %2 to i1
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_4 = getelementptr inbounds %"core::str::iter::SplitInternal<&str>", %"core::str::iter::SplitInternal<&str>"* %self, i32 0, i32 2
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::haystack
  %3 = call { [0 x i8]*, i64 } @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h8ea1f8501bae1630E"(%"core::str::pattern::StrSearcher"* align 8 %_4)
  %haystack.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %haystack.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb1:                                              ; preds = %start
  %4 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %4, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb1
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8, !align !4
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10

bb3:                                              ; preds = %bb2
  %_6 = getelementptr inbounds %"core::str::iter::SplitInternal<&str>", %"core::str::iter::SplitInternal<&str>"* %self, i32 0, i32 2
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
  call void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h718c7bf83656aeb2E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %_5, %"core::str::pattern::StrSearcher"* align 8 %_6)
  br label %bb4

bb4:                                              ; preds = %bb3
  %11 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to i64*
  %_7 = load i64, i64* %11, align 8, !range !7, !noundef !3
  switch i64 %_7, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
; call core::str::iter::SplitInternal<P>::get_end
  %12 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17hf5a3a7b59486ce3bE"(%"core::str::iter::SplitInternal<&str>"* align 8 %self)
  store { i8*, i64 } %12, { i8*, i64 }* %0, align 8
  br label %bb9

bb7:                                              ; preds = %bb4
  %13 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %13, i32 0, i32 1
  %15 = bitcast { i64, i64 }* %14 to i64*
  %a = load i64, i64* %15, align 8
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %16, i32 0, i32 1
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  %b = load i64, i64* %18, align 8
  %19 = bitcast %"core::str::iter::SplitInternal<&str>"* %self to i64*
  %_13 = load i64, i64* %19, align 8
  %20 = bitcast { i64, i64 }* %_12 to i64*
  store i64 %_13, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1
  store i64 %a, i64* %21, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
; call core::str::<impl str>::get_unchecked
  %26 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17heb0484d6fd35bd87E"([0 x i8]* align 1 %haystack.0, i64 %haystack.1, i64 %23, i64 %25)
  %elt.0 = extractvalue { [0 x i8]*, i64 } %26, 0
  %elt.1 = extractvalue { [0 x i8]*, i64 } %26, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %27 = bitcast %"core::str::iter::SplitInternal<&str>"* %self to i64*
  store i64 %b, i64* %27, align 8
  %28 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0
  store [0 x i8]* %elt.0, [0 x i8]** %29, align 8
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1
  store i64 %elt.1, i64* %30, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  br label %bb11

bb9:                                              ; preds = %bb5
  br label %bb10
}

; core::str::iter::SplitInternal<P>::get_end
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17hf5a3a7b59486ce3bE"(%"core::str::iter::SplitInternal<&str>"* align 8 %self) unnamed_addr #0 {
start:
  %_15 = alloca { i64, i64 }, align 8
  %_5 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<&str>", %"core::str::iter::SplitInternal<&str>"* %self, i32 0, i32 4
  %2 = load i8, i8* %1, align 1, !range !2, !noundef !3
  %_4 = trunc i8 %2 to i1
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::str::iter::SplitInternal<&str>", %"core::str::iter::SplitInternal<&str>"* %self, i32 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2, !noundef !3
  %_6 = trunc i8 %4 to i1
  br i1 %_6, label %bb4, label %bb5

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds %"core::str::iter::SplitInternal<&str>", %"core::str::iter::SplitInternal<&str>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %5, align 8
  %6 = bitcast %"core::str::iter::SplitInternal<&str>"* %self to i64*
  %_10 = load i64, i64* %6, align 8
  %_8 = sub i64 %_9, %_10
  %_7 = icmp ugt i64 %_8, 0
  %7 = zext i1 %_7 to i8
  store i8 %7, i8* %_5, align 1
  br label %bb6

bb4:                                              ; preds = %bb2
  store i8 1, i8* %_5, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %8 = load i8, i8* %_5, align 1, !range !2, !noundef !3
  %9 = trunc i8 %8 to i1
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb6
  %11 = load i8, i8* %_2, align 1, !range !2, !noundef !3
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb7, label %bb10

bb10:                                             ; preds = %bb3
  %13 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %13, align 8
  br label %bb11

bb7:                                              ; preds = %bb3
  %14 = getelementptr inbounds %"core::str::iter::SplitInternal<&str>", %"core::str::iter::SplitInternal<&str>"* %self, i32 0, i32 4
  store i8 1, i8* %14, align 1
  %_14 = getelementptr inbounds %"core::str::iter::SplitInternal<&str>", %"core::str::iter::SplitInternal<&str>"* %self, i32 0, i32 2
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::haystack
  %15 = call { [0 x i8]*, i64 } @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h8ea1f8501bae1630E"(%"core::str::pattern::StrSearcher"* align 8 %_14)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %15, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %15, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %16 = bitcast %"core::str::iter::SplitInternal<&str>"* %self to i64*
  %_16 = load i64, i64* %16, align 8
  %17 = getelementptr inbounds %"core::str::iter::SplitInternal<&str>", %"core::str::iter::SplitInternal<&str>"* %self, i32 0, i32 1
  %_17 = load i64, i64* %17, align 8
  %18 = bitcast { i64, i64 }* %_15 to i64*
  store i64 %_16, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1
  store i64 %_17, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
; call core::str::<impl str>::get_unchecked
  %24 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17heb0484d6fd35bd87E"([0 x i8]* align 1 %_13.0, i64 %_13.1, i64 %21, i64 %23)
  %string.0 = extractvalue { [0 x i8]*, i64 } %24, 0
  %string.1 = extractvalue { [0 x i8]*, i64 } %24, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %25 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %25, i32 0, i32 0
  store [0 x i8]* %string.0, [0 x i8]** %26, align 8
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %25, i32 0, i32 1
  store i64 %string.1, i64* %27, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8, !align !4
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = insertvalue { i8*, i64 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i64 } %32, i64 %31, 1
  ret { i8*, i64 } %33
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h58a835924ccafadbE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hd58cfd309dc5a254E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_6, i64 %self.0
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %len = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17he804afec0262035eE(i8* %2, i64 %len)
  %_12.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_12.0, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_12.1, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17hb74ad88959d6fc67E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hd58cfd309dc5a254E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_6, i64 %self
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_10 = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17hd7ef5f947e4a64edE"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %len = sub i64 %_10, %self
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17he804afec0262035eE(i8* %2, i64 %len)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_13.0, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_13.1, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17hfdb9788aa527b937E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hc9d54696ad85861bE"([0 x i8]* align 1 %slice.0, i64 %slice.1, i64 %self)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  %1 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17hb74ad88959d6fc67E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1)
  %_8.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_8.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %_8.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %_8.1, i64* %5, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8, !align !4
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i8*, i64 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i64 } %10, i64 %9, 1
  ret { i8*, i64 } %11
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17hac3dbdd6065f75fdE"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
  %_9 = alloca { i8*, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
; call core::str::<impl str>::len
  %_7 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hbd31a0d5f968687bE"([0 x i8]* align 1 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %_5 to i64*
  store i64 %self, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %_7, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %_5 to i64*
  %start1 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %end = load i64, i64* %4, align 8
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
  %5 = call { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17hfdb9788aa527b937E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1)
  store { i8*, i64 } %5, { i8*, i64 }* %_9, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = bitcast { i8*, i64 }* %_9 to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_12 = select i1 %8, i64 0, i64 1
  switch i64 %_12, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h6bd5e73e3d5d5eafE([0 x i8]* align 1 %slice.0, i64 %slice.1, i64 %start1, i64 %end, %"core::panic::location::Location"* align 8 %0) #16
  unreachable

bb5:                                              ; preds = %bb2
  %9 = bitcast { i8*, i64 }* %_9 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %s.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !3, !align !4, !noundef !3
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %s.1 = load i64, i64* %11, align 8
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %s.0, 0
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %s.1, 1
  ret { [0 x i8]*, i64 } %13
}

; core::str::traits::<impl core::cmp::PartialEq for str>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h1efb479c8d442082E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !3, !align !4, !noundef !3
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  store { [0 x i8]*, i64 } %9, { [0 x i8]*, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %10, align 8
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %other.1, i64* %11, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %13 = load [0 x i8]*, [0 x i8]** %12, align 8, !nonnull !3, !align !4, !noundef !3
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %17 = insertvalue { [0 x i8]*, i64 } %16, i64 %15, 1
  store { [0 x i8]*, i64 } %17, { [0 x i8]*, i64 }* %_7, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %18 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hcb6083e40cd1af5fE"({ [0 x i8]*, i64 }* align 8 %_4, { [0 x i8]*, i64 }* align 8 %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i1 %18
}

; core::str::traits::<impl core::cmp::PartialEq for str>::ne
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2ne17h3ad7ee94cbe8eb68E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_3 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h1efb479c8d442082E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_3, true
  ret i1 %0
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h838c635d06422948E"([0 x i8]* align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17hac3dbdd6065f75fdE"(i64 %index, [0 x i8]* align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17hbef027012ee3fabaE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !3, !align !4, !noundef !3
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %9 = extractvalue { [0 x i8]*, i64 } %8, 0
  %10 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1
  ret { [0 x i8]*, i64 } %12
}

; core::str::pattern::TwoWaySearcher::byteset_contains
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17hdc62f7d1503f42afE(%"core::str::pattern::TwoWaySearcher"* align 8 %self, i8 %byte) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 3
  %_5 = load i64, i64* %0, align 8
  %_7 = and i8 %byte, 63
  %_6 = zext i8 %_7 to i64
  %1 = and i64 %_6, 63
  %_4 = lshr i64 %_5, %1
  %_3 = and i64 %_4, 1
  %2 = icmp ne i64 %_3, 0
  ret i1 %2
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern14TwoWaySearcher4next17h4a07a4cd8346cb03E(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, %"core::str::pattern::TwoWaySearcher"* align 8 %self, [0 x i8]* align 1 %haystack.0, i64 %haystack.1, [0 x i8]* align 1 %needle.0, i64 %needle.1, i1 zeroext %long_period) unnamed_addr #0 {
start:
  %_76 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_72 = alloca { i64, i64 }, align 8
  %start2 = alloca i64, align 8
  %_46 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_41 = alloca { i64, i64 }, align 8
  %start1 = alloca i64, align 8
  %_21 = alloca i8, align 1
  %_10 = alloca i8*, align 8
  %1 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %old_pos = load i64, i64* %1, align 8
  %needle_last = sub i64 %needle.1, 1
  br label %bb1

bb1:                                              ; preds = %bb55, %start
  %2 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_13 = load i64, i64* %2, align 8
  %_12 = add i64 %_13, %needle_last
; call core::slice::<impl [T]>::get
  %3 = call align 1 i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h4ac448c0b41386d4E"([0 x i8]* align 1 %haystack.0, i64 %haystack.1, i64 %_12)
  store i8* %3, i8** %_10, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast i8** %_10 to {}**
  %5 = load {}*, {}** %4, align 8
  %6 = icmp eq {}* %5, null
  %_15 = select i1 %6, i64 0, i64 1
  switch i64 %_15, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %7 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  store i64 %haystack.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_20 = load i64, i64* %8, align 8
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h01be1bcd11ce7b08E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, i64 %old_pos, i64 %_20)
  br label %bb6

bb5:                                              ; preds = %bb2
  %_108 = load i8*, i8** %_10, align 8, !nonnull !3, !align !4, !noundef !3
  %b = load i8, i8* %_108, align 1
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_22 = call zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17hbb707913dbc4b53dE"()
  br label %bb10

bb10:                                             ; preds = %bb5
  br i1 %_22, label %bb8, label %bb7

bb7:                                              ; preds = %bb10
  store i8 0, i8* %_21, align 1
  br label %bb9

bb8:                                              ; preds = %bb10
  %9 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_25 = load i64, i64* %9, align 8
  %_23 = icmp ne i64 %old_pos, %_25
  %10 = zext i1 %_23 to i8
  store i8 %10, i8* %_21, align 1
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %11 = load i8, i8* %_21, align 1, !range !2, !noundef !3
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb11, label %bb13

bb13:                                             ; preds = %bb9
; call core::str::pattern::TwoWaySearcher::byteset_contains
  %_29 = call zeroext i1 @_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17hdc62f7d1503f42afE(%"core::str::pattern::TwoWaySearcher"* align 8 %self, i8 %b)
  br label %bb14

bb11:                                             ; preds = %bb9
  %13 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_27 = load i64, i64* %13, align 8
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h01be1bcd11ce7b08E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, i64 %old_pos, i64 %_27)
  br label %bb12

bb12:                                             ; preds = %bb11
  br label %bb56

bb56:                                             ; preds = %bb6, %bb53, %bb12
  ret void

bb14:                                             ; preds = %bb13
  %_28 = xor i1 %_29, true
  br i1 %_28, label %bb15, label %bb18

bb18:                                             ; preds = %bb14
  br i1 %long_period, label %bb19, label %bb20

bb15:                                             ; preds = %bb14
  %14 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, %needle.1
  store i64 %17, i64* %14, align 8
  %_34 = xor i1 %long_period, true
  br i1 %_34, label %bb16, label %bb17

bb17:                                             ; preds = %bb16, %bb15
  br label %bb55

bb16:                                             ; preds = %bb15
  %18 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %18, align 8
  br label %bb17

bb55:                                             ; preds = %bb54, %bb17
  br label %bb1

bb20:                                             ; preds = %bb18
  %19 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_38 = load i64, i64* %19, align 8
  %20 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %_39 = load i64, i64* %20, align 8
; call core::cmp::max
  %21 = call i64 @_ZN4core3cmp3max17h4bf4c75e9e56bd50E(i64 %_38, i64 %_39)
  store i64 %21, i64* %start1, align 8
  br label %bb21

bb19:                                             ; preds = %bb18
  %22 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %start1, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb19
  %_42 = load i64, i64* %start1, align 8
  %24 = bitcast { i64, i64 }* %_41 to i64*
  store i64 %_42, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 1
  store i64 %needle.1, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %30 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h13d23d08d7338154E"(i64 %27, i64 %29)
  %_40.0 = extractvalue { i64, i64 } %30, 0
  %_40.1 = extractvalue { i64, i64 } %30, 1
  br label %bb23

bb21:                                             ; preds = %bb20
  br label %bb22

bb23:                                             ; preds = %bb22
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_40.0, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_40.1, i64* %32, align 8
  br label %bb24

bb24:                                             ; preds = %bb34, %bb23
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %33 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h44032888d6410e28E"({ i64, i64 }* align 8 %iter)
  store { i64, i64 } %33, { i64, i64 }* %_46, align 8
  br label %bb25

bb25:                                             ; preds = %bb24
  %34 = bitcast { i64, i64 }* %_46 to i64*
  %_49 = load i64, i64* %34, align 8, !range !7, !noundef !3
  switch i64 %_49, label %bb27 [
    i64 0, label %bb28
    i64 1, label %bb26
  ]

bb27:                                             ; preds = %bb25
  unreachable

bb28:                                             ; preds = %bb25
  br i1 %long_period, label %bb35, label %bb36

bb26:                                             ; preds = %bb25
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_46, i32 0, i32 1
  %i = load i64, i64* %35, align 8
  %_55 = icmp ult i64 %i, %needle.1
  %36 = call i1 @llvm.expect.i1(i1 %_55, i1 true)
  br i1 %36, label %bb29, label %panic

bb29:                                             ; preds = %bb26
  %37 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i
  %_52 = load i8, i8* %37, align 1
  %38 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_58 = load i64, i64* %38, align 8
  %_57 = add i64 %_58, %i
  %_61 = icmp ult i64 %_57, %haystack.1
  %39 = call i1 @llvm.expect.i1(i1 %_61, i1 true)
  br i1 %39, label %bb30, label %panic4

panic:                                            ; preds = %bb26
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h0c2afddde5e93a98E(i64 %i, i64 %needle.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc705 to %"core::panic::location::Location"*)) #16
  unreachable

bb30:                                             ; preds = %bb29
  %40 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_57
  %_56 = load i8, i8* %40, align 1
  %_51 = icmp ne i8 %_52, %_56
  br i1 %_51, label %bb31, label %bb34

panic4:                                           ; preds = %bb29
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h0c2afddde5e93a98E(i64 %_57, i64 %haystack.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc707 to %"core::panic::location::Location"*)) #16
  unreachable

bb34:                                             ; preds = %bb30
  br label %bb24

bb31:                                             ; preds = %bb30
  %41 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_65 = load i64, i64* %41, align 8
  %_63 = sub i64 %i, %_65
  %_62 = add i64 %_63, 1
  %42 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %43 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, %_62
  store i64 %45, i64* %42, align 8
  %_66 = xor i1 %long_period, true
  br i1 %_66, label %bb32, label %bb33

bb33:                                             ; preds = %bb32, %bb31
  br label %bb54

bb32:                                             ; preds = %bb31
  %46 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %46, align 8
  br label %bb33

bb54:                                             ; preds = %bb49, %bb33
  br label %bb55

bb36:                                             ; preds = %bb28
  %47 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %start2, align 8
  br label %bb37

bb35:                                             ; preds = %bb28
  store i64 0, i64* %start2, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb35
  %_73 = load i64, i64* %start2, align 8
  %49 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_74 = load i64, i64* %49, align 8
  %50 = bitcast { i64, i64 }* %_72 to i64*
  store i64 %_73, i64* %50, align 8
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 1
  store i64 %_74, i64* %51, align 8
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
; call core::iter::traits::iterator::Iterator::rev
  %56 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h0c2da3e218a90aa8E(i64 %53, i64 %55)
  %_71.0 = extractvalue { i64, i64 } %56, 0
  %_71.1 = extractvalue { i64, i64 } %56, 1
  br label %bb38

bb38:                                             ; preds = %bb37
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %57 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h62b0b94ae63b8b5aE"(i64 %_71.0, i64 %_71.1)
  %_70.0 = extractvalue { i64, i64 } %57, 0
  %_70.1 = extractvalue { i64, i64 } %57, 1
  br label %bb39

bb39:                                             ; preds = %bb38
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 0
  store i64 %_70.0, i64* %58, align 8
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 1
  store i64 %_70.1, i64* %59, align 8
  br label %bb40

bb40:                                             ; preds = %bb50, %bb39
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %60 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf00761eb18344a9aE"({ i64, i64 }* align 8 %iter3)
  store { i64, i64 } %60, { i64, i64 }* %_76, align 8
  br label %bb41

bb41:                                             ; preds = %bb40
  %61 = bitcast { i64, i64 }* %_76 to i64*
  %_79 = load i64, i64* %61, align 8, !range !7, !noundef !3
  switch i64 %_79, label %bb43 [
    i64 0, label %bb44
    i64 1, label %bb42
  ]

bb43:                                             ; preds = %bb41
  unreachable

bb44:                                             ; preds = %bb41
  %62 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %match_pos = load i64, i64* %62, align 8
  %63 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %64 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, %needle.1
  store i64 %66, i64* %63, align 8
  %_101 = xor i1 %long_period, true
  br i1 %_101, label %bb51, label %bb52

bb42:                                             ; preds = %bb41
  %67 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_76, i32 0, i32 1
  %i5 = load i64, i64* %67, align 8
  %_85 = icmp ult i64 %i5, %needle.1
  %68 = call i1 @llvm.expect.i1(i1 %_85, i1 true)
  br i1 %68, label %bb45, label %panic6

bb45:                                             ; preds = %bb42
  %69 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i5
  %_82 = load i8, i8* %69, align 1
  %70 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_88 = load i64, i64* %70, align 8
  %_87 = add i64 %_88, %i5
  %_91 = icmp ult i64 %_87, %haystack.1
  %71 = call i1 @llvm.expect.i1(i1 %_91, i1 true)
  br i1 %71, label %bb46, label %panic7

panic6:                                           ; preds = %bb42
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h0c2afddde5e93a98E(i64 %i5, i64 %needle.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc709 to %"core::panic::location::Location"*)) #16
  unreachable

bb46:                                             ; preds = %bb45
  %72 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_87
  %_86 = load i8, i8* %72, align 1
  %_81 = icmp ne i8 %_82, %_86
  br i1 %_81, label %bb47, label %bb50

panic7:                                           ; preds = %bb45
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h0c2afddde5e93a98E(i64 %_87, i64 %haystack.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc711 to %"core::panic::location::Location"*)) #16
  unreachable

bb50:                                             ; preds = %bb46
  br label %bb40

bb47:                                             ; preds = %bb46
  %73 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2
  %_92 = load i64, i64* %73, align 8
  %74 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %75 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, %_92
  store i64 %77, i64* %74, align 8
  %_93 = xor i1 %long_period, true
  br i1 %_93, label %bb48, label %bb49

bb49:                                             ; preds = %bb48, %bb47
  br label %bb54

bb48:                                             ; preds = %bb47
  %78 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2
  %_97 = load i64, i64* %78, align 8
  %79 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %80 = sub i64 %needle.1, %_97
  store i64 %80, i64* %79, align 8
  br label %bb49

bb52:                                             ; preds = %bb51, %bb44
  %_104 = add i64 %match_pos, %needle.1
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h19d152bcafc68093E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, i64 %match_pos, i64 %_104)
  br label %bb53

bb51:                                             ; preds = %bb44
  %81 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %81, align 8
  br label %bb52

bb53:                                             ; preds = %bb52
  br label %bb56

bb6:                                              ; preds = %bb3
  br label %bb56
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern14TwoWaySearcher4next17hf7bc3354858c462aE(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::TwoWaySearcher"* align 8 %self, [0 x i8]* align 1 %haystack.0, i64 %haystack.1, [0 x i8]* align 1 %needle.0, i64 %needle.1, i1 zeroext %long_period) unnamed_addr #0 {
start:
  %_76 = alloca { i64, i64 }, align 8
  %iter3 = alloca { i64, i64 }, align 8
  %_72 = alloca { i64, i64 }, align 8
  %start2 = alloca i64, align 8
  %_46 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_41 = alloca { i64, i64 }, align 8
  %start1 = alloca i64, align 8
  %_21 = alloca i8, align 1
  %_10 = alloca i8*, align 8
  %1 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %old_pos = load i64, i64* %1, align 8
  %needle_last = sub i64 %needle.1, 1
  br label %bb1

bb1:                                              ; preds = %bb55, %start
  %2 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_13 = load i64, i64* %2, align 8
  %_12 = add i64 %_13, %needle_last
; call core::slice::<impl [T]>::get
  %3 = call align 1 i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h4ac448c0b41386d4E"([0 x i8]* align 1 %haystack.0, i64 %haystack.1, i64 %_12)
  store i8* %3, i8** %_10, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast i8** %_10 to {}**
  %5 = load {}*, {}** %4, align 8
  %6 = icmp eq {}* %5, null
  %_15 = select i1 %6, i64 0, i64 1
  switch i64 %_15, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %7 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  store i64 %haystack.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_20 = load i64, i64* %8, align 8
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h6575bae9c621f591E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, i64 %old_pos, i64 %_20)
  br label %bb6

bb5:                                              ; preds = %bb2
  %_108 = load i8*, i8** %_10, align 8, !nonnull !3, !align !4, !noundef !3
  %b = load i8, i8* %_108, align 1
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_22 = call zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17hb3ea8011edd88049E"()
  br label %bb10

bb10:                                             ; preds = %bb5
  br i1 %_22, label %bb8, label %bb7

bb7:                                              ; preds = %bb10
  store i8 0, i8* %_21, align 1
  br label %bb9

bb8:                                              ; preds = %bb10
  %9 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_25 = load i64, i64* %9, align 8
  %_23 = icmp ne i64 %old_pos, %_25
  %10 = zext i1 %_23 to i8
  store i8 %10, i8* %_21, align 1
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %11 = load i8, i8* %_21, align 1, !range !2, !noundef !3
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb11, label %bb13

bb13:                                             ; preds = %bb9
; call core::str::pattern::TwoWaySearcher::byteset_contains
  %_29 = call zeroext i1 @_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17hdc62f7d1503f42afE(%"core::str::pattern::TwoWaySearcher"* align 8 %self, i8 %b)
  br label %bb14

bb11:                                             ; preds = %bb9
  %13 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_27 = load i64, i64* %13, align 8
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h6575bae9c621f591E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, i64 %old_pos, i64 %_27)
  br label %bb12

bb12:                                             ; preds = %bb11
  br label %bb56

bb56:                                             ; preds = %bb6, %bb53, %bb12
  ret void

bb14:                                             ; preds = %bb13
  %_28 = xor i1 %_29, true
  br i1 %_28, label %bb15, label %bb18

bb18:                                             ; preds = %bb14
  br i1 %long_period, label %bb19, label %bb20

bb15:                                             ; preds = %bb14
  %14 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, %needle.1
  store i64 %17, i64* %14, align 8
  %_34 = xor i1 %long_period, true
  br i1 %_34, label %bb16, label %bb17

bb17:                                             ; preds = %bb16, %bb15
  br label %bb55

bb16:                                             ; preds = %bb15
  %18 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %18, align 8
  br label %bb17

bb55:                                             ; preds = %bb54, %bb17
  br label %bb1

bb20:                                             ; preds = %bb18
  %19 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_38 = load i64, i64* %19, align 8
  %20 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %_39 = load i64, i64* %20, align 8
; call core::cmp::max
  %21 = call i64 @_ZN4core3cmp3max17h4bf4c75e9e56bd50E(i64 %_38, i64 %_39)
  store i64 %21, i64* %start1, align 8
  br label %bb21

bb19:                                             ; preds = %bb18
  %22 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %start1, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb19
  %_42 = load i64, i64* %start1, align 8
  %24 = bitcast { i64, i64 }* %_41 to i64*
  store i64 %_42, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 1
  store i64 %needle.1, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_41, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %30 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h13d23d08d7338154E"(i64 %27, i64 %29)
  %_40.0 = extractvalue { i64, i64 } %30, 0
  %_40.1 = extractvalue { i64, i64 } %30, 1
  br label %bb23

bb21:                                             ; preds = %bb20
  br label %bb22

bb23:                                             ; preds = %bb22
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %_40.0, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %_40.1, i64* %32, align 8
  br label %bb24

bb24:                                             ; preds = %bb34, %bb23
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %33 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h44032888d6410e28E"({ i64, i64 }* align 8 %iter)
  store { i64, i64 } %33, { i64, i64 }* %_46, align 8
  br label %bb25

bb25:                                             ; preds = %bb24
  %34 = bitcast { i64, i64 }* %_46 to i64*
  %_49 = load i64, i64* %34, align 8, !range !7, !noundef !3
  switch i64 %_49, label %bb27 [
    i64 0, label %bb28
    i64 1, label %bb26
  ]

bb27:                                             ; preds = %bb25
  unreachable

bb28:                                             ; preds = %bb25
  br i1 %long_period, label %bb35, label %bb36

bb26:                                             ; preds = %bb25
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_46, i32 0, i32 1
  %i = load i64, i64* %35, align 8
  %_55 = icmp ult i64 %i, %needle.1
  %36 = call i1 @llvm.expect.i1(i1 %_55, i1 true)
  br i1 %36, label %bb29, label %panic

bb29:                                             ; preds = %bb26
  %37 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i
  %_52 = load i8, i8* %37, align 1
  %38 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_58 = load i64, i64* %38, align 8
  %_57 = add i64 %_58, %i
  %_61 = icmp ult i64 %_57, %haystack.1
  %39 = call i1 @llvm.expect.i1(i1 %_61, i1 true)
  br i1 %39, label %bb30, label %panic4

panic:                                            ; preds = %bb26
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h0c2afddde5e93a98E(i64 %i, i64 %needle.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc705 to %"core::panic::location::Location"*)) #16
  unreachable

bb30:                                             ; preds = %bb29
  %40 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_57
  %_56 = load i8, i8* %40, align 1
  %_51 = icmp ne i8 %_52, %_56
  br i1 %_51, label %bb31, label %bb34

panic4:                                           ; preds = %bb29
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h0c2afddde5e93a98E(i64 %_57, i64 %haystack.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc707 to %"core::panic::location::Location"*)) #16
  unreachable

bb34:                                             ; preds = %bb30
  br label %bb24

bb31:                                             ; preds = %bb30
  %41 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_65 = load i64, i64* %41, align 8
  %_63 = sub i64 %i, %_65
  %_62 = add i64 %_63, 1
  %42 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %43 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, %_62
  store i64 %45, i64* %42, align 8
  %_66 = xor i1 %long_period, true
  br i1 %_66, label %bb32, label %bb33

bb33:                                             ; preds = %bb32, %bb31
  br label %bb54

bb32:                                             ; preds = %bb31
  %46 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %46, align 8
  br label %bb33

bb54:                                             ; preds = %bb49, %bb33
  br label %bb55

bb36:                                             ; preds = %bb28
  %47 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %start2, align 8
  br label %bb37

bb35:                                             ; preds = %bb28
  store i64 0, i64* %start2, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb35
  %_73 = load i64, i64* %start2, align 8
  %49 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*
  %_74 = load i64, i64* %49, align 8
  %50 = bitcast { i64, i64 }* %_72 to i64*
  store i64 %_73, i64* %50, align 8
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 1
  store i64 %_74, i64* %51, align 8
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_72, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
; call core::iter::traits::iterator::Iterator::rev
  %56 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h0c2da3e218a90aa8E(i64 %53, i64 %55)
  %_71.0 = extractvalue { i64, i64 } %56, 0
  %_71.1 = extractvalue { i64, i64 } %56, 1
  br label %bb38

bb38:                                             ; preds = %bb37
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %57 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h62b0b94ae63b8b5aE"(i64 %_71.0, i64 %_71.1)
  %_70.0 = extractvalue { i64, i64 } %57, 0
  %_70.1 = extractvalue { i64, i64 } %57, 1
  br label %bb39

bb39:                                             ; preds = %bb38
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 0
  store i64 %_70.0, i64* %58, align 8
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter3, i32 0, i32 1
  store i64 %_70.1, i64* %59, align 8
  br label %bb40

bb40:                                             ; preds = %bb50, %bb39
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %60 = call { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf00761eb18344a9aE"({ i64, i64 }* align 8 %iter3)
  store { i64, i64 } %60, { i64, i64 }* %_76, align 8
  br label %bb41

bb41:                                             ; preds = %bb40
  %61 = bitcast { i64, i64 }* %_76 to i64*
  %_79 = load i64, i64* %61, align 8, !range !7, !noundef !3
  switch i64 %_79, label %bb43 [
    i64 0, label %bb44
    i64 1, label %bb42
  ]

bb43:                                             ; preds = %bb41
  unreachable

bb44:                                             ; preds = %bb41
  %62 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %match_pos = load i64, i64* %62, align 8
  %63 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %64 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, %needle.1
  store i64 %66, i64* %63, align 8
  %_101 = xor i1 %long_period, true
  br i1 %_101, label %bb51, label %bb52

bb42:                                             ; preds = %bb41
  %67 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_76, i32 0, i32 1
  %i5 = load i64, i64* %67, align 8
  %_85 = icmp ult i64 %i5, %needle.1
  %68 = call i1 @llvm.expect.i1(i1 %_85, i1 true)
  br i1 %68, label %bb45, label %panic6

bb45:                                             ; preds = %bb42
  %69 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i5
  %_82 = load i8, i8* %69, align 1
  %70 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %_88 = load i64, i64* %70, align 8
  %_87 = add i64 %_88, %i5
  %_91 = icmp ult i64 %_87, %haystack.1
  %71 = call i1 @llvm.expect.i1(i1 %_91, i1 true)
  br i1 %71, label %bb46, label %panic7

panic6:                                           ; preds = %bb42
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h0c2afddde5e93a98E(i64 %i5, i64 %needle.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc709 to %"core::panic::location::Location"*)) #16
  unreachable

bb46:                                             ; preds = %bb45
  %72 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_87
  %_86 = load i8, i8* %72, align 1
  %_81 = icmp ne i8 %_82, %_86
  br i1 %_81, label %bb47, label %bb50

panic7:                                           ; preds = %bb45
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h0c2afddde5e93a98E(i64 %_87, i64 %haystack.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc711 to %"core::panic::location::Location"*)) #16
  unreachable

bb50:                                             ; preds = %bb46
  br label %bb40

bb47:                                             ; preds = %bb46
  %73 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2
  %_92 = load i64, i64* %73, align 8
  %74 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %75 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, %_92
  store i64 %77, i64* %74, align 8
  %_93 = xor i1 %long_period, true
  br i1 %_93, label %bb48, label %bb49

bb49:                                             ; preds = %bb48, %bb47
  br label %bb54

bb48:                                             ; preds = %bb47
  %78 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2
  %_97 = load i64, i64* %78, align 8
  %79 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  %80 = sub i64 %needle.1, %_97
  store i64 %80, i64* %79, align 8
  br label %bb49

bb52:                                             ; preds = %bb51, %bb44
  %_104 = add i64 %match_pos, %needle.1
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17hc92855a4b4a6dd8cE"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, i64 %match_pos, i64 %_104)
  br label %bb53

bb51:                                             ; preds = %bb44
  %81 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6
  store i64 0, i64* %81, align 8
  br label %bb52

bb53:                                             ; preds = %bb52
  br label %bb56

bb6:                                              ; preds = %bb3
  br label %bb56
}

; core::str::converts::from_utf8_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17hec9bdbc98aee6333E([0 x i8]* align 1 %v.0, i64 %v.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %v.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %v.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !3, !align !4, !noundef !3
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  ret { [0 x i8]*, i64 } %8
}

; core::str::converts::from_utf8_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17hfa305421788b7f7eE([0 x i8]* align 1 %v.0, i64 %v.1) unnamed_addr #0 {
start:
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %v.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %v.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::cell::BorrowRefMut::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 i64* @_ZN4core4cell12BorrowRefMut3new17h862ecc05844bee82E(i64* align 8 %borrow) unnamed_addr #0 {
start:
  %_7 = alloca i64*, align 8
  %0 = alloca i64*, align 8
; call core::cell::Cell<T>::get
  %_2 = call i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17hc874a87851ea85fbE"(i64* align 8 %borrow)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h2357636728a3c7c5E"(i64* align 8 %borrow, i64 -1)
  br label %bb4

bb2:                                              ; preds = %bb1
  %2 = bitcast i64** %0 to {}**
  store {}* null, {}** %2, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %3 = load i64*, i64** %0, align 8, !align !8
  ret i64* %3

bb4:                                              ; preds = %bb3
  store i64* %borrow, i64** %_7, align 8
  %4 = load i64*, i64** %_7, align 8, !nonnull !3, !align !8, !noundef !3
  store i64* %4, i64** %0, align 8
  br label %bb5
}

; core::cell::Cell<T>::get
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN4core4cell13Cell$LT$T$GT$3get17hb648ee4e7ebd69cfE"(i8* align 1 %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %0 = load i8, i8* %self, align 1, !range !15, !noundef !3
  ret i8 %0
}

; core::cell::Cell<T>::get
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17hc874a87851ea85fbE"(i64* align 8 %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %0 = load i64, i64* %self, align 8
  ret i64 %0
}

; core::cell::Cell<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core4cell13Cell$LT$T$GT$3new17h1f3f7a2564ddaaaaE"(i64 %value) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 %value, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %2, i64* %1, align 8
  %3 = load i64, i64* %1, align 8
  ret i64 %3
}

; core::cell::Cell<T>::set
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4cell13Cell$LT$T$GT$3set17h2357636728a3c7c5E"(i64* align 8 %self, i64 %val) unnamed_addr #0 {
start:
; call core::cell::Cell<T>::replace
  %old = call i64 @"_ZN4core4cell13Cell$LT$T$GT$7replace17h2849185ac19953e1E"(i64* align 8 %self, i64 %val)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::drop
  call void @_ZN4core3mem4drop17hc8a22bf316fddce2E(i64 %old)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::cell::Cell<T>::set
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4cell13Cell$LT$T$GT$3set17h3dbab661062f6228E"(i8* align 1 %self, i8 %val) unnamed_addr #0 {
start:
; call core::cell::Cell<T>::replace
  %old = call i8 @"_ZN4core4cell13Cell$LT$T$GT$7replace17h2a0984865ededb98E"(i8* align 1 %self, i8 %val), !range !15
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::drop
  call void @_ZN4core3mem4drop17h5b5b49b559a85a41E(i8 %old)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::cell::Cell<T>::replace
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN4core4cell13Cell$LT$T$GT$7replace17h2849185ac19953e1E"(i64* align 8 %self, i64 %val) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  store i8 1, i8* %_9, align 1
  br label %bb1

bb5:                                              ; preds = %cleanup
  %1 = load i8, i8* %_9, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; invoke core::mem::replace
  %8 = invoke i64 @_ZN4core3mem7replace17hab01c1885edb21d9E(i64* align 8 %self, i64 %val)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret i64 %8

bb3:                                              ; preds = %bb4, %bb5
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::cell::Cell<T>::replace
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN4core4cell13Cell$LT$T$GT$7replace17h2a0984865ededb98E"(i8* align 1 %self, i8 %val) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  store i8 1, i8* %_9, align 1
  br label %bb1

bb5:                                              ; preds = %cleanup
  %1 = load i8, i8* %_9, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; invoke core::mem::replace
  %8 = invoke i8 @_ZN4core3mem7replace17hf20d3d6ff5df57b7E(i8* align 1 %self, i8 %val)
          to label %bb2 unwind label %cleanup, !range !15

bb2:                                              ; preds = %bb1
  ret i8 %8

bb3:                                              ; preds = %bb4, %bb5
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::cell::RefCell<T>::borrow_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$10borrow_mut17hac7716ce14873821E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
; call core::cell::RefCell<T>::try_borrow_mut
  %1 = call { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$14try_borrow_mut17h3cc58c0429fa0fddE"(%"core::cell::RefCell<alloc::string::String>"* align 8 %self)
  %_2.0 = extractvalue { i64*, i8* } %1, 0
  %_2.1 = extractvalue { i64*, i8* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  %2 = call { i64*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17ha1c26501d5c95c44E"(i64* %_2.0, i8* %_2.1, [0 x i8]* align 1 bitcast (<{ [16 x i8] }>* @alloc714 to [0 x i8]*), i64 16, %"core::panic::location::Location"* align 8 %0)
  %3 = extractvalue { i64*, i64* } %2, 0
  %4 = extractvalue { i64*, i64* } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i64*, i64* } undef, i64* %3, 0
  %6 = insertvalue { i64*, i64* } %5, i64* %4, 1
  ret { i64*, i64* } %6
}

; core::cell::RefCell<T>::borrow_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$10borrow_mut17hbd7d3d7199f0c684E"({ i64, i64 }* align 8 %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
; call core::cell::RefCell<T>::try_borrow_mut
  %1 = call { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$14try_borrow_mut17h141f8801ccdab716E"({ i64, i64 }* align 8 %self)
  %_2.0 = extractvalue { i64*, i8* } %1, 0
  %_2.1 = extractvalue { i64*, i8* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  %2 = call { i64*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc6764d80685afd92E"(i64* %_2.0, i8* %_2.1, [0 x i8]* align 1 bitcast (<{ [16 x i8] }>* @alloc714 to [0 x i8]*), i64 16, %"core::panic::location::Location"* align 8 %0)
  %3 = extractvalue { i64*, i64* } %2, 0
  %4 = extractvalue { i64*, i64* } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i64*, i64* } undef, i64* %3, 0
  %6 = insertvalue { i64*, i64* } %5, i64* %4, 1
  ret { i64*, i64* } %6
}

; core::cell::RefCell<T>::borrow_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$10borrow_mut17hf85f71a5836bc6caE"({ i64, i32 }* align 8 %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
; call core::cell::RefCell<T>::try_borrow_mut
  %1 = call { i32*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$14try_borrow_mut17h32c68d31cce16716E"({ i64, i32 }* align 8 %self)
  %_2.0 = extractvalue { i32*, i8* } %1, 0
  %_2.1 = extractvalue { i32*, i8* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  %2 = call { i32*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hb1327fd949cc9522E"(i32* %_2.0, i8* %_2.1, [0 x i8]* align 1 bitcast (<{ [16 x i8] }>* @alloc714 to [0 x i8]*), i64 16, %"core::panic::location::Location"* align 8 %0)
  %3 = extractvalue { i32*, i64* } %2, 0
  %4 = extractvalue { i32*, i64* } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i32*, i64* } undef, i32* %3, 0
  %6 = insertvalue { i32*, i64* } %5, i64* %4, 1
  ret { i32*, i64* } %6
}

; core::cell::RefCell<T>::try_borrow
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$10try_borrow17h0a1661c56c836a87E"({ i64, i64 }* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca { i64*, i64* }, align 8
  %b = alloca i64*, align 8
  %_2 = alloca i64*, align 8
  %1 = alloca { i64*, i8* }, align 8
  %_4 = bitcast { i64, i64 }* %self to i64*
; call core::cell::BorrowRef::new
  %2 = call align 8 i64* @_ZN4core4cell9BorrowRef3new17h6200d588c07c4d60E(i64* align 8 %_4)
  store i64* %2, i64** %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_2 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %6 = bitcast { i64*, i8* }* %1 to {}**
  store {}* null, {}** %6, align 8
  br label %bb7

bb4:                                              ; preds = %bb1
  %7 = load i64*, i64** %_2, align 8, !nonnull !3, !align !8, !noundef !3
  store i64* %7, i64** %b, align 8
  %_9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  br label %bb5

bb8:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::cell::BorrowRef>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..cell..BorrowRef$GT$17hefc0a659985d934eE"(i64** %b) #17
          to label %bb9 unwind label %abort

cleanup:                                          ; preds = %bb5
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb8

bb5:                                              ; preds = %bb4
; invoke core::ptr::non_null::NonNull<T>::new_unchecked
  %value = invoke i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd3d3edbdcd68e33aE"(i64* %_9)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_12 = load i64*, i64** %b, align 8, !nonnull !3, !align !8, !noundef !3
  %13 = bitcast { i64*, i64* }* %_10 to i64**
  store i64* %value, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_10, i32 0, i32 1
  store i64* %_12, i64** %14, align 8
  %15 = bitcast { i64*, i8* }* %1 to { i64*, i64* }*
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_10, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8, !nonnull !3, !noundef !3
  %18 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_10, i32 0, i32 1
  %19 = load i64*, i64** %18, align 8, !nonnull !3, !align !8, !noundef !3
  %20 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %15, i32 0, i32 0
  store i64* %17, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %15, i32 0, i32 1
  store i64* %19, i64** %21, align 8
  br label %bb7

abort:                                            ; preds = %bb8
  %22 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb9:                                              ; preds = %bb8
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb7:                                              ; preds = %bb2, %bb6
  %29 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = insertvalue { i64*, i8* } undef, i64* %30, 0
  %34 = insertvalue { i64*, i8* } %33, i8* %32, 1
  ret { i64*, i8* } %34
}

; core::cell::RefCell<T>::try_borrow
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$10try_borrow17h62bd00220b194aaaE"(%"core::cell::RefCell<alloc::string::String>"* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca { i64*, i64* }, align 8
  %b = alloca i64*, align 8
  %_2 = alloca i64*, align 8
  %1 = alloca { i64*, i8* }, align 8
  %_4 = bitcast %"core::cell::RefCell<alloc::string::String>"* %self to i64*
; call core::cell::BorrowRef::new
  %2 = call align 8 i64* @_ZN4core4cell9BorrowRef3new17h6200d588c07c4d60E(i64* align 8 %_4)
  store i64* %2, i64** %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_2 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %6 = bitcast { i64*, i8* }* %1 to {}**
  store {}* null, {}** %6, align 8
  br label %bb7

bb4:                                              ; preds = %bb1
  %7 = load i64*, i64** %_2, align 8, !nonnull !3, !align !8, !noundef !3
  store i64* %7, i64** %b, align 8
  %_9 = getelementptr inbounds %"core::cell::RefCell<alloc::string::String>", %"core::cell::RefCell<alloc::string::String>"* %self, i32 0, i32 1
  %_2.i = bitcast %"core::cell::UnsafeCell<alloc::string::String>"* %_9 to %"alloc::string::String"*
  br label %bb5

bb8:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::cell::BorrowRef>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..cell..BorrowRef$GT$17hefc0a659985d934eE"(i64** %b) #17
          to label %bb9 unwind label %abort

cleanup:                                          ; preds = %bb5
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb8

bb5:                                              ; preds = %bb4
; invoke core::ptr::non_null::NonNull<T>::new_unchecked
  %value = invoke i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd8794e3bae9386b5E"(%"alloc::string::String"* %_2.i)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_12 = load i64*, i64** %b, align 8, !nonnull !3, !align !8, !noundef !3
  %13 = bitcast { i64*, i64* }* %_10 to i64**
  store i64* %value, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_10, i32 0, i32 1
  store i64* %_12, i64** %14, align 8
  %15 = bitcast { i64*, i8* }* %1 to { i64*, i64* }*
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_10, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8, !nonnull !3, !noundef !3
  %18 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_10, i32 0, i32 1
  %19 = load i64*, i64** %18, align 8, !nonnull !3, !align !8, !noundef !3
  %20 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %15, i32 0, i32 0
  store i64* %17, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %15, i32 0, i32 1
  store i64* %19, i64** %21, align 8
  br label %bb7

abort:                                            ; preds = %bb8
  %22 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb9:                                              ; preds = %bb8
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb7:                                              ; preds = %bb2, %bb6
  %29 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = insertvalue { i64*, i8* } undef, i64* %30, 0
  %34 = insertvalue { i64*, i8* } %33, i8* %32, 1
  ret { i64*, i8* } %34
}

; core::cell::RefCell<T>::try_borrow_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$14try_borrow_mut17h141f8801ccdab716E"({ i64, i64 }* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca { i64*, i64* }, align 8
  %b = alloca i64*, align 8
  %_2 = alloca i64*, align 8
  %1 = alloca { i64*, i8* }, align 8
  %_4 = bitcast { i64, i64 }* %self to i64*
; call core::cell::BorrowRefMut::new
  %2 = call align 8 i64* @_ZN4core4cell12BorrowRefMut3new17h862ecc05844bee82E(i64* align 8 %_4)
  store i64* %2, i64** %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_2 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %6 = bitcast { i64*, i8* }* %1 to {}**
  store {}* null, {}** %6, align 8
  br label %bb7

bb4:                                              ; preds = %bb1
  %7 = load i64*, i64** %_2, align 8, !nonnull !3, !align !8, !noundef !3
  store i64* %7, i64** %b, align 8
  %_9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  br label %bb5

bb8:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::cell::BorrowRefMut>
  invoke void @"_ZN4core3ptr45drop_in_place$LT$core..cell..BorrowRefMut$GT$17hd80c5662057d3daaE"(i64** %b) #17
          to label %bb9 unwind label %abort

cleanup:                                          ; preds = %bb5
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb8

bb5:                                              ; preds = %bb4
; invoke core::ptr::non_null::NonNull<T>::new_unchecked
  %value = invoke i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd3d3edbdcd68e33aE"(i64* %_9)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_12 = load i64*, i64** %b, align 8, !nonnull !3, !align !8, !noundef !3
  %13 = bitcast { i64*, i64* }* %_10 to i64**
  store i64* %value, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_10, i32 0, i32 1
  store i64* %_12, i64** %14, align 8
  %15 = bitcast { i64*, i8* }* %1 to { i64*, i64* }*
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_10, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8, !nonnull !3, !noundef !3
  %18 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_10, i32 0, i32 1
  %19 = load i64*, i64** %18, align 8, !nonnull !3, !align !8, !noundef !3
  %20 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %15, i32 0, i32 0
  store i64* %17, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %15, i32 0, i32 1
  store i64* %19, i64** %21, align 8
  br label %bb7

abort:                                            ; preds = %bb8
  %22 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb9:                                              ; preds = %bb8
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb7:                                              ; preds = %bb2, %bb6
  %29 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = insertvalue { i64*, i8* } undef, i64* %30, 0
  %34 = insertvalue { i64*, i8* } %33, i8* %32, 1
  ret { i64*, i8* } %34
}

; core::cell::RefCell<T>::try_borrow_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$14try_borrow_mut17h32c68d31cce16716E"({ i64, i32 }* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca { i32*, i64* }, align 8
  %b = alloca i64*, align 8
  %_2 = alloca i64*, align 8
  %1 = alloca { i32*, i8* }, align 8
  %_4 = bitcast { i64, i32 }* %self to i64*
; call core::cell::BorrowRefMut::new
  %2 = call align 8 i64* @_ZN4core4cell12BorrowRefMut3new17h862ecc05844bee82E(i64* align 8 %_4)
  store i64* %2, i64** %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_2 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %6 = bitcast { i32*, i8* }* %1 to {}**
  store {}* null, {}** %6, align 8
  br label %bb7

bb4:                                              ; preds = %bb1
  %7 = load i64*, i64** %_2, align 8, !nonnull !3, !align !8, !noundef !3
  store i64* %7, i64** %b, align 8
  %_9 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  br label %bb5

bb8:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::cell::BorrowRefMut>
  invoke void @"_ZN4core3ptr45drop_in_place$LT$core..cell..BorrowRefMut$GT$17hd80c5662057d3daaE"(i64** %b) #17
          to label %bb9 unwind label %abort

cleanup:                                          ; preds = %bb5
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb8

bb5:                                              ; preds = %bb4
; invoke core::ptr::non_null::NonNull<T>::new_unchecked
  %value = invoke i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hfbd2cf597620e47fE"(i32* %_9)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_12 = load i64*, i64** %b, align 8, !nonnull !3, !align !8, !noundef !3
  %13 = bitcast { i32*, i64* }* %_10 to i32**
  store i32* %value, i32** %13, align 8
  %14 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %_10, i32 0, i32 1
  store i64* %_12, i64** %14, align 8
  %15 = bitcast { i32*, i8* }* %1 to { i32*, i64* }*
  %16 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %_10, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8, !nonnull !3, !noundef !3
  %18 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %_10, i32 0, i32 1
  %19 = load i64*, i64** %18, align 8, !nonnull !3, !align !8, !noundef !3
  %20 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %15, i32 0, i32 0
  store i32* %17, i32** %20, align 8
  %21 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %15, i32 0, i32 1
  store i64* %19, i64** %21, align 8
  br label %bb7

abort:                                            ; preds = %bb8
  %22 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb9:                                              ; preds = %bb8
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb7:                                              ; preds = %bb2, %bb6
  %29 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %1, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %1, i32 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = insertvalue { i32*, i8* } undef, i32* %30, 0
  %34 = insertvalue { i32*, i8* } %33, i8* %32, 1
  ret { i32*, i8* } %34
}

; core::cell::RefCell<T>::try_borrow_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$14try_borrow_mut17h3cc58c0429fa0fddE"(%"core::cell::RefCell<alloc::string::String>"* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca { i64*, i64* }, align 8
  %b = alloca i64*, align 8
  %_2 = alloca i64*, align 8
  %1 = alloca { i64*, i8* }, align 8
  %_4 = bitcast %"core::cell::RefCell<alloc::string::String>"* %self to i64*
; call core::cell::BorrowRefMut::new
  %2 = call align 8 i64* @_ZN4core4cell12BorrowRefMut3new17h862ecc05844bee82E(i64* align 8 %_4)
  store i64* %2, i64** %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_2 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %6 = bitcast { i64*, i8* }* %1 to {}**
  store {}* null, {}** %6, align 8
  br label %bb7

bb4:                                              ; preds = %bb1
  %7 = load i64*, i64** %_2, align 8, !nonnull !3, !align !8, !noundef !3
  store i64* %7, i64** %b, align 8
  %_9 = getelementptr inbounds %"core::cell::RefCell<alloc::string::String>", %"core::cell::RefCell<alloc::string::String>"* %self, i32 0, i32 1
  %_2.i = bitcast %"core::cell::UnsafeCell<alloc::string::String>"* %_9 to %"alloc::string::String"*
  br label %bb5

bb8:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::cell::BorrowRefMut>
  invoke void @"_ZN4core3ptr45drop_in_place$LT$core..cell..BorrowRefMut$GT$17hd80c5662057d3daaE"(i64** %b) #17
          to label %bb9 unwind label %abort

cleanup:                                          ; preds = %bb5
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb8

bb5:                                              ; preds = %bb4
; invoke core::ptr::non_null::NonNull<T>::new_unchecked
  %value = invoke i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd8794e3bae9386b5E"(%"alloc::string::String"* %_2.i)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_12 = load i64*, i64** %b, align 8, !nonnull !3, !align !8, !noundef !3
  %13 = bitcast { i64*, i64* }* %_10 to i64**
  store i64* %value, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_10, i32 0, i32 1
  store i64* %_12, i64** %14, align 8
  %15 = bitcast { i64*, i8* }* %1 to { i64*, i64* }*
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_10, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8, !nonnull !3, !noundef !3
  %18 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_10, i32 0, i32 1
  %19 = load i64*, i64** %18, align 8, !nonnull !3, !align !8, !noundef !3
  %20 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %15, i32 0, i32 0
  store i64* %17, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %15, i32 0, i32 1
  store i64* %19, i64** %21, align 8
  br label %bb7

abort:                                            ; preds = %bb8
  %22 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb9:                                              ; preds = %bb8
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb7:                                              ; preds = %bb2, %bb6
  %29 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = insertvalue { i64*, i8* } undef, i64* %30, 0
  %34 = insertvalue { i64*, i8* } %33, i8* %32, 1
  ret { i64*, i8* } %34
}

; core::cell::RefCell<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4cell16RefCell$LT$T$GT$3new17h246d02b7745fe43aE"(%"core::cell::RefCell<alloc::string::String>"* sret(%"core::cell::RefCell<alloc::string::String>") %0, %"alloc::string::String"* %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %_2.i = alloca %"alloc::string::String", align 8
  %1 = alloca { i8*, i32 }, align 8
  %_3 = alloca %"alloc::string::String", align 8
  %_2 = alloca %"core::cell::UnsafeCell<alloc::string::String>", align 8
  %2 = bitcast %"alloc::string::String"* %_3 to i8*
  %3 = bitcast %"alloc::string::String"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = bitcast %"alloc::string::String"* %_2.i to i8*
  %5 = bitcast %"alloc::string::String"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  %6 = bitcast %"core::cell::UnsafeCell<alloc::string::String>"* %_2 to %"alloc::string::String"*
  %7 = bitcast %"alloc::string::String"* %6 to i8*
  %8 = bitcast %"alloc::string::String"* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::cell::Cell<T>::new
  %_4 = invoke i64 @"_ZN4core4cell13Cell$LT$T$GT$3new17h1f3f7a2564ddaaaaE"(i64 0)
          to label %bb2 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::string::String>>
  invoke void @"_ZN4core3ptr72drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..string..String$GT$$GT$17h578296e099daa90eE"(%"core::cell::UnsafeCell<alloc::string::String>"* %_2) #17
          to label %bb4 unwind label %abort

cleanup:                                          ; preds = %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb3

bb2:                                              ; preds = %bb1
  %14 = bitcast %"core::cell::RefCell<alloc::string::String>"* %0 to i64*
  store i64 %_4, i64* %14, align 8
  %15 = getelementptr inbounds %"core::cell::RefCell<alloc::string::String>", %"core::cell::RefCell<alloc::string::String>"* %0, i32 0, i32 1
  %16 = bitcast %"core::cell::UnsafeCell<alloc::string::String>"* %15 to i8*
  %17 = bitcast %"core::cell::UnsafeCell<alloc::string::String>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  ret void

abort:                                            ; preds = %bb3
  %18 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb4:                                              ; preds = %bb3
  %19 = bitcast { i8*, i32 }* %1 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; core::cell::RefCell<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4cell16RefCell$LT$T$GT$3new17h6bfaf57087d2e534E"(i64 %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca { i8*, i32 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %value, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::cell::Cell<T>::new
  %_4 = invoke i64 @"_ZN4core4cell13Cell$LT$T$GT$3new17h1f3f7a2564ddaaaaE"(i64 0)
          to label %bb2 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb3

bb2:                                              ; preds = %bb1
  %9 = bitcast { i64, i64 }* %2 to i64*
  store i64 %_4, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %3, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = insertvalue { i64, i64 } undef, i64 %12, 0
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1
  ret { i64, i64 } %16

bb4:                                              ; preds = %bb3
  %17 = bitcast { i8*, i32 }* %1 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; core::cell::RefCell<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN4core4cell16RefCell$LT$T$GT$3new17hc79880b1f0860f80E"(i32 %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i32, align 4
  %1 = alloca { i8*, i32 }, align 8
  %2 = alloca { i64, i32 }, align 8
  store i32 %value, i32* %0, align 4
  %3 = load i32, i32* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::cell::Cell<T>::new
  %_4 = invoke i64 @"_ZN4core4cell13Cell$LT$T$GT$3new17h1f3f7a2564ddaaaaE"(i64 0)
          to label %bb2 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb3

bb2:                                              ; preds = %bb1
  %9 = bitcast { i64, i32 }* %2 to i64*
  store i64 %_4, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1
  store i32 %3, i32* %10, align 8
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i64, i32 } undef, i64 %12, 0
  %16 = insertvalue { i64, i32 } %15, i32 %14, 1
  ret { i64, i32 } %16

bb4:                                              ; preds = %bb3
  %17 = bitcast { i8*, i32 }* %1 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; core::cell::RefCell<T>::borrow
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17h522209af0c1afa20E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
; call core::cell::RefCell<T>::try_borrow
  %1 = call { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$10try_borrow17h62bd00220b194aaaE"(%"core::cell::RefCell<alloc::string::String>"* align 8 %self)
  %_2.0 = extractvalue { i64*, i8* } %1, 0
  %_2.1 = extractvalue { i64*, i8* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  %2 = call { i64*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h96c9893649ba1fc4E"(i64* %_2.0, i8* %_2.1, [0 x i8]* align 1 bitcast (<{ [24 x i8] }>* @alloc716 to [0 x i8]*), i64 24, %"core::panic::location::Location"* align 8 %0)
  %3 = extractvalue { i64*, i64* } %2, 0
  %4 = extractvalue { i64*, i64* } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i64*, i64* } undef, i64* %3, 0
  %6 = insertvalue { i64*, i64* } %5, i64* %4, 1
  ret { i64*, i64* } %6
}

; core::cell::RefCell<T>::borrow
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17heb40be7814151f08E"({ i64, i64 }* align 8 %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
; call core::cell::RefCell<T>::try_borrow
  %1 = call { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$10try_borrow17h0a1661c56c836a87E"({ i64, i64 }* align 8 %self)
  %_2.0 = extractvalue { i64*, i8* } %1, 0
  %_2.1 = extractvalue { i64*, i8* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  %2 = call { i64*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h4a5f73f55fc37191E"(i64* %_2.0, i8* %_2.1, [0 x i8]* align 1 bitcast (<{ [24 x i8] }>* @alloc716 to [0 x i8]*), i64 24, %"core::panic::location::Location"* align 8 %0)
  %3 = extractvalue { i64*, i64* } %2, 0
  %4 = extractvalue { i64*, i64* } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i64*, i64* } undef, i64* %3, 0
  %6 = insertvalue { i64*, i64* } %5, i64* %4, 1
  ret { i64*, i64* } %6
}

; core::cell::RefCell<T>::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core4cell16RefCell$LT$T$GT$7replace17h0a09d308f053f76dE"({ i64, i64 }* align 8 %self, i64 %t, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_7 = alloca { i64*, i64* }, align 8
  store i8 1, i8* %_10, align 1
; invoke core::cell::RefCell<T>::borrow_mut
  %2 = invoke { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$10borrow_mut17hbd7d3d7199f0c684E"({ i64, i64 }* align 8 %self, %"core::panic::location::Location"* align 8 %0)
          to label %bb1 unwind label %cleanup

bb8:                                              ; preds = %bb5, %cleanup
  %3 = load i8, i8* %_10, align 1, !range !2, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb7, label %bb6

cleanup:                                          ; preds = %bb3, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  store { i64*, i64* } %2, { i64*, i64* }* %_7, align 8
; invoke <core::cell::RefMut<T> as core::ops::deref::DerefMut>::deref_mut
  %_5 = invoke align 8 i64* @"_ZN74_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hb9efb12da34e96abE"({ i64*, i64* }* align 8 %_7)
          to label %bb2 unwind label %cleanup1

bb5:                                              ; preds = %cleanup1
; invoke core::ptr::drop_in_place<core::cell::RefMut<usize>>
  invoke void @"_ZN4core3ptr52drop_in_place$LT$core..cell..RefMut$LT$usize$GT$$GT$17h8f1e14a786ae7922E"({ i64*, i64* }* %_7) #17
          to label %bb8 unwind label %abort

cleanup1:                                         ; preds = %bb2, %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_10, align 1
; invoke core::mem::replace
  %15 = invoke i64 @_ZN4core3mem7replace17hccf0655e6c47e2aeE(i64* align 8 %_5, i64 %t)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::cell::RefMut<usize>>
  invoke void @"_ZN4core3ptr52drop_in_place$LT$core..cell..RefMut$LT$usize$GT$$GT$17h8f1e14a786ae7922E"({ i64*, i64* }* %_7)
          to label %bb4 unwind label %cleanup

abort:                                            ; preds = %bb5
  %16 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb4:                                              ; preds = %bb3
  ret i64 %15

bb6:                                              ; preds = %bb7, %bb8
  %17 = bitcast { i8*, i32 }* %1 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22

bb7:                                              ; preds = %bb8
  br label %bb6
}

; core::cell::RefCell<T>::replace
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4cell16RefCell$LT$T$GT$7replace17h317d27f65a45ce62E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"core::cell::RefCell<alloc::string::String>"* align 8 %self, %"alloc::string::String"* %t, %"core::panic::location::Location"* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %"alloc::string::String", align 8
  %_7 = alloca { i64*, i64* }, align 8
  store i8 1, i8* %_10, align 1
; invoke core::cell::RefCell<T>::borrow_mut
  %3 = invoke { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$10borrow_mut17hac7716ce14873821E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %self, %"core::panic::location::Location"* align 8 %1)
          to label %bb1 unwind label %cleanup

bb8:                                              ; preds = %bb5, %cleanup
  %4 = load i8, i8* %_10, align 1, !range !2, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb7, label %bb6

cleanup:                                          ; preds = %bb3, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb8

bb1:                                              ; preds = %start
  store { i64*, i64* } %3, { i64*, i64* }* %_7, align 8
; invoke <core::cell::RefMut<T> as core::ops::deref::DerefMut>::deref_mut
  %_5 = invoke align 8 %"alloc::string::String"* @"_ZN74_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h90b7c033cbd7ee25E"({ i64*, i64* }* align 8 %_7)
          to label %bb2 unwind label %cleanup1

bb5:                                              ; preds = %cleanup1
; invoke core::ptr::drop_in_place<core::cell::RefMut<alloc::string::String>>
  invoke void @"_ZN4core3ptr68drop_in_place$LT$core..cell..RefMut$LT$alloc..string..String$GT$$GT$17hc9a43b06e52f5a04E"({ i64*, i64* }* %_7) #17
          to label %bb8 unwind label %abort

cleanup1:                                         ; preds = %bb2, %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_10, align 1
  %16 = bitcast %"alloc::string::String"* %_9 to i8*
  %17 = bitcast %"alloc::string::String"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17ha4d255043d897b27E(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"alloc::string::String"* align 8 %_5, %"alloc::string::String"* %_9)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::cell::RefMut<alloc::string::String>>
  invoke void @"_ZN4core3ptr68drop_in_place$LT$core..cell..RefMut$LT$alloc..string..String$GT$$GT$17hc9a43b06e52f5a04E"({ i64*, i64* }* %_7)
          to label %bb4 unwind label %cleanup

abort:                                            ; preds = %bb7, %bb5
  %18 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb7, %bb8
  %19 = bitcast { i8*, i32 }* %2 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24

bb7:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %t) #17
          to label %bb6 unwind label %abort
}

; core::cell::BorrowRef::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 i64* @_ZN4core4cell9BorrowRef3new17h6200d588c07c4d60E(i64* align 8 %borrow) unnamed_addr #0 {
start:
  %_11 = alloca i64*, align 8
  %0 = alloca i64*, align 8
; call core::cell::Cell<T>::get
  %_3 = call i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17hc874a87851ea85fbE"(i64* align 8 %borrow)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = add i64 %_3, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = icmp sgt i64 %1, 0
  br label %bb3

bb3:                                              ; preds = %bb2
  %_5 = xor i1 %2, true
  br i1 %_5, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h2357636728a3c7c5E"(i64* align 8 %borrow, i64 %1)
  br label %bb6

bb4:                                              ; preds = %bb3
  %3 = bitcast i64** %0 to {}**
  store {}* null, {}** %3, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb4
  %4 = load i64*, i64** %0, align 8, !align !8
  ret i64* %4

bb6:                                              ; preds = %bb5
  store i64* %borrow, i64** %_11, align 8
  %5 = load i64*, i64** %_11, align 8, !nonnull !3, !align !8, !noundef !3
  store i64* %5, i64** %0, align 8
  br label %bb7
}

; core::char::from_u32_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4char18from_u32_unchecked17h39231f7ad397bfbdE(i32 %i) unnamed_addr #0 {
start:
; call core::char::convert::from_u32_unchecked
  %0 = call i32 @_ZN4core4char7convert18from_u32_unchecked17h200b5d39f7c40423E(i32 %i), !range !20
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; core::char::convert::from_u32_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4char7convert18from_u32_unchecked17h200b5d39f7c40423E(i32 %i) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  store i32 %i, i32* %0, align 4
  %1 = load i32, i32* %0, align 4, !range !20, !noundef !3
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %1
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h4c6d246958cd645aE(i32 %0, [0 x i8]* align 1 %dst.0, i64 %dst.1) unnamed_addr #0 {
start:
  %_91 = alloca i64, align 8
  %_86 = alloca i64, align 8
  %_76 = alloca [3 x { i8*, i64* }], align 8
  %_69 = alloca %"core::fmt::Arguments", align 8
  %_6 = alloca { i64, { [0 x i8]*, i64 } }, align 8
  %len = alloca i64, align 8
  %code = alloca i32, align 4
  store i32 %0, i32* %code, align 4
  %_5 = load i32, i32* %code, align 4
; call core::char::methods::len_utf8
  %1 = call i64 @_ZN4core4char7methods8len_utf817h4d46d63ced1c4a8aE(i32 %_5)
  store i64 %1, i64* %len, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %len, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %2 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1dc81deb5c9b6a53E"([0 x i8]* align 1 %dst.0, i64 %dst.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc718 to %"core::panic::location::Location"*))
  %_9.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_9.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*
  store i64 %_7, i64* %3, align 8
  %4 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  store [0 x i8]* %_9.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  store i64 %_9.1, i64* %6, align 8
  %7 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*
  %8 = load i64, i64* %7, align 8
  switch i64 %8, label %bb4 [
    i64 1, label %bb3
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
  ]

bb4:                                              ; preds = %bb3, %bb5, %bb6, %bb7, %bb2
; call core::fmt::ArgumentV1::new_display
  %9 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h9dcec05d7b2f10d9E(i64* align 8 %len)
  %_77.0 = extractvalue { i8*, i64* } %9, 0
  %_77.1 = extractvalue { i8*, i64* } %9, 1
  br label %bb12

bb3:                                              ; preds = %bb2
  %10 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0
  %_94.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !nonnull !3, !align !4, !noundef !3
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1
  %_94.1 = load i64, i64* %12, align 8
  %_14 = icmp uge i64 %_94.1, 1
  br i1 %_14, label %bb8, label %bb4

bb5:                                              ; preds = %bb2
  %13 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 0
  %_95.0 = load [0 x i8]*, [0 x i8]** %14, align 8, !nonnull !3, !align !4, !noundef !3
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 1
  %_95.1 = load i64, i64* %15, align 8
  %_17 = icmp uge i64 %_95.1, 2
  br i1 %_17, label %bb9, label %bb4

bb6:                                              ; preds = %bb2
  %16 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0
  %_96.0 = load [0 x i8]*, [0 x i8]** %17, align 8, !nonnull !3, !align !4, !noundef !3
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1
  %_96.1 = load i64, i64* %18, align 8
  %_20 = icmp uge i64 %_96.1, 3
  br i1 %_20, label %bb10, label %bb4

bb7:                                              ; preds = %bb2
  %19 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 0
  %_97.0 = load [0 x i8]*, [0 x i8]** %20, align 8, !nonnull !3, !align !4, !noundef !3
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 1
  %_97.1 = load i64, i64* %21, align 8
  %_23 = icmp uge i64 %_97.1, 4
  br i1 %_23, label %bb11, label %bb4

bb11:                                             ; preds = %bb7
  %22 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %22, i32 0, i32 0
  %_104.0 = load [0 x i8]*, [0 x i8]** %23, align 8, !nonnull !3, !align !4, !noundef !3
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %22, i32 0, i32 1
  %_104.1 = load i64, i64* %24, align 8
  %a = getelementptr inbounds [0 x i8], [0 x i8]* %_104.0, i64 0, i64 0
  %25 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %25, i32 0, i32 0
  %_105.0 = load [0 x i8]*, [0 x i8]** %26, align 8, !nonnull !3, !align !4, !noundef !3
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %25, i32 0, i32 1
  %_105.1 = load i64, i64* %27, align 8
  %b = getelementptr inbounds [0 x i8], [0 x i8]* %_105.0, i64 0, i64 1
  %28 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0
  %_106.0 = load [0 x i8]*, [0 x i8]** %29, align 8, !nonnull !3, !align !4, !noundef !3
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1
  %_106.1 = load i64, i64* %30, align 8
  %c = getelementptr inbounds [0 x i8], [0 x i8]* %_106.0, i64 0, i64 2
  %31 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 0
  %_107.0 = load [0 x i8]*, [0 x i8]** %32, align 8, !nonnull !3, !align !4, !noundef !3
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 1
  %_107.1 = load i64, i64* %33, align 8
  %d = getelementptr inbounds [0 x i8], [0 x i8]* %_107.0, i64 0, i64 3
  %_56 = load i32, i32* %code, align 4
  %_55 = lshr i32 %_56, 18
  %_54 = and i32 %_55, 7
  %_53 = trunc i32 %_54 to i8
  %34 = or i8 %_53, -16
  store i8 %34, i8* %a, align 1
  %_60 = load i32, i32* %code, align 4
  %_59 = lshr i32 %_60, 12
  %_58 = and i32 %_59, 63
  %_57 = trunc i32 %_58 to i8
  %35 = or i8 %_57, -128
  store i8 %35, i8* %b, align 1
  %_64 = load i32, i32* %code, align 4
  %_63 = lshr i32 %_64, 6
  %_62 = and i32 %_63, 63
  %_61 = trunc i32 %_62 to i8
  %36 = or i8 %_61, -128
  store i8 %36, i8* %c, align 1
  %_67 = load i32, i32* %code, align 4
  %_66 = and i32 %_67, 63
  %_65 = trunc i32 %_66 to i8
  %37 = or i8 %_65, -128
  store i8 %37, i8* %d, align 1
  br label %bb16

bb16:                                             ; preds = %bb8, %bb9, %bb10, %bb11
  %_92 = load i64, i64* %len, align 8
  store i64 %_92, i64* %_91, align 8
  %38 = load i64, i64* %_91, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %39 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5ce983ebd83f9d11E"([0 x i8]* align 1 %dst.0, i64 %dst.1, i64 %38, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc720 to %"core::panic::location::Location"*))
  %_89.0 = extractvalue { [0 x i8]*, i64 } %39, 0
  %_89.1 = extractvalue { [0 x i8]*, i64 } %39, 1
  br label %bb17

bb10:                                             ; preds = %bb6
  %40 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %40, i32 0, i32 0
  %_101.0 = load [0 x i8]*, [0 x i8]** %41, align 8, !nonnull !3, !align !4, !noundef !3
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %40, i32 0, i32 1
  %_101.1 = load i64, i64* %42, align 8
  %a1 = getelementptr inbounds [0 x i8], [0 x i8]* %_101.0, i64 0, i64 0
  %43 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %43, i32 0, i32 0
  %_102.0 = load [0 x i8]*, [0 x i8]** %44, align 8, !nonnull !3, !align !4, !noundef !3
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %43, i32 0, i32 1
  %_102.1 = load i64, i64* %45, align 8
  %b2 = getelementptr inbounds [0 x i8], [0 x i8]* %_102.0, i64 0, i64 1
  %46 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %47 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %46, i32 0, i32 0
  %_103.0 = load [0 x i8]*, [0 x i8]** %47, align 8, !nonnull !3, !align !4, !noundef !3
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %46, i32 0, i32 1
  %_103.1 = load i64, i64* %48, align 8
  %c3 = getelementptr inbounds [0 x i8], [0 x i8]* %_103.0, i64 0, i64 2
  %_41 = load i32, i32* %code, align 4
  %_40 = lshr i32 %_41, 12
  %_39 = and i32 %_40, 15
  %_38 = trunc i32 %_39 to i8
  %49 = or i8 %_38, -32
  store i8 %49, i8* %a1, align 1
  %_45 = load i32, i32* %code, align 4
  %_44 = lshr i32 %_45, 6
  %_43 = and i32 %_44, 63
  %_42 = trunc i32 %_43 to i8
  %50 = or i8 %_42, -128
  store i8 %50, i8* %b2, align 1
  %_48 = load i32, i32* %code, align 4
  %_47 = and i32 %_48, 63
  %_46 = trunc i32 %_47 to i8
  %51 = or i8 %_46, -128
  store i8 %51, i8* %c3, align 1
  br label %bb16

bb9:                                              ; preds = %bb5
  %52 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %53 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %52, i32 0, i32 0
  %_99.0 = load [0 x i8]*, [0 x i8]** %53, align 8, !nonnull !3, !align !4, !noundef !3
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %52, i32 0, i32 1
  %_99.1 = load i64, i64* %54, align 8
  %a4 = getelementptr inbounds [0 x i8], [0 x i8]* %_99.0, i64 0, i64 0
  %55 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %55, i32 0, i32 0
  %_100.0 = load [0 x i8]*, [0 x i8]** %56, align 8, !nonnull !3, !align !4, !noundef !3
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %55, i32 0, i32 1
  %_100.1 = load i64, i64* %57, align 8
  %b5 = getelementptr inbounds [0 x i8], [0 x i8]* %_100.0, i64 0, i64 1
  %_31 = load i32, i32* %code, align 4
  %_30 = lshr i32 %_31, 6
  %_29 = and i32 %_30, 31
  %_28 = trunc i32 %_29 to i8
  %58 = or i8 %_28, -64
  store i8 %58, i8* %a4, align 1
  %_34 = load i32, i32* %code, align 4
  %_33 = and i32 %_34, 63
  %_32 = trunc i32 %_33 to i8
  %59 = or i8 %_32, -128
  store i8 %59, i8* %b5, align 1
  br label %bb16

bb8:                                              ; preds = %bb3
  %60 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %60, i32 0, i32 0
  %_98.0 = load [0 x i8]*, [0 x i8]** %61, align 8, !nonnull !3, !align !4, !noundef !3
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %60, i32 0, i32 1
  %_98.1 = load i64, i64* %62, align 8
  %a6 = getelementptr inbounds [0 x i8], [0 x i8]* %_98.0, i64 0, i64 0
  %_25 = load i32, i32* %code, align 4
  %63 = trunc i32 %_25 to i8
  store i8 %63, i8* %a6, align 1
  br label %bb16

bb17:                                             ; preds = %bb16
  %64 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_89.0, 0
  %65 = insertvalue { [0 x i8]*, i64 } %64, i64 %_89.1, 1
  ret { [0 x i8]*, i64 } %65

bb12:                                             ; preds = %bb4
; call core::fmt::ArgumentV1::new_upper_hex
  %66 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV113new_upper_hex17hfa497661979a8342E(i32* align 4 %code)
  %_80.0 = extractvalue { i8*, i64* } %66, 0
  %_80.1 = extractvalue { i8*, i64* } %66, 1
  br label %bb13

bb13:                                             ; preds = %bb12
  store i64 %dst.1, i64* %_86, align 8
; call core::fmt::ArgumentV1::new_display
  %67 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h9dcec05d7b2f10d9E(i64* align 8 %_86)
  %_83.0 = extractvalue { i8*, i64* } %67, 0
  %_83.1 = extractvalue { i8*, i64* } %67, 1
  br label %bb14

bb14:                                             ; preds = %bb13
  %68 = bitcast [3 x { i8*, i64* }]* %_76 to { i8*, i64* }*
  %69 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %68, i32 0, i32 0
  store i8* %_77.0, i8** %69, align 8
  %70 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %68, i32 0, i32 1
  store i64* %_77.1, i64** %70, align 8
  %71 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_76, i32 0, i32 1
  %72 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %71, i32 0, i32 0
  store i8* %_80.0, i8** %72, align 8
  %73 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %71, i32 0, i32 1
  store i64* %_80.1, i64** %73, align 8
  %74 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_76, i32 0, i32 2
  %75 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %74, i32 0, i32 0
  store i8* %_83.0, i8** %75, align 8
  %76 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %74, i32 0, i32 1
  store i64* %_83.1, i64** %76, align 8
  %_73.0 = bitcast [3 x { i8*, i64* }]* %_76 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_69, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc356 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* align 8 %_73.0, i64 3)
  br label %bb15

bb15:                                             ; preds = %bb14
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"* %_69, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc722 to %"core::panic::location::Location"*)) #16
  unreachable
}

; core::char::methods::<impl char>::encode_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h0ed165b39ab32042E"(i32 %self, [0 x i8]* align 1 %dst.0, i64 %dst.1) unnamed_addr #0 {
start:
  %0 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %0)
; call core::char::methods::encode_utf8_raw
  %1 = call { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h4c6d246958cd645aE(i32 %self, [0 x i8]* align 1 %dst.0, i64 %dst.1)
  %_7.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked_mut
  %2 = call { [0 x i8]*, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17hfa305421788b7f7eE([0 x i8]* align 1 %_7.0, i64 %_7.1)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_5.0, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %_5.1, 1
  ret { [0 x i8]*, i64 } %4
}

; core::char::methods::<impl char>::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hcca34160c186885eE"(i32 %self) unnamed_addr #0 {
start:
  %0 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %0)
; call core::char::methods::len_utf8
  %1 = call i64 @_ZN4core4char7methods8len_utf817h4d46d63ced1c4a8aE(i32 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4char7methods8len_utf817h4d46d63ced1c4a8aE(i32 %code) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_2 = icmp ult i32 %code, 128
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_4 = icmp ult i32 %code, 2048
  br i1 %_4, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i64 1, i64* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb1
  %1 = load i64, i64* %0, align 8
  ret i64 %1

bb4:                                              ; preds = %bb2
  %_6 = icmp ult i32 %code, 65536
  br i1 %_6, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  store i64 2, i64* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb3
  br label %bb9

bb6:                                              ; preds = %bb4
  store i64 4, i64* %0, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
  store i64 3, i64* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  br label %bb8
}

; core::hint::unreachable_unchecked
; Function Attrs: inlinehint noreturn nonlazybind uwtable
define internal void @_ZN4core4hint21unreachable_unchecked17he36bd9722d6f5c7dE() unnamed_addr #3 {
start:
  unreachable
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h44032888d6410e28E"({ i64, i64 }* align 8 %self) unnamed_addr #0 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h6684efa80248ba79E"({ i64, i64 }* align 8 %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17hb156b3d7d001077aE"({ i64, i64 }* align 8 %self) unnamed_addr #0 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h48ef42087b2552fbE"({ i64, i64 }* align 8 %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @_ZN4core4iter6traits8iterator8Iterator3map17h7360642be143fe78E(i64* %self.0, i64* %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::map::Map<I,F>::new
  %0 = call { i64*, i64* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h41e66f349a6a3812E"(i64* %self.0, i64* %self.1)
  %1 = extractvalue { i64*, i64* } %0, 0
  %2 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64* } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64* } %3, i64* %2, 1
  ret { i64*, i64* } %4
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @_ZN4core4iter6traits8iterator8Iterator3map17hcf8a14ca2e428fc7E(i64* %self.0, i64* %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::map::Map<I,F>::new
  %0 = call { i64*, i64* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h10666c7ab7c47f99E"(i64* %self.0, i64* %self.1)
  %1 = extractvalue { i64*, i64* } %0, 0
  %2 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64* } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64* } %3, i64* %2, 1
  ret { i64*, i64* } %4
}

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator3rev17h0c2da3e218a90aa8E(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::rev::Rev<T>::new
  %0 = call { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h8dc67797217b494bE"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator7collect17h6e13de7d8f1eef69E(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, %"core::str::iter::Split<&str>"* %self) unnamed_addr #0 {
start:
  %_2 = alloca %"core::str::iter::Split<&str>", align 8
  %1 = bitcast %"core::str::iter::Split<&str>"* %_2 to i8*
  %2 = bitcast %"core::str::iter::Split<&str>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 128, i1 false)
; call <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
  call void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17hfee1b05494d4638aE"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, %"core::str::iter::Split<&str>"* %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator8try_fold17h8ed5c081d2f2f638E({ i64*, i64* }* align 8 %self, i64 %init, i8* align 1 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca { i64, i64* }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_5 = alloca i64*, align 8
  %accum = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %f = alloca i8*, align 8
  store i8* %0, i8** %f, align 8
  store i8 1, i8* %_21, align 1
  store i64 %init, i64* %accum, align 8
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffafa6fa6d8619a9E"({ i64*, i64* }* align 8 %self)
          to label %bb2 unwind label %cleanup

bb17:                                             ; preds = %cleanup
  %4 = load i8, i8* %_21, align 1, !range !2, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb16, label %bb14

cleanup:                                          ; preds = %bb8, %bb4, %bb3, %bb11, %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb17

bb2:                                              ; preds = %bb1
  store i64* %3, i64** %_5, align 8
  %11 = bitcast i64** %_5 to {}**
  %12 = load {}*, {}** %11, align 8
  %13 = icmp eq {}* %12, null
  %_7 = select i1 %13, i64 0, i64 1
  %14 = icmp eq i64 %_7, 1
  br i1 %14, label %bb3, label %bb10

bb3:                                              ; preds = %bb2
  %15 = bitcast i64** %_5 to { [0 x i8]*, i64 }**
  %x = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %15, align 8, !nonnull !3, !align !8, !noundef !3
  store i8 0, i8* %_21, align 1
  %_14 = load i64, i64* %accum, align 8
  %16 = bitcast { i64, i64* }* %_13 to i64*
  store i64 %_14, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_13, i32 0, i32 1
  %18 = bitcast i64** %17 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %18, align 8
  %19 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_13, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_13, i32 0, i32 1
  %22 = load i64*, i64** %21, align 8, !nonnull !3, !align !8, !noundef !3
  %23 = bitcast i64* %22 to { [0 x i8]*, i64 }*
; invoke core::iter::adapters::map::map_try_fold::{{closure}}
  %24 = invoke { i64, i64 } @"_ZN4core4iter8adapters3map12map_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h2e9056151935129eE"(i8** align 8 %f, i64 %20, { [0 x i8]*, i64 }* align 8 %23)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_21, align 1
  %_20 = load i64, i64* %accum, align 8
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::from_output
  %25 = invoke { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h698e9ed9f43e31e3E"(i64 %_20)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  store { i64, i64 } %25, { i64, i64 }* %2, align 8
  br label %bb13

bb13:                                             ; preds = %bb9, %bb12
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %27 = load i64, i64* %26, align 8, !range !7, !noundef !3
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1
  ret { i64, i64 } %31

bb4:                                              ; preds = %bb3
  %_11.0 = extractvalue { i64, i64 } %24, 0
  %_11.1 = extractvalue { i64, i64 } %24, 1
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %32 = invoke { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha9cbb96c13bf50d0E"(i64 %_11.0, i64 %_11.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store { i64, i64 } %32, { i64, i64 }* %_10, align 8
  %33 = bitcast { i64, i64 }* %_10 to i64*
  %_16 = load i64, i64* %33, align 8, !range !7, !noundef !3
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  %val = load i64, i64* %34, align 8
  store i8 1, i8* %_21, align 1
  store i64 %val, i64* %accum, align 8
  br label %bb1

bb8:                                              ; preds = %bb5
; invoke <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %35 = invoke { i64, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hec9ab40678ac054aE"()
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  store { i64, i64 } %35, { i64, i64 }* %2, align 8
  br label %bb13

bb14:                                             ; preds = %bb16, %bb17
  br label %bb15

bb16:                                             ; preds = %bb17
  br label %bb14

bb15:                                             ; preds = %bb14
  %36 = bitcast { i8*, i32 }* %1 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  resume { i8*, i32 } %41
}

; core::iter::traits::iterator::Iterator::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator9size_hint17h5a0d6300c820b1a6E({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %0, %"core::str::iter::Split<&str>"* align 8 %self) unnamed_addr #0 {
start:
  %_2 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_2 to i64*
  store i64 0, i64* %1, align 8
  %2 = bitcast { i64, { i64, i64 } }* %0 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !range !7, !noundef !3
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %7, i64* %9, align 8
  ret void
}

; core::iter::adapters::map::map_try_fold
; Function Attrs: nonlazybind uwtable
define align 1 i8* @_ZN4core4iter8adapters3map12map_try_fold17h5293b540203e666dE(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* align 1 %f) unnamed_addr #1 {
start:
  %0 = alloca i8*, align 8
  %1 = bitcast i8** %0 to {}*
  %2 = bitcast i8** %0 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"**
  store %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* %f, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"** %2, align 8
  %3 = load i8*, i8** %0, align 8, !nonnull !3, !align !4, !noundef !3
  ret i8* %3
}

; core::iter::adapters::map::map_try_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters3map12map_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h2e9056151935129eE"(i8** align 8 %_1, i64 %acc, { [0 x i8]*, i64 }* align 8 %elt) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca i64*, align 8
  %_5 = alloca { i64, i64 }, align 8
  %_4 = bitcast i8** %_1 to {}*
  store i8 1, i8* %_11, align 1
  %1 = bitcast i8** %_1 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"**
  %_12 = load %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"*, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"** %1, align 8, !nonnull !3, !align !4, !noundef !3
  %2 = bitcast i64** %_9 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %elt, { [0 x i8]*, i64 }** %2, align 8
  %3 = load i64*, i64** %_9, align 8, !nonnull !3, !align !8, !noundef !3
  %4 = bitcast i64* %3 to { [0 x i8]*, i64 }*
; invoke alloc::str::join_generic_copy::{{closure}}::{{closure}}
  %_7 = invoke i64 @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h07bb08ee0434a13fE"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* align 1 %_12, { [0 x i8]*, i64 }* align 8 %4)
          to label %bb1 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %5 = load i8, i8* %_11, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %12 = bitcast { i64, i64 }* %_5 to i64*
  store i64 %acc, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %_7, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
; invoke core::ops::function::FnMut::call_mut
  %18 = invoke { i64, i64 } @_ZN4core3ops8function5FnMut8call_mut17h1ccefd62e68f6c0aE({}* align 1 %_4, i64 %15, i64 %17)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = extractvalue { i64, i64 } %18, 1
  %21 = insertvalue { i64, i64 } undef, i64 %19, 0
  %22 = insertvalue { i64, i64 } %21, i64 %20, 1
  ret { i64, i64 } %22

bb3:                                              ; preds = %bb4, %bb5
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i64* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h10666c7ab7c47f99E"(i64* %iter.0, i64* %iter.1) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i64* }, align 8
  %1 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0
  store i64* %iter.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1
  store i64* %iter.1, i64** %2, align 8
  %3 = bitcast { i64*, i64* }* %0 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3, !noundef !3
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = insertvalue { i64*, i64* } undef, i64* %5, 0
  %9 = insertvalue { i64*, i64* } %8, i64* %7, 1
  ret { i64*, i64* } %9
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i64* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h41e66f349a6a3812E"(i64* %iter.0, i64* %iter.1) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i64* }, align 8
  %1 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0
  store i64* %iter.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1
  store i64* %iter.1, i64** %2, align 8
  %3 = bitcast { i64*, i64* }* %0 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"*
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3, !noundef !3
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = insertvalue { i64*, i64* } undef, i64* %5, 0
  %9 = insertvalue { i64*, i64* } %8, i64* %7, 1
  ret { i64*, i64* } %9
}

; core::iter::adapters::rev::Rev<T>::new
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h8dc67797217b494bE"(i64 %iter.0, i64 %iter.1) unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::sync::atomic::AtomicBool::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core4sync6atomic10AtomicBool3new17h5d50cce8b9091b9aE(i1 zeroext %v) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = alloca %"core::sync::atomic::AtomicBool", align 1
  %2 = icmp ule i1 %v, true
  call void @llvm.assume(i1 %2)
  %_3 = zext i1 %v to i8
  store i8 %_3, i8* %0, align 1
  %3 = load i8, i8* %0, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"core::sync::atomic::AtomicBool"* %1 to i8*
  store i8 %3, i8* %4, align 1
  %5 = bitcast %"core::sync::atomic::AtomicBool"* %1 to i8*
  %6 = load i8, i8* %5, align 1
  ret i8 %6
}

; core::sync::atomic::AtomicBool::load
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core4sync6atomic10AtomicBool4load17h8eae756223149182E(%"core::sync::atomic::AtomicBool"* align 1 %self, i8 %order) unnamed_addr #0 {
start:
  %_6 = bitcast %"core::sync::atomic::AtomicBool"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_load
  %_3 = call i8 @_ZN4core4sync6atomic11atomic_load17h85fbef18f5f8cdc8E(i8* %_6, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = icmp ne i8 %_3, 0
  ret i1 %0
}

; core::sync::atomic::AtomicBool::store
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core4sync6atomic10AtomicBool5store17hfcd593176a579d4fE(%"core::sync::atomic::AtomicBool"* align 1 %self, i1 zeroext %val, i8 %order) unnamed_addr #0 {
start:
  %_6 = bitcast %"core::sync::atomic::AtomicBool"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp ule i1 %val, true
  call void @llvm.assume(i1 %0)
  %_7 = zext i1 %val to i8
; call core::sync::atomic::atomic_store
  call void @_ZN4core4sync6atomic12atomic_store17h247ca5bb44db30c8E(i8* %_6, i8 %_7, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::sync::atomic::atomic_sub
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4sync6atomic10atomic_sub17hc386c027e99e049fE(i64* %dst, i64 %val, i8 %0) unnamed_addr #0 {
start:
  %1 = alloca i64, align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %2 = load i8, i8* %order, align 1, !range !12, !noundef !3
  %_4 = zext i8 %2 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb9
    i64 1, label %bb5
    i64 2, label %bb3
    i64 3, label %bb7
    i64 4, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb9:                                              ; preds = %start
  %3 = atomicrmw sub i64* %dst, i64 %val monotonic, align 8
  store i64 %3, i64* %1, align 8
  br label %bb10

bb5:                                              ; preds = %start
  %4 = atomicrmw sub i64* %dst, i64 %val release, align 8
  store i64 %4, i64* %1, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %5 = atomicrmw sub i64* %dst, i64 %val acquire, align 8
  store i64 %5, i64* %1, align 8
  br label %bb4

bb7:                                              ; preds = %start
  %6 = atomicrmw sub i64* %dst, i64 %val acq_rel, align 8
  store i64 %6, i64* %1, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %7 = atomicrmw sub i64* %dst, i64 %val seq_cst, align 8
  store i64 %7, i64* %1, align 8
  br label %bb11

bb11:                                             ; preds = %bb1
  br label %bb12

bb12:                                             ; preds = %bb10, %bb6, %bb4, %bb8, %bb11
  %8 = load i64, i64* %1, align 8
  ret i64 %8

bb8:                                              ; preds = %bb7
  br label %bb12

bb4:                                              ; preds = %bb3
  br label %bb12

bb6:                                              ; preds = %bb5
  br label %bb12

bb10:                                             ; preds = %bb9
  br label %bb12
}

; core::sync::atomic::AtomicUsize::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic11AtomicUsize3new17hfeb4c8df9df571b4E(i64 %v) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca %"core::sync::atomic::AtomicUsize", align 8
  store i64 %v, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast %"core::sync::atomic::AtomicUsize"* %1 to i64*
  store i64 %2, i64* %3, align 8
  %4 = bitcast %"core::sync::atomic::AtomicUsize"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::sync::atomic::AtomicUsize::load
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic11AtomicUsize4load17ha2af4492530a1ceaE(%"core::sync::atomic::AtomicUsize"* align 8 %self, i8 %order) unnamed_addr #0 {
start:
  %_5 = bitcast %"core::sync::atomic::AtomicUsize"* %self to i64*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_load
  %0 = call i64 @_ZN4core4sync6atomic11atomic_load17h589d1554a838b806E(i64* %_5, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %0
}

; core::sync::atomic::AtomicUsize::fetch_sub
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h3fb1bc6c06e344ecE(%"core::sync::atomic::AtomicUsize"* align 8 %self, i64 %val, i8 %order) unnamed_addr #0 {
start:
  %_5 = bitcast %"core::sync::atomic::AtomicUsize"* %self to i64*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_sub
  %0 = call i64 @_ZN4core4sync6atomic10atomic_sub17hc386c027e99e049fE(i64* %_5, i64 %val, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %0
}

; core::sync::atomic::atomic_load
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4sync6atomic11atomic_load17h589d1554a838b806E(i64* %dst, i8 %0) unnamed_addr #0 {
start:
  %_16 = alloca %"core::fmt::Arguments", align 8
  %_8 = alloca %"core::fmt::Arguments", align 8
  %1 = alloca i64, align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %2 = load i8, i8* %order, align 1, !range !12, !noundef !3
  %_3 = zext i8 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb9
    i64 2, label %bb3
    i64 3, label %bb1
    i64 4, label %bb7
  ]

bb2:                                              ; preds = %start
  unreachable

bb5:                                              ; preds = %start
  %3 = load atomic i64, i64* %dst monotonic, align 8
  store i64 %3, i64* %1, align 8
  br label %bb6

bb9:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_8, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc325 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc222 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb10

bb3:                                              ; preds = %start
  %4 = load atomic i64, i64* %dst acquire, align 8
  store i64 %4, i64* %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_16, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc320 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc222 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb11

bb7:                                              ; preds = %start
  %5 = load atomic i64, i64* %dst seq_cst, align 8
  store i64 %5, i64* %1, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb12

bb12:                                             ; preds = %bb6, %bb4, %bb8
  %6 = load i64, i64* %1, align 8
  ret i64 %6

bb11:                                             ; preds = %bb1
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"* %_16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc724 to %"core::panic::location::Location"*)) #16
  unreachable

bb4:                                              ; preds = %bb3
  br label %bb12

bb10:                                             ; preds = %bb9
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"* %_8, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc726 to %"core::panic::location::Location"*)) #16
  unreachable

bb6:                                              ; preds = %bb5
  br label %bb12
}

; core::sync::atomic::atomic_load
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @_ZN4core4sync6atomic11atomic_load17h85fbef18f5f8cdc8E(i8* %dst, i8 %0) unnamed_addr #0 {
start:
  %_16 = alloca %"core::fmt::Arguments", align 8
  %_8 = alloca %"core::fmt::Arguments", align 8
  %1 = alloca i8, align 1
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %2 = load i8, i8* %order, align 1, !range !12, !noundef !3
  %_3 = zext i8 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb9
    i64 2, label %bb3
    i64 3, label %bb1
    i64 4, label %bb7
  ]

bb2:                                              ; preds = %start
  unreachable

bb5:                                              ; preds = %start
  %3 = load atomic i8, i8* %dst monotonic, align 1
  store i8 %3, i8* %1, align 1
  br label %bb6

bb9:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_8, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc325 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc222 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb10

bb3:                                              ; preds = %start
  %4 = load atomic i8, i8* %dst acquire, align 1
  store i8 %4, i8* %1, align 1
  br label %bb4

bb1:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_16, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc320 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc222 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb11

bb7:                                              ; preds = %start
  %5 = load atomic i8, i8* %dst seq_cst, align 1
  store i8 %5, i8* %1, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb12

bb12:                                             ; preds = %bb6, %bb4, %bb8
  %6 = load i8, i8* %1, align 1
  ret i8 %6

bb11:                                             ; preds = %bb1
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"* %_16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc724 to %"core::panic::location::Location"*)) #16
  unreachable

bb4:                                              ; preds = %bb3
  br label %bb12

bb10:                                             ; preds = %bb9
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"* %_8, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc726 to %"core::panic::location::Location"*)) #16
  unreachable

bb6:                                              ; preds = %bb5
  br label %bb12
}

; core::sync::atomic::atomic_swap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core4sync6atomic11atomic_swap17h4c7202893aba4abfE(i32* %dst, i32 %val, i8 %0) unnamed_addr #0 {
start:
  %1 = alloca i32, align 4
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %2 = load i8, i8* %order, align 1, !range !12, !noundef !3
  %_4 = zext i8 %2 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb9
    i64 1, label %bb5
    i64 2, label %bb3
    i64 3, label %bb7
    i64 4, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb9:                                              ; preds = %start
  %3 = atomicrmw xchg i32* %dst, i32 %val monotonic, align 4
  store i32 %3, i32* %1, align 4
  br label %bb10

bb5:                                              ; preds = %start
  %4 = atomicrmw xchg i32* %dst, i32 %val release, align 4
  store i32 %4, i32* %1, align 4
  br label %bb6

bb3:                                              ; preds = %start
  %5 = atomicrmw xchg i32* %dst, i32 %val acquire, align 4
  store i32 %5, i32* %1, align 4
  br label %bb4

bb7:                                              ; preds = %start
  %6 = atomicrmw xchg i32* %dst, i32 %val acq_rel, align 4
  store i32 %6, i32* %1, align 4
  br label %bb8

bb1:                                              ; preds = %start
  %7 = atomicrmw xchg i32* %dst, i32 %val seq_cst, align 4
  store i32 %7, i32* %1, align 4
  br label %bb11

bb11:                                             ; preds = %bb1
  br label %bb12

bb12:                                             ; preds = %bb10, %bb6, %bb4, %bb8, %bb11
  %8 = load i32, i32* %1, align 4
  ret i32 %8

bb8:                                              ; preds = %bb7
  br label %bb12

bb4:                                              ; preds = %bb3
  br label %bb12

bb6:                                              ; preds = %bb5
  br label %bb12

bb10:                                             ; preds = %bb9
  br label %bb12
}

; core::sync::atomic::atomic_store
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4sync6atomic12atomic_store17h247ca5bb44db30c8E(i8* %dst, i8 %val, i8 %0) unnamed_addr #0 {
start:
  %_20 = alloca %"core::fmt::Arguments", align 8
  %_12 = alloca %"core::fmt::Arguments", align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %1 = load i8, i8* %order, align 1, !range !12, !noundef !3
  %_4 = zext i8 %1 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb3
    i64 2, label %bb9
    i64 3, label %bb1
    i64 4, label %bb7
  ]

bb2:                                              ; preds = %start
  unreachable

bb5:                                              ; preds = %start
  store atomic i8 %val, i8* %dst monotonic, align 1
  br label %bb6

bb3:                                              ; preds = %start
  store atomic i8 %val, i8* %dst release, align 1
  br label %bb4

bb9:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_12, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc335 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc222 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb10

bb1:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_20, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc330 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc222 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb11

bb7:                                              ; preds = %start
  store atomic i8 %val, i8* %dst seq_cst, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb12

bb12:                                             ; preds = %bb6, %bb4, %bb8
  ret void

bb11:                                             ; preds = %bb1
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"* %_20, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc728 to %"core::panic::location::Location"*)) #16
  unreachable

bb10:                                             ; preds = %bb9
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"* %_12, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc730 to %"core::panic::location::Location"*)) #16
  unreachable

bb4:                                              ; preds = %bb3
  br label %bb12

bb6:                                              ; preds = %bb5
  br label %bb12
}

; core::sync::atomic::atomic_compare_exchange
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @_ZN4core4sync6atomic23atomic_compare_exchange17hc5cd0b5aed54f284E(i32* %dst, i32 %old, i32 %new, i8 %success, i8 %failure) unnamed_addr #0 {
start:
  %_63 = alloca %"core::fmt::Arguments", align 8
  %_55 = alloca %"core::fmt::Arguments", align 8
  %_47 = alloca %"core::fmt::Arguments", align 8
  %_9 = alloca { i8, i8 }, align 1
  %_8 = alloca { i32, i8 }, align 4
  %0 = alloca { i32, i32 }, align 4
  %1 = bitcast { i8, i8 }* %_9 to i8*
  store i8 %success, i8* %1, align 1
  %2 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1
  store i8 %failure, i8* %2, align 1
  %3 = bitcast { i8, i8 }* %_9 to i8*
  %4 = load i8, i8* %3, align 1, !range !12, !noundef !3
  %_18 = zext i8 %4 to i64
  switch i64 %_18, label %bb35 [
    i64 0, label %bb1
    i64 1, label %bb3
    i64 2, label %bb4
    i64 3, label %bb5
    i64 4, label %bb6
  ]

bb35:                                             ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1
  %6 = load i8, i8* %5, align 1, !range !12, !noundef !3
  %_12 = zext i8 %6 to i64
  %7 = icmp eq i64 %_12, 0
  br i1 %7, label %bb14, label %bb2

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1
  %9 = load i8, i8* %8, align 1, !range !12, !noundef !3
  %_13 = zext i8 %9 to i64
  %10 = icmp eq i64 %_13, 0
  br i1 %10, label %bb10, label %bb2

bb4:                                              ; preds = %start
  %11 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1
  %12 = load i8, i8* %11, align 1, !range !12, !noundef !3
  %_14 = zext i8 %12 to i64
  switch i64 %_14, label %bb2 [
    i64 0, label %bb18
    i64 2, label %bb8
  ]

bb5:                                              ; preds = %start
  %13 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1
  %14 = load i8, i8* %13, align 1, !range !12, !noundef !3
  %_15 = zext i8 %14 to i64
  switch i64 %_15, label %bb2 [
    i64 0, label %bb20
    i64 2, label %bb12
  ]

bb6:                                              ; preds = %start
  %15 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1
  %16 = load i8, i8* %15, align 1, !range !12, !noundef !3
  %_16 = zext i8 %16 to i64
  switch i64 %_16, label %bb2 [
    i64 0, label %bb22
    i64 2, label %bb24
    i64 4, label %bb16
  ]

bb2:                                              ; preds = %bb1, %bb3, %bb4, %bb5, %bb6
  %17 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1
  %18 = load i8, i8* %17, align 1, !range !12, !noundef !3
  %_17 = zext i8 %18 to i64
  switch i64 %_17, label %bb7 [
    i64 1, label %bb28
    i64 3, label %bb26
  ]

bb22:                                             ; preds = %bb6
  %19 = cmpxchg i32* %dst, i32 %old, i32 %new seq_cst monotonic, align 4
  %20 = extractvalue { i32, i1 } %19, 0
  %21 = extractvalue { i32, i1 } %19, 1
  %22 = zext i1 %21 to i8
  %23 = bitcast { i32, i8 }* %_8 to i32*
  store i32 %20, i32* %23, align 4
  %24 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %_8, i32 0, i32 1
  store i8 %22, i8* %24, align 4
  br label %bb23

bb24:                                             ; preds = %bb6
  %25 = cmpxchg i32* %dst, i32 %old, i32 %new seq_cst acquire, align 4
  %26 = extractvalue { i32, i1 } %25, 0
  %27 = extractvalue { i32, i1 } %25, 1
  %28 = zext i1 %27 to i8
  %29 = bitcast { i32, i8 }* %_8 to i32*
  store i32 %26, i32* %29, align 4
  %30 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %_8, i32 0, i32 1
  store i8 %28, i8* %30, align 4
  br label %bb25

bb16:                                             ; preds = %bb6
  %31 = cmpxchg i32* %dst, i32 %old, i32 %new seq_cst seq_cst, align 4
  %32 = extractvalue { i32, i1 } %31, 0
  %33 = extractvalue { i32, i1 } %31, 1
  %34 = zext i1 %33 to i8
  %35 = bitcast { i32, i8 }* %_8 to i32*
  store i32 %32, i32* %35, align 4
  %36 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %_8, i32 0, i32 1
  store i8 %34, i8* %36, align 4
  br label %bb17

bb17:                                             ; preds = %bb16
  br label %bb31

bb31:                                             ; preds = %bb15, %bb11, %bb19, %bb9, %bb21, %bb13, %bb23, %bb25, %bb17
  %37 = bitcast { i32, i8 }* %_8 to i32*
  %val = load i32, i32* %37, align 4
  %38 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %_8, i32 0, i32 1
  %39 = load i8, i8* %38, align 4, !range !2, !noundef !3
  %ok = trunc i8 %39 to i1
  br i1 %ok, label %bb32, label %bb33

bb25:                                             ; preds = %bb24
  br label %bb31

bb23:                                             ; preds = %bb22
  br label %bb31

bb20:                                             ; preds = %bb5
  %40 = cmpxchg i32* %dst, i32 %old, i32 %new acq_rel monotonic, align 4
  %41 = extractvalue { i32, i1 } %40, 0
  %42 = extractvalue { i32, i1 } %40, 1
  %43 = zext i1 %42 to i8
  %44 = bitcast { i32, i8 }* %_8 to i32*
  store i32 %41, i32* %44, align 4
  %45 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %_8, i32 0, i32 1
  store i8 %43, i8* %45, align 4
  br label %bb21

bb12:                                             ; preds = %bb5
  %46 = cmpxchg i32* %dst, i32 %old, i32 %new acq_rel acquire, align 4
  %47 = extractvalue { i32, i1 } %46, 0
  %48 = extractvalue { i32, i1 } %46, 1
  %49 = zext i1 %48 to i8
  %50 = bitcast { i32, i8 }* %_8 to i32*
  store i32 %47, i32* %50, align 4
  %51 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %_8, i32 0, i32 1
  store i8 %49, i8* %51, align 4
  br label %bb13

bb13:                                             ; preds = %bb12
  br label %bb31

bb21:                                             ; preds = %bb20
  br label %bb31

bb18:                                             ; preds = %bb4
  %52 = cmpxchg i32* %dst, i32 %old, i32 %new acquire monotonic, align 4
  %53 = extractvalue { i32, i1 } %52, 0
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = zext i1 %54 to i8
  %56 = bitcast { i32, i8 }* %_8 to i32*
  store i32 %53, i32* %56, align 4
  %57 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %_8, i32 0, i32 1
  store i8 %55, i8* %57, align 4
  br label %bb19

bb8:                                              ; preds = %bb4
  %58 = cmpxchg i32* %dst, i32 %old, i32 %new acquire acquire, align 4
  %59 = extractvalue { i32, i1 } %58, 0
  %60 = extractvalue { i32, i1 } %58, 1
  %61 = zext i1 %60 to i8
  %62 = bitcast { i32, i8 }* %_8 to i32*
  store i32 %59, i32* %62, align 4
  %63 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %_8, i32 0, i32 1
  store i8 %61, i8* %63, align 4
  br label %bb9

bb9:                                              ; preds = %bb8
  br label %bb31

bb19:                                             ; preds = %bb18
  br label %bb31

bb10:                                             ; preds = %bb3
  %64 = cmpxchg i32* %dst, i32 %old, i32 %new release monotonic, align 4
  %65 = extractvalue { i32, i1 } %64, 0
  %66 = extractvalue { i32, i1 } %64, 1
  %67 = zext i1 %66 to i8
  %68 = bitcast { i32, i8 }* %_8 to i32*
  store i32 %65, i32* %68, align 4
  %69 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %_8, i32 0, i32 1
  store i8 %67, i8* %69, align 4
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb31

bb14:                                             ; preds = %bb1
  %70 = cmpxchg i32* %dst, i32 %old, i32 %new monotonic monotonic, align 4
  %71 = extractvalue { i32, i1 } %70, 0
  %72 = extractvalue { i32, i1 } %70, 1
  %73 = zext i1 %72 to i8
  %74 = bitcast { i32, i8 }* %_8 to i32*
  store i32 %71, i32* %74, align 4
  %75 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %_8, i32 0, i32 1
  store i8 %73, i8* %75, align 4
  br label %bb15

bb7:                                              ; preds = %bb2
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_63, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc293 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc222 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb30

bb28:                                             ; preds = %bb2
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_55, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc303 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc222 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb29

bb26:                                             ; preds = %bb2
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_47, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc298 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc222 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb27

bb30:                                             ; preds = %bb7
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"* %_63, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc732 to %"core::panic::location::Location"*)) #16
  unreachable

bb27:                                             ; preds = %bb26
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"* %_47, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc734 to %"core::panic::location::Location"*)) #16
  unreachable

bb29:                                             ; preds = %bb28
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"* %_55, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc736 to %"core::panic::location::Location"*)) #16
  unreachable

bb15:                                             ; preds = %bb14
  br label %bb31

bb33:                                             ; preds = %bb31
  %76 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  store i32 %val, i32* %76, align 4
  %77 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %77, align 4
  br label %bb34

bb32:                                             ; preds = %bb31
  %78 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  store i32 %val, i32* %78, align 4
  %79 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %79, align 4
  br label %bb34

bb34:                                             ; preds = %bb33, %bb32
  %80 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4, !range !19, !noundef !3
  %82 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = insertvalue { i32, i32 } undef, i32 %81, 0
  %85 = insertvalue { i32, i32 } %84, i32 %83, 1
  ret { i32, i32 } %85
}

; core::sync::atomic::fence
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core4sync6atomic5fence17h0a960d597d80f4f4E(i8 %0) unnamed_addr #0 {
start:
  %_4 = alloca %"core::fmt::Arguments", align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %1 = load i8, i8* %order, align 1, !range !12, !noundef !3
  %_2 = zext i8 %1 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb4
    i64 2, label %bb3
    i64 3, label %bb5
    i64 4, label %bb6
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_4, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc179 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc222 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb7

bb4:                                              ; preds = %start
  fence release
  br label %bb8

bb3:                                              ; preds = %start
  fence acquire
  br label %bb8

bb5:                                              ; preds = %start
  fence acq_rel
  br label %bb8

bb6:                                              ; preds = %start
  fence seq_cst
  br label %bb8

bb8:                                              ; preds = %bb4, %bb3, %bb5, %bb6
  ret void

bb7:                                              ; preds = %bb1
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"* %_4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc738 to %"core::panic::location::Location"*)) #16
  unreachable
}

; core::sync::atomic::AtomicU32::compare_exchange
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @_ZN4core4sync6atomic9AtomicU3216compare_exchange17hdd65b8796c108cf2E(%"core::sync::atomic::AtomicU32"* align 4 %self, i32 %current, i32 %new, i8 %success, i8 %failure) unnamed_addr #0 {
start:
  %_7 = bitcast %"core::sync::atomic::AtomicU32"* %self to i32*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_compare_exchange
  %0 = call { i32, i32 } @_ZN4core4sync6atomic23atomic_compare_exchange17hc5cd0b5aed54f284E(i32* %_7, i32 %current, i32 %new, i8 %success, i8 %failure)
  %1 = extractvalue { i32, i32 } %0, 0
  %2 = extractvalue { i32, i32 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { i32, i32 } undef, i32 %1, 0
  %4 = insertvalue { i32, i32 } %3, i32 %2, 1
  ret { i32, i32 } %4
}

; core::sync::atomic::AtomicU32::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4sync6atomic9AtomicU323new17h6a848cb390595eacE(i32 %v) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %1 = alloca %"core::sync::atomic::AtomicU32", align 4
  store i32 %v, i32* %0, align 4
  %2 = load i32, i32* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast %"core::sync::atomic::AtomicU32"* %1 to i32*
  store i32 %2, i32* %3, align 4
  %4 = bitcast %"core::sync::atomic::AtomicU32"* %1 to i32*
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; core::sync::atomic::AtomicU32::swap
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4sync6atomic9AtomicU324swap17h4f2c8964d1f6135cE(%"core::sync::atomic::AtomicU32"* align 4 %self, i32 %val, i8 %order) unnamed_addr #0 {
start:
  %_5 = bitcast %"core::sync::atomic::AtomicU32"* %self to i32*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_swap
  %0 = call i32 @_ZN4core4sync6atomic11atomic_swap17h4c7202893aba4abfE(i32* %_5, i32 %val, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %0
}

; core::time::Duration::from_millis
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @_ZN4core4time8Duration11from_millis17h373a43a51fb7579aE(i64 %millis) unnamed_addr #0 {
start:
  %0 = alloca { i64, i32 }, align 8
  %_2 = udiv i64 %millis, 1000
  %_6 = urem i64 %millis, 1000
  %_5 = trunc i64 %_6 to i32
  %_4 = mul i32 %_5, 1000000
  %1 = bitcast { i64, i32 }* %0 to i64*
  store i64 %_2, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %_4, i32* %2, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i64, i32 } undef, i64 %4, 0
  %8 = insertvalue { i64, i32 } %7, i32 %6, 1
  ret { i64, i32 } %8
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hccccbd98e44c388dE(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %t) unnamed_addr #1 {
start:
  %_4 = alloca { i64, i64 }, align 8
; call core::mem::size_of_val_raw
  %_5 = call i64 @_ZN4core3mem15size_of_val_raw17h8de78c30a9285da9E(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %t)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::align_of_val_raw
  %_7 = call i64 @_ZN4core3mem16align_of_val_raw17he1ec18788f25600bE(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %t)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = bitcast { i64, i64 }* %_4 to i64*
  store i64 %_5, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %_4 to i64*
  %size = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %align = load i64, i64* %3, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %4 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha243dfa14cda22afE(i64 %size, i64 %align)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hd95860f534434cb0E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %t) unnamed_addr #1 {
start:
  %_4 = alloca { i64, i64 }, align 8
; call core::mem::size_of_val_raw
  %_5 = call i64 @_ZN4core3mem15size_of_val_raw17he5fb859152835b2aE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %t)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::align_of_val_raw
  %_7 = call i64 @_ZN4core3mem16align_of_val_raw17hafbab06dfb687d44E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %t)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = bitcast { i64, i64 }* %_4 to i64*
  store i64 %_5, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %_4 to i64*
  %size = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %align = load i64, i64* %3, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %4 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha243dfa14cda22afE(i64 %size, i64 %align)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hd9f30ba4f7f968ddE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %t) unnamed_addr #1 {
start:
  %_4 = alloca { i64, i64 }, align 8
; call core::mem::size_of_val_raw
  %_5 = call i64 @_ZN4core3mem15size_of_val_raw17hc37e870dc08f2a25E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %t)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::align_of_val_raw
  %_7 = call i64 @_ZN4core3mem16align_of_val_raw17h7773e21790464896E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %t)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = bitcast { i64, i64 }* %_4 to i64*
  store i64 %_5, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %_4 to i64*
  %size = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %align = load i64, i64* %3, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %4 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha243dfa14cda22afE(i64 %size, i64 %align)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::from_size_align_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha243dfa14cda22afE(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
; call core::mem::valid_align::ValidAlign::new_unchecked
  %_4 = call i64 @_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h09c3b9608f5865e5E(i64 %align), !range !18
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 %size, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_4, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !18, !noundef !3
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::size
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout4size17h72fb6d9d3afefa76E({ i64, i64 }* align 8 %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64, i64 }* %self to i64*
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; core::alloc::layout::Layout::align
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout5align17h97ea5ce6833c84d9E({ i64, i64 }* align 8 %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %_3 = load i64, i64* %0, align 8, !range !18, !noundef !3
; call core::mem::valid_align::ValidAlign::as_nonzero
  %_2 = call i64 @_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h15f10fe2180ec73cE(i64 %_3), !range !17
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::nonzero::NonZeroUsize::get
  %1 = call i64 @_ZN4core3num7nonzero12NonZeroUsize3get17h7319689c6529d142E(i64 %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %1
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h2785aa23631a0ad4E(i64 %n) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h30817b6b7b191694E"(i64 16, i64 %n)
  %_5.0 = extractvalue { i64, i64 } %1, 0
  %_5.1 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::ok_or
  %2 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h76782816685d5e7cE"(i64 %_5.0, i64 %_5.1)
  %_4.0 = extractvalue { i64, i64 } %2, 0
  %_4.1 = extractvalue { i64, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17haaee4af6145f68bcE"(i64 %_4.0, i64 %_4.1)
  store { i64, i64 } %3, { i64, i64 }* %_3, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = bitcast { i64, i64 }* %_3 to i64*
  %_9 = load i64, i64* %4, align 8, !range !7, !noundef !3
  switch i64 %_9, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %val = load i64, i64* %5, align 8
  br label %bb9

bb7:                                              ; preds = %bb4
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %6 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h83964b414e5103b7E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc740 to %"core::panic::location::Location"*))
  store { i64, i64 } %6, { i64, i64 }* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8, !range !5, !noundef !3
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12

bb9:                                              ; preds = %bb5
; call core::alloc::layout::Layout::from_size_align_unchecked
  %13 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha243dfa14cda22afE(i64 %val, i64 8)
  %_13.0 = extractvalue { i64, i64 } %13, 0
  %_13.1 = extractvalue { i64, i64 } %13, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_13.0, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_13.1, i64* %15, align 8
  br label %bb11
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h40d61b9edba55bbdE(i64 %n) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h30817b6b7b191694E"(i64 88, i64 %n)
  %_5.0 = extractvalue { i64, i64 } %1, 0
  %_5.1 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::ok_or
  %2 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h76782816685d5e7cE"(i64 %_5.0, i64 %_5.1)
  %_4.0 = extractvalue { i64, i64 } %2, 0
  %_4.1 = extractvalue { i64, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17haaee4af6145f68bcE"(i64 %_4.0, i64 %_4.1)
  store { i64, i64 } %3, { i64, i64 }* %_3, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = bitcast { i64, i64 }* %_3 to i64*
  %_9 = load i64, i64* %4, align 8, !range !7, !noundef !3
  switch i64 %_9, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %val = load i64, i64* %5, align 8
  br label %bb9

bb7:                                              ; preds = %bb4
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %6 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h83964b414e5103b7E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc740 to %"core::panic::location::Location"*))
  store { i64, i64 } %6, { i64, i64 }* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8, !range !5, !noundef !3
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12

bb9:                                              ; preds = %bb5
; call core::alloc::layout::Layout::from_size_align_unchecked
  %13 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha243dfa14cda22afE(i64 %val, i64 8)
  %_13.0 = extractvalue { i64, i64 } %13, 0
  %_13.1 = extractvalue { i64, i64 } %13, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_13.0, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_13.1, i64* %15, align 8
  br label %bb11
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h51b3175fd6f91d6eE(i64 %n) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h30817b6b7b191694E"(i64 1, i64 %n)
  %_5.0 = extractvalue { i64, i64 } %1, 0
  %_5.1 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::ok_or
  %2 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h76782816685d5e7cE"(i64 %_5.0, i64 %_5.1)
  %_4.0 = extractvalue { i64, i64 } %2, 0
  %_4.1 = extractvalue { i64, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17haaee4af6145f68bcE"(i64 %_4.0, i64 %_4.1)
  store { i64, i64 } %3, { i64, i64 }* %_3, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = bitcast { i64, i64 }* %_3 to i64*
  %_9 = load i64, i64* %4, align 8, !range !7, !noundef !3
  switch i64 %_9, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %val = load i64, i64* %5, align 8
  br label %bb9

bb7:                                              ; preds = %bb4
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %6 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h83964b414e5103b7E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc740 to %"core::panic::location::Location"*))
  store { i64, i64 } %6, { i64, i64 }* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8, !range !5, !noundef !3
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12

bb9:                                              ; preds = %bb5
; call core::alloc::layout::Layout::from_size_align_unchecked
  %13 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha243dfa14cda22afE(i64 %val, i64 1)
  %_13.0 = extractvalue { i64, i64 } %13, 0
  %_13.1 = extractvalue { i64, i64 } %13, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_13.0, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_13.1, i64* %15, align 8
  br label %bb11
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hcede0e1be8318310E(i64 %n) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h30817b6b7b191694E"(i64 24, i64 %n)
  %_5.0 = extractvalue { i64, i64 } %1, 0
  %_5.1 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::ok_or
  %2 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h76782816685d5e7cE"(i64 %_5.0, i64 %_5.1)
  %_4.0 = extractvalue { i64, i64 } %2, 0
  %_4.1 = extractvalue { i64, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17haaee4af6145f68bcE"(i64 %_4.0, i64 %_4.1)
  store { i64, i64 } %3, { i64, i64 }* %_3, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = bitcast { i64, i64 }* %_3 to i64*
  %_9 = load i64, i64* %4, align 8, !range !7, !noundef !3
  switch i64 %_9, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %val = load i64, i64* %5, align 8
  br label %bb9

bb7:                                              ; preds = %bb4
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %6 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h83964b414e5103b7E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc740 to %"core::panic::location::Location"*))
  store { i64, i64 } %6, { i64, i64 }* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8, !range !5, !noundef !3
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12

bb9:                                              ; preds = %bb5
; call core::alloc::layout::Layout::from_size_align_unchecked
  %13 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha243dfa14cda22afE(i64 %val, i64 8)
  %_13.0 = extractvalue { i64, i64 } %13, 0
  %_13.1 = extractvalue { i64, i64 } %13, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_13.0, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_13.1, i64* %15, align 8
  br label %bb11
}

; core::alloc::layout::Layout::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN4core5alloc6layout6Layout8dangling17h6c7121e5a9ae81fdE({ i64, i64 }* align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::alloc::layout::Layout::align
  %_3 = call i64 @_ZN4core5alloc6layout6Layout5align17h97ea5ce6833c84d9E({ i64, i64 }* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast i8** %0 to i64*
  store i64 %_3, i64* %1, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %3 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %2)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %3
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hdf2ecd14c44edbc9E"(i64* align 8 %self) unnamed_addr #0 {
start:
  %0 = load i64, i64* %self, align 8
  ret i64 %0
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h05d47113fc85ab7eE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::slice::<impl [T]>::split_at_mut
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h35fe3884e577b3bbE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %0, [0 x i8]* align 1 %self.0, i64 %self.1, i64 %mid, %"core::panic::location::Location"* align 8 %1) unnamed_addr #0 {
start:
  %_4 = icmp ule i64 %mid, %self.1
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::split_at_mut_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17hf401ad3890528f9aE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %0, [0 x i8]* align 1 %self.0, i64 %self.1, i64 %mid)
  br label %bb3

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h1efed56daac899acE([0 x i8]* align 1 bitcast (<{ [35 x i8] }>* @alloc741 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 %1) #16
  unreachable

bb3:                                              ; preds = %bb2
  ret void
}

; core::slice::<impl [T]>::copy_from_slice
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc982414f87047121E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %src.0, i64 %src.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #1 {
start:
  %_3 = icmp ne i64 %self.1, %src.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::as_ptr
  %_14 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hb513b00ea2d57c30E"([0 x i8]* align 1 %src.0, i64 %src.1)
  br label %bb3

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17len_mismatch_fail17hcfdf5da19964f9fdE"(i64 %self.1, i64 %src.1, %"core::panic::location::Location"* align 8 %0) #16
  unreachable

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::as_mut_ptr
  %_16 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h05d47113fc85ab7eE"([0 x i8]* align 1 %self.0, i64 %self.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h3e015404eadd1543E(i8* %_14, i8* %_16, i64 %self.1)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret void
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hf2a17e169fc2091cE"([0 x i8]* align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %0 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h510b6e60c0fce059E"(i64 %index, [0 x i8]* %self.0, i64 %self.1)
  %_6.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_6.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_6.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::slice::<impl [T]>::split_at_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17hf401ad3890528f9aE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %0, [0 x i8]* align 1 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 {
start:
  %1 = alloca i8*, align 8
; call core::slice::<impl [T]>::as_mut_ptr
  %ptr = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h05d47113fc85ab7eE"([0 x i8]* align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::raw::from_raw_parts_mut
  %2 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hb9089ff2faaa3dc1E(i8* %ptr, i64 %mid)
  %_9.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_9.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = getelementptr inbounds i8, i8* %ptr, i64 %mid
  store i8* %3, i8** %1, align 8
  %_3.i = load i8*, i8** %1, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_17 = sub i64 %self.1, %mid
; call core::slice::raw::from_raw_parts_mut
  %4 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hb9089ff2faaa3dc1E(i8* %_3.i, i64 %_17)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %5 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %0 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  store [0 x i8]* %_9.0, [0 x i8]** %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  store i64 %_9.1, i64* %7, align 8
  %8 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %0, i32 0, i32 1
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0
  store [0 x i8]* %_13.0, [0 x i8]** %9, align 8
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1
  store i64 %_13.1, i64* %10, align 8
  ret void
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h4ac448c0b41386d4E"([0 x i8]* align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %0 = call align 1 i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h58700e2b4cacdde0E"(i64 %index, [0 x i8]* align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h18da70aa8ba5c797E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_2 to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h46f2c9dcc089edc9E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h58baf518c070f177E"([0 x %"alloc::vec::Vec<_ProbeNode>"]* align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hfa483ca8bbed46ddE"([0 x %"alloc::vec::Vec<_ProbeNode>"]* align 8 %self.0, i64 %self.1)
  %1 = extractvalue { i64*, i64* } %0, 0
  %2 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64* } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64* } %3, i64* %2, 1
  ret { i64*, i64* } %4
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h5dcc0b0d82b85643E"([0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h17557bdf52f13905E"([0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1)
  %1 = extractvalue { i64*, i64* } %0, 0
  %2 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64* } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64* } %3, i64* %2, 1
  ret { i64*, i64* } %4
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hac475596b8f7cf81E"([0 x %_ProbeNode]* align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7fe608515e77f3e9E"([0 x %_ProbeNode]* align 8 %self.0, i64 %self.1)
  %1 = extractvalue { i64*, i64* } %0, 0
  %2 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64*, i64* } undef, i64* %1, 0
  %4 = insertvalue { i64*, i64* } %3, i64* %2, 1
  ret { i64*, i64* } %4
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hda61e05ab0dfd22eE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hbdbf7c7ef205f2d4E"([0 x i8]* align 1 %self.0, i64 %self.1)
  %1 = extractvalue { i8*, i8* } %0, 0
  %2 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1
  ret { i8*, i8* } %4
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %_ProbeNode* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h04081a8b44fd51c6E"([0 x %_ProbeNode]* align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x %_ProbeNode]* %self.0 to %_ProbeNode*
  ret %_ProbeNode* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h3b354085a3fa771eE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h4be9f54b84043faaE"([0 x %"alloc::vec::Vec<_ProbeNode>"]* align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x %"alloc::vec::Vec<_ProbeNode>"]* %self.0 to %"alloc::vec::Vec<_ProbeNode>"*
  ret %"alloc::vec::Vec<_ProbeNode>"* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hb513b00ea2d57c30E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17he0c2331bba1d0f9aE"([0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x { [0 x i8]*, i64 }]* %self.0 to { [0 x i8]*, i64 }*
  ret { [0 x i8]*, i64 }* %0
}

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17ha3628f14e52a3427E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = icmp eq i64 %self.1, 0
  ret i1 %0
}

; core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17h4a4f06d7c34d4408E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %0 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h1838e1c4dbd6dff4E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17h4bbd686b0cbff399E(i8* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h1e64144e29ba8856E(i8* %data, i64 %len)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core5slice3raw14from_raw_parts17ha19eb9fe9ad544a9E(%"alloc::vec::Vec<_ProbeNode>"* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h8fc24d3e2686850fE(%"alloc::vec::Vec<_ProbeNode>"* %data, i64 %len)
  %_4.0 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 0
  %_4.1 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %_4.0, 0
  %2 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, i64 %_4.1, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %2
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hb3af32f06dd41e01E(i8* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17he804afec0262035eE(i8* %data, i64 %len)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hfd6fecc01def4661E({ [0 x i8]*, i64 }* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h4e28318444fdcba6E({ [0 x i8]*, i64 }* %data, i64 %len)
  %_4.0 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %0, 0
  %_4.1 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } undef, [0 x { [0 x i8]*, i64 }]* %_4.0, 0
  %2 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %1, i64 %_4.1, 1
  ret { [0 x { [0 x i8]*, i64 }]*, i64 } %2
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %_ProbeNode]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hfdc852c870656565E(%_ProbeNode* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hf84476906f7120cdE(%_ProbeNode* %data, i64 %len)
  %_4.0 = extractvalue { [0 x %_ProbeNode]*, i64 } %0, 0
  %_4.1 = extractvalue { [0 x %_ProbeNode]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x %_ProbeNode]*, i64 } undef, [0 x %_ProbeNode]* %_4.0, 0
  %2 = insertvalue { [0 x %_ProbeNode]*, i64 } %1, i64 %_4.1, 1
  ret { [0 x %_ProbeNode]*, i64 } %2
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h04f7b6f0ace3c3aeE(%"alloc::vec::Vec<_ProbeNode>"* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h34e52b72ff86fc97E(%"alloc::vec::Vec<_ProbeNode>"* %data, i64 %len)
  %_7.0 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 0
  %_7.1 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %_7.0, 0
  %2 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, i64 %_7.1, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %2
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hb9089ff2faaa3dc1E(i8* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17ha9e715d5f5f1ce18E(i8* %data, i64 %len)
  %_7.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_7.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_7.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h17557bdf52f13905E"([0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca i8*, align 8
  %end = alloca { [0 x i8]*, i64 }*, align 8
  %2 = alloca { i64*, i64* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call { [0 x i8]*, i64 }* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17he0c2331bba1d0f9aE"([0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hb532bcddacb8e8e8E"({ [0 x i8]*, i64 }* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 16, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast { [0 x i8]*, i64 }* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr, i64 %slice.1
  store { [0 x i8]*, i64 }* %6, { [0 x i8]*, i64 }** %0, align 8
  %7 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %0, align 8
  store { [0 x i8]*, i64 }* %7, { [0 x i8]*, i64 }** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5a9da12769749ad0E"({ [0 x i8]*, i64 }* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %8 = bitcast i8* %5 to { [0 x i8]*, i64 }*
  store { [0 x i8]*, i64 }* %8, { [0 x i8]*, i64 }** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %end, align 8
  %9 = bitcast { i64*, i64* }* %2 to i64**
  store i64* %_18, i64** %9, align 8
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %11 = bitcast i64** %10 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %_21, { [0 x i8]*, i64 }** %11, align 8
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3, !noundef !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = insertvalue { i64*, i64* } undef, i64* %13, 0
  %17 = insertvalue { i64*, i64* } %16, i64* %15, 1
  ret { i64*, i64* } %17
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7fe608515e77f3e9E"([0 x %_ProbeNode]* align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca %_ProbeNode*, align 8
  %1 = alloca i8*, align 8
  %end = alloca %_ProbeNode*, align 8
  %2 = alloca { i64*, i64* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call %_ProbeNode* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h04081a8b44fd51c6E"([0 x %_ProbeNode]* align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha17490f38a27bce8E"(%_ProbeNode* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 88, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast %_ProbeNode* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %ptr, i64 %slice.1
  store %_ProbeNode* %6, %_ProbeNode** %0, align 8
  %7 = load %_ProbeNode*, %_ProbeNode** %0, align 8
  store %_ProbeNode* %7, %_ProbeNode** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h10c68770b7646b31E"(%_ProbeNode* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %8 = bitcast i8* %5 to %_ProbeNode*
  store %_ProbeNode* %8, %_ProbeNode** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load %_ProbeNode*, %_ProbeNode** %end, align 8
  %9 = bitcast { i64*, i64* }* %2 to i64**
  store i64* %_18, i64** %9, align 8
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %11 = bitcast i64** %10 to %_ProbeNode**
  store %_ProbeNode* %_21, %_ProbeNode** %11, align 8
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3, !noundef !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = insertvalue { i64*, i64* } undef, i64* %13, 0
  %17 = insertvalue { i64*, i64* } %16, i64* %15, 1
  ret { i64*, i64* } %17
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hbdbf7c7ef205f2d4E"([0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %end = alloca i8*, align 8
  %2 = alloca { i8*, i8* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h3b354085a3fa771eE"([0 x i8]* align 1 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h2d47dfafe3598345E"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 1, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %4 = getelementptr i8, i8* %ptr, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds i8, i8* %ptr, i64 %slice.1
  store i8* %6, i8** %0, align 8
  %7 = load i8*, i8** %0, align 8
  store i8* %7, i8** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  store i8* %5, i8** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load i8*, i8** %end, align 8
  %8 = bitcast { i8*, i8* }* %2 to i8**
  store i8* %_18, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  store i8* %_21, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8, !nonnull !3, !noundef !3
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = insertvalue { i8*, i8* } undef, i8* %11, 0
  %15 = insertvalue { i8*, i8* } %14, i8* %13, 1
  ret { i8*, i8* } %15
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hfa483ca8bbed46ddE"([0 x %"alloc::vec::Vec<_ProbeNode>"]* align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca %"alloc::vec::Vec<_ProbeNode>"*, align 8
  %1 = alloca i8*, align 8
  %end = alloca %"alloc::vec::Vec<_ProbeNode>"*, align 8
  %2 = alloca { i64*, i64* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h4be9f54b84043faaE"([0 x %"alloc::vec::Vec<_ProbeNode>"]* align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h6c7cfe12183bd344E"(%"alloc::vec::Vec<_ProbeNode>"* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 24, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %_11 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %ptr to i8*
  %4 = getelementptr i8, i8* %_11, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %ptr, i64 %slice.1
  store %"alloc::vec::Vec<_ProbeNode>"* %6, %"alloc::vec::Vec<_ProbeNode>"** %0, align 8
  %7 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %0, align 8
  store %"alloc::vec::Vec<_ProbeNode>"* %7, %"alloc::vec::Vec<_ProbeNode>"** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h00a2b5b892261548E"(%"alloc::vec::Vec<_ProbeNode>"* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  %8 = bitcast i8* %5 to %"alloc::vec::Vec<_ProbeNode>"*
  store %"alloc::vec::Vec<_ProbeNode>"* %8, %"alloc::vec::Vec<_ProbeNode>"** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %end, align 8
  %9 = bitcast { i64*, i64* }* %2 to i64**
  store i64* %_18, i64** %9, align 8
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %11 = bitcast i64** %10 to %"alloc::vec::Vec<_ProbeNode>"**
  store %"alloc::vec::Vec<_ProbeNode>"* %_21, %"alloc::vec::Vec<_ProbeNode>"** %11, align 8
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3, !noundef !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %2, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = insertvalue { i64*, i64* } undef, i64* %13, 0
  %17 = insertvalue { i64*, i64* } %16, i64* %15, 1
  ret { i64*, i64* } %17
}

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17ha9ea2fd6b8f1b850E"({ i8*, i8* }* align 8 %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %_5.i = alloca i64, align 8
  %1 = bitcast { i8*, i8* }* %self to i8**
  %_4.i = load i8*, i8** %1, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %_4.i)
  %2 = bitcast { i8*, i8* }* %self to i8**
  %start1.i = load i8*, i8** %2, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_9.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %start1.i)
  %3 = icmp eq i64 1, 0
  br i1 %3, label %bb4.i, label %bb9.i

bb4.i:                                            ; preds = %start
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_13.i = load i8*, i8** %4, align 8
; call core::ptr::const_ptr::<impl *const T>::addr
  %_12.i = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hcbc1b382da729024E"(i8* %_13.i)
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %start1.i)
; call core::ptr::mut_ptr::<impl *mut T>::addr
  %_14.i = call i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h8efe9d811cc993a9E"(i8* %_15.i)
  %5 = sub i64 %_12.i, %_14.i
  store i64 %5, i64* %_5.i, align 8
  br label %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17h4b875c56aa66615eE.exit"

bb9.i:                                            ; preds = %start
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_19.i = load i8*, i8** %6, align 8
; call core::ptr::const_ptr::<impl *const T>::addr
  %_18.i = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hcbc1b382da729024E"(i8* %_19.i)
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_21.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %start1.i)
; call core::ptr::mut_ptr::<impl *mut T>::addr
  %_20.i = call i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h8efe9d811cc993a9E"(i8* %_21.i)
  %7 = sub nuw i64 %_18.i, %_20.i
  store i64 %7, i64* %0, align 8
  %diff.i = load i64, i64* %0, align 8
  %8 = udiv exact i64 %diff.i, 1
  store i64 %8, i64* %_5.i, align 8
  br label %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17h4b875c56aa66615eE.exit"

"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17h4b875c56aa66615eE.exit": ; preds = %bb9.i, %bb4.i
  %9 = load i64, i64* %_5.i, align 8
; call core::slice::raw::from_raw_parts
  %10 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hb3af32f06dd41e01E(i8* %_3.i, i64 %9)
  %11 = extractvalue { [0 x i8]*, i64 } %10, 0
  %12 = extractvalue { [0 x i8]*, i64 } %10, 1
  %13 = extractvalue { [0 x i8]*, i64 } %10, 0
  %14 = extractvalue { [0 x i8]*, i64 } %10, 1
  br label %bb1

bb1:                                              ; preds = %"_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17h4b875c56aa66615eE.exit"
  %15 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %16 = insertvalue { [0 x i8]*, i64 } %15, i64 %14, 1
  ret { [0 x i8]*, i64 } %16
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17ha5680e0da09c4ce4E"([0 x i8]* align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hf39f8fea8c7a2862E"(i64 %index, [0 x i8]* align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 { [0 x i8]*, i64 }* @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hdc14d86088ea0afcE"([0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::index
  %1 = call align 8 { [0 x i8]*, i64 }* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h7cee16fc30b5f4c7E"(i64 %index, [0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret { [0 x i8]*, i64 }* %1
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1dc81deb5c9b6a53E"([0 x i8]* align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17ha68c41c6777dc08bE"([0 x i8]* align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5ce983ebd83f9d11E"([0 x i8]* align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4227a535bf8711b0E"(i64 %index, [0 x i8]* align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17he69e0cbfd92be79cE"([0 x %"alloc::vec::Vec<_ProbeNode>"]* align 8 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
; call <usize as core::slice::index::SliceIndex<[T]>>::index_mut
  %_4 = call align 8 %"alloc::vec::Vec<_ProbeNode>"* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5ce29ca5edb49721E"(i64 %index, [0 x %"alloc::vec::Vec<_ProbeNode>"]* align 8 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::vec::Vec<_ProbeNode>"* %_4
}

; core::option::Option<T>::map_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$11map_or_else17h251aedf8f963701cE"(%"alloc::string::String"* sret(%"alloc::string::String") %0, i8* align 1 %1, i64 %2, i64* align 8 %default) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_12 = alloca i8, align 1
  %_11 = alloca i8, align 1
  %_7 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  store i8 1, i8* %_12, align 1
  store i8 1, i8* %_11, align 1
  %6 = bitcast { i8*, i64 }* %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_4 = select i1 %8, i64 0, i64 1
  switch i64 %_4, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_12, align 1
; invoke alloc::fmt::format::{{closure}}
  invoke void @"_ZN5alloc3fmt6format28_$u7b$$u7b$closure$u7d$$u7d$17hf9df0b203440e62fE"(%"alloc::string::String"* sret(%"alloc::string::String") %0, i64* align 8 %default)
          to label %bb5 unwind label %cleanup

bb3:                                              ; preds = %start
  %9 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %t.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !3, !align !4, !noundef !3
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %t.1 = load i64, i64* %11, align 8
  store i8 0, i8* %_11, align 1
  %12 = bitcast { i8*, i64 }* %_7 to { [0 x i8]*, i64 }*
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0
  store [0 x i8]* %t.0, [0 x i8]** %13, align 8
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1
  store i64 %t.1, i64* %14, align 8
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8, !nonnull !3, !align !4, !noundef !3
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = bitcast i8* %16 to [0 x i8]*
; invoke core::ops::function::FnOnce::call_once
  invoke void @_ZN4core3ops8function6FnOnce9call_once17h5c86f35fb2641a89E(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x i8]* align 1 %19, i64 %18)
          to label %bb4 unwind label %cleanup

bb14:                                             ; preds = %cleanup
  %20 = load i8, i8* %_11, align 1, !range !2, !noundef !3
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb13, label %bb8

cleanup:                                          ; preds = %bb1, %bb3
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb14

bb4:                                              ; preds = %bb3
  br label %bb11

bb11:                                             ; preds = %bb5, %bb4
  %27 = load i8, i8* %_11, align 1, !range !2, !noundef !3
  %28 = trunc i8 %27 to i1
  br i1 %28, label %bb10, label %bb6

bb5:                                              ; preds = %bb1
  br label %bb11

bb8:                                              ; preds = %bb13, %bb14
  %29 = load i8, i8* %_12, align 1, !range !2, !noundef !3
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb15, label %bb9

bb13:                                             ; preds = %bb14
  br label %bb8

bb6:                                              ; preds = %bb10, %bb11
  %31 = load i8, i8* %_12, align 1, !range !2, !noundef !3
  %32 = trunc i8 %31 to i1
  br i1 %32, label %bb12, label %bb7

bb10:                                             ; preds = %bb11
  br label %bb6

bb9:                                              ; preds = %bb15, %bb8
  %33 = bitcast { i8*, i32 }* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

bb15:                                             ; preds = %bb8
  br label %bb9

bb7:                                              ; preds = %bb12, %bb6
  ret void

bb12:                                             ; preds = %bb6
  br label %bb7
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h66ebd028a52c824fE"(i8 %0, i64* align 8 %f) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  store i8 %0, i8* %self, align 1
  store i8 1, i8* %_7, align 1
  %2 = load i8, i8* %self, align 1, !range !10, !noundef !3
  %3 = sub i8 %2, 41
  %4 = icmp eq i8 %3, 0
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; call std::io::error::repr_bitpacked::decode_repr::{{closure}}
  %5 = call i8 @"_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17ha1e61c62da321c00E"(i64* align 8 %f), !range !9
  store i8 %5, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %start
  %x = load i8, i8* %self, align 1, !range !9, !noundef !3
  store i8 %x, i8* %1, align 1
  br label %bb7

bb7:                                              ; preds = %bb4, %bb3
  %6 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb6, label %bb5

bb4:                                              ; preds = %bb1
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %8 = load i8, i8* %1, align 1, !range !9, !noundef !3
  ret i8 %8

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hd12a4600f51f31e9E"(i8 %0, i64* align 8 %f) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  store i8 %0, i8* %self, align 1
  store i8 1, i8* %_7, align 1
  %2 = load i8, i8* %self, align 1, !range !10, !noundef !3
  %3 = sub i8 %2, 41
  %4 = icmp eq i8 %3, 0
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; call std::io::error::repr_bitpacked::decode_repr::{{closure}}
  %5 = call i8 @"_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17hdb99c0d9cdab527bE"(i64* align 8 %f), !range !9
  store i8 %5, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %start
  %x = load i8, i8* %self, align 1, !range !9, !noundef !3
  store i8 %x, i8* %1, align 1
  br label %bb7

bb7:                                              ; preds = %bb4, %bb3
  %6 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb6, label %bb5

bb4:                                              ; preds = %bb1
  br label %bb7

bb5:                                              ; preds = %bb6, %bb7
  %8 = load i8, i8* %1, align 1, !range !9, !noundef !3
  ret i8 %8

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::unwrap_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 i8* @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h57cd20a2111c1f72E"(i8* align 1 %0, %"core::panic::location::Location"* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %3 = bitcast i8** %self to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_2 = select i1 %5, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; invoke core::hint::unreachable_unchecked
  invoke void @_ZN4core4hint21unreachable_unchecked17he36bd9722d6f5c7dE() #16
          to label %unreachable unwind label %cleanup

bb3:                                              ; preds = %start
  %val = load i8*, i8** %self, align 8, !nonnull !3, !align !4, !noundef !3
  ret i8* %val

bb7:                                              ; preds = %cleanup
  %6 = bitcast i8** %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_5 = select i1 %8, i64 0, i64 1
  %9 = icmp eq i64 %_5, 1
  br i1 %9, label %bb5, label %bb4

cleanup:                                          ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb7

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb7
  br i1 true, label %bb6, label %bb4

bb4:                                              ; preds = %bb6, %bb5, %bb7
  %15 = bitcast { i8*, i32 }* %2 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb6:                                              ; preds = %bb5
  br label %bb4
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$3map17h01b7d58e47227ddfE"(i32 %0, i32 %1) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i32, i32 }* %self to i32*
  %6 = load i32, i32* %5, align 4, !range !19, !noundef !3
  %_3 = zext i32 %6 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4
  br label %bb7

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  %x = load i32, i32* %7, align 4
  store i8 0, i8* %_9, align 1
  store i32 %x, i32* %_7, align 4
  %8 = load i32, i32* %_7, align 4
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
  %_5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hbdc251043a4d1ea9E"(i32 %8), !range !20
  br label %bb4

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %9 = load i8, i8* %_9, align 1, !range !2, !noundef !3
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i32, i32* %2, align 4, !range !21, !noundef !3
  ret i32 %11

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17he52d688dcc123096E"(i64* align 8 %0, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %f) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i64*, align 8
  %1 = alloca { i8*, i64 }, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  store i8 1, i8* %_9, align 1
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast { i8*, i64 }* %1 to {}**
  store {}* null, {}** %5, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %6 = bitcast i64** %self to { [0 x i8]*, i64 }**
  %x = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %6, align 8, !nonnull !3, !align !8, !noundef !3
  store i8 0, i8* %_9, align 1
  %7 = bitcast i64** %_7 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %7, align 8
  %8 = load i64*, i64** %_7, align 8, !nonnull !3, !align !8, !noundef !3
  %9 = bitcast i64* %8 to { [0 x i8]*, i64 }*
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %10 = call { [0 x i8]*, i64 } @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17hf5092522fa4ceb6dE"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %f, { [0 x i8]*, i64 }* align 8 %9)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %10, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %10, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %11 = bitcast { i8*, i64 }* %1 to { [0 x i8]*, i64 }*
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0
  store [0 x i8]* %_5.0, [0 x i8]** %12, align 8
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1
  store i64 %_5.1, i64* %13, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %14 = load i8, i8* %_9, align 1, !range !2, !noundef !3
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8, !align !4
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1
  ret { i8*, i64 } %21

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$4take17h33d8518500dca0c8E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") %0, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* align 8 %self) unnamed_addr #0 {
start:
  %_3 = alloca %"core::option::Option<core::cell::RefCell<alloc::string::String>>", align 8
  %1 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_3 to i64*
  store i64 0, i64* %1, align 8
; call core::mem::replace
  call void @_ZN4core3mem7replace17h5b6e4439db812dbeE(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") %0, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* align 8 %self, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$4take17h5ab29685d261a13eE"(%"core::option::Option<core::cell::RefCell<i32>>"* sret(%"core::option::Option<core::cell::RefCell<i32>>") %0, %"core::option::Option<core::cell::RefCell<i32>>"* align 8 %self) unnamed_addr #0 {
start:
  %_3 = alloca %"core::option::Option<core::cell::RefCell<i32>>", align 8
  %1 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_3 to i64*
  store i64 0, i64* %1, align 8
; call core::mem::replace
  call void @_ZN4core3mem7replace17hf475b08506f3ee60E(%"core::option::Option<core::cell::RefCell<i32>>"* sret(%"core::option::Option<core::cell::RefCell<i32>>") %0, %"core::option::Option<core::cell::RefCell<i32>>"* align 8 %self, %"core::option::Option<core::cell::RefCell<i32>>"* %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$4take17hf25ba049743cd2d5E"(%"core::option::Option<core::cell::RefCell<usize>>"* sret(%"core::option::Option<core::cell::RefCell<usize>>") %0, %"core::option::Option<core::cell::RefCell<usize>>"* align 8 %self) unnamed_addr #0 {
start:
  %_3 = alloca %"core::option::Option<core::cell::RefCell<usize>>", align 8
  %1 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %_3 to i64*
  store i64 0, i64* %1, align 8
; call core::mem::replace
  call void @_ZN4core3mem7replace17h90f136330fa652cdE(%"core::option::Option<core::cell::RefCell<usize>>"* sret(%"core::option::Option<core::cell::RefCell<usize>>") %0, %"core::option::Option<core::cell::RefCell<usize>>"* align 8 %self, %"core::option::Option<core::cell::RefCell<usize>>"* %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h0edc951b00b43dc2E"(i64* align 8 %0) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  store i8 1, i8* %_7, align 1
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i64** %1 to %"core::result::Result<&core::cell::RefCell<usize>, std::thread::local::AccessError>::Err"*
  %6 = bitcast %"core::result::Result<&core::cell::RefCell<usize>, std::thread::local::AccessError>::Err"* %5 to %"std::thread::local::AccessError"*
  %7 = bitcast i64** %1 to {}**
  store {}* null, {}** %7, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %8 = bitcast i64** %self to { i64, i64 }**
  %v = load { i64, i64 }*, { i64, i64 }** %8, align 8, !nonnull !3, !align !8, !noundef !3
  %9 = bitcast i64** %1 to { i64, i64 }**
  store { i64, i64 }* %v, { i64, i64 }** %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %10 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %12 = load i64*, i64** %1, align 8, !align !8
  ret i64* %12

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h3d867e9606a62aa4E"(i64* align 8 %0) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  store i8 1, i8* %_7, align 1
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i64** %1 to %"core::result::Result<&core::cell::RefCell<i32>, std::thread::local::AccessError>::Err"*
  %6 = bitcast %"core::result::Result<&core::cell::RefCell<i32>, std::thread::local::AccessError>::Err"* %5 to %"std::thread::local::AccessError"*
  %7 = bitcast i64** %1 to {}**
  store {}* null, {}** %7, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %8 = bitcast i64** %self to { i64, i32 }**
  %v = load { i64, i32 }*, { i64, i32 }** %8, align 8, !nonnull !3, !align !8, !noundef !3
  %9 = bitcast i64** %1 to { i64, i32 }**
  store { i64, i32 }* %v, { i64, i32 }** %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %10 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %12 = load i64*, i64** %1, align 8, !align !8
  ret i64* %12

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h76782816685d5e7cE"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !7, !noundef !3
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %7 = bitcast i64* %6 to %"core::alloc::layout::LayoutError"*
  %8 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %8, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %v = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %v, i64* %10, align 8
  %11 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %11, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %12 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %15 = load i64, i64* %14, align 8, !range !7, !noundef !3
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1
  ret { i64, i64 } %19

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h906be202810c7ba7E"(i8* %0) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  store i8 1, i8* %_7, align 1
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i8** %1 to %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err"*
  %6 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err"* %5 to %"core::alloc::AllocError"*
  %7 = bitcast i8** %1 to {}**
  store {}* null, {}** %7, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !3, !noundef !3
  store i8* %v, i8** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %8 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %10 = load i8*, i8** %1, align 8
  ret i8* %10

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h9bf5f067cd307435E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") %0, i64 %1, i64 %2, i64 %err.0, i64 %err.1) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !7, !noundef !3
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %6 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0
  store i64 %err.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1
  store i64 %err.1, i64* %9, align 8
  %10 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 1, i64* %10, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %v = load i64, i64* %11, align 8
  %12 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*
  %13 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %12, i32 0, i32 1
  store i64 %v, i64* %13, align 8
  %14 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 0, i64* %14, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %15 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  ret void

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17hb78672a47d47c489E"(i64* align 8 %0) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  store i8 1, i8* %_7, align 1
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i64** %1 to %"core::result::Result<&core::cell::RefCell<alloc::string::String>, std::thread::local::AccessError>::Err"*
  %6 = bitcast %"core::result::Result<&core::cell::RefCell<alloc::string::String>, std::thread::local::AccessError>::Err"* %5 to %"std::thread::local::AccessError"*
  %7 = bitcast i64** %1 to {}**
  store {}* null, {}** %7, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %8 = bitcast i64** %self to %"core::cell::RefCell<alloc::string::String>"**
  %v = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %8, align 8, !nonnull !3, !align !8, !noundef !3
  %9 = bitcast i64** %1 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %v, %"core::cell::RefCell<alloc::string::String>"** %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb1, %bb3
  %10 = load i8, i8* %_7, align 1, !range !2, !noundef !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb5, label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %12 = load i64*, i64** %1, align 8, !align !8
  ret i64* %12

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::option::Option<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h1b66484db842b1a2E"(%"core::option::Option<core::cell::RefCell<i32>>"* align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !7, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %2 = bitcast i64** %0 to {}**
  store {}* null, {}** %2, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %self to %"core::option::Option<core::cell::RefCell<i32>>::Some"*
  %x = getelementptr inbounds %"core::option::Option<core::cell::RefCell<i32>>::Some", %"core::option::Option<core::cell::RefCell<i32>>::Some"* %3, i32 0, i32 1
  %4 = bitcast i64** %0 to { i64, i32 }**
  store { i64, i32 }* %x, { i64, i32 }** %4, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %5 = load i64*, i64** %0, align 8, !align !8
  ret i64* %5
}

; core::option::Option<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h3d25ef5b50de2317E"(%"core::option::Option<core::cell::RefCell<usize>>"* align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !7, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %2 = bitcast i64** %0 to {}**
  store {}* null, {}** %2, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %self to %"core::option::Option<core::cell::RefCell<usize>>::Some"*
  %x = getelementptr inbounds %"core::option::Option<core::cell::RefCell<usize>>::Some", %"core::option::Option<core::cell::RefCell<usize>>::Some"* %3, i32 0, i32 1
  %4 = bitcast i64** %0 to { i64, i64 }**
  store { i64, i64 }* %x, { i64, i64 }** %4, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %5 = load i64*, i64** %0, align 8, !align !8
  ret i64* %5
}

; core::option::Option<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h64962f1ba5da94d3E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !7, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %2 = bitcast i64** %0 to {}**
  store {}* null, {}** %2, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %self to %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"*
  %x = getelementptr inbounds %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some", %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"* %3, i32 0, i32 1
  %4 = bitcast i64** %0 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %x, %"core::cell::RefCell<alloc::string::String>"** %4, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %5 = load i64*, i64** %0, align 8, !align !8
  ret i64* %5
}

; core::option::Option<T>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h36420a23399e1d60E"(i64 %0, i64 %1, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %2) unnamed_addr #0 {
start:
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !7, !noundef !3
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::option::expect_failed
  call void @_ZN4core6option13expect_failed17h28f8073c4c31bb9fE([0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %2) #16
  unreachable

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %val = load i64, i64* %6, align 8
  ret i64 %val
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17hcd36f4795844720cE"(i64 %0, i64 %1, i64* align 8 %f.0, i64 %f.1) unnamed_addr #0 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %_8, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !7, !noundef !3
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %6, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %x = load i64, i64* %7, align 8
  store i8 0, i8* %_8, align 1
  store i64 %x, i64* %_6, align 8
  %8 = load i64, i64* %_6, align 8
; call alloc::str::join_generic_copy::{{closure}}
  %9 = call { i64, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17ha6327d538071cc07E"(i64* align 8 %f.0, i64 %f.1, i64 %8)
  store { i64, i64 } %9, { i64, i64 }* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %10 = load i8, i8* %_8, align 1, !range !2, !noundef !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %13 = load i64, i64* %12, align 8, !range !7, !noundef !3
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { i64, i64 } undef, i64 %13, 0
  %17 = insertvalue { i64, i64 } %16, i64 %15, 1
  ret { i64, i64 } %17

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::unwrap_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h71b673fb916944b1E"(i64 %0, i64 %1, %"core::panic::location::Location"* align 8 %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %self = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %7 = load i64, i64* %6, align 8, !range !5, !noundef !3
  %8 = icmp eq i64 %7, 0
  %_2 = select i1 %8, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %t.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %10, align 8, !range !18, !noundef !3
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %12 = load i64, i64* %11, align 8, !range !5, !noundef !3
  %13 = icmp eq i64 %12, 0
  %_6 = select i1 %13, i64 1, i64 0
  %14 = icmp eq i64 %_6, 0
  br i1 %14, label %bb5, label %bb6

bb1:                                              ; preds = %start
; invoke core::hint::unreachable_unchecked
  invoke void @_ZN4core4hint21unreachable_unchecked17he36bd9722d6f5c7dE() #16
          to label %unreachable unwind label %cleanup

bb10:                                             ; preds = %cleanup
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %16 = load i64, i64* %15, align 8, !range !5, !noundef !3
  %17 = icmp eq i64 %16, 0
  %_7 = select i1 %17, i64 1, i64 0
  %18 = icmp eq i64 %_7, 0
  br i1 %18, label %bb7, label %bb9

cleanup:                                          ; preds = %bb1
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %21, i32* %23, align 8
  br label %bb10

unreachable:                                      ; preds = %bb1
  unreachable

bb7:                                              ; preds = %bb10
  br i1 true, label %bb8, label %bb4

bb9:                                              ; preds = %bb10
  br label %bb4

bb4:                                              ; preds = %bb8, %bb7, %bb9
  %24 = bitcast { i8*, i32 }* %3 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb8:                                              ; preds = %bb7
  br label %bb4

bb5:                                              ; preds = %bb6, %bb3
  %30 = insertvalue { i64, i64 } undef, i64 %t.0, 0
  %31 = insertvalue { i64, i64 } %30, i64 %t.1, 1
  ret { i64, i64 } %31

bb6:                                              ; preds = %bb3
  br label %bb5
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h4d5d6b8eb0378e99E"(i8** align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast i8** %self to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hc258f04a1cf29deeE"({ i32, i32 }* align 4 %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast { i32, i32 }* %self to i32*
  %2 = load i32, i32* %1, align 4, !range !19, !noundef !3
  %_2 = zext i32 %2 to i64
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1d5f92f10f03697eE"(i8* %0, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %3 = bitcast i8** %self to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_3 = select i1 %5, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  ret void

bb1:                                              ; preds = %start
  %6 = load i8*, i8** %self, align 8, !nonnull !3, !noundef !3
  store i8* %6, i8** %e, align 8
  %_7.0 = bitcast i8** %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1 %msg.0, i64 %msg.1, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.4 to [3 x i64]*), %"core::panic::location::Location"* align 8 %1) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::io::error::Error>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h40e63bf6e01db46fE"(i8** %e) #17
          to label %bb5 unwind label %abort

cleanup:                                          ; preds = %bb1
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

abort:                                            ; preds = %bb4
  %12 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb5:                                              ; preds = %bb4
  %13 = bitcast { i8*, i32 }* %2 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h4a5f73f55fc37191E"(i64* %0, i8* %1, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::cell::BorrowError", align 1
  %self = alloca { i64*, i8* }, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %self, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %self, i32 0, i32 1
  store i8* %1, i8** %5, align 8
  %6 = bitcast { i64*, i8* }* %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_3 = select i1 %8, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i64*, i8* }* %self to { i64*, i64* }*
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %9, i32 0, i32 0
  %t.0 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %9, i32 0, i32 1
  %t.1 = load i64*, i64** %11, align 8, !nonnull !3, !align !8, !noundef !3
  %12 = insertvalue { i64*, i64* } undef, i64* %t.0, 0
  %13 = insertvalue { i64*, i64* } %12, i64* %t.1, 1
  ret { i64*, i64* } %13

bb1:                                              ; preds = %start
  %_7.0 = bitcast %"core::cell::BorrowError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1 %msg.0, i64 %msg.1, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.5 to [3 x i64]*), %"core::panic::location::Location"* align 8 %2) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %3 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h96c9893649ba1fc4E"(i64* %0, i8* %1, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::cell::BorrowError", align 1
  %self = alloca { i64*, i8* }, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %self, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %self, i32 0, i32 1
  store i8* %1, i8** %5, align 8
  %6 = bitcast { i64*, i8* }* %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_3 = select i1 %8, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i64*, i8* }* %self to { i64*, i64* }*
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %9, i32 0, i32 0
  %t.0 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %9, i32 0, i32 1
  %t.1 = load i64*, i64** %11, align 8, !nonnull !3, !align !8, !noundef !3
  %12 = insertvalue { i64*, i64* } undef, i64* %t.0, 0
  %13 = insertvalue { i64*, i64* } %12, i64* %t.1, 1
  ret { i64*, i64* } %13

bb1:                                              ; preds = %start
  %_7.0 = bitcast %"core::cell::BorrowError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1 %msg.0, i64 %msg.1, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.5 to [3 x i64]*), %"core::panic::location::Location"* align 8 %2) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %3 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9df7766df9cb2ea7E"(i1 zeroext %0, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca %"std::thread::local::AccessError", align 1
  %self = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %self, align 1
  %4 = load i8, i8* %self, align 1, !range !2, !noundef !3
  %5 = trunc i8 %4 to i1
  %_3 = zext i1 %5 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  ret void

bb1:                                              ; preds = %start
  %_7.0 = bitcast %"std::thread::local::AccessError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1 %msg.0, i64 %msg.1, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.6 to [3 x i64]*), %"core::panic::location::Location"* align 8 %1) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17ha1c26501d5c95c44E"(i64* %0, i8* %1, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::cell::BorrowMutError", align 1
  %self = alloca { i64*, i8* }, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %self, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %self, i32 0, i32 1
  store i8* %1, i8** %5, align 8
  %6 = bitcast { i64*, i8* }* %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_3 = select i1 %8, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i64*, i8* }* %self to { i64*, i64* }*
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %9, i32 0, i32 0
  %t.0 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %9, i32 0, i32 1
  %t.1 = load i64*, i64** %11, align 8, !nonnull !3, !align !8, !noundef !3
  %12 = insertvalue { i64*, i64* } undef, i64* %t.0, 0
  %13 = insertvalue { i64*, i64* } %12, i64* %t.1, 1
  ret { i64*, i64* } %13

bb1:                                              ; preds = %start
  %_7.0 = bitcast %"core::cell::BorrowMutError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1 %msg.0, i64 %msg.1, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.7 to [3 x i64]*), %"core::panic::location::Location"* align 8 %2) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %3 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17ha7301dbb17b8d738E"(i1 zeroext %0, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::fmt::Error", align 1
  %self = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %self, align 1
  %4 = load i8, i8* %self, align 1, !range !2, !noundef !3
  %5 = trunc i8 %4 to i1
  %_3 = zext i1 %5 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  ret void

bb1:                                              ; preds = %start
  %_7.0 = bitcast %"core::fmt::Error"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1 %msg.0, i64 %msg.1, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.8 to [3 x i64]*), %"core::panic::location::Location"* align 8 %1) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hb1327fd949cc9522E"(i32* %0, i8* %1, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::cell::BorrowMutError", align 1
  %self = alloca { i32*, i8* }, align 8
  %4 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %self, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %self, i32 0, i32 1
  store i8* %1, i8** %5, align 8
  %6 = bitcast { i32*, i8* }* %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_3 = select i1 %8, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i32*, i8* }* %self to { i32*, i64* }*
  %10 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %9, i32 0, i32 0
  %t.0 = load i32*, i32** %10, align 8, !nonnull !3, !noundef !3
  %11 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %9, i32 0, i32 1
  %t.1 = load i64*, i64** %11, align 8, !nonnull !3, !align !8, !noundef !3
  %12 = insertvalue { i32*, i64* } undef, i32* %t.0, 0
  %13 = insertvalue { i32*, i64* } %12, i64* %t.1, 1
  ret { i32*, i64* } %13

bb1:                                              ; preds = %start
  %_7.0 = bitcast %"core::cell::BorrowMutError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1 %msg.0, i64 %msg.1, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.7 to [3 x i64]*), %"core::panic::location::Location"* align 8 %2) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %3 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc6764d80685afd92E"(i64* %0, i8* %1, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::cell::BorrowMutError", align 1
  %self = alloca { i64*, i8* }, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %self, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %self, i32 0, i32 1
  store i8* %1, i8** %5, align 8
  %6 = bitcast { i64*, i8* }* %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_3 = select i1 %8, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i64*, i8* }* %self to { i64*, i64* }*
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %9, i32 0, i32 0
  %t.0 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %9, i32 0, i32 1
  %t.1 = load i64*, i64** %11, align 8, !nonnull !3, !align !8, !noundef !3
  %12 = insertvalue { i64*, i64* } undef, i64* %t.0, 0
  %13 = insertvalue { i64*, i64* } %12, i64* %t.1, 1
  ret { i64*, i64* } %13

bb1:                                              ; preds = %start
  %_7.0 = bitcast %"core::cell::BorrowMutError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1 %msg.0, i64 %msg.1, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.7 to [3 x i64]*), %"core::panic::location::Location"* align 8 %2) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %3 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; core::result::Result<T,E>::is_err
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h60ee057c9c7fe3b3E"({ i32, i32 }* align 4 %self) unnamed_addr #0 {
start:
; call core::result::Result<T,E>::is_ok
  %_2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hc258f04a1cf29deeE"({ i32, i32 }* align 4 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_2, true
  ret i1 %0
}

; core::result::Result<T,E>::is_err
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h8d2fd85775a7798aE"(i8** align 8 %self) unnamed_addr #0 {
start:
; call core::result::Result<T,E>::is_ok
  %_2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h4d5d6b8eb0378e99E"(i8** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_2, true
  ret i1 %0
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h0855576d736a62aeE"(i32 %0, i32 %1, %"core::panic::location::Location"* align 8 %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::num::error::TryFromIntError", align 1
  %self = alloca { i32, i32 }, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %4, align 4
  %5 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %5, align 4
  %6 = bitcast { i32, i32 }* %self to i32*
  %7 = load i32, i32* %6, align 4, !range !19, !noundef !3
  %_2 = zext i32 %7 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  %t = load i32, i32* %8, align 4
  ret i32 %t

bb1:                                              ; preds = %start
  %_7.0 = bitcast %"core::num::error::TryFromIntError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc775 to [0 x i8]*), i64 43, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.9 to [3 x i64]*), %"core::panic::location::Location"* align 8 %2) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %14 = bitcast { i8*, i32 }* %3 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h091317455155d942E"(i64 %0, i64 %1, %"core::panic::location::Location"* align 8 %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::num::error::TryFromIntError", align 1
  %self = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %6, align 8, !range !7, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %t = load i64, i64* %7, align 8
  ret i64 %t

bb1:                                              ; preds = %start
  %_7.0 = bitcast %"core::num::error::TryFromIntError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc775 to [0 x i8]*), i64 43, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.9 to [3 x i64]*), %"core::panic::location::Location"* align 8 %2) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %13 = bitcast { i8*, i32 }* %3 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h27265b1272c97b70E"(%"core::result::Result<&str, core::str::error::Utf8Error>"* %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::str::error::Utf8Error", align 8
  %2 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !7, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to %"core::result::Result<&str, core::str::error::Utf8Error>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Ok", %"core::result::Result<&str, core::str::error::Utf8Error>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  %t.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !3, !align !4, !noundef !3
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  %t.1 = load i64, i64* %6, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %t.0, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %t.1, 1
  ret { [0 x i8]*, i64 } %8

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to %"core::result::Result<&str, core::str::error::Utf8Error>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Err", %"core::result::Result<&str, core::str::error::Utf8Error>::Err"* %9, i32 0, i32 1
  %11 = bitcast %"core::str::error::Utf8Error"* %e to i8*
  %12 = bitcast %"core::str::error::Utf8Error"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  %_7.0 = bitcast %"core::str::error::Utf8Error"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc775 to [0 x i8]*), i64 43, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.a to [3 x i64]*), %"core::panic::location::Location"* align 8 %0) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %18 = bitcast { i8*, i32 }* %1 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h56fdb3c93dcafc3cE"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i32*, i8 }, align 8
  %2 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !7, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %4, i32 0, i32 0
  %t.0 = load i32*, i32** %5, align 8, !nonnull !3, !align !13, !noundef !3
  %6 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %4, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2, !noundef !3
  %t.1 = trunc i8 %7 to i1
  %8 = zext i1 %t.1 to i8
  %9 = insertvalue { i32*, i8 } undef, i32* %t.0, 0
  %10 = insertvalue { i32*, i8 } %9, i8 %8, 1
  ret { i32*, i8 } %10

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8, !nonnull !3, !align !13, !noundef !3
  %15 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %12, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !2, !noundef !3
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %e, i32 0, i32 0
  store i32* %14, i32** %18, align 8
  %19 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %e, i32 0, i32 1
  %20 = zext i1 %17 to i8
  store i8 %20, i8* %19, align 8
  %_7.0 = bitcast { i32*, i8 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc775 to [0 x i8]*), i64 43, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.b to [3 x i64]*), %"core::panic::location::Location"* align 8 %0) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>
  invoke void @"_ZN4core3ptr98drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$$GT$17h3af6d6f6447e4e59E"({ i32*, i8 }* %e) #17
          to label %bb5 unwind label %abort

cleanup:                                          ; preds = %bb1
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

abort:                                            ; preds = %bb4
  %26 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb5:                                              ; preds = %bb4
  %27 = bitcast { i8*, i32 }* %1 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = insertvalue { i8*, i32 } undef, i8* %28, 0
  %32 = insertvalue { i8*, i32 } %31, i32 %30, 1
  resume { i8*, i32 } %32
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h5d4d0610472450bfE"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i64*, i8 }, align 8
  %2 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !7, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 0
  %t.0 = load i64*, i64** %5, align 8, !nonnull !3, !align !8, !noundef !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2, !noundef !3
  %t.1 = trunc i8 %7 to i1
  %8 = zext i1 %t.1 to i8
  %9 = insertvalue { i64*, i8 } undef, i64* %t.0, 0
  %10 = insertvalue { i64*, i8 } %9, i8 %8, 1
  ret { i64*, i8 } %10

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8, !nonnull !3, !align !8, !noundef !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !2, !noundef !3
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 0
  store i64* %14, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 1
  %20 = zext i1 %17 to i8
  store i8 %20, i8* %19, align 8
  %_7.0 = bitcast { i64*, i8 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc775 to [0 x i8]*), i64 43, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.c to [3 x i64]*), %"core::panic::location::Location"* align 8 %0) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>>
  invoke void @"_ZN4core3ptr162drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$$GT$17hd16bc80bfb8b53e2E"({ i64*, i8 }* %e) #17
          to label %bb5 unwind label %abort

cleanup:                                          ; preds = %bb1
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

abort:                                            ; preds = %bb4
  %26 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb5:                                              ; preds = %bb4
  %27 = bitcast { i8*, i32 }* %1 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = insertvalue { i8*, i32 } undef, i8* %28, 0
  %32 = insertvalue { i8*, i32 } %31, i32 %30, 1
  resume { i8*, i32 } %32
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h988feaf3afc656d7E"(%"core::result::Result<std::fs::File, std::io::error::Error>"* %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca i8*, align 8
  %2 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %self to i32*
  %3 = load i32, i32* %2, align 8, !range !19, !noundef !3
  %_2 = zext i32 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %self to %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"*
  %5 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Ok", %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"* %4, i32 0, i32 1
  %t = load i32, i32* %5, align 4, !range !14, !noundef !3
  ret i32 %t

bb1:                                              ; preds = %start
  %6 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %self to %"core::result::Result<std::fs::File, std::io::error::Error>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Err", %"core::result::Result<std::fs::File, std::io::error::Error>::Err"* %6, i32 0, i32 1
  %8 = load i8*, i8** %7, align 8, !nonnull !3, !noundef !3
  store i8* %8, i8** %e, align 8
  %_7.0 = bitcast i8** %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc775 to [0 x i8]*), i64 43, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.4 to [3 x i64]*), %"core::panic::location::Location"* align 8 %0) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::io::error::Error>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h40e63bf6e01db46fE"(i8** %e) #17
          to label %bb5 unwind label %abort

cleanup:                                          ; preds = %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

abort:                                            ; preds = %bb4
  %14 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb5:                                              ; preds = %bb4
  %15 = bitcast { i8*, i32 }* %1 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hfacfb63b3076d2d2E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i32*, i8 }, align 8
  %2 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !7, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %4, i32 0, i32 0
  %t.0 = load i32*, i32** %5, align 8, !nonnull !3, !align !13, !noundef !3
  %6 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %4, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2, !noundef !3
  %t.1 = trunc i8 %7 to i1
  %8 = zext i1 %t.1 to i8
  %9 = insertvalue { i32*, i8 } undef, i32* %t.0, 0
  %10 = insertvalue { i32*, i8 } %9, i8 %8, 1
  ret { i32*, i8 } %10

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8, !nonnull !3, !align !13, !noundef !3
  %15 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %12, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !2, !noundef !3
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %e, i32 0, i32 0
  store i32* %14, i32** %18, align 8
  %19 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %e, i32 0, i32 1
  %20 = zext i1 %17 to i8
  store i8 %20, i8* %19, align 8
  %_7.0 = bitcast { i32*, i8 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc775 to [0 x i8]*), i64 43, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.d to [3 x i64]*), %"core::panic::location::Location"* align 8 %0) #16
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>
  invoke void @"_ZN4core3ptr108drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$$GT$17h16682211493c70a8E"({ i32*, i8 }* %e) #17
          to label %bb5 unwind label %abort

cleanup:                                          ; preds = %bb1
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

abort:                                            ; preds = %bb4
  %26 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb5:                                              ; preds = %bb4
  %27 = bitcast { i8*, i32 }* %1 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = insertvalue { i8*, i32 } undef, i8* %28, 0
  %32 = insertvalue { i8*, i32 } %31, i32 %30, 1
  resume { i8*, i32 } %32
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h99cf45faf88306afE"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %_11, align 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !6, !noundef !3
  %7 = sub i64 %6, -9223372036854775807
  %8 = icmp eq i64 %7, 0
  %_3 = select i1 %8, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"*
  %10 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"* %9 to {}*
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 -9223372036854775807, i64* %11, align 8
  br label %bb7

bb1:                                              ; preds = %start
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %e.0 = load i64, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %e.1 = load i64, i64* %13, align 8, !range !5, !noundef !3
  store i8 0, i8* %_11, align 1
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0
  store i64 %e.0, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  store i64 %e.1, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  %19 = load i64, i64* %18, align 8, !range !5, !noundef !3
; call alloc::raw_vec::handle_reserve::{{closure}}
  %20 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h3ab2b65d054ae099E"(i64 %17, i64 %19)
  %_7.0 = extractvalue { i64, i64 } %20, 0
  %_7.1 = extractvalue { i64, i64 } %20, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  store i64 %_7.0, i64* %21, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %_7.1, i64* %22, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %23 = load i8, i8* %_11, align 1, !range !2, !noundef !3
  %24 = trunc i8 %23 to i1
  br i1 %24, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !range !6, !noundef !3
  %29 = insertvalue { i64, i64 } undef, i64 %26, 0
  %30 = insertvalue { i64, i64 } %29, i64 %28, 1
  ret { i64, i64 } %30

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hab98a4ec89cf70fbE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %1, i64 %2, i64* align 8 %op) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 1, i8* %_11, align 1
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_3 = select i1 %7, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  %t.0 = load i8*, i8** %8, align 8, !nonnull !3, !noundef !3
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %9, align 8
  %10 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %11, i32 0, i32 0
  store i8* %t.0, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %11, i32 0, i32 1
  store i64 %t.1, i64* %13, align 8
  %14 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %14, align 8
  br label %bb7

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %15 = bitcast { %"core::alloc::AllocError" }* %_9 to %"core::alloc::AllocError"*
; call alloc::raw_vec::finish_grow::{{closure}}
  %16 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h06b4d346eab194d4E"(i64* align 8 %op)
  %_7.0 = extractvalue { i64, i64 } %16, 0
  %_7.1 = extractvalue { i64, i64 } %16, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %17 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %_7.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %_7.1, i64* %20, align 8
  %21 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %22 = load i8, i8* %_11, align 1, !range !2, !noundef !3
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc54372c21c1a1d40E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %0, i64 %1, i64 %2) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::layout::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 1, i8* %_11, align 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !5, !noundef !3
  %7 = icmp eq i64 %6, 0
  %_3 = select i1 %7, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %t.0 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %9, align 8, !range !18, !noundef !3
  %10 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %t.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %t.1, i64* %13, align 8
  %14 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 0, i64* %14, align 8
  br label %bb7

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %15 = bitcast { %"core::alloc::layout::LayoutError" }* %_9 to %"core::alloc::layout::LayoutError"*
; call alloc::raw_vec::finish_grow::{{closure}}
  %16 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h060992e6d24258e4E"()
  %_7.0 = extractvalue { i64, i64 } %16, 0
  %_7.1 = extractvalue { i64, i64 } %16, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %17 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %_7.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %_7.1, i64* %20, align 8
  %21 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb4
  %22 = load i8, i8* %_11, align 1, !range !2, !noundef !3
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::convert::num::<impl core::convert::TryFrom<i32> for u64>::try_from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core7convert3num67_$LT$impl$u20$core..convert..TryFrom$LT$i32$GT$$u20$for$u20$u64$GT$8try_from17h80268a6fc8d138bdE"(i32 %u) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %_2 = icmp sge i32 %u, 0
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %1, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %_4 = sext i32 %u to i64
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_4, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %3, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !range !7, !noundef !3
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; core::convert::num::<impl core::convert::TryFrom<i64> for u32>::try_from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @"_ZN4core7convert3num67_$LT$impl$u20$core..convert..TryFrom$LT$i64$GT$$u20$for$u20$u32$GT$8try_from17hac0ed1ca87a8ca7eE"(i64 %u) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  %0 = alloca { i32, i32 }, align 4
  %_5 = icmp slt i64 %u, 0
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_8 = icmp sgt i64 %u, 4294967295
  %1 = zext i1 %_8 to i8
  store i8 %1, i8* %_4, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %_4, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i8, i8* %_4, align 1, !range !2, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %_11 = trunc i64 %u to i32
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  store i32 %_11, i32* %4, align 4
  %5 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %5, align 4
  br label %bb6

bb4:                                              ; preds = %bb3
  %6 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %6, align 4
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4, !range !19, !noundef !3
  %9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = insertvalue { i32, i32 } undef, i32 %8, 0
  %12 = insertvalue { i32, i32 } %11, i32 %10, 1
  ret { i32, i32 } %12
}

; <&mut W as core::fmt::Write>::write_char
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h19f5a9fc9da38a44E"(%"alloc::string::String"** align 8 %self, i32 %c) unnamed_addr #1 {
start:
  %_5 = load %"alloc::string::String"*, %"alloc::string::String"** %self, align 8, !nonnull !3, !align !8, !noundef !3
; call <alloc::string::String as core::fmt::Write>::write_char
  %0 = call zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h5086c5c6294a93bbE"(%"alloc::string::String"* align 8 %_5, i32 %c)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&mut W as core::fmt::Write>::write_char
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h2085213c73451cefE"({ i32*, i8* }** align 8 %self, i32 %c) unnamed_addr #1 {
start:
  %_5 = load { i32*, i8* }*, { i32*, i8* }** %self, align 8, !nonnull !3, !align !8, !noundef !3
; call core::fmt::Write::write_char
  %0 = call zeroext i1 @_ZN4core3fmt5Write10write_char17h71075877e8117c5bE({ i32*, i8* }* align 8 %_5, i32 %c)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&mut W as core::fmt::Write>::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h36a6cfe93b04b59dE"(%"alloc::string::String"** align 8 %self, %"core::fmt::Arguments"* %args) unnamed_addr #1 {
start:
  %_4 = alloca %"core::fmt::Arguments", align 8
  %_5 = load %"alloc::string::String"*, %"alloc::string::String"** %self, align 8, !nonnull !3, !align !8, !noundef !3
  %0 = bitcast %"core::fmt::Arguments"* %_4 to i8*
  %1 = bitcast %"core::fmt::Arguments"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 48, i1 false)
; call core::fmt::Write::write_fmt
  %2 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17h593c63e97458c52aE(%"alloc::string::String"* align 8 %_5, %"core::fmt::Arguments"* %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <&mut W as core::fmt::Write>::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17he8b31c3c8c7f50d7E"({ i32*, i8* }** align 8 %self, %"core::fmt::Arguments"* %args) unnamed_addr #1 {
start:
  %_4 = alloca %"core::fmt::Arguments", align 8
  %_5 = load { i32*, i8* }*, { i32*, i8* }** %self, align 8, !nonnull !3, !align !8, !noundef !3
  %0 = bitcast %"core::fmt::Arguments"* %_4 to i8*
  %1 = bitcast %"core::fmt::Arguments"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 48, i1 false)
; call core::fmt::Write::write_fmt
  %2 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17h4af0c010c9cce504E({ i32*, i8* }* align 8 %_5, %"core::fmt::Arguments"* %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <&mut W as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h243dd22d0783e4daE"(%"alloc::string::String"** align 8 %self, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
  %_5 = load %"alloc::string::String"*, %"alloc::string::String"** %self, align 8, !nonnull !3, !align !8, !noundef !3
; call <alloc::string::String as core::fmt::Write>::write_str
  %0 = call zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17he5943151ef74dfafE"(%"alloc::string::String"* align 8 %_5, [0 x i8]* align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&mut W as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h5cd4a60194bdede9E"({ i32*, i8* }** align 8 %self, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
  %_5 = load { i32*, i8* }*, { i32*, i8* }** %self, align 8, !nonnull !3, !align !8, !noundef !3
; call <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str
  %0 = call zeroext i1 @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h7ad4762307c07efbE"({ i32*, i8* }* align 8 %_5, [0 x i8]* align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h84aa608d90102d00E"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h86ee170481628c12E"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb5cb9745d6b3d002E"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd2fdbaf5456dcc2cE"(i64 %t.0, i64 %t.1) unnamed_addr #1 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %t.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %t.1, 1
  ret { i64, i64 } %1
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3b1eb49cdbd1df1cE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* align 8 %self) unnamed_addr #1 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %0 = call i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h3a4ad508b034d5c2E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h4891cb2b511f81ffE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* align 8 %self) unnamed_addr #1 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %0 = call i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h58d3b9a25a1d1549E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h83129efac1cdb3faE"(i64 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %0 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h4ec2a546377b354fE"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h87cbbda5a70a0126E"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* align 8 %self) unnamed_addr #1 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %0 = call i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h6786136b85721c60E"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc304fc2e29a19363E"(i8* %self) unnamed_addr #1 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h4725f0854164ead4E"(i8* %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; <T as core::borrow::Borrow<T>>::borrow
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h97123950e099c074E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %self.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %self.1, 1
  ret { [0 x i8]*, i64 } %1
}

; <*const T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN52_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hccbbcc369d4abc62E"(i64** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 {
start:
; call <*const T as core::fmt::Pointer>::fmt
  %0 = call zeroext i1 @"_ZN54_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h3e387eaabc11e5e0E"(i64** align 8 %self, %"core::fmt::Formatter"* align 8 %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <T as alloc::slice::hack::ConvertVec>::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h2264add0c9a7bca6E"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %v, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  store i8 1, i8* %_17, align 1
; invoke core::slice::<impl [T]>::len
  %_3 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h46f2c9dcc089edc9E"([0 x i8]* align 1 %s.0, i64 %s.1)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %bb9, %cleanup
  %1 = load i8, i8* %_17, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb11, label %bb10

cleanup:                                          ; preds = %bb1, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb12

bb1:                                              ; preds = %start
  store i8 0, i8* %_17, align 1
; invoke alloc::vec::Vec<T,A>::with_capacity_in
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h207b68c9119d35caE"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %v, i64 %_3)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::slice::<impl [T]>::as_ptr
  %_7 = invoke i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h3b354085a3fa771eE"([0 x i8]* align 1 %s.0, i64 %s.1)
          to label %bb3 unwind label %cleanup1

bb9:                                              ; preds = %cleanup1
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9d76e855da509defE"(%"alloc::vec::Vec<u8>"* %v) #17
          to label %bb12 unwind label %abort

cleanup1:                                         ; preds = %bb7, %bb6, %bb5, %bb4, %bb3, %bb2
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb9

bb3:                                              ; preds = %bb2
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_9 = invoke i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hb8dd395c40cf84b5E"(%"alloc::vec::Vec<u8>"* align 8 %v)
          to label %bb4 unwind label %cleanup1

bb4:                                              ; preds = %bb3
; invoke core::slice::<impl [T]>::len
  %_11 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h46f2c9dcc089edc9E"([0 x i8]* align 1 %s.0, i64 %s.1)
          to label %bb5 unwind label %cleanup1

bb5:                                              ; preds = %bb4
; invoke core::ptr::const_ptr::<impl *const T>::copy_to_nonoverlapping
  invoke void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17hfd0785c9bd54f5a6E"(i8* %_7, i8* %_9, i64 %_11)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5
; invoke core::slice::<impl [T]>::len
  %_15 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h46f2c9dcc089edc9E"([0 x i8]* align 1 %s.0, i64 %s.1)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
; invoke alloc::vec::Vec<T,A>::set_len
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h3ba64e3882673c7dE"(%"alloc::vec::Vec<u8>"* align 8 %v, i64 %_15)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
  ret void

abort:                                            ; preds = %bb9
  %13 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb10:                                             ; preds = %bb11, %bb12
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb11:                                             ; preds = %bb12
  br label %bb10
}

; <T as core::convert::TryInto<U>>::try_into
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17hbb280aaa9d054cf2E"(i32 %self) unnamed_addr #1 {
start:
; call core::convert::num::<impl core::convert::TryFrom<i32> for u64>::try_from
  %0 = call { i64, i64 } @"_ZN4core7convert3num67_$LT$impl$u20$core..convert..TryFrom$LT$i32$GT$$u20$for$u20$u64$GT$8try_from17h80268a6fc8d138bdE"(i32 %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <T as core::convert::TryInto<U>>::try_into
; Function Attrs: nonlazybind uwtable
define { i32, i32 } @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17hdac5959febd68b5aE"(i64 %self) unnamed_addr #1 {
start:
; call core::convert::num::<impl core::convert::TryFrom<i64> for u32>::try_from
  %0 = call { i32, i32 } @"_ZN4core7convert3num67_$LT$impl$u20$core..convert..TryFrom$LT$i64$GT$$u20$for$u20$u32$GT$8try_from17hac0ed1ca87a8ca7eE"(i64 %self)
  %1 = extractvalue { i32, i32 } %0, 0
  %2 = extractvalue { i32, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i32, i32 } undef, i32 %1, 0
  %4 = insertvalue { i32, i32 } %3, i32 %2, 1
  ret { i32, i32 } %4
}

; <*const T as core::fmt::Pointer>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN54_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h3e387eaabc11e5e0E"(i64** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 {
start:
  %_5 = load i64*, i64** %self, align 8
  %_4 = bitcast i64* %_5 to {}*
; call core::ptr::const_ptr::<impl *const T>::addr
  %_3 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h438244cf55e17776E"({}* %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::pointer_fmt_inner
  %0 = call zeroext i1 @_ZN4core3fmt17pointer_fmt_inner17h0cf48016ebec1053E(i64 %_3, %"core::fmt::Formatter"* align 8 %f)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; <&T as core::borrow::Borrow<T>>::borrow
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h9575a5f3ea6710f4E"({ [0 x i8]*, i64 }* align 8 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_2.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !3, !align !4, !noundef !3
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_2.1 = load i64, i64* %1, align 8
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_2.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { %"std::path::Path"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h0d358ce8916a281cE"({ [0 x i8]*, i64 }* align 8 %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_3.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !3, !align !4, !noundef !3
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_3.1 = load i64, i64* %1, align 8
; call std::path::<impl core::convert::AsRef<std::path::Path> for str>::as_ref
  %2 = call { %"std::path::Path"*, i64 } @"_ZN3std4path77_$LT$impl$u20$core..convert..AsRef$LT$std..path..Path$GT$$u20$for$u20$str$GT$6as_ref17h36d54f2eb451c02cE"([0 x i8]* align 1 %_3.0, i64 %_3.1)
  %3 = extractvalue { %"std::path::Path"*, i64 } %2, 0
  %4 = extractvalue { %"std::path::Path"*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { %"std::path::Path"*, i64 } undef, %"std::path::Path"* %3, 0
  %6 = insertvalue { %"std::path::Path"*, i64 } %5, i64 %4, 1
  ret { %"std::path::Path"*, i64 } %6
}

; <&str as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17heda6ea0c3cd31507E"(%"core::str::pattern::StrSearcher"* sret(%"core::str::pattern::StrSearcher") %0, [0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
; call core::str::pattern::StrSearcher::new
  call void @_ZN4core3str7pattern11StrSearcher3new17h7be12f099352ddf3E(%"core::str::pattern::StrSearcher"* sret(%"core::str::pattern::StrSearcher") %0, [0 x i8]* align 1 %haystack.0, i64 %haystack.1, [0 x i8]* align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::string::String as core::fmt::Write>::write_char
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h5086c5c6294a93bbE"(%"alloc::string::String"* align 8 %self, i32 %c) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h5e5ea1e58a4dd83dE(%"alloc::string::String"* align 8 %self, i32 %c)
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; <alloc::string::String as core::fmt::Write>::write_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17he5943151ef74dfafE"(%"alloc::string::String"* align 8 %self, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hf42753300a010b9dE(%"alloc::string::String"* align 8 %self, [0 x i8]* align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; alloc::collections::TryReserveError::kind
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h8bbb440b3052ddd7E({ i64, i64 }* align 8 %self) unnamed_addr #0 {
start:
; call <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
  %0 = call { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h3fc0e518081a5fdeE"({ i64, i64 }* align 8 %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN5alloc2rc11is_dangling17ha8d812776dd36460E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %ptr) unnamed_addr #1 {
start:
  %_3 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %ptr to {}*
; call core::ptr::mut_ptr::<impl *mut T>::addr
  %_2 = call i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h8252082fb26de1b2E"({}* %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i64 %_2, -1
  ret i1 %0
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN5alloc2rc11is_dangling17hb3bd8cc56e409650E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %ptr) unnamed_addr #1 {
start:
  %_3 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %ptr to {}*
; call core::ptr::mut_ptr::<impl *mut T>::addr
  %_2 = call i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h8252082fb26de1b2E"({}* %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i64 %_2, -1
  ret i1 %0
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN5alloc2rc11is_dangling17hf33bd1b80f870846E(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %ptr) unnamed_addr #1 {
start:
  %_3 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %ptr to {}*
; call core::ptr::mut_ptr::<impl *mut T>::addr
  %_2 = call i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h8252082fb26de1b2E"({}* %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i64 %_2, -1
  ret i1 %0
}

; alloc::fmt::format
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc3fmt6format17hf8ffbd9ceceb6841E(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"core::fmt::Arguments"* %args) unnamed_addr #0 {
start:
  %_4 = alloca i64*, align 8
; call core::fmt::Arguments::as_str
  %1 = call { i8*, i64 } @_ZN4core3fmt9Arguments6as_str17h622b47d42cc7f8f5E(%"core::fmt::Arguments"* align 8 %args)
  %_2.0 = extractvalue { i8*, i64 } %1, 0
  %_2.1 = extractvalue { i8*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast i64** %_4 to %"core::fmt::Arguments"**
  store %"core::fmt::Arguments"* %args, %"core::fmt::Arguments"** %2, align 8
  %3 = load i64*, i64** %_4, align 8, !nonnull !3, !align !8, !noundef !3
; call core::option::Option<T>::map_or_else
  call void @"_ZN4core6option15Option$LT$T$GT$11map_or_else17h251aedf8f963701cE"(%"alloc::string::String"* sret(%"alloc::string::String") %0, i8* align 1 %_2.0, i64 %_2.1, i64* align 8 %3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::fmt::format::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3fmt6format28_$u7b$$u7b$closure$u7d$$u7d$17hf9df0b203440e62fE"(%"alloc::string::String"* sret(%"alloc::string::String") %0, i64* align 8 %_1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::fmt::Arguments", align 8
  %_3 = bitcast i64* %_1 to %"core::fmt::Arguments"*
  %1 = bitcast %"core::fmt::Arguments"* %_2 to i8*
  %2 = bitcast %"core::fmt::Arguments"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 48, i1 false)
; call alloc::fmt::format::format_inner
  call void @_ZN5alloc3fmt6format12format_inner17hb224ae155a9ded66E(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"core::fmt::Arguments"* %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::str::join_generic_copy
; Function Attrs: nonlazybind uwtable
define void @_ZN5alloc3str17join_generic_copy17he0ca7637920dad15E(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, [0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1, [0 x i8]* align 1 %sep.0, i64 %sep.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_265 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_249 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_240 = alloca { i8*, i64 }, align 8
  %iter6 = alloca { i64*, i64* }, align 8
  %_229 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_213 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_204 = alloca { i8*, i64 }, align 8
  %iter5 = alloca { i64*, i64* }, align 8
  %_193 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_177 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_168 = alloca { i8*, i64 }, align 8
  %iter4 = alloca { i64*, i64* }, align 8
  %_157 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_141 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_132 = alloca { i8*, i64 }, align 8
  %iter3 = alloca { i64*, i64* }, align 8
  %_121 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_105 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_96 = alloca { i8*, i64 }, align 8
  %iter2 = alloca { i64*, i64* }, align 8
  %_85 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_69 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_60 = alloca { i8*, i64 }, align 8
  %iter1 = alloca { i64*, i64* }, align 8
  %target = alloca { [0 x i8]*, i64 }, align 8
  %_37 = alloca i64, align 8
  %result = alloca %"alloc::vec::Vec<u8>", align 8
  %_18 = alloca { i64*, i64 }, align 8
  %_8 = alloca i64*, align 8
  %iter = alloca { i64*, i64* }, align 8
; call core::slice::<impl [T]>::iter
  %4 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h5dcc0b0d82b85643E"([0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1)
  store { i64*, i64* } %4, { i64*, i64* }* %iter, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %5 = call align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffafa6fa6d8619a9E"({ i64*, i64* }* align 8 %iter)
  store i64* %5, i64** %_8, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = bitcast i64** %_8 to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_10 = select i1 %8, i64 0, i64 1
  switch i64 %_10, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hfb7ed548d6cdb712E"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0)
  br label %bb116

bb5:                                              ; preds = %bb2
  %9 = bitcast i64** %_8 to { [0 x i8]*, i64 }**
  %first = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %9, align 8, !nonnull !3, !align !8, !noundef !3
  %10 = bitcast { i64*, i64* }* %iter to i64**
  %start1.i = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2668ba30b6e2060cE"(i64* %start1.i)
  %11 = icmp eq i64 16, 0
  br i1 %11, label %bb3.i, label %bb8.i

bb3.i:                                            ; preds = %bb5
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1
  %13 = bitcast i64** %12 to { [0 x i8]*, i64 }**
  %_9.i = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %13, align 8
; call core::ptr::const_ptr::<impl *const T>::addr
  %_8.i = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h661c8181a844c31bE"({ [0 x i8]*, i64 }* %_9.i)
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_11.i = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2668ba30b6e2060cE"(i64* %start1.i)
; call core::ptr::mut_ptr::<impl *mut T>::addr
  %_10.i = call i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17ha969293a8447fccdE"({ [0 x i8]*, i64 }* %_11.i)
  %14 = sub i64 %_8.i, %_10.i
  store i64 %14, i64* %2, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hc054ea5f2e6a2da4E.exit"

bb8.i:                                            ; preds = %bb5
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1
  %16 = bitcast i64** %15 to { [0 x i8]*, i64 }**
  %_15.i = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %16, align 8
; call core::ptr::const_ptr::<impl *const T>::addr
  %_14.i = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h661c8181a844c31bE"({ [0 x i8]*, i64 }* %_15.i)
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2668ba30b6e2060cE"(i64* %start1.i)
; call core::ptr::mut_ptr::<impl *mut T>::addr
  %_16.i = call i64 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17ha969293a8447fccdE"({ [0 x i8]*, i64 }* %_17.i)
  %17 = sub nuw i64 %_14.i, %_16.i
  store i64 %17, i64* %1, align 8
  %diff.i = load i64, i64* %1, align 8
  %18 = udiv exact i64 %diff.i, 16
  store i64 %18, i64* %2, align 8
  br label %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hc054ea5f2e6a2da4E.exit"

"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hc054ea5f2e6a2da4E.exit": ; preds = %bb8.i, %bb3.i
  %19 = load i64, i64* %2, align 8
  br label %bb6

bb6:                                              ; preds = %"_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hc054ea5f2e6a2da4E.exit"
; call core::num::<impl usize>::checked_mul
  %20 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h30817b6b7b191694E"(i64 %sep.1, i64 %19)
  %_14.0 = extractvalue { i64, i64 } %20, 0
  %_14.1 = extractvalue { i64, i64 } %20, 1
  br label %bb7

bb7:                                              ; preds = %bb6
  %21 = bitcast { i64*, i64 }* %_18 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %22 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %21, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %22, align 8
  %23 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %21, i32 0, i32 1
  store i64 %slice.1, i64* %23, align 8
  %24 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_18, i32 0, i32 0
  %25 = load i64*, i64** %24, align 8, !nonnull !3, !align !8, !noundef !3
  %26 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_18, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
; call core::option::Option<T>::and_then
  %28 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17hcd36f4795844720cE"(i64 %_14.0, i64 %_14.1, i64* align 8 %25, i64 %27)
  %_13.0 = extractvalue { i64, i64 } %28, 0
  %_13.1 = extractvalue { i64, i64 } %28, 1
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::option::Option<T>::expect
  %reserved_len = call i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h36420a23399e1d60E"(i64 %_13.0, i64 %_13.1, [0 x i8]* align 1 bitcast (<{ [53 x i8] }>* @alloc779 to [0 x i8]*), i64 53, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc781 to %"core::panic::location::Location"*))
  br label %bb9

bb9:                                              ; preds = %bb8
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hd1a4fbc665cd3c7aE"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %result, i64 %reserved_len)
  br label %bb10

bb10:                                             ; preds = %bb9
; invoke <&T as core::borrow::Borrow<T>>::borrow
  %29 = invoke { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h9575a5f3ea6710f4E"({ [0 x i8]*, i64 }* align 8 %first)
          to label %bb11 unwind label %cleanup

bb118:                                            ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h9d76e855da509defE"(%"alloc::vec::Vec<u8>"* %result) #17
          to label %bb119 unwind label %abort

cleanup:                                          ; preds = %bb114, %bb113, %bb37, %bb36, %bb35, %bb34, %bb33, %bb32, %bb31, %bb28, %bb26, %bb24, %bb52, %bb51, %bb50, %bb49, %bb48, %bb47, %bb46, %bb43, %bb41, %bb39, %bb67, %bb66, %bb65, %bb64, %bb63, %bb62, %bb61, %bb58, %bb56, %bb54, %bb82, %bb81, %bb80, %bb79, %bb78, %bb77, %bb76, %bb73, %bb71, %bb69, %bb97, %bb96, %bb95, %bb94, %bb93, %bb92, %bb91, %bb88, %bb86, %bb84, %bb111, %bb110, %bb109, %bb108, %bb107, %bb106, %bb105, %bb102, %bb100, %bb23, %bb21, %bb20, %bb19, %bb18, %bb17, %bb16, %bb15, %bb14, %bb13, %bb12, %bb11, %bb10
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  %32 = extractvalue { i8*, i32 } %30, 1
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %32, i32* %34, align 8
  br label %bb118

bb11:                                             ; preds = %bb10
  %_29.0 = extractvalue { [0 x i8]*, i64 } %29, 0
  %_29.1 = extractvalue { [0 x i8]*, i64 } %29, 1
; invoke core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
  %35 = invoke { [0 x i8]*, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17hbef027012ee3fabaE"([0 x i8]* align 1 %_29.0, i64 %_29.1)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %_27.0 = extractvalue { [0 x i8]*, i64 } %35, 0
  %_27.1 = extractvalue { [0 x i8]*, i64 } %35, 1
; invoke alloc::vec::Vec<T,A>::extend_from_slice
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h58d31a581d226929E"(%"alloc::vec::Vec<u8>"* align 8 %result, [0 x i8]* align 1 %_27.0, i64 %_27.1)
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb12
; invoke alloc::vec::Vec<T,A>::len
  %pos = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h3ae54f974232fb25E"(%"alloc::vec::Vec<u8>"* align 8 %result)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
; invoke alloc::vec::Vec<T,A>::spare_capacity_mut
  %36 = invoke { [0 x i8]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17h79e44ca8d34f4947E"(%"alloc::vec::Vec<u8>"* align 8 %result)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  %_35.0 = extractvalue { [0 x i8]*, i64 } %36, 0
  %_35.1 = extractvalue { [0 x i8]*, i64 } %36, 1
  %_38 = sub i64 %reserved_len, %pos
  store i64 %_38, i64* %_37, align 8
  %37 = load i64, i64* %_37, align 8
; invoke core::slice::<impl [T]>::get_unchecked_mut
  %38 = invoke { [0 x i8]*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hf2a17e169fc2091cE"([0 x i8]* align 1 %_35.0, i64 %_35.1, i64 %37)
          to label %bb16 unwind label %cleanup

bb16:                                             ; preds = %bb15
  %target.0 = extractvalue { [0 x i8]*, i64 } %38, 0
  %target.1 = extractvalue { [0 x i8]*, i64 } %38, 1
; invoke core::slice::<impl [T]>::as_ptr
  %_43 = invoke i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h3b354085a3fa771eE"([0 x i8]* align 1 %sep.0, i64 %sep.1)
          to label %bb17 unwind label %cleanup

bb17:                                             ; preds = %bb16
; invoke core::ptr::const_ptr::<impl *const T>::cast
  %_42 = invoke i8* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hf0f98e673ea408d7E"(i8* %_43)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb17
; invoke core::slice::<impl [T]>::len
  %_45 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h46f2c9dcc089edc9E"([0 x i8]* align 1 %sep.0, i64 %sep.1)
          to label %bb19 unwind label %cleanup

bb19:                                             ; preds = %bb18
; invoke core::slice::raw::from_raw_parts
  %39 = invoke { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17h4bbd686b0cbff399E(i8* %_42, i64 %_45)
          to label %bb20 unwind label %cleanup

bb20:                                             ; preds = %bb19
  %sep_uninit.0 = extractvalue { [0 x i8]*, i64 } %39, 0
  %sep_uninit.1 = extractvalue { [0 x i8]*, i64 } %39, 1
  %40 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 0
  %_48.0 = load i64*, i64** %40, align 8, !nonnull !3, !noundef !3
  %41 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1
  %_48.1 = load i64*, i64** %41, align 8
; invoke core::iter::traits::iterator::Iterator::map
  %42 = invoke { i64*, i64* } @_ZN4core4iter6traits8iterator8Iterator3map17hcf8a14ca2e428fc7E(i64* %_48.0, i64* %_48.1)
          to label %bb21 unwind label %cleanup

bb21:                                             ; preds = %bb20
  %iter_uninit.0 = extractvalue { i64*, i64* } %42, 0
  %iter_uninit.1 = extractvalue { i64*, i64* } %42, 1
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  store [0 x i8]* %target.0, [0 x i8]** %43, align 8
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  store i64 %target.1, i64* %44, align 8
; invoke core::slice::<impl [T]>::len
  %_55 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h18da70aa8ba5c797E"([0 x i8]* align 1 %sep_uninit.0, i64 %sep_uninit.1)
          to label %bb22 unwind label %cleanup

bb22:                                             ; preds = %bb21
  switch i64 %_55, label %bb23 [
    i64 0, label %bb24
    i64 1, label %bb39
    i64 2, label %bb54
    i64 3, label %bb69
    i64 4, label %bb84
  ]

bb23:                                             ; preds = %bb22
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %45 = invoke { i64*, i64* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h893301cba3a1010dE"(i64* %iter_uninit.0, i64* %iter_uninit.1)
          to label %bb99 unwind label %cleanup

bb24:                                             ; preds = %bb22
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %46 = invoke { i64*, i64* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h893301cba3a1010dE"(i64* %iter_uninit.0, i64* %iter_uninit.1)
          to label %bb25 unwind label %cleanup

bb39:                                             ; preds = %bb22
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %47 = invoke { i64*, i64* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h893301cba3a1010dE"(i64* %iter_uninit.0, i64* %iter_uninit.1)
          to label %bb40 unwind label %cleanup

bb54:                                             ; preds = %bb22
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %48 = invoke { i64*, i64* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h893301cba3a1010dE"(i64* %iter_uninit.0, i64* %iter_uninit.1)
          to label %bb55 unwind label %cleanup

bb69:                                             ; preds = %bb22
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %49 = invoke { i64*, i64* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h893301cba3a1010dE"(i64* %iter_uninit.0, i64* %iter_uninit.1)
          to label %bb70 unwind label %cleanup

bb84:                                             ; preds = %bb22
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %50 = invoke { i64*, i64* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h893301cba3a1010dE"(i64* %iter_uninit.0, i64* %iter_uninit.1)
          to label %bb85 unwind label %cleanup

bb99:                                             ; preds = %bb23
  %_237.0 = extractvalue { i64*, i64* } %45, 0
  %_237.1 = extractvalue { i64*, i64* } %45, 1
  %51 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter6, i32 0, i32 0
  store i64* %_237.0, i64** %51, align 8
  %52 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter6, i32 0, i32 1
  store i64* %_237.1, i64** %52, align 8
  br label %bb100

bb100:                                            ; preds = %bb112, %bb99
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %53 = invoke { i8*, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc4188a3c8445a678E"({ i64*, i64* }* align 8 %iter6)
          to label %bb101 unwind label %cleanup

bb101:                                            ; preds = %bb100
  store { i8*, i64 } %53, { i8*, i64 }* %_240, align 8
  %54 = bitcast { i8*, i64 }* %_240 to {}**
  %55 = load {}*, {}** %54, align 8
  %56 = icmp eq {}* %55, null
  %_243 = select i1 %56, i64 0, i64 1
  switch i64 %_243, label %bb103 [
    i64 0, label %bb104
    i64 1, label %bb102
  ]

bb103:                                            ; preds = %bb101
  unreachable

bb104:                                            ; preds = %bb101
  br label %bb113

bb102:                                            ; preds = %bb101
  %57 = bitcast { i8*, i64 }* %_240 to { [0 x i8]*, i64 }*
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %57, i32 0, i32 0
  %s.0 = load [0 x i8]*, [0 x i8]** %58, align 8, !nonnull !3, !align !4, !noundef !3
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %57, i32 0, i32 1
  %s.1 = load i64, i64* %59, align 8
; invoke core::slice::<impl [T]>::len
  %len = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h18da70aa8ba5c797E"([0 x i8]* align 1 %sep_uninit.0, i64 %sep_uninit.1)
          to label %bb105 unwind label %cleanup

bb105:                                            ; preds = %bb102
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  %_251.0 = load [0 x i8]*, [0 x i8]** %60, align 8, !nonnull !3, !align !4, !noundef !3
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  %_251.1 = load i64, i64* %61, align 8
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h35fe3884e577b3bbE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_249, [0 x i8]* align 1 %_251.0, i64 %_251.1, i64 %len, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb106 unwind label %cleanup

bb106:                                            ; preds = %bb105
  %62 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_249 to { [0 x i8]*, i64 }*
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 0
  %head.0 = load [0 x i8]*, [0 x i8]** %63, align 8, !nonnull !3, !align !4, !noundef !3
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 1
  %head.1 = load i64, i64* %64, align 8
  %65 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_249, i32 0, i32 1
  %66 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %65, i32 0, i32 0
  %tail.0 = load [0 x i8]*, [0 x i8]** %66, align 8, !nonnull !3, !align !4, !noundef !3
  %67 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %65, i32 0, i32 1
  %tail.1 = load i64, i64* %67, align 8
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc982414f87047121E"([0 x i8]* align 1 %head.0, i64 %head.1, [0 x i8]* align 1 %sep_uninit.0, i64 %sep_uninit.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb107 unwind label %cleanup

bb107:                                            ; preds = %bb106
  %68 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  store [0 x i8]* %tail.0, [0 x i8]** %68, align 8
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  store i64 %tail.1, i64* %69, align 8
; invoke <T as core::borrow::Borrow<T>>::borrow
  %70 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h97123950e099c074E"([0 x i8]* align 1 %s.0, i64 %s.1)
          to label %bb108 unwind label %cleanup

bb108:                                            ; preds = %bb107
  %_259.0 = extractvalue { [0 x i8]*, i64 } %70, 0
  %_259.1 = extractvalue { [0 x i8]*, i64 } %70, 1
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %71 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17hc6d73999908a91caE"([0 x i8]* align 1 %_259.0, i64 %_259.1)
          to label %bb109 unwind label %cleanup

bb109:                                            ; preds = %bb108
  %content_bytes.0 = extractvalue { [0 x i8]*, i64 } %71, 0
  %content_bytes.1 = extractvalue { [0 x i8]*, i64 } %71, 1
; invoke core::slice::<impl [T]>::len
  %len7 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h18da70aa8ba5c797E"([0 x i8]* align 1 %content_bytes.0, i64 %content_bytes.1)
          to label %bb110 unwind label %cleanup

bb110:                                            ; preds = %bb109
  %72 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  %_267.0 = load [0 x i8]*, [0 x i8]** %72, align 8, !nonnull !3, !align !4, !noundef !3
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  %_267.1 = load i64, i64* %73, align 8
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h35fe3884e577b3bbE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_265, [0 x i8]* align 1 %_267.0, i64 %_267.1, i64 %len7, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb111 unwind label %cleanup

bb111:                                            ; preds = %bb110
  %74 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_265 to { [0 x i8]*, i64 }*
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %74, i32 0, i32 0
  %head.08 = load [0 x i8]*, [0 x i8]** %75, align 8, !nonnull !3, !align !4, !noundef !3
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %74, i32 0, i32 1
  %head.19 = load i64, i64* %76, align 8
  %77 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_265, i32 0, i32 1
  %78 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %77, i32 0, i32 0
  %tail.010 = load [0 x i8]*, [0 x i8]** %78, align 8, !nonnull !3, !align !4, !noundef !3
  %79 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %77, i32 0, i32 1
  %tail.111 = load i64, i64* %79, align 8
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc982414f87047121E"([0 x i8]* align 1 %head.08, i64 %head.19, [0 x i8]* align 1 %content_bytes.0, i64 %content_bytes.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb112 unwind label %cleanup

bb112:                                            ; preds = %bb111
  %80 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  store [0 x i8]* %tail.010, [0 x i8]** %80, align 8
  %81 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  store i64 %tail.111, i64* %81, align 8
  br label %bb100

bb113:                                            ; preds = %bb30, %bb45, %bb60, %bb75, %bb90, %bb104
  %82 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  %_51.0 = load [0 x i8]*, [0 x i8]** %82, align 8, !nonnull !3, !align !4, !noundef !3
  %83 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  %_51.1 = load i64, i64* %83, align 8
; invoke core::slice::<impl [T]>::len
  %_275 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h18da70aa8ba5c797E"([0 x i8]* align 1 %_51.0, i64 %_51.1)
          to label %bb114 unwind label %cleanup

bb85:                                             ; preds = %bb84
  %_201.0 = extractvalue { i64*, i64* } %50, 0
  %_201.1 = extractvalue { i64*, i64* } %50, 1
  %84 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter5, i32 0, i32 0
  store i64* %_201.0, i64** %84, align 8
  %85 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter5, i32 0, i32 1
  store i64* %_201.1, i64** %85, align 8
  br label %bb86

bb86:                                             ; preds = %bb98, %bb85
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %86 = invoke { i8*, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc4188a3c8445a678E"({ i64*, i64* }* align 8 %iter5)
          to label %bb87 unwind label %cleanup

bb87:                                             ; preds = %bb86
  store { i8*, i64 } %86, { i8*, i64 }* %_204, align 8
  %87 = bitcast { i8*, i64 }* %_204 to {}**
  %88 = load {}*, {}** %87, align 8
  %89 = icmp eq {}* %88, null
  %_207 = select i1 %89, i64 0, i64 1
  switch i64 %_207, label %bb89 [
    i64 0, label %bb90
    i64 1, label %bb88
  ]

bb89:                                             ; preds = %bb87
  unreachable

bb90:                                             ; preds = %bb87
  br label %bb113

bb88:                                             ; preds = %bb87
  %90 = bitcast { i8*, i64 }* %_204 to { [0 x i8]*, i64 }*
  %91 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %90, i32 0, i32 0
  %s.012 = load [0 x i8]*, [0 x i8]** %91, align 8, !nonnull !3, !align !4, !noundef !3
  %92 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %90, i32 0, i32 1
  %s.113 = load i64, i64* %92, align 8
; invoke core::slice::<impl [T]>::len
  %len14 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h18da70aa8ba5c797E"([0 x i8]* align 1 %sep_uninit.0, i64 %sep_uninit.1)
          to label %bb91 unwind label %cleanup

bb91:                                             ; preds = %bb88
  %93 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  %_215.0 = load [0 x i8]*, [0 x i8]** %93, align 8, !nonnull !3, !align !4, !noundef !3
  %94 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  %_215.1 = load i64, i64* %94, align 8
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h35fe3884e577b3bbE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_213, [0 x i8]* align 1 %_215.0, i64 %_215.1, i64 %len14, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb92 unwind label %cleanup

bb92:                                             ; preds = %bb91
  %95 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_213 to { [0 x i8]*, i64 }*
  %96 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %95, i32 0, i32 0
  %head.015 = load [0 x i8]*, [0 x i8]** %96, align 8, !nonnull !3, !align !4, !noundef !3
  %97 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %95, i32 0, i32 1
  %head.116 = load i64, i64* %97, align 8
  %98 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_213, i32 0, i32 1
  %99 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %98, i32 0, i32 0
  %tail.017 = load [0 x i8]*, [0 x i8]** %99, align 8, !nonnull !3, !align !4, !noundef !3
  %100 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %98, i32 0, i32 1
  %tail.118 = load i64, i64* %100, align 8
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc982414f87047121E"([0 x i8]* align 1 %head.015, i64 %head.116, [0 x i8]* align 1 %sep_uninit.0, i64 %sep_uninit.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb93 unwind label %cleanup

bb93:                                             ; preds = %bb92
  %101 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  store [0 x i8]* %tail.017, [0 x i8]** %101, align 8
  %102 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  store i64 %tail.118, i64* %102, align 8
; invoke <T as core::borrow::Borrow<T>>::borrow
  %103 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h97123950e099c074E"([0 x i8]* align 1 %s.012, i64 %s.113)
          to label %bb94 unwind label %cleanup

bb94:                                             ; preds = %bb93
  %_223.0 = extractvalue { [0 x i8]*, i64 } %103, 0
  %_223.1 = extractvalue { [0 x i8]*, i64 } %103, 1
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %104 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17hc6d73999908a91caE"([0 x i8]* align 1 %_223.0, i64 %_223.1)
          to label %bb95 unwind label %cleanup

bb95:                                             ; preds = %bb94
  %content_bytes.019 = extractvalue { [0 x i8]*, i64 } %104, 0
  %content_bytes.120 = extractvalue { [0 x i8]*, i64 } %104, 1
; invoke core::slice::<impl [T]>::len
  %len21 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h18da70aa8ba5c797E"([0 x i8]* align 1 %content_bytes.019, i64 %content_bytes.120)
          to label %bb96 unwind label %cleanup

bb96:                                             ; preds = %bb95
  %105 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  %_231.0 = load [0 x i8]*, [0 x i8]** %105, align 8, !nonnull !3, !align !4, !noundef !3
  %106 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  %_231.1 = load i64, i64* %106, align 8
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h35fe3884e577b3bbE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_229, [0 x i8]* align 1 %_231.0, i64 %_231.1, i64 %len21, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb97 unwind label %cleanup

bb97:                                             ; preds = %bb96
  %107 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_229 to { [0 x i8]*, i64 }*
  %108 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %107, i32 0, i32 0
  %head.022 = load [0 x i8]*, [0 x i8]** %108, align 8, !nonnull !3, !align !4, !noundef !3
  %109 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %107, i32 0, i32 1
  %head.123 = load i64, i64* %109, align 8
  %110 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_229, i32 0, i32 1
  %111 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %110, i32 0, i32 0
  %tail.024 = load [0 x i8]*, [0 x i8]** %111, align 8, !nonnull !3, !align !4, !noundef !3
  %112 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %110, i32 0, i32 1
  %tail.125 = load i64, i64* %112, align 8
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc982414f87047121E"([0 x i8]* align 1 %head.022, i64 %head.123, [0 x i8]* align 1 %content_bytes.019, i64 %content_bytes.120, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb98 unwind label %cleanup

bb98:                                             ; preds = %bb97
  %113 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  store [0 x i8]* %tail.024, [0 x i8]** %113, align 8
  %114 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  store i64 %tail.125, i64* %114, align 8
  br label %bb86

bb70:                                             ; preds = %bb69
  %_165.0 = extractvalue { i64*, i64* } %49, 0
  %_165.1 = extractvalue { i64*, i64* } %49, 1
  %115 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter4, i32 0, i32 0
  store i64* %_165.0, i64** %115, align 8
  %116 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter4, i32 0, i32 1
  store i64* %_165.1, i64** %116, align 8
  br label %bb71

bb71:                                             ; preds = %bb83, %bb70
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %117 = invoke { i8*, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc4188a3c8445a678E"({ i64*, i64* }* align 8 %iter4)
          to label %bb72 unwind label %cleanup

bb72:                                             ; preds = %bb71
  store { i8*, i64 } %117, { i8*, i64 }* %_168, align 8
  %118 = bitcast { i8*, i64 }* %_168 to {}**
  %119 = load {}*, {}** %118, align 8
  %120 = icmp eq {}* %119, null
  %_171 = select i1 %120, i64 0, i64 1
  switch i64 %_171, label %bb74 [
    i64 0, label %bb75
    i64 1, label %bb73
  ]

bb74:                                             ; preds = %bb72
  unreachable

bb75:                                             ; preds = %bb72
  br label %bb113

bb73:                                             ; preds = %bb72
  %121 = bitcast { i8*, i64 }* %_168 to { [0 x i8]*, i64 }*
  %122 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %121, i32 0, i32 0
  %s.026 = load [0 x i8]*, [0 x i8]** %122, align 8, !nonnull !3, !align !4, !noundef !3
  %123 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %121, i32 0, i32 1
  %s.127 = load i64, i64* %123, align 8
; invoke core::slice::<impl [T]>::len
  %len28 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h18da70aa8ba5c797E"([0 x i8]* align 1 %sep_uninit.0, i64 %sep_uninit.1)
          to label %bb76 unwind label %cleanup

bb76:                                             ; preds = %bb73
  %124 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  %_179.0 = load [0 x i8]*, [0 x i8]** %124, align 8, !nonnull !3, !align !4, !noundef !3
  %125 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  %_179.1 = load i64, i64* %125, align 8
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h35fe3884e577b3bbE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_177, [0 x i8]* align 1 %_179.0, i64 %_179.1, i64 %len28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb77 unwind label %cleanup

bb77:                                             ; preds = %bb76
  %126 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_177 to { [0 x i8]*, i64 }*
  %127 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %126, i32 0, i32 0
  %head.029 = load [0 x i8]*, [0 x i8]** %127, align 8, !nonnull !3, !align !4, !noundef !3
  %128 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %126, i32 0, i32 1
  %head.130 = load i64, i64* %128, align 8
  %129 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_177, i32 0, i32 1
  %130 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %129, i32 0, i32 0
  %tail.031 = load [0 x i8]*, [0 x i8]** %130, align 8, !nonnull !3, !align !4, !noundef !3
  %131 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %129, i32 0, i32 1
  %tail.132 = load i64, i64* %131, align 8
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc982414f87047121E"([0 x i8]* align 1 %head.029, i64 %head.130, [0 x i8]* align 1 %sep_uninit.0, i64 %sep_uninit.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb78 unwind label %cleanup

bb78:                                             ; preds = %bb77
  %132 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  store [0 x i8]* %tail.031, [0 x i8]** %132, align 8
  %133 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  store i64 %tail.132, i64* %133, align 8
; invoke <T as core::borrow::Borrow<T>>::borrow
  %134 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h97123950e099c074E"([0 x i8]* align 1 %s.026, i64 %s.127)
          to label %bb79 unwind label %cleanup

bb79:                                             ; preds = %bb78
  %_187.0 = extractvalue { [0 x i8]*, i64 } %134, 0
  %_187.1 = extractvalue { [0 x i8]*, i64 } %134, 1
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %135 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17hc6d73999908a91caE"([0 x i8]* align 1 %_187.0, i64 %_187.1)
          to label %bb80 unwind label %cleanup

bb80:                                             ; preds = %bb79
  %content_bytes.033 = extractvalue { [0 x i8]*, i64 } %135, 0
  %content_bytes.134 = extractvalue { [0 x i8]*, i64 } %135, 1
; invoke core::slice::<impl [T]>::len
  %len35 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h18da70aa8ba5c797E"([0 x i8]* align 1 %content_bytes.033, i64 %content_bytes.134)
          to label %bb81 unwind label %cleanup

bb81:                                             ; preds = %bb80
  %136 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  %_195.0 = load [0 x i8]*, [0 x i8]** %136, align 8, !nonnull !3, !align !4, !noundef !3
  %137 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  %_195.1 = load i64, i64* %137, align 8
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h35fe3884e577b3bbE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_193, [0 x i8]* align 1 %_195.0, i64 %_195.1, i64 %len35, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb82 unwind label %cleanup

bb82:                                             ; preds = %bb81
  %138 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_193 to { [0 x i8]*, i64 }*
  %139 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %138, i32 0, i32 0
  %head.036 = load [0 x i8]*, [0 x i8]** %139, align 8, !nonnull !3, !align !4, !noundef !3
  %140 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %138, i32 0, i32 1
  %head.137 = load i64, i64* %140, align 8
  %141 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_193, i32 0, i32 1
  %142 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %141, i32 0, i32 0
  %tail.038 = load [0 x i8]*, [0 x i8]** %142, align 8, !nonnull !3, !align !4, !noundef !3
  %143 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %141, i32 0, i32 1
  %tail.139 = load i64, i64* %143, align 8
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc982414f87047121E"([0 x i8]* align 1 %head.036, i64 %head.137, [0 x i8]* align 1 %content_bytes.033, i64 %content_bytes.134, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb83 unwind label %cleanup

bb83:                                             ; preds = %bb82
  %144 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  store [0 x i8]* %tail.038, [0 x i8]** %144, align 8
  %145 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  store i64 %tail.139, i64* %145, align 8
  br label %bb71

bb55:                                             ; preds = %bb54
  %_129.0 = extractvalue { i64*, i64* } %48, 0
  %_129.1 = extractvalue { i64*, i64* } %48, 1
  %146 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter3, i32 0, i32 0
  store i64* %_129.0, i64** %146, align 8
  %147 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter3, i32 0, i32 1
  store i64* %_129.1, i64** %147, align 8
  br label %bb56

bb56:                                             ; preds = %bb68, %bb55
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %148 = invoke { i8*, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc4188a3c8445a678E"({ i64*, i64* }* align 8 %iter3)
          to label %bb57 unwind label %cleanup

bb57:                                             ; preds = %bb56
  store { i8*, i64 } %148, { i8*, i64 }* %_132, align 8
  %149 = bitcast { i8*, i64 }* %_132 to {}**
  %150 = load {}*, {}** %149, align 8
  %151 = icmp eq {}* %150, null
  %_135 = select i1 %151, i64 0, i64 1
  switch i64 %_135, label %bb59 [
    i64 0, label %bb60
    i64 1, label %bb58
  ]

bb59:                                             ; preds = %bb57
  unreachable

bb60:                                             ; preds = %bb57
  br label %bb113

bb58:                                             ; preds = %bb57
  %152 = bitcast { i8*, i64 }* %_132 to { [0 x i8]*, i64 }*
  %153 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %152, i32 0, i32 0
  %s.040 = load [0 x i8]*, [0 x i8]** %153, align 8, !nonnull !3, !align !4, !noundef !3
  %154 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %152, i32 0, i32 1
  %s.141 = load i64, i64* %154, align 8
; invoke core::slice::<impl [T]>::len
  %len42 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h18da70aa8ba5c797E"([0 x i8]* align 1 %sep_uninit.0, i64 %sep_uninit.1)
          to label %bb61 unwind label %cleanup

bb61:                                             ; preds = %bb58
  %155 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  %_143.0 = load [0 x i8]*, [0 x i8]** %155, align 8, !nonnull !3, !align !4, !noundef !3
  %156 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  %_143.1 = load i64, i64* %156, align 8
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h35fe3884e577b3bbE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_141, [0 x i8]* align 1 %_143.0, i64 %_143.1, i64 %len42, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb62 unwind label %cleanup

bb62:                                             ; preds = %bb61
  %157 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_141 to { [0 x i8]*, i64 }*
  %158 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %157, i32 0, i32 0
  %head.043 = load [0 x i8]*, [0 x i8]** %158, align 8, !nonnull !3, !align !4, !noundef !3
  %159 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %157, i32 0, i32 1
  %head.144 = load i64, i64* %159, align 8
  %160 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_141, i32 0, i32 1
  %161 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %160, i32 0, i32 0
  %tail.045 = load [0 x i8]*, [0 x i8]** %161, align 8, !nonnull !3, !align !4, !noundef !3
  %162 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %160, i32 0, i32 1
  %tail.146 = load i64, i64* %162, align 8
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc982414f87047121E"([0 x i8]* align 1 %head.043, i64 %head.144, [0 x i8]* align 1 %sep_uninit.0, i64 %sep_uninit.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb63 unwind label %cleanup

bb63:                                             ; preds = %bb62
  %163 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  store [0 x i8]* %tail.045, [0 x i8]** %163, align 8
  %164 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  store i64 %tail.146, i64* %164, align 8
; invoke <T as core::borrow::Borrow<T>>::borrow
  %165 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h97123950e099c074E"([0 x i8]* align 1 %s.040, i64 %s.141)
          to label %bb64 unwind label %cleanup

bb64:                                             ; preds = %bb63
  %_151.0 = extractvalue { [0 x i8]*, i64 } %165, 0
  %_151.1 = extractvalue { [0 x i8]*, i64 } %165, 1
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %166 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17hc6d73999908a91caE"([0 x i8]* align 1 %_151.0, i64 %_151.1)
          to label %bb65 unwind label %cleanup

bb65:                                             ; preds = %bb64
  %content_bytes.047 = extractvalue { [0 x i8]*, i64 } %166, 0
  %content_bytes.148 = extractvalue { [0 x i8]*, i64 } %166, 1
; invoke core::slice::<impl [T]>::len
  %len49 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h18da70aa8ba5c797E"([0 x i8]* align 1 %content_bytes.047, i64 %content_bytes.148)
          to label %bb66 unwind label %cleanup

bb66:                                             ; preds = %bb65
  %167 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  %_159.0 = load [0 x i8]*, [0 x i8]** %167, align 8, !nonnull !3, !align !4, !noundef !3
  %168 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  %_159.1 = load i64, i64* %168, align 8
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h35fe3884e577b3bbE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_157, [0 x i8]* align 1 %_159.0, i64 %_159.1, i64 %len49, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb67 unwind label %cleanup

bb67:                                             ; preds = %bb66
  %169 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_157 to { [0 x i8]*, i64 }*
  %170 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %169, i32 0, i32 0
  %head.050 = load [0 x i8]*, [0 x i8]** %170, align 8, !nonnull !3, !align !4, !noundef !3
  %171 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %169, i32 0, i32 1
  %head.151 = load i64, i64* %171, align 8
  %172 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_157, i32 0, i32 1
  %173 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %172, i32 0, i32 0
  %tail.052 = load [0 x i8]*, [0 x i8]** %173, align 8, !nonnull !3, !align !4, !noundef !3
  %174 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %172, i32 0, i32 1
  %tail.153 = load i64, i64* %174, align 8
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc982414f87047121E"([0 x i8]* align 1 %head.050, i64 %head.151, [0 x i8]* align 1 %content_bytes.047, i64 %content_bytes.148, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb68 unwind label %cleanup

bb68:                                             ; preds = %bb67
  %175 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  store [0 x i8]* %tail.052, [0 x i8]** %175, align 8
  %176 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  store i64 %tail.153, i64* %176, align 8
  br label %bb56

bb40:                                             ; preds = %bb39
  %_93.0 = extractvalue { i64*, i64* } %47, 0
  %_93.1 = extractvalue { i64*, i64* } %47, 1
  %177 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter2, i32 0, i32 0
  store i64* %_93.0, i64** %177, align 8
  %178 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter2, i32 0, i32 1
  store i64* %_93.1, i64** %178, align 8
  br label %bb41

bb41:                                             ; preds = %bb53, %bb40
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %179 = invoke { i8*, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc4188a3c8445a678E"({ i64*, i64* }* align 8 %iter2)
          to label %bb42 unwind label %cleanup

bb42:                                             ; preds = %bb41
  store { i8*, i64 } %179, { i8*, i64 }* %_96, align 8
  %180 = bitcast { i8*, i64 }* %_96 to {}**
  %181 = load {}*, {}** %180, align 8
  %182 = icmp eq {}* %181, null
  %_99 = select i1 %182, i64 0, i64 1
  switch i64 %_99, label %bb44 [
    i64 0, label %bb45
    i64 1, label %bb43
  ]

bb44:                                             ; preds = %bb42
  unreachable

bb45:                                             ; preds = %bb42
  br label %bb113

bb43:                                             ; preds = %bb42
  %183 = bitcast { i8*, i64 }* %_96 to { [0 x i8]*, i64 }*
  %184 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %183, i32 0, i32 0
  %s.054 = load [0 x i8]*, [0 x i8]** %184, align 8, !nonnull !3, !align !4, !noundef !3
  %185 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %183, i32 0, i32 1
  %s.155 = load i64, i64* %185, align 8
; invoke core::slice::<impl [T]>::len
  %len56 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h18da70aa8ba5c797E"([0 x i8]* align 1 %sep_uninit.0, i64 %sep_uninit.1)
          to label %bb46 unwind label %cleanup

bb46:                                             ; preds = %bb43
  %186 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  %_107.0 = load [0 x i8]*, [0 x i8]** %186, align 8, !nonnull !3, !align !4, !noundef !3
  %187 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  %_107.1 = load i64, i64* %187, align 8
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h35fe3884e577b3bbE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_105, [0 x i8]* align 1 %_107.0, i64 %_107.1, i64 %len56, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb47 unwind label %cleanup

bb47:                                             ; preds = %bb46
  %188 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_105 to { [0 x i8]*, i64 }*
  %189 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %188, i32 0, i32 0
  %head.057 = load [0 x i8]*, [0 x i8]** %189, align 8, !nonnull !3, !align !4, !noundef !3
  %190 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %188, i32 0, i32 1
  %head.158 = load i64, i64* %190, align 8
  %191 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_105, i32 0, i32 1
  %192 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %191, i32 0, i32 0
  %tail.059 = load [0 x i8]*, [0 x i8]** %192, align 8, !nonnull !3, !align !4, !noundef !3
  %193 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %191, i32 0, i32 1
  %tail.160 = load i64, i64* %193, align 8
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc982414f87047121E"([0 x i8]* align 1 %head.057, i64 %head.158, [0 x i8]* align 1 %sep_uninit.0, i64 %sep_uninit.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb48 unwind label %cleanup

bb48:                                             ; preds = %bb47
  %194 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  store [0 x i8]* %tail.059, [0 x i8]** %194, align 8
  %195 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  store i64 %tail.160, i64* %195, align 8
; invoke <T as core::borrow::Borrow<T>>::borrow
  %196 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h97123950e099c074E"([0 x i8]* align 1 %s.054, i64 %s.155)
          to label %bb49 unwind label %cleanup

bb49:                                             ; preds = %bb48
  %_115.0 = extractvalue { [0 x i8]*, i64 } %196, 0
  %_115.1 = extractvalue { [0 x i8]*, i64 } %196, 1
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %197 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17hc6d73999908a91caE"([0 x i8]* align 1 %_115.0, i64 %_115.1)
          to label %bb50 unwind label %cleanup

bb50:                                             ; preds = %bb49
  %content_bytes.061 = extractvalue { [0 x i8]*, i64 } %197, 0
  %content_bytes.162 = extractvalue { [0 x i8]*, i64 } %197, 1
; invoke core::slice::<impl [T]>::len
  %len63 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h18da70aa8ba5c797E"([0 x i8]* align 1 %content_bytes.061, i64 %content_bytes.162)
          to label %bb51 unwind label %cleanup

bb51:                                             ; preds = %bb50
  %198 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  %_123.0 = load [0 x i8]*, [0 x i8]** %198, align 8, !nonnull !3, !align !4, !noundef !3
  %199 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  %_123.1 = load i64, i64* %199, align 8
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h35fe3884e577b3bbE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_121, [0 x i8]* align 1 %_123.0, i64 %_123.1, i64 %len63, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb52 unwind label %cleanup

bb52:                                             ; preds = %bb51
  %200 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_121 to { [0 x i8]*, i64 }*
  %201 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %200, i32 0, i32 0
  %head.064 = load [0 x i8]*, [0 x i8]** %201, align 8, !nonnull !3, !align !4, !noundef !3
  %202 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %200, i32 0, i32 1
  %head.165 = load i64, i64* %202, align 8
  %203 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_121, i32 0, i32 1
  %204 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %203, i32 0, i32 0
  %tail.066 = load [0 x i8]*, [0 x i8]** %204, align 8, !nonnull !3, !align !4, !noundef !3
  %205 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %203, i32 0, i32 1
  %tail.167 = load i64, i64* %205, align 8
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc982414f87047121E"([0 x i8]* align 1 %head.064, i64 %head.165, [0 x i8]* align 1 %content_bytes.061, i64 %content_bytes.162, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb53 unwind label %cleanup

bb53:                                             ; preds = %bb52
  %206 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  store [0 x i8]* %tail.066, [0 x i8]** %206, align 8
  %207 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  store i64 %tail.167, i64* %207, align 8
  br label %bb41

bb25:                                             ; preds = %bb24
  %_57.0 = extractvalue { i64*, i64* } %46, 0
  %_57.1 = extractvalue { i64*, i64* } %46, 1
  %208 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter1, i32 0, i32 0
  store i64* %_57.0, i64** %208, align 8
  %209 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter1, i32 0, i32 1
  store i64* %_57.1, i64** %209, align 8
  br label %bb26

bb26:                                             ; preds = %bb38, %bb25
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %210 = invoke { i8*, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc4188a3c8445a678E"({ i64*, i64* }* align 8 %iter1)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb26
  store { i8*, i64 } %210, { i8*, i64 }* %_60, align 8
  %211 = bitcast { i8*, i64 }* %_60 to {}**
  %212 = load {}*, {}** %211, align 8
  %213 = icmp eq {}* %212, null
  %_63 = select i1 %213, i64 0, i64 1
  switch i64 %_63, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ]

bb29:                                             ; preds = %bb27
  unreachable

bb30:                                             ; preds = %bb27
  br label %bb113

bb28:                                             ; preds = %bb27
  %214 = bitcast { i8*, i64 }* %_60 to { [0 x i8]*, i64 }*
  %215 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %214, i32 0, i32 0
  %s.068 = load [0 x i8]*, [0 x i8]** %215, align 8, !nonnull !3, !align !4, !noundef !3
  %216 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %214, i32 0, i32 1
  %s.169 = load i64, i64* %216, align 8
; invoke core::slice::<impl [T]>::len
  %len70 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h18da70aa8ba5c797E"([0 x i8]* align 1 %sep_uninit.0, i64 %sep_uninit.1)
          to label %bb31 unwind label %cleanup

bb31:                                             ; preds = %bb28
  %217 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  %_71.0 = load [0 x i8]*, [0 x i8]** %217, align 8, !nonnull !3, !align !4, !noundef !3
  %218 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  %_71.1 = load i64, i64* %218, align 8
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h35fe3884e577b3bbE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_69, [0 x i8]* align 1 %_71.0, i64 %_71.1, i64 %len70, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb32 unwind label %cleanup

bb32:                                             ; preds = %bb31
  %219 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_69 to { [0 x i8]*, i64 }*
  %220 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %219, i32 0, i32 0
  %head.071 = load [0 x i8]*, [0 x i8]** %220, align 8, !nonnull !3, !align !4, !noundef !3
  %221 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %219, i32 0, i32 1
  %head.172 = load i64, i64* %221, align 8
  %222 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_69, i32 0, i32 1
  %223 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %222, i32 0, i32 0
  %tail.073 = load [0 x i8]*, [0 x i8]** %223, align 8, !nonnull !3, !align !4, !noundef !3
  %224 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %222, i32 0, i32 1
  %tail.174 = load i64, i64* %224, align 8
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc982414f87047121E"([0 x i8]* align 1 %head.071, i64 %head.172, [0 x i8]* align 1 %sep_uninit.0, i64 %sep_uninit.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb33 unwind label %cleanup

bb33:                                             ; preds = %bb32
  %225 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  store [0 x i8]* %tail.073, [0 x i8]** %225, align 8
  %226 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  store i64 %tail.174, i64* %226, align 8
; invoke <T as core::borrow::Borrow<T>>::borrow
  %227 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h97123950e099c074E"([0 x i8]* align 1 %s.068, i64 %s.169)
          to label %bb34 unwind label %cleanup

bb34:                                             ; preds = %bb33
  %_79.0 = extractvalue { [0 x i8]*, i64 } %227, 0
  %_79.1 = extractvalue { [0 x i8]*, i64 } %227, 1
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %228 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17hc6d73999908a91caE"([0 x i8]* align 1 %_79.0, i64 %_79.1)
          to label %bb35 unwind label %cleanup

bb35:                                             ; preds = %bb34
  %content_bytes.075 = extractvalue { [0 x i8]*, i64 } %228, 0
  %content_bytes.176 = extractvalue { [0 x i8]*, i64 } %228, 1
; invoke core::slice::<impl [T]>::len
  %len77 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h18da70aa8ba5c797E"([0 x i8]* align 1 %content_bytes.075, i64 %content_bytes.176)
          to label %bb36 unwind label %cleanup

bb36:                                             ; preds = %bb35
  %229 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  %_87.0 = load [0 x i8]*, [0 x i8]** %229, align 8, !nonnull !3, !align !4, !noundef !3
  %230 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  %_87.1 = load i64, i64* %230, align 8
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h35fe3884e577b3bbE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_85, [0 x i8]* align 1 %_87.0, i64 %_87.1, i64 %len77, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb37 unwind label %cleanup

bb37:                                             ; preds = %bb36
  %231 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_85 to { [0 x i8]*, i64 }*
  %232 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %231, i32 0, i32 0
  %head.078 = load [0 x i8]*, [0 x i8]** %232, align 8, !nonnull !3, !align !4, !noundef !3
  %233 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %231, i32 0, i32 1
  %head.179 = load i64, i64* %233, align 8
  %234 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_85, i32 0, i32 1
  %235 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %234, i32 0, i32 0
  %tail.080 = load [0 x i8]*, [0 x i8]** %235, align 8, !nonnull !3, !align !4, !noundef !3
  %236 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %234, i32 0, i32 1
  %tail.181 = load i64, i64* %236, align 8
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hc982414f87047121E"([0 x i8]* align 1 %head.078, i64 %head.179, [0 x i8]* align 1 %content_bytes.075, i64 %content_bytes.176, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*))
          to label %bb38 unwind label %cleanup

bb38:                                             ; preds = %bb37
  %237 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0
  store [0 x i8]* %tail.080, [0 x i8]** %237, align 8
  %238 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1
  store i64 %tail.181, i64* %238, align 8
  br label %bb26

bb114:                                            ; preds = %bb113
  %result_len = sub i64 %reserved_len, %_275
; invoke alloc::vec::Vec<T,A>::set_len
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h3ba64e3882673c7dE"(%"alloc::vec::Vec<u8>"* align 8 %result, i64 %result_len)
          to label %bb115 unwind label %cleanup

bb115:                                            ; preds = %bb114
  %239 = bitcast %"alloc::vec::Vec<u8>"* %0 to i8*
  %240 = bitcast %"alloc::vec::Vec<u8>"* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %239, i8* align 8 %240, i64 24, i1 false)
  br label %bb117

abort:                                            ; preds = %bb118
  %241 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb119:                                            ; preds = %bb118
  %242 = bitcast { i8*, i32 }* %3 to i8**
  %243 = load i8*, i8** %242, align 8
  %244 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %245 = load i32, i32* %244, align 8
  %246 = insertvalue { i8*, i32 } undef, i8* %243, 0
  %247 = insertvalue { i8*, i32 } %246, i32 %245, 1
  resume { i8*, i32 } %247

bb117:                                            ; preds = %bb116, %bb115
  ret void

bb116:                                            ; preds = %bb3
  br label %bb117
}

; alloc::str::join_generic_copy::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17ha6327d538071cc07E"(i64* align 8 %_1.0, i64 %_1.1, i64 %n) unnamed_addr #0 {
start:
  %_4 = alloca { i64*, i64* }, align 8
  %_9.0 = bitcast i64* %_1.0 to [0 x { [0 x i8]*, i64 }]*
; call core::slice::<impl [T]>::iter
  %0 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h5dcc0b0d82b85643E"([0 x { [0 x i8]*, i64 }]* align 8 %_9.0, i64 %_1.1)
  %_5.0 = extractvalue { i64*, i64* } %0, 0
  %_5.1 = extractvalue { i64*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::map
  %1 = call { i64*, i64* } @_ZN4core4iter6traits8iterator8Iterator3map17h7360642be143fe78E(i64* %_5.0, i64* %_5.1)
  store { i64*, i64* } %1, { i64*, i64* }* %_4, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold
  %2 = call { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17h632cd1c3cab99aa2E"({ i64*, i64* }* align 8 %_4, i64 %n)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1
  ret { i64, i64 } %6
}

; alloc::str::join_generic_copy::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17hd1102509c0a24d83E"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_1, { [0 x i8]*, i64 }* align 8 %it) unnamed_addr #0 {
start:
; call <&T as core::borrow::Borrow<T>>::borrow
  %0 = call { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h9575a5f3ea6710f4E"({ [0 x i8]*, i64 }* align 8 %it)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
  %1 = call { [0 x i8]*, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17hbef027012ee3fabaE"([0 x i8]* align 1 %_5.0, i64 %_5.1)
  %it.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %it.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::slice::<impl [T]>::as_ptr
  %_8 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h3b354085a3fa771eE"([0 x i8]* align 1 %it.0, i64 %it.1)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::ptr::const_ptr::<impl *const T>::cast
  %_7 = call i8* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hf0f98e673ea408d7E"(i8* %_8)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::slice::raw::from_raw_parts
  %2 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17h4bbd686b0cbff399E(i8* %_7, i64 %it.1)
  %3 = extractvalue { [0 x i8]*, i64 } %2, 0
  %4 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %3, 0
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1
  ret { [0 x i8]*, i64 } %6
}

; alloc::str::join_generic_copy::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h07bb08ee0434a13fE"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* align 1 %_1, { [0 x i8]*, i64 }* align 8 %s) unnamed_addr #0 {
start:
; call <&T as core::borrow::Borrow<T>>::borrow
  %0 = call { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h9575a5f3ea6710f4E"({ [0 x i8]*, i64 }* align 8 %s)
  %_6.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
  %1 = call { [0 x i8]*, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17hbef027012ee3fabaE"([0 x i8]* align 1 %_6.0, i64 %_6.1)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %_4.1
}

; alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h4b6b67ee4f32cf84E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %_2 = alloca %"alloc::vec::Vec<u8>", align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !3, !align !4, !noundef !3
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
  call void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17h3579b888b3b0b21eE"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %_2, [0 x i8]* align 1 %_4.0, i64 %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h4dede8ec7c703ed6E(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"alloc::vec::Vec<u8>"* %_2)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::str::<impl alloc::slice::Join<&str> for [S]>::join
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3str75_$LT$impl$u20$alloc..slice..Join$LT$$RF$str$GT$$u20$for$u20$$u5b$S$u5d$$GT$4join17h4a161746594cbeb3E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1, [0 x i8]* align 1 %sep.0, i64 %sep.1) unnamed_addr #1 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %_3 = alloca %"alloc::vec::Vec<u8>", align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %sep.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %sep.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !3, !align !4, !noundef !3
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_6.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::str::join_generic_copy
  call void @_ZN5alloc3str17join_generic_copy17he0ca7637920dad15E(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %_3, [0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1, [0 x i8]* align 1 %_6.0, i64 %_6.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h4dede8ec7c703ed6E(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"alloc::vec::Vec<u8>"* %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::vec::Vec<T>::with_capacity
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h67ed10aeff11f1acE"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, i64 %capacity) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::with_capacity_in
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h4a21aa8416c0e571E"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, i64 %capacity)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T>::with_capacity
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hd1a4fbc665cd3c7aE"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, i64 %capacity) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::with_capacity_in
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h207b68c9119d35caE"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, i64 %capacity)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h0862bd97ec3cb98aE"(%"alloc::vec::Vec<_ProbeNode>"* sret(%"alloc::vec::Vec<_ProbeNode>") %0) unnamed_addr #0 {
start:
  %_1.0 = load i64*, i64** getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i64*, i64 }*), i32 0, i32 0), align 8, !nonnull !3, !noundef !3
  %_1.1 = load i64, i64* getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i64*, i64 }*), i32 0, i32 1), align 8
  %1 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %0 to { i64*, i64 }*
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  store i64* %_1.0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 %_1.1, i64* %3, align 8
  %4 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %0, i32 0, i32 1
  store i64 0, i64* %4, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h9a950cc54e92afa7E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* sret(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>") %0) unnamed_addr #0 {
start:
  %_1.0 = load i64*, i64** getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i64*, i64 }*), i32 0, i32 0), align 8, !nonnull !3, !noundef !3
  %_1.1 = load i64, i64* getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i64*, i64 }*), i32 0, i32 1), align 8
  %1 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %0 to { i64*, i64 }*
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  store i64* %_1.0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 %_1.1, i64* %3, align 8
  %4 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %0, i32 0, i32 1
  store i64 0, i64* %4, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hbcec205d23fa69faE"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0) unnamed_addr #0 {
start:
  %_1.0 = load i64*, i64** getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i64*, i64 }*), i32 0, i32 0), align 8, !nonnull !3, !noundef !3
  %_1.1 = load i64, i64* getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i64*, i64 }*), i32 0, i32 1), align 8
  %1 = bitcast %"alloc::vec::Vec<&str>"* %0 to { i64*, i64 }*
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  store i64* %_1.0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 %_1.1, i64* %3, align 8
  %4 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %0, i32 0, i32 1
  store i64 0, i64* %4, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hfb7ed548d6cdb712E"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0) unnamed_addr #0 {
start:
  %_1.0 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i8*, i64 }*), i32 0, i32 0), align 8, !nonnull !3, !noundef !3
  %_1.1 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i8*, i64 }*), i32 0, i32 1), align 8
  %1 = bitcast %"alloc::vec::Vec<u8>"* %0 to { i8*, i64 }*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  store i8* %_1.0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  store i64 %_1.1, i64* %3, align 8
  %4 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %0, i32 0, i32 1
  store i64 0, i64* %4, align 8
  ret void
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h197f6d120c9fd40bE"(%"alloc::vec::Vec<&str>"* align 8 %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call { [0 x i8]*, i64 }* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hf8bba98429f7c0a6E"({ i64*, i64 }* align 8 %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h68fb6838fe63e5a2E"({ [0 x i8]*, i64 }* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret { [0 x i8]*, i64 }* %ptr
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h5cd4c5ebc3d00fd3E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hac6d33c3986761f1E"({ i64*, i64 }* align 8 %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hb303bc2295cae1f1E"(%"alloc::vec::Vec<_ProbeNode>"* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::vec::Vec<_ProbeNode>"* %ptr
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hb8dd395c40cf84b5E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hf10bd1fca7000351E"({ i8*, i64 }* align 8 %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha52556d6f760bcbeE"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %ptr
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %_ProbeNode* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hd9e6e84d30f9236bE"(%"alloc::vec::Vec<_ProbeNode>"* align 8 %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call %_ProbeNode* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hd21855c159d16e07E"({ i64*, i64 }* align 8 %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1c5791dd72ff3228E"(%_ProbeNode* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %_ProbeNode* %ptr
}

; alloc::vec::Vec<T,A>::append_elements
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17hb12f1c001b5e5bd2E"(%"alloc::vec::Vec<u8>"* align 8 %self, [0 x i8]* %other.0, i64 %other.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h73c701a30dcae69aE"(%"alloc::vec::Vec<u8>"* align 8 %self, i64 %other.1)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::len
  %len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h3ae54f974232fb25E"(%"alloc::vec::Vec<u8>"* align 8 %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_11 = bitcast [0 x i8]* %other.0 to i8*
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_14 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hb8dd395c40cf84b5E"(%"alloc::vec::Vec<u8>"* align 8 %self)
  br label %bb3

bb3:                                              ; preds = %bb2
  %1 = getelementptr inbounds i8, i8* %_14, i64 %len
  store i8* %1, i8** %0, align 8
  %_3.i = load i8*, i8** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h38d13445a63b4b98E(i8* %_11, i8* %_3.i, i64 %other.1)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %other.1
  store i64 %5, i64* %2, align 8
  ret void
}

; alloc::vec::Vec<T,A>::extend_desugared
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17h66c1b86bd490ba67E"(%"alloc::vec::Vec<&str>"* align 8 %self, %"core::str::iter::Split<&str>"* %iterator) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_30 = alloca i8, align 1
  %_14 = alloca { i64, { i64, i64 } }, align 8
  %_3 = alloca { i8*, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %bb14, %start
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf96ea85dee7c4f28E"(%"core::str::iter::Split<&str>"* align 8 %iterator)
          to label %bb2 unwind label %cleanup

bb18:                                             ; preds = %bb20, %bb21, %cleanup
  br label %bb19

cleanup:                                          ; preds = %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb18

bb2:                                              ; preds = %bb1
  store { i8*, i64 } %3, { i8*, i64 }* %_3, align 8
  %9 = bitcast { i8*, i64 }* %_3 to {}**
  %10 = load {}*, {}** %9, align 8
  %11 = icmp eq {}* %10, null
  %_5 = select i1 %11, i64 0, i64 1
  %12 = icmp eq i64 %_5, 1
  br i1 %12, label %bb3, label %bb15

bb3:                                              ; preds = %bb2
  store i8 1, i8* %_30, align 1
  %13 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 0
  %element.0 = load [0 x i8]*, [0 x i8]** %14, align 8, !nonnull !3, !align !4, !noundef !3
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 1
  %element.1 = load i64, i64* %15, align 8
; invoke alloc::vec::Vec<T,A>::len
  %len = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hc8b52f87df8139edE"(%"alloc::vec::Vec<&str>"* align 8 %self)
          to label %bb4 unwind label %cleanup1

bb15:                                             ; preds = %bb2
  br label %bb16

bb16:                                             ; preds = %bb15
  br label %bb17

bb17:                                             ; preds = %bb16
  ret void

bb21:                                             ; preds = %cleanup1
  %16 = load i8, i8* %_30, align 1, !range !2, !noundef !3
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb20, label %bb18

cleanup1:                                         ; preds = %bb13, %bb12, %bb10, %bb8, %bb6, %bb4, %bb3
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb21

bb4:                                              ; preds = %bb3
; invoke alloc::vec::Vec<T,A>::capacity
  %_11 = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17h3ccd2b39c91eae97E"(%"alloc::vec::Vec<&str>"* align 8 %self)
          to label %bb5 unwind label %cleanup1

bb5:                                              ; preds = %bb4
  %_9 = icmp eq i64 %len, %_11
  br i1 %_9, label %bb6, label %bb10

bb10:                                             ; preds = %bb9, %bb5
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_22 = invoke { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h197f6d120c9fd40bE"(%"alloc::vec::Vec<&str>"* align 8 %self)
          to label %bb11 unwind label %cleanup1

bb6:                                              ; preds = %bb5
; invoke core::iter::traits::iterator::Iterator::size_hint
  invoke void @_ZN4core4iter6traits8iterator8Iterator9size_hint17h5a0d6300c820b1a6E({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %_14, %"core::str::iter::Split<&str>"* align 8 %iterator)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
  %23 = bitcast { i64, { i64, i64 } }* %_14 to i64*
  %lower = load i64, i64* %23, align 8
  %24 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1)
  store i64 %24, i64* %1, align 8
  %25 = load i64, i64* %1, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h5558f686e5eac3a2E"(%"alloc::vec::Vec<&str>"* align 8 %self, i64 %25)
          to label %bb9 unwind label %cleanup1

bb9:                                              ; preds = %bb8
  br label %bb10

bb11:                                             ; preds = %bb10
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_22, i64 %len
  store { [0 x i8]*, i64 }* %26, { [0 x i8]*, i64 }** %0, align 8
  %_3.i = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %0, align 8
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hf6e58c511aad2640E.exit"

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hf6e58c511aad2640E.exit": ; preds = %bb11
  br label %bb12

bb12:                                             ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hf6e58c511aad2640E.exit"
  store i8 0, i8* %_30, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h99d4dee62def0415E({ [0 x i8]*, i64 }* %_3.i, [0 x i8]* align 1 %element.0, i64 %element.1)
          to label %bb13 unwind label %cleanup1

bb13:                                             ; preds = %bb12
  %_28 = add i64 %len, 1
; invoke alloc::vec::Vec<T,A>::set_len
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h5576cbaa08133531E"(%"alloc::vec::Vec<&str>"* align 8 %self, i64 %_28)
          to label %bb14 unwind label %cleanup1

bb14:                                             ; preds = %bb13
  br label %bb1

bb20:                                             ; preds = %bb21
  br label %bb18

bb19:                                             ; preds = %bb18
  %27 = bitcast { i8*, i32 }* %2 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = insertvalue { i8*, i32 } undef, i8* %28, 0
  %32 = insertvalue { i8*, i32 } %31, i32 %30, 1
  resume { i8*, i32 } %32
}

; alloc::vec::Vec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h207b68c9119d35caE"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, i64 %capacity) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %1 = call { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17he3531d83efcbf103E"(i64 %capacity)
  %_3.0 = extractvalue { i8*, i64 } %1, 0
  %_3.1 = extractvalue { i8*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"alloc::vec::Vec<u8>"* %0 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_3.0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_3.1, i64* %4, align 8
  %5 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  ret void
}

; alloc::vec::Vec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h4a21aa8416c0e571E"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, i64 %capacity) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %1 = call { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17he1765080ab3af11fE"(i64 %capacity)
  %_3.0 = extractvalue { i64*, i64 } %1, 0
  %_3.1 = extractvalue { i64*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"alloc::vec::Vec<&str>"* %0 to { i64*, i64 }*
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  store i64* %_3.0, i64** %3, align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %_3.1, i64* %4, align 8
  %5 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  ret void
}

; alloc::vec::Vec<T,A>::extend_from_slice
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h58d31a581d226929E"(%"alloc::vec::Vec<u8>"* align 8 %self, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
; call core::slice::<impl [T]>::iter
  %0 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hda61e05ab0dfd22eE"([0 x i8]* align 1 %other.0, i64 %other.1)
  %_4.0 = extractvalue { i8*, i8* } %0, 0
  %_4.1 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17h0ed7dfebe6849a3eE"(%"alloc::vec::Vec<u8>"* align 8 %self, i8* %_4.0, i8* %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::vec::Vec<T,A>::spare_capacity_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17h79e44ca8d34f4947E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8*, align 8
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_7 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hb8dd395c40cf84b5E"(%"alloc::vec::Vec<u8>"* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds i8, i8* %_7, i64 %_9
  store i8* %3, i8** %1, align 8
  %_3.i = load i8*, i8** %1, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_12 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_12, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %0, align 8
  %6 = load i64, i64* %0, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_13 = load i64, i64* %7, align 8
  %_10 = sub i64 %6, %_13
; call core::slice::raw::from_raw_parts_mut
  %8 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hb9089ff2faaa3dc1E(i8* %_3.i, i64 %_10)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %10
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h1cbb675179debfa2E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h3ae54f974232fb25E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hc8b52f87df8139edE"(%"alloc::vec::Vec<&str>"* align 8 %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h813986a49bd7a449E"(%"alloc::vec::Vec<u8>"* align 8 %self, i8 %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  store i8 1, i8* %_17, align 1
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %3, align 8
  %_6 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %0, align 8
  %6 = load i64, i64* %0, align 8
  br label %bb1

bb10:                                             ; preds = %cleanup
  %7 = load i8, i8* %_17, align 1, !range !2, !noundef !3
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb8

cleanup:                                          ; preds = %bb6, %bb4, %bb2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb10

bb1:                                              ; preds = %start
  %_3 = icmp eq i64 %_4, %6
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb1
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_11 = invoke i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hb8dd395c40cf84b5E"(%"alloc::vec::Vec<u8>"* align 8 %self)
          to label %bb5 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_8 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
  %14 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %14, align 8
; invoke alloc::raw_vec::RawVec<T,A>::reserve_for_push
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h963efc0dd5d090e6E"({ i8*, i64 }* align 8 %_8, i64 %_9)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br label %bb4

bb5:                                              ; preds = %bb4
  %15 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_13 = load i64, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %_11, i64 %_13
  store i8* %16, i8** %1, align 8
  %_3.i = load i8*, i8** %1, align 8
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1a1a16fbd7c0a299E.exit"

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1a1a16fbd7c0a299E.exit": ; preds = %bb5
  br label %bb6

bb6:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1a1a16fbd7c0a299E.exit"
  store i8 0, i8* %_17, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17ha7f34f9a753f95ffE(i8* %_3.i, i8 %value)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %17 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %18 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %17, align 8
  ret void

bb8:                                              ; preds = %bb9, %bb10
  %21 = bitcast { i8*, i32 }* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26

bb9:                                              ; preds = %bb10
  br label %bb8
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hb04276d4d119158bE"(%"alloc::vec::Vec<_ProbeNode>"* align 8 %self, %_ProbeNode* %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca %_ProbeNode*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  %_16 = alloca %_ProbeNode, align 8
  store i8 1, i8* %_17, align 1
  %3 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %3, align 8
  %_6 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %self to { i64*, i64 }*
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %0, align 8
  %6 = load i64, i64* %0, align 8
  br label %bb1

bb10:                                             ; preds = %cleanup
  %7 = load i8, i8* %_17, align 1, !range !2, !noundef !3
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb8

cleanup:                                          ; preds = %bb6, %bb4, %bb2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb10

bb1:                                              ; preds = %start
  %_3 = icmp eq i64 %_4, %6
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb1
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_11 = invoke %_ProbeNode* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hd9e6e84d30f9236bE"(%"alloc::vec::Vec<_ProbeNode>"* align 8 %self)
          to label %bb5 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_8 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %self to { i64*, i64 }*
  %14 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %14, align 8
; invoke alloc::raw_vec::RawVec<T,A>::reserve_for_push
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17ha4b1ee5c391faad3E"({ i64*, i64 }* align 8 %_8, i64 %_9)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br label %bb4

bb5:                                              ; preds = %bb4
  %15 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %self, i32 0, i32 1
  %_13 = load i64, i64* %15, align 8
  %16 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %_11, i64 %_13
  store %_ProbeNode* %16, %_ProbeNode** %1, align 8
  %_3.i = load %_ProbeNode*, %_ProbeNode** %1, align 8
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd498c180f389e4b1E.exit"

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd498c180f389e4b1E.exit": ; preds = %bb5
  br label %bb6

bb6:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd498c180f389e4b1E.exit"
  store i8 0, i8* %_17, align 1
  %17 = bitcast %_ProbeNode* %_16 to i8*
  %18 = bitcast %_ProbeNode* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 88, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h85c4fc776774606aE(%_ProbeNode* %_3.i, %_ProbeNode* %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %19 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %self, i32 0, i32 1
  %20 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %self, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %19, align 8
  ret void

bb8:                                              ; preds = %bb9, %bb10
  %23 = bitcast { i8*, i32 }* %2 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb9:                                              ; preds = %bb10
; invoke core::ptr::drop_in_place<probe_RSE::_ProbeNode>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$probe_RSE.._ProbeNode$GT$17h40252f76163ae8d0E"(%_ProbeNode* %value) #17
          to label %bb8 unwind label %abort

abort:                                            ; preds = %bb9
  %29 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hd0105c6a79d9cd45E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %self, %"alloc::vec::Vec<_ProbeNode>"* %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca %"alloc::vec::Vec<_ProbeNode>"*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  %_16 = alloca %"alloc::vec::Vec<_ProbeNode>", align 8
  store i8 1, i8* %_17, align 1
  %3 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %3, align 8
  %_6 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self to { i64*, i64 }*
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %0, align 8
  %6 = load i64, i64* %0, align 8
  br label %bb1

bb10:                                             ; preds = %cleanup
  %7 = load i8, i8* %_17, align 1, !range !2, !noundef !3
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb8

cleanup:                                          ; preds = %bb6, %bb4, %bb2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb10

bb1:                                              ; preds = %start
  %_3 = icmp eq i64 %_4, %6
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb1
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_11 = invoke %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h5cd4c5ebc3d00fd3E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %self)
          to label %bb5 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_8 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self to { i64*, i64 }*
  %14 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %14, align 8
; invoke alloc::raw_vec::RawVec<T,A>::reserve_for_push
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h866d3c360f02615fE"({ i64*, i64 }* align 8 %_8, i64 %_9)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br label %bb4

bb5:                                              ; preds = %bb4
  %15 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %_13 = load i64, i64* %15, align 8
  %16 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %_11, i64 %_13
  store %"alloc::vec::Vec<_ProbeNode>"* %16, %"alloc::vec::Vec<_ProbeNode>"** %1, align 8
  %_3.i = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %1, align 8
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h0373b0cee38fe20aE.exit"

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h0373b0cee38fe20aE.exit": ; preds = %bb5
  br label %bb6

bb6:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h0373b0cee38fe20aE.exit"
  store i8 0, i8* %_17, align 1
  %17 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %_16 to i8*
  %18 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hde5b50688730c5daE(%"alloc::vec::Vec<_ProbeNode>"* %_3.i, %"alloc::vec::Vec<_ProbeNode>"* %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %19 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %20 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %19, align 8
  ret void

bb8:                                              ; preds = %bb9, %bb10
  %23 = bitcast { i8*, i32 }* %2 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb9:                                              ; preds = %bb10
; invoke core::ptr::drop_in_place<alloc::vec::Vec<probe_RSE::_ProbeNode>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$17h3e5a72bfbebb33cbE"(%"alloc::vec::Vec<_ProbeNode>"* %value) #17
          to label %bb8 unwind label %abort

abort:                                            ; preds = %bb9
  %29 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h36c88e927925f111E"(%"alloc::vec::Vec<&str>"* align 8 %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call { [0 x i8]*, i64 }* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hf8bba98429f7c0a6E"({ i64*, i64 }* align 8 %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h68fb6838fe63e5a2E"({ [0 x i8]*, i64 }* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret { [0 x i8]*, i64 }* %ptr
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h3c56131cdf3fc8d4E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hf10bd1fca7000351E"({ i8*, i64 }* align 8 %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha52556d6f760bcbeE"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %ptr
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %_ProbeNode* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hb7801951afae94c1E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::vec::Vec<_ProbeNode>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call %_ProbeNode* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hd21855c159d16e07E"({ i64*, i64 }* align 8 %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1c5791dd72ff3228E"(%_ProbeNode* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %_ProbeNode* %ptr
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hecd0bdacad2d730cE"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hac6d33c3986761f1E"({ i64*, i64 }* align 8 %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hb303bc2295cae1f1E"(%"alloc::vec::Vec<_ProbeNode>"* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::vec::Vec<_ProbeNode>"* %ptr
}

; alloc::vec::Vec<T,A>::remove
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove17h9d141d440282a308E"(%"alloc::vec::Vec<&str>"* align 8 %self, i64 %index, %"core::panic::location::Location"* align 8 %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { [0 x i8]*, i64 }*, align 8
  %2 = alloca { [0 x i8]*, i64 }*, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_31 = alloca i8, align 1
  store i8 0, i8* %_31, align 1
; call alloc::vec::Vec<T,A>::len
  %len = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hc8b52f87df8139edE"(%"alloc::vec::Vec<&str>"* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_5 = icmp uge i64 %index, %len
  br i1 %_5, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_12 = invoke { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h197f6d120c9fd40bE"(%"alloc::vec::Vec<&str>"* align 8 %self)
          to label %bb4 unwind label %cleanup

bb2:                                              ; preds = %bb1
; call alloc::vec::Vec<T,A>::remove::assert_failed
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove13assert_failed17hf3aab60f071315a7E"(i64 %index, i64 %len, %"core::panic::location::Location"* align 8 %0) #16
  unreachable

bb12:                                             ; preds = %cleanup
  %4 = load i8, i8* %_31, align 1, !range !2, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb11, label %bb10

cleanup:                                          ; preds = %bb8, %bb7, %bb5, %bb3
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb12

bb4:                                              ; preds = %bb3
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i64 %index
  store { [0 x i8]*, i64 }* %11, { [0 x i8]*, i64 }** %2, align 8
  %_3.i = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %2, align 8
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hf6e58c511aad2640E.exit"

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hf6e58c511aad2640E.exit": ; preds = %bb4
  br label %bb5

bb5:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hf6e58c511aad2640E.exit"
; invoke core::ptr::read
  %12 = invoke { [0 x i8]*, i64 } @_ZN4core3ptr4read17h9d1cea0c38a6c272E({ [0 x i8]*, i64 }* %_3.i)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_15.0 = extractvalue { [0 x i8]*, i64 } %12, 0
  %_15.1 = extractvalue { [0 x i8]*, i64 } %12, 1
  store i8 1, i8* %_31, align 1
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_3.i, i64 1
  store { [0 x i8]*, i64 }* %13, { [0 x i8]*, i64 }** %1, align 8
  %_3.i1 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %1, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  %_24 = sub i64 %len, %index
  %_23 = sub i64 %_24, 1
; invoke core::intrinsics::copy
  invoke void @_ZN4core10intrinsics4copy17h094c89a71b125d95E({ [0 x i8]*, i64 }* %_3.i1, { [0 x i8]*, i64 }* %_3.i, i64 %_23)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  %_29 = sub i64 %len, 1
; invoke alloc::vec::Vec<T,A>::set_len
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h5576cbaa08133531E"(%"alloc::vec::Vec<&str>"* align 8 %self, i64 %_29)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_15.0, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %_15.1, 1
  ret { [0 x i8]*, i64 } %15

bb10:                                             ; preds = %bb11, %bb12
  %16 = bitcast { i8*, i32 }* %3 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb11:                                             ; preds = %bb12
  br label %bb10
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h5558f686e5eac3a2E"(%"alloc::vec::Vec<&str>"* align 8 %self, i64 %additional) unnamed_addr #1 {
start:
  %_4 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hdb77d2b46f6cf6d2E"({ i64*, i64 }* align 8 %_4, i64 %_5, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h73c701a30dcae69aE"(%"alloc::vec::Vec<u8>"* align 8 %self, i64 %additional) unnamed_addr #1 {
start:
  %_4 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h651a33896276f2bfE"({ i8*, i64 }* align 8 %_4, i64 %_5, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T,A>::set_len
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h3ba64e3882673c7dE"(%"alloc::vec::Vec<u8>"* align 8 %self, i64 %new_len) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  store i64 %new_len, i64* %0, align 8
  ret void
}

; alloc::vec::Vec<T,A>::set_len
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h5576cbaa08133531E"(%"alloc::vec::Vec<&str>"* align 8 %self, i64 %new_len) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1
  store i64 %new_len, i64* %0, align 8
  ret void
}

; alloc::vec::Vec<T,A>::capacity
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17h3ccd2b39c91eae97E"(%"alloc::vec::Vec<&str>"* align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_2 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_2, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %3
}

; alloc::sync::Arc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h31614ad06258ca02E"(i64* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %1
}

; alloc::sync::Arc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h8ce276823678ba9bE"(i64* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %1
}

; alloc::sync::Arc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17hbde1ab30db67843cE"(i64* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %1
}

; alloc::sync::Arc<T>::get_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 %_ProbeSemaphore* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h36e51e951e221ab4E"(i64** align 8 %this) unnamed_addr #0 {
start:
  %_6 = load i64*, i64** %this, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h045696f7015da1fbE"(i64* %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds %"alloc::sync::ArcInner<_ProbeSemaphore>", %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_5, i32 0, i32 2
  ret %_ProbeSemaphore* %_4
}

; alloc::sync::Arc<T>::get_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h7e361e49504099a3E"(i64** align 8 %this) unnamed_addr #0 {
start:
  %_6 = load i64*, i64** %this, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h566cc3b78e934cc0E"(i64* %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_5, i32 0, i32 2
  ret %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_4
}

; alloc::sync::Arc<T>::get_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17hf6d97f3b43c7b245E"(i64** align 8 %this) unnamed_addr #0 {
start:
  %_6 = load i64*, i64** %this, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb0b277d2cfc6cbefE"(i64* %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_5, i32 0, i32 2
  ret %"std::sync::mutex::Mutex<std::fs::File>"* %_4
}

; alloc::sync::Arc<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h3d0a86f7d6e78af7E"(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %data) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_11 = alloca i8, align 1
  %_6 = alloca %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", align 8
  %_5 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_4 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_3 = alloca %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>", align 8
  store i8 1, i8* %_11, align 1
; invoke core::sync::atomic::AtomicUsize::new
  %4 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17hfeb4c8df9df571b4E(i64 1)
          to label %bb1 unwind label %cleanup

bb9:                                              ; preds = %cleanup.body
  %5 = load i8, i8* %_11, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb8, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup.body

cleanup.body:                                     ; preds = %bb3.i, %cleanup
  %eh.lpad-body = phi { i8*, i32 } [ %7, %cleanup ], [ %39, %bb3.i ]
  %8 = extractvalue { i8*, i32 } %eh.lpad-body, 0
  %9 = extractvalue { i8*, i32 } %eh.lpad-body, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb9

bb1:                                              ; preds = %start
  store i64 %4, i64* %2, align 8
  %12 = bitcast %"core::sync::atomic::AtomicUsize"* %_4 to i8*
  %13 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 8, i1 false)
; invoke core::sync::atomic::AtomicUsize::new
  %14 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17hfeb4c8df9df571b4E(i64 1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i64 %14, i64* %1, align 8
  %15 = bitcast %"core::sync::atomic::AtomicUsize"* %_5 to i8*
  %16 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 8, i1 false)
  store i8 0, i8* %_11, align 1
  %17 = bitcast %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_6 to i8*
  %18 = bitcast %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false)
  %19 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_3 to %"core::sync::atomic::AtomicUsize"*
  %20 = bitcast %"core::sync::atomic::AtomicUsize"* %19 to i8*
  %21 = bitcast %"core::sync::atomic::AtomicUsize"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 8, i1 false)
  %22 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_3, i32 0, i32 1
  %23 = bitcast %"core::sync::atomic::AtomicUsize"* %22 to i8*
  %24 = bitcast %"core::sync::atomic::AtomicUsize"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 8, i1 false)
  %25 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_3, i32 0, i32 2
  %26 = bitcast %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %25 to i8*
  %27 = bitcast %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 32, i1 false)
; invoke alloc::alloc::exchange_malloc
  %_4.i = invoke i8* @_ZN5alloc5alloc15exchange_malloc17hd827dc6d52e80d04E(i64 48, i64 8)
          to label %"_ZN5alloc5boxed12Box$LT$T$GT$3new17hf588fb684e625eafE.exit" unwind label %cleanup.i

cleanup.i:                                        ; preds = %bb2
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %30, i32* %32, align 8
; invoke core::ptr::drop_in_place<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>>
  invoke void @"_ZN4core3ptr148drop_in_place$LT$alloc..sync..ArcInner$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$$GT$17h739ea2d489486dc7E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_3) #17
          to label %bb3.i unwind label %abort.i

abort.i:                                          ; preds = %cleanup.i
  %33 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb3.i:                                            ; preds = %cleanup.i
  %34 = bitcast { i8*, i32 }* %0 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  br label %cleanup.body

"_ZN5alloc5boxed12Box$LT$T$GT$3new17hf588fb684e625eafE.exit": ; preds = %bb2
  %40 = bitcast i8* %_4.i to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"*
  %41 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %40 to i64*
  %42 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %_4.i, i8* align 8 %42, i64 48, i1 false)
  br label %bb3

bb3:                                              ; preds = %"_ZN5alloc5boxed12Box$LT$T$GT$3new17hf588fb684e625eafE.exit"
; invoke alloc::boxed::Box<T,A>::leak
  %_9 = invoke align 8 %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h79314540f0e22b81E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* align 8 %40)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke <T as core::convert::Into<U>>::into
  %_7 = invoke i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3b1eb49cdbd1df1cE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* align 8 %_9)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke alloc::sync::Arc<T>::from_inner
  %43 = invoke i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h8ce276823678ba9bE"(i64* %_7)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  ret i64* %43

bb7:                                              ; preds = %bb8, %bb9
  %44 = bitcast { i8*, i32 }* %3 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = insertvalue { i8*, i32 } undef, i8* %45, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

bb8:                                              ; preds = %bb9
; invoke core::ptr::drop_in_place<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>
  invoke void @"_ZN4core3ptr119drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$17h8c7a080fc28f025cE"(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %data) #17
          to label %bb7 unwind label %abort

abort:                                            ; preds = %bb8
  %50 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable
}

; alloc::sync::Arc<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h40165cb1adccfe5dE"(%"std::sync::mutex::Mutex<std::fs::File>"* %data) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_11 = alloca i8, align 1
  %_6 = alloca %"std::sync::mutex::Mutex<std::fs::File>", align 4
  %_5 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_4 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_3 = alloca %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", align 8
  store i8 1, i8* %_11, align 1
; invoke core::sync::atomic::AtomicUsize::new
  %4 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17hfeb4c8df9df571b4E(i64 1)
          to label %bb1 unwind label %cleanup

bb9:                                              ; preds = %cleanup.body
  %5 = load i8, i8* %_11, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb8, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup.body

cleanup.body:                                     ; preds = %bb3.i, %cleanup
  %eh.lpad-body = phi { i8*, i32 } [ %7, %cleanup ], [ %39, %bb3.i ]
  %8 = extractvalue { i8*, i32 } %eh.lpad-body, 0
  %9 = extractvalue { i8*, i32 } %eh.lpad-body, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb9

bb1:                                              ; preds = %start
  store i64 %4, i64* %2, align 8
  %12 = bitcast %"core::sync::atomic::AtomicUsize"* %_4 to i8*
  %13 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 8, i1 false)
; invoke core::sync::atomic::AtomicUsize::new
  %14 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17hfeb4c8df9df571b4E(i64 1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i64 %14, i64* %1, align 8
  %15 = bitcast %"core::sync::atomic::AtomicUsize"* %_5 to i8*
  %16 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 8, i1 false)
  store i8 0, i8* %_11, align 1
  %17 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %_6 to i8*
  %18 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 12, i1 false)
  %19 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_3 to %"core::sync::atomic::AtomicUsize"*
  %20 = bitcast %"core::sync::atomic::AtomicUsize"* %19 to i8*
  %21 = bitcast %"core::sync::atomic::AtomicUsize"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 8, i1 false)
  %22 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_3, i32 0, i32 1
  %23 = bitcast %"core::sync::atomic::AtomicUsize"* %22 to i8*
  %24 = bitcast %"core::sync::atomic::AtomicUsize"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 8, i1 false)
  %25 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_3, i32 0, i32 2
  %26 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %25 to i8*
  %27 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 4 %27, i64 12, i1 false)
; invoke alloc::alloc::exchange_malloc
  %_4.i = invoke i8* @_ZN5alloc5alloc15exchange_malloc17hd827dc6d52e80d04E(i64 32, i64 8)
          to label %"_ZN5alloc5boxed12Box$LT$T$GT$3new17he15d6cf9dc91027cE.exit" unwind label %cleanup.i

cleanup.i:                                        ; preds = %bb2
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %30, i32* %32, align 8
; invoke core::ptr::drop_in_place<alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>>
  invoke void @"_ZN4core3ptr94drop_in_place$LT$alloc..sync..ArcInner$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$17h2f929af840b95f79E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_3) #17
          to label %bb3.i unwind label %abort.i

abort.i:                                          ; preds = %cleanup.i
  %33 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb3.i:                                            ; preds = %cleanup.i
  %34 = bitcast { i8*, i32 }* %0 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  br label %cleanup.body

"_ZN5alloc5boxed12Box$LT$T$GT$3new17he15d6cf9dc91027cE.exit": ; preds = %bb2
  %40 = bitcast i8* %_4.i to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"*
  %41 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %40 to i64*
  %42 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %_4.i, i8* align 8 %42, i64 32, i1 false)
  br label %bb3

bb3:                                              ; preds = %"_ZN5alloc5boxed12Box$LT$T$GT$3new17he15d6cf9dc91027cE.exit"
; invoke alloc::boxed::Box<T,A>::leak
  %_9 = invoke align 8 %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hc3ba1fc5356ebba0E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* align 8 %40)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke <T as core::convert::Into<U>>::into
  %_7 = invoke i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h4891cb2b511f81ffE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* align 8 %_9)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke alloc::sync::Arc<T>::from_inner
  %43 = invoke i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17hbde1ab30db67843cE"(i64* %_7)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  ret i64* %43

bb7:                                              ; preds = %bb8, %bb9
  %44 = bitcast { i8*, i32 }* %3 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = insertvalue { i8*, i32 } undef, i8* %45, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

bb8:                                              ; preds = %bb9
; invoke core::ptr::drop_in_place<std::sync::mutex::Mutex<std::fs::File>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$17h778bf46131b5f04cE"(%"std::sync::mutex::Mutex<std::fs::File>"* %data) #17
          to label %bb7 unwind label %abort

abort:                                            ; preds = %bb8
  %50 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable
}

; alloc::sync::Arc<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17hc87f7c4362180a92E"(%_ProbeSemaphore* %data) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_11 = alloca i8, align 1
  %_6 = alloca %_ProbeSemaphore, align 4
  %_5 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_4 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_3 = alloca %"alloc::sync::ArcInner<_ProbeSemaphore>", align 8
  store i8 1, i8* %_11, align 1
; invoke core::sync::atomic::AtomicUsize::new
  %4 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17hfeb4c8df9df571b4E(i64 1)
          to label %bb1 unwind label %cleanup

bb9:                                              ; preds = %cleanup.body
  %5 = load i8, i8* %_11, align 1, !range !2, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb8, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup.body

cleanup.body:                                     ; preds = %cleanup.i, %cleanup
  %eh.lpad-body = phi { i8*, i32 } [ %7, %cleanup ], [ %38, %cleanup.i ]
  %8 = extractvalue { i8*, i32 } %eh.lpad-body, 0
  %9 = extractvalue { i8*, i32 } %eh.lpad-body, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb9

bb1:                                              ; preds = %start
  store i64 %4, i64* %2, align 8
  %12 = bitcast %"core::sync::atomic::AtomicUsize"* %_4 to i8*
  %13 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 8, i1 false)
; invoke core::sync::atomic::AtomicUsize::new
  %14 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17hfeb4c8df9df571b4E(i64 1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i64 %14, i64* %1, align 8
  %15 = bitcast %"core::sync::atomic::AtomicUsize"* %_5 to i8*
  %16 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 8, i1 false)
  store i8 0, i8* %_11, align 1
  %17 = bitcast %_ProbeSemaphore* %_6 to i8*
  %18 = bitcast %_ProbeSemaphore* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 16, i1 false)
  %19 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_3 to %"core::sync::atomic::AtomicUsize"*
  %20 = bitcast %"core::sync::atomic::AtomicUsize"* %19 to i8*
  %21 = bitcast %"core::sync::atomic::AtomicUsize"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 8, i1 false)
  %22 = getelementptr inbounds %"alloc::sync::ArcInner<_ProbeSemaphore>", %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_3, i32 0, i32 1
  %23 = bitcast %"core::sync::atomic::AtomicUsize"* %22 to i8*
  %24 = bitcast %"core::sync::atomic::AtomicUsize"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 8, i1 false)
  %25 = getelementptr inbounds %"alloc::sync::ArcInner<_ProbeSemaphore>", %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_3, i32 0, i32 2
  %26 = bitcast %_ProbeSemaphore* %25 to i8*
  %27 = bitcast %_ProbeSemaphore* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 4 %27, i64 16, i1 false)
; invoke alloc::alloc::exchange_malloc
  %_4.i = invoke i8* @_ZN5alloc5alloc15exchange_malloc17hd827dc6d52e80d04E(i64 32, i64 8)
          to label %"_ZN5alloc5boxed12Box$LT$T$GT$3new17h90af877c8ca54282E.exit" unwind label %cleanup.i

cleanup.i:                                        ; preds = %bb2
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %30, i32* %32, align 8
  %33 = bitcast { i8*, i32 }* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  br label %cleanup.body

"_ZN5alloc5boxed12Box$LT$T$GT$3new17h90af877c8ca54282E.exit": ; preds = %bb2
  %39 = bitcast i8* %_4.i to %"alloc::sync::ArcInner<_ProbeSemaphore>"*
  %40 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %39 to i64*
  %41 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %_4.i, i8* align 8 %41, i64 32, i1 false)
  br label %bb3

bb3:                                              ; preds = %"_ZN5alloc5boxed12Box$LT$T$GT$3new17h90af877c8ca54282E.exit"
; invoke alloc::boxed::Box<T,A>::leak
  %_9 = invoke align 8 %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h43d242c911b632d3E"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* align 8 %39)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke <T as core::convert::Into<U>>::into
  %_7 = invoke i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h87cbbda5a70a0126E"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* align 8 %_9)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke alloc::sync::Arc<T>::from_inner
  %42 = invoke i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h31614ad06258ca02E"(i64* %_7)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  ret i64* %42

bb7:                                              ; preds = %bb8, %bb9
  %43 = bitcast { i8*, i32 }* %3 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = insertvalue { i8*, i32 } undef, i8* %44, 0
  %48 = insertvalue { i8*, i32 } %47, i32 %46, 1
  resume { i8*, i32 } %48

bb8:                                              ; preds = %bb9
  br label %bb7
}

; alloc::sync::Arc<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h43d9ad4cb88caae3E"(i64** align 8 %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h379561a1be7e3775E"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %0
}

; alloc::sync::Arc<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17hbad6c5f4e8d1a003E"(i64** align 8 %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hce0c139c49c010dbE"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %0
}

; alloc::sync::Arc<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17hec1c270daa3983b2E"(i64** align 8 %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hfcef1f5b35309b73E"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %0
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h32b3073a5a51ccd8E"(i64** align 8 %self) unnamed_addr #2 {
start:
  %_7 = alloca i64*, align 8
; call alloc::sync::Arc<T>::get_mut_unchecked
  %_4 = call align 4 %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17hf6d97f3b43c7b245E"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<std::fs::File>>
  call void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$17h778bf46131b5f04cE"(%"std::sync::mutex::Mutex<std::fs::File>"* %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
  store i64* %_8, i64** %_7, align 8
  %0 = load i64*, i64** %_7, align 8, !nonnull !3, !noundef !3
; call core::mem::drop
  call void @_ZN4core3mem4drop17h283c059672eea75eE(i64* %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h67e85ffb4a124dd3E"(i64** align 8 %self) unnamed_addr #2 {
start:
  %_7 = alloca i64*, align 8
; call alloc::sync::Arc<T>::get_mut_unchecked
  %_4 = call align 4 %_ProbeSemaphore* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h36e51e951e221ab4E"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
  store i64* %_8, i64** %_7, align 8
  %0 = load i64*, i64** %_7, align 8, !nonnull !3, !noundef !3
; call core::mem::drop
  call void @_ZN4core3mem4drop17h35c8d34e771ae790E(i64* %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb4c65f94d4d469e3E"(i64** align 8 %self) unnamed_addr #2 {
start:
  %_7 = alloca i64*, align 8
; call alloc::sync::Arc<T>::get_mut_unchecked
  %_4 = call align 8 %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h7e361e49504099a3E"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>
  call void @"_ZN4core3ptr119drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$17h8c7a080fc28f025cE"(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
  store i64* %_8, i64** %_7, align 8
  %0 = load i64*, i64** %_7, align 8, !nonnull !3, !noundef !3
; call core::mem::drop
  call void @_ZN4core3mem4drop17hc0667d34842e4bc7E(i64* %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h59aef1d1899d1f28E"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  %_4 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h045696f7015da1fbE"(i64* %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17hf33bd1b80f870846E(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_7 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %ptr = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h045696f7015da1fbE"(i64* %_7)
  br label %bb5

bb3:                                              ; preds = %bb2
  %1 = bitcast { i64*, i8* }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %2 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8, !align !8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64*, i8* } undef, i64* %3, 0
  %7 = insertvalue { i64*, i8* } %6, i8* %5, 1
  ret { i64*, i8* } %7

bb5:                                              ; preds = %bb4
  %_9 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %ptr to %"core::sync::atomic::AtomicUsize"*
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<_ProbeSemaphore>", %"alloc::sync::ArcInner<_ProbeSemaphore>"* %ptr, i32 0, i32 1
  %8 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %10 = bitcast i64** %9 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %10, align 8
  %11 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3, !align !8, !noundef !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8, !nonnull !3, !align !8, !noundef !3
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 0
  store i64* %13, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 1
  store i64* %15, i64** %17, align 8
  br label %bb6
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h61927d49d0c6b123E"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  %_4 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h566cc3b78e934cc0E"(i64* %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17ha8d812776dd36460E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_7 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %ptr = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h566cc3b78e934cc0E"(i64* %_7)
  br label %bb5

bb3:                                              ; preds = %bb2
  %1 = bitcast { i64*, i8* }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %2 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8, !align !8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64*, i8* } undef, i64* %3, 0
  %7 = insertvalue { i64*, i8* } %6, i8* %5, 1
  ret { i64*, i8* } %7

bb5:                                              ; preds = %bb4
  %_9 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %ptr to %"core::sync::atomic::AtomicUsize"*
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %ptr, i32 0, i32 1
  %8 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %10 = bitcast i64** %9 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %10, align 8
  %11 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3, !align !8, !noundef !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8, !nonnull !3, !align !8, !noundef !3
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 0
  store i64* %13, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 1
  store i64* %15, i64** %17, align 8
  br label %bb6
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17ha380f2b0cb261049E"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  %_4 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb0b277d2cfc6cbefE"(i64* %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17hb3bd8cc56e409650E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_7 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %ptr = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb0b277d2cfc6cbefE"(i64* %_7)
  br label %bb5

bb3:                                              ; preds = %bb2
  %1 = bitcast { i64*, i8* }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %2 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8, !align !8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64*, i8* } undef, i64* %3, 0
  %7 = insertvalue { i64*, i8* } %6, i8* %5, 1
  ret { i64*, i8* } %7

bb5:                                              ; preds = %bb4
  %_9 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %ptr to %"core::sync::atomic::AtomicUsize"*
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %ptr, i32 0, i32 1
  %8 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %10 = bitcast i64** %9 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %10, align 8
  %11 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3, !align !8, !noundef !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8, !nonnull !3, !align !8, !noundef !3
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 0
  store i64* %13, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 1
  store i64* %15, i64** %17, align 8
  br label %bb6
}

; alloc::alloc::alloc_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc12alloc_zeroed17hae9a562dbbf47a36E(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h72fb6d9d3afefa76E({ i64, i64 }* align 8 %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h97ea5ce6833c84d9E({ i64, i64 }* align 8 %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc_zeroed(i64 %_2, i64 %_4) #19
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc15exchange_malloc17hd827dc6d52e80d04E(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %_6 = alloca { i8*, i64 }, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha243dfa14cda22afE(i64 %size, i64 %align)
  %layout.0 = extractvalue { i64, i64 } %0, 0
  %layout.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %1 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h61a85275b253a099E"(%"alloc::alloc::Global"* align 1 bitcast (<{}>* @alloc222 to %"alloc::alloc::Global"*), i64 %layout.0, i64 %layout.1)
  store { i8*, i64 } %1, { i8*, i64 }* %_6, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast { i8*, i64 }* %_6 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_9 = select i1 %4, i64 1, i64 0
  switch i64 %_9, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0
  %ptr.0 = load i8*, i8** %5, align 8, !nonnull !3, !noundef !3
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1
  %ptr.1 = load i64, i64* %6, align 8
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %7 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h65153d0f2ed0e2cfE"(i8* %ptr.0, i64 %ptr.1)
  br label %bb6

bb3:                                              ; preds = %bb2
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h8fd33bf7cfbe659dE(i64 %layout.0, i64 %layout.1) #16
  unreachable

bb6:                                              ; preds = %bb5
  ret i8* %7
}

; alloc::alloc::alloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc5alloc17hc22aeba97f831cbfE(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h72fb6d9d3afefa76E({ i64, i64 }* align 8 %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h97ea5ce6833c84d9E({ i64, i64 }* align 8 %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc(i64 %_2, i64 %_4) #19
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hb3467248fd92eb51E(%"alloc::alloc::Global"* align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 {
start:
  %_15 = alloca i8*, align 8
  %raw_ptr = alloca i8*, align 8
  %2 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h72fb6d9d3afefa76E({ i64, i64 }* align 8 %layout)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = icmp eq i64 %_4, 0
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
; call core::alloc::layout::Layout::dangling
  %_7 = call i8* @_ZN4core5alloc6layout6Layout8dangling17h6c7121e5a9ae81fdE({ i64, i64 }* align 8 %layout)
  br label %bb4

bb2:                                              ; preds = %bb1
  br i1 %zeroed, label %bb6, label %bb8

bb8:                                              ; preds = %bb2
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_13.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_13.1 = load i64, i64* %7, align 8, !range !18, !noundef !3
; call alloc::alloc::alloc
  %8 = call i8* @_ZN5alloc5alloc5alloc17hc22aeba97f831cbfE(i64 %_13.0, i64 %_13.1)
  store i8* %8, i8** %raw_ptr, align 8
  br label %bb9

bb6:                                              ; preds = %bb2
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_12.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_12.1 = load i64, i64* %10, align 8, !range !18, !noundef !3
; call alloc::alloc::alloc_zeroed
  %11 = call i8* @_ZN5alloc5alloc12alloc_zeroed17hae9a562dbbf47a36E(i64 %_12.0, i64 %_12.1)
  store i8* %11, i8** %raw_ptr, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  %_18 = load i8*, i8** %raw_ptr, align 8
; call core::ptr::non_null::NonNull<T>::new
  %_17 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h774d620dffb728acE"(i8* %_18)
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10

bb11:                                             ; preds = %bb10
; call core::option::Option<T>::ok_or
  %_16 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h906be202810c7ba7E"(i8* %_17)
  br label %bb12

bb12:                                             ; preds = %bb11
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a9f81cba73ee9b7E"(i8* %_16)
  store i8* %12, i8** %_15, align 8
  br label %bb13

bb13:                                             ; preds = %bb12
  %13 = bitcast i8** %_15 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_20 = select i1 %15, i64 1, i64 0
  switch i64 %_20, label %bb15 [
    i64 0, label %bb14
    i64 1, label %bb16
  ]

bb15:                                             ; preds = %bb13
  unreachable

bb14:                                             ; preds = %bb13
  %val = load i8*, i8** %_15, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %16 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17heb473572d11ead27E"(i8* %val, i64 %_4)
  %_24.0 = extractvalue { i8*, i64 } %16, 0
  %_24.1 = extractvalue { i8*, i64 } %16, 1
  br label %bb18

bb16:                                             ; preds = %bb13
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %17 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h2d7ed7d383fed839E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc785 to %"core::panic::location::Location"*))
  store { i8*, i64 } %17, { i8*, i64 }* %2, align 8
  br label %bb17

bb17:                                             ; preds = %bb16
  br label %bb20

bb20:                                             ; preds = %bb19, %bb17
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = insertvalue { i8*, i64 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i64 } %22, i64 %21, 1
  ret { i8*, i64 } %23

bb18:                                             ; preds = %bb14
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_24.0, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_24.1, i64* %25, align 8
  br label %bb19

bb19:                                             ; preds = %bb5, %bb18
  br label %bb20

bb4:                                              ; preds = %bb3
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %26 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17heb473572d11ead27E"(i8* %_7, i64 0)
  %_6.0 = extractvalue { i8*, i64 } %26, 0
  %_6.1 = extractvalue { i8*, i64 } %26, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_6.0, i8** %27, align 8
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_6.1, i64* %28, align 8
  br label %bb19
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h065ef695973454b6E(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 {
start:
  %4 = alloca i8*, align 8
  %_53 = alloca { i8*, i64 }, align 8
  %_31 = alloca i8*, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
; call core::alloc::layout::Layout::size
  %_6 = call i64 @_ZN4core5alloc6layout6Layout4size17h72fb6d9d3afefa76E({ i64, i64 }* align 8 %old_layout)
  br label %bb1

bb1:                                              ; preds = %start
  %10 = icmp eq i64 %_6, 0
  br i1 %10, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_9.0 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_9.1 = load i64, i64* %12, align 8, !range !18, !noundef !3
; call alloc::alloc::Global::alloc_impl
  %13 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hb3467248fd92eb51E(%"alloc::alloc::Global"* align 1 %self, i64 %_9.0, i64 %_9.1, i1 zeroext %zeroed)
  store { i8*, i64 } %13, { i8*, i64 }* %5, align 8
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::alloc::layout::Layout::align
  %_14 = call i64 @_ZN4core5alloc6layout6Layout5align17h97ea5ce6833c84d9E({ i64, i64 }* align 8 %old_layout)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::alloc::layout::Layout::align
  %_16 = call i64 @_ZN4core5alloc6layout6Layout5align17h97ea5ce6833c84d9E({ i64, i64 }* align 8 %new_layout)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_13 = icmp eq i64 %_14, %_16
  br i1 %_13, label %bb7, label %bb8

bb8:                                              ; preds = %bb6
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_56.0 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_56.1 = load i64, i64* %15, align 8, !range !18, !noundef !3
; call alloc::alloc::Global::alloc_impl
  %16 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hb3467248fd92eb51E(%"alloc::alloc::Global"* align 1 %self, i64 %_56.0, i64 %_56.1, i1 zeroext %zeroed)
  %_54.0 = extractvalue { i8*, i64 } %16, 0
  %_54.1 = extractvalue { i8*, i64 } %16, 1
  br label %bb26

bb7:                                              ; preds = %bb6
; call core::alloc::layout::Layout::size
  %new_size = call i64 @_ZN4core5alloc6layout6Layout4size17h72fb6d9d3afefa76E({ i64, i64 }* align 8 %new_layout)
  br label %bb9

bb9:                                              ; preds = %bb7
; call core::alloc::layout::Layout::size
  %_23 = call i64 @_ZN4core5alloc6layout6Layout4size17h72fb6d9d3afefa76E({ i64, i64 }* align 8 %old_layout)
  br label %bb10

bb10:                                             ; preds = %bb9
  %_21 = icmp uge i64 %new_size, %_23
  call void @llvm.assume(i1 %_21)
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %ptr)
  br label %bb12

bb12:                                             ; preds = %bb11
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  %_28.0 = load i64, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  %_28.1 = load i64, i64* %18, align 8, !range !18, !noundef !3
; call alloc::alloc::realloc
  %raw_ptr = call i8* @_ZN5alloc5alloc7realloc17h58216d0ce155ab1cE(i8* %_26, i64 %_28.0, i64 %_28.1, i64 %new_size)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::ptr::non_null::NonNull<T>::new
  %_33 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h774d620dffb728acE"(i8* %raw_ptr)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::option::Option<T>::ok_or
  %_32 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h906be202810c7ba7E"(i8* %_33)
  br label %bb15

bb15:                                             ; preds = %bb14
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %19 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a9f81cba73ee9b7E"(i8* %_32)
  store i8* %19, i8** %_31, align 8
  br label %bb16

bb16:                                             ; preds = %bb15
  %20 = bitcast i8** %_31 to {}**
  %21 = load {}*, {}** %20, align 8
  %22 = icmp eq {}* %21, null
  %_36 = select i1 %22, i64 1, i64 0
  switch i64 %_36, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ]

bb18:                                             ; preds = %bb16
  unreachable

bb17:                                             ; preds = %bb16
  %val = load i8*, i8** %_31, align 8, !nonnull !3, !noundef !3
  br i1 %zeroed, label %bb21, label %bb24

bb19:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %23 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h2d7ed7d383fed839E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc787 to %"core::panic::location::Location"*))
  store { i8*, i64 } %23, { i8*, i64 }* %5, align 8
  br label %bb20

bb20:                                             ; preds = %bb19
  br label %bb37

bb37:                                             ; preds = %bb31, %bb20
  br label %bb38

bb24:                                             ; preds = %bb23, %bb17
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %24 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17heb473572d11ead27E"(i8* %val, i64 %new_size)
  %_48.0 = extractvalue { i8*, i64 } %24, 0
  %_48.1 = extractvalue { i8*, i64 } %24, 1
  br label %bb25

bb21:                                             ; preds = %bb17
  %25 = getelementptr inbounds i8, i8* %raw_ptr, i64 %_6
  store i8* %25, i8** %4, align 8
  %_3.i = load i8*, i8** %4, align 8
  br label %bb22

bb22:                                             ; preds = %bb21
  %_45 = sub i64 %new_size, %_6
; call core::intrinsics::write_bytes
  call void @_ZN4core10intrinsics11write_bytes17hd6c8c9fc6f89732cE(i8* %_3.i, i8 0, i64 %_45)
  br label %bb23

bb23:                                             ; preds = %bb22
  br label %bb24

bb25:                                             ; preds = %bb24
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0
  store i8* %_48.0, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1
  store i64 %_48.1, i64* %27, align 8
  br label %bb36

bb36:                                             ; preds = %bb3, %bb35, %bb25
  br label %bb38

bb26:                                             ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %28 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h43ec1fd6310e1b7dE"(i8* %_54.0, i64 %_54.1)
  store { i8*, i64 } %28, { i8*, i64 }* %_53, align 8
  br label %bb27

bb27:                                             ; preds = %bb26
  %29 = bitcast { i8*, i64 }* %_53 to {}**
  %30 = load {}*, {}** %29, align 8
  %31 = icmp eq {}* %30, null
  %_58 = select i1 %31, i64 1, i64 0
  switch i64 %_58, label %bb29 [
    i64 0, label %bb28
    i64 1, label %bb30
  ]

bb29:                                             ; preds = %bb27
  unreachable

bb28:                                             ; preds = %bb27
  %32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 0
  %val.0 = load i8*, i8** %32, align 8, !nonnull !3, !noundef !3
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 1
  %val.1 = load i64, i64* %33, align 8
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_64 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %ptr)
  br label %bb32

bb30:                                             ; preds = %bb27
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %34 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h2d7ed7d383fed839E"(%"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc789 to %"core::panic::location::Location"*))
  store { i8*, i64 } %34, { i8*, i64 }* %5, align 8
  br label %bb31

bb31:                                             ; preds = %bb30
  br label %bb37

bb38:                                             ; preds = %bb36, %bb37
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = insertvalue { i8*, i64 } undef, i8* %36, 0
  %40 = insertvalue { i8*, i64 } %39, i64 %38, 1
  ret { i8*, i64 } %40

bb32:                                             ; preds = %bb28
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_66 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h65153d0f2ed0e2cfE"(i8* %val.0, i64 %val.1)
  br label %bb33

bb33:                                             ; preds = %bb32
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h38d13445a63b4b98E(i8* %_64, i8* %_66, i64 %_6)
  br label %bb34

bb34:                                             ; preds = %bb33
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  %_72.0 = load i64, i64* %41, align 8
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  %_72.1 = load i64, i64* %42, align 8, !range !18, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5d37c3c4c97e0116E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %_72.0, i64 %_72.1)
  br label %bb35

bb35:                                             ; preds = %bb34
  %43 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0
  store i8* %val.0, i8** %43, align 8
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1
  store i64 %val.1, i64* %44, align 8
  br label %bb36

bb3:                                              ; preds = %bb2
  br label %bb36
}

; alloc::alloc::dealloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc7dealloc17h8d77723404aad654E(i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h72fb6d9d3afefa76E({ i64, i64 }* align 8 %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_6 = call i64 @_ZN4core5alloc6layout6Layout5align17h97ea5ce6833c84d9E({ i64, i64 }* align 8 %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  call void @__rust_dealloc(i8* %ptr, i64 %_4, i64 %_6) #19
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::alloc::realloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc7realloc17h58216d0ce155ab1cE(i8* %ptr, i64 %0, i64 %1, i64 %new_size) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_5 = call i64 @_ZN4core5alloc6layout6Layout4size17h72fb6d9d3afefa76E({ i64, i64 }* align 8 %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_7 = call i64 @_ZN4core5alloc6layout6Layout5align17h97ea5ce6833c84d9E({ i64, i64 }* align 8 %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_realloc(i8* %ptr, i64 %_5, i64 %_7, i64 %new_size) #19
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h0fafdaf36ea141c5E(i8* %0, i64* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h09a2eac84e692f21E"({ i8*, i64* }* align 8 %ptr)
          to label %bb1 unwind label %cleanup

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb10

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { {}*, [3 x i64]* } %7, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %7, 1
  %13 = bitcast [3 x i64]* %_5.1 to i64*
  %14 = getelementptr inbounds i64, i64* %13, i64 1
  %15 = load i64, i64* %14, align 8, !invariant.load !3
  %16 = bitcast [3 x i64]* %_5.1 to i64*
  %17 = getelementptr inbounds i64, i64* %16, i64 2
  %18 = load i64, i64* %17, align 8, !range !17, !invariant.load !3
  store i64 %15, i64* %3, align 8
  %size = load i64, i64* %3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %19 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h09a2eac84e692f21E"({ i8*, i64* }* align 8 %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { {}*, [3 x i64]* } %19, 0
  %_9.1 = extractvalue { {}*, [3 x i64]* } %19, 1
  %20 = bitcast [3 x i64]* %_9.1 to i64*
  %21 = getelementptr inbounds i64, i64* %20, i64 1
  %22 = load i64, i64* %21, align 8, !invariant.load !3
  %23 = bitcast [3 x i64]* %_9.1 to i64*
  %24 = getelementptr inbounds i64, i64* %23, i64 2
  %25 = load i64, i64* %24, align 8, !range !17, !invariant.load !3
  store i64 %25, i64* %2, align 8
  %align = load i64, i64* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %26 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha243dfa14cda22afE(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %26, 0
  %layout.1 = extractvalue { i64, i64 } %26, 1
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %27, align 8, !nonnull !3, !noundef !3
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  %_17.1 = load i64*, i64** %28, align 8, !nonnull !3, !align !8, !noundef !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h2f7e3bb35799c758E"(i8* %_17.0, i64* align 8 %_17.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %_15 = invoke i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h4725f0854164ead4E"(i8* %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5d37c3c4c97e0116E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %29 = bitcast { i8*, i32 }* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17hc0d085fffd866c52E(i8* %0, i64* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h1ab98a7040d3d635E"({ i8*, i64* }* align 8 %ptr)
          to label %bb1 unwind label %cleanup

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb10

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { {}*, [3 x i64]* } %7, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %7, 1
  %13 = bitcast [3 x i64]* %_5.1 to i64*
  %14 = getelementptr inbounds i64, i64* %13, i64 1
  %15 = load i64, i64* %14, align 8, !invariant.load !3
  %16 = bitcast [3 x i64]* %_5.1 to i64*
  %17 = getelementptr inbounds i64, i64* %16, i64 2
  %18 = load i64, i64* %17, align 8, !range !17, !invariant.load !3
  store i64 %15, i64* %3, align 8
  %size = load i64, i64* %3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %19 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h1ab98a7040d3d635E"({ i8*, i64* }* align 8 %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { {}*, [3 x i64]* } %19, 0
  %_9.1 = extractvalue { {}*, [3 x i64]* } %19, 1
  %20 = bitcast [3 x i64]* %_9.1 to i64*
  %21 = getelementptr inbounds i64, i64* %20, i64 1
  %22 = load i64, i64* %21, align 8, !invariant.load !3
  %23 = bitcast [3 x i64]* %_9.1 to i64*
  %24 = getelementptr inbounds i64, i64* %23, i64 2
  %25 = load i64, i64* %24, align 8, !range !17, !invariant.load !3
  store i64 %25, i64* %2, align 8
  %align = load i64, i64* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %26 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha243dfa14cda22afE(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %26, 0
  %layout.1 = extractvalue { i64, i64 } %26, 1
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %27, align 8, !nonnull !3, !noundef !3
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  %_17.1 = load i64*, i64** %28, align 8, !nonnull !3, !align !8, !noundef !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17ha823fddb9e4772c2E"(i8* %_17.0, i64* align 8 %_17.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %_15 = invoke i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h4725f0854164ead4E"(i8* %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5d37c3c4c97e0116E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %29 = bitcast { i8*, i32 }* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17hc6f0715c5b20a405E(i64* %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hbdc3e58e7d93b5ddE"(i64** align 8 %ptr)
          to label %bb1 unwind label %cleanup

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb1:                                              ; preds = %start
  store i64 24, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hbdc3e58e7d93b5ddE"(i64** align 8 %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha243dfa14cda22afE(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3, !noundef !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h4be912dfee48dc9aE"(i64* %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %_15 = invoke i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h4725f0854164ead4E"(i8* %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5d37c3c4c97e0116E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::boxed::Box<T>::from_raw
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"std::io::error::Custom"* @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17ha0a57454814b31afE"(%"std::io::error::Custom"* %raw) unnamed_addr #0 {
start:
; call alloc::boxed::Box<T,A>::from_raw_in
  %0 = call align 8 %"std::io::error::Custom"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hf0973a140e6df116E"(%"std::io::error::Custom"* %raw)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::io::error::Custom"* %0
}

; alloc::boxed::Box<T,A>::from_raw_in
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"std::io::error::Custom"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hf0973a140e6df116E"(%"std::io::error::Custom"* %raw) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca %"std::io::error::Custom"*, align 8
; invoke core::ptr::unique::Unique<T>::new_unchecked
  %_3 = invoke i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h2bc4a18a5016f8d7E"(%"std::io::error::Custom"* %raw)
          to label %bb1 unwind label %cleanup

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb2

bb1:                                              ; preds = %start
  %7 = bitcast %"std::io::error::Custom"** %1 to i64**
  store i64* %_3, i64** %7, align 8
  %8 = bitcast %"std::io::error::Custom"** %1 to %"alloc::alloc::Global"*
  %9 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %1, align 8, !nonnull !3, !align !8, !noundef !3
  ret %"std::io::error::Custom"* %9

bb3:                                              ; preds = %bb2
  %10 = bitcast { i8*, i32 }* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h43d242c911b632d3E"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* align 8 %b) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %_9 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<_ProbeSemaphore>"**
  store %"alloc::sync::ArcInner<_ProbeSemaphore>"* %b, %"alloc::sync::ArcInner<_ProbeSemaphore>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3, !align !8, !noundef !3
  store i64* %2, i64** %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_9 to %"alloc::sync::ArcInner<_ProbeSemaphore>"**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"** %3 to i64**
  %_6 = load i64*, i64** %4, align 8, !nonnull !3, !noundef !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h75071ed0c53b2610E"(i64* %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_5
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h79314540f0e22b81E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* align 8 %b) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %_9 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"**
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %b, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3, !align !8, !noundef !3
  store i64* %2, i64** %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_9 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"** %3 to i64**
  %_6 = load i64*, i64** %4, align 8, !nonnull !3, !noundef !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha10dbb7c449cf66aE"(i64* %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_5
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hc3ba1fc5356ebba0E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* align 8 %b) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %_9 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"**
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %b, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3, !align !8, !noundef !3
  store i64* %2, i64** %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_9 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"** %3 to i64**
  %_6 = load i64*, i64** %4, align 8, !nonnull !3, !noundef !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hbb5ee70284e03120E"(i64* %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_5
}

; alloc::slice::<impl [T]>::join
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4join17hba9ff7284823e8b5E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1, [0 x i8]* align 1 %sep.0, i64 %sep.1) unnamed_addr #1 {
start:
; call alloc::str::<impl alloc::slice::Join<&str> for [S]>::join
  call void @"_ZN5alloc3str75_$LT$impl$u20$alloc..slice..Join$LT$$RF$str$GT$$u20$for$u20$$u5b$S$u5d$$GT$4join17h4a161746594cbeb3E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1, [0 x i8]* align 1 %sep.0, i64 %sep.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::<impl [T]>::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17hef62304800c96a56E"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, [0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call alloc::slice::<impl [T]>::to_vec_in
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17hf9c08a7481f055c9E"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, [0 x i8]* align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::<impl [T]>::to_vec_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17hf9c08a7481f055c9E"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, [0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call alloc::slice::hack::to_vec
  call void @_ZN5alloc5slice4hack6to_vec17h17eadf0e1f29d770E(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, [0 x i8]* align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::hack::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5slice4hack6to_vec17h17eadf0e1f29d770E(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h2264add0c9a7bca6E"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, [0 x i8]* align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17h3579b888b3b0b21eE"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, [0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call alloc::slice::<impl [T]>::to_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17hef62304800c96a56E"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, [0 x i8]* align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::string::String::from_utf8_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String19from_utf8_unchecked17h4dede8ec7c703ed6E(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"alloc::vec::Vec<u8>"* %bytes) unnamed_addr #0 {
start:
  %_2 = alloca %"alloc::vec::Vec<u8>", align 8
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*
  %2 = bitcast %"alloc::vec::Vec<u8>"* %bytes to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*
  %4 = bitcast %"alloc::vec::Vec<u8>"* %3 to i8*
  %5 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  ret void
}

; alloc::string::String::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String3new17hf02ff09acf7701cbE(%"alloc::string::String"* sret(%"alloc::string::String") %0) unnamed_addr #0 {
start:
  %_1 = alloca %"alloc::vec::Vec<u8>", align 8
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hfb7ed548d6cdb712E"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %_1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*
  %2 = bitcast %"alloc::vec::Vec<u8>"* %1 to i8*
  %3 = bitcast %"alloc::vec::Vec<u8>"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  ret void
}

; alloc::string::String::push
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String4push17h5e5ea1e58a4dd83dE(%"alloc::string::String"* align 8 %self, i32 %ch) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %_17 = alloca [4 x i8], align 1
; call core::char::methods::<impl char>::len_utf8
  %_3 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hcca34160c186885eE"(i32 %ch)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 %_3, 1
  br i1 %1, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %_5 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
  %2 = icmp ule i32 %ch, 1114111
  call void @llvm.assume(i1 %2)
  %_6 = trunc i32 %ch to i8
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h813986a49bd7a449E"(%"alloc::vec::Vec<u8>"* align 8 %_5, i8 %_6)
  br label %bb4

bb2:                                              ; preds = %bb1
  %_8 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
  %3 = getelementptr inbounds [4 x i8], [4 x i8]* %_17, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 4, i1 false)
  %_14.0 = bitcast [4 x i8]* %_17 to [0 x i8]*
; call core::char::methods::<impl char>::encode_utf8
  %4 = call { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h0ed165b39ab32042E"(i32 %ch, [0 x i8]* align 1 %_14.0, i64 4)
  %_12.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb5

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %_12.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %_12.1, i64* %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %8 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !3, !align !4, !noundef !3
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1
  %_10.0 = extractvalue { [0 x i8]*, i64 } %12, 0
  %_10.1 = extractvalue { [0 x i8]*, i64 } %12, 1
  br label %bb6

bb6:                                              ; preds = %bb5
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h58d31a581d226929E"(%"alloc::vec::Vec<u8>"* align 8 %_8, [0 x i8]* align 1 %_10.0, i64 %_10.1)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb4, %bb7
  ret void

bb4:                                              ; preds = %bb3
  br label %bb8
}

; alloc::string::String::as_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN5alloc6string6String6as_str17h7d830e6e0c0d6b42E(%"alloc::string::String"* align 8 %self) unnamed_addr #0 {
start:
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hff37365f7ba2ec55E"(%"alloc::string::String"* align 8 %self)
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; alloc::string::String::push_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String8push_str17hf42753300a010b9dE(%"alloc::string::String"* align 8 %self, [0 x i8]* align 1 %string.0, i64 %string.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %_3 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %string.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %string.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !3, !align !4, !noundef !3
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %_5.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h58d31a581d226929E"(%"alloc::vec::Vec<u8>"* align 8 %_3, [0 x i8]* align 1 %_5.0, i64 %_5.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::alloc_guard
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN5alloc7raw_vec11alloc_guard17h1e3434c6c4a81725E(i64 %alloc_size) unnamed_addr #0 {
start:
  %_4 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  br i1 false, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 -9223372036854775807, i64* %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !5, !noundef !3
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h83129efac1cdb3faE"(i64 %4, i64 %6)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_3.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_3.1, i64* %9, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !range !6, !noundef !3
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1
  ret { i64, i64 } %15
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nonlazybind uwtable
define void @_ZN5alloc7raw_vec11finish_grow17h149fc6a5f741495aE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, %"alloc::alloc::Global"* align 1 %alloc) unnamed_addr #2 {
start:
  %_41 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %_6 = alloca %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc54372c21c1a1d40E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %_6, i64 %new_layout.0, i64 %new_layout.1)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfbc8f5dfb5de5fa7E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>") %_5, %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*
  %_9 = load i64, i64* %1, align 8, !range !7, !noundef !3
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*
  %3 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %val.0 = load i64, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %val.1 = load i64, i64* %5, align 8, !range !18, !noundef !3
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %val.0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %val.1, i64* %7, align 8
; call core::alloc::layout::Layout::size
  %_15 = call i64 @_ZN4core5alloc6layout6Layout4size17h72fb6d9d3afefa76E({ i64, i64 }* align 8 %new_layout)
  br label %bb7

bb5:                                              ; preds = %bb2
  %8 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %residual.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %residual.1 = load i64, i64* %11, align 8, !range !5, !noundef !3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h1ae2b7e1477cb71cE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i64 %residual.0, i64 %residual.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc791 to %"core::panic::location::Location"*))
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb23

bb23:                                             ; preds = %bb13, %bb6
  br label %bb24

bb7:                                              ; preds = %bb3
; call alloc::raw_vec::alloc_guard
  %12 = call { i64, i64 } @_ZN5alloc7raw_vec11alloc_guard17h1e3434c6c4a81725E(i64 %_15)
  %_14.0 = extractvalue { i64, i64 } %12, 0
  %_14.1 = extractvalue { i64, i64 } %12, 1
  br label %bb8

bb8:                                              ; preds = %bb7
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %13 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he8888c209e6ab034E"(i64 %_14.0, i64 %_14.1)
  store { i64, i64 } %13, { i64, i64 }* %_13, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !range !6, !noundef !3
  %16 = sub i64 %15, -9223372036854775807
  %17 = icmp eq i64 %16, 0
  %_17 = select i1 %17, i64 0, i64 1
  switch i64 %_17, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ]

bb11:                                             ; preds = %bb9
  unreachable

bb10:                                             ; preds = %bb9
  %18 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, i32 0, i32 1
  %19 = load i64, i64* %18, align 8, !range !5, !noundef !3
  %20 = icmp eq i64 %19, 0
  %_22 = select i1 %20, i64 0, i64 1
  %21 = icmp eq i64 %_22, 1
  br i1 %21, label %bb15, label %bb14

bb12:                                             ; preds = %bb9
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %residual.01 = load i64, i64* %22, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %residual.12 = load i64, i64* %23, align 8, !range !5, !noundef !3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc7a131b66f5147b5E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i64 %residual.01, i64 %residual.12, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc793 to %"core::panic::location::Location"*))
  br label %bb13

bb13:                                             ; preds = %bb12
  br label %bb23

bb24:                                             ; preds = %bb22, %bb23
  ret void

bb15:                                             ; preds = %bb10
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %25 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %24 to { i8*, { i64, i64 } }*
  %26 = bitcast { i8*, { i64, i64 } }* %25 to i8**
  %ptr = load i8*, i8** %26, align 8, !nonnull !3, !noundef !3
  %27 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %28 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %27 to { i8*, { i64, i64 } }*
  %29 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %28, i32 0, i32 1
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1
  %33 = load i64, i64* %32, align 8, !range !18, !noundef !3
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %31, i64* %34, align 8
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %33, i64* %35, align 8
; call core::alloc::layout::Layout::align
  %_30 = call i64 @_ZN4core5alloc6layout6Layout5align17h97ea5ce6833c84d9E({ i64, i64 }* align 8 %old_layout)
  br label %bb16

bb14:                                             ; preds = %bb10
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_39.0 = load i64, i64* %36, align 8
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_39.1 = load i64, i64* %37, align 8, !range !18, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %38 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h61a85275b253a099E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %_39.0, i64 %_39.1)
  store { i8*, i64 } %38, { i8*, i64 }* %memory, align 8
  br label %bb20

bb20:                                             ; preds = %bb14
  br label %bb21

bb21:                                             ; preds = %bb19, %bb20
  %39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0
  %_40.0 = load i8*, i8** %39, align 8
  %40 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1
  %_40.1 = load i64, i64* %40, align 8
  %41 = bitcast i64** %_41 to { i64, i64 }**
  store { i64, i64 }* %new_layout, { i64, i64 }** %41, align 8
  %42 = load i64*, i64** %_41, align 8, !nonnull !3, !align !8, !noundef !3
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hab98a4ec89cf70fbE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %_40.0, i64 %_40.1, i64* align 8 %42)
  br label %bb22

bb16:                                             ; preds = %bb15
; call core::alloc::layout::Layout::align
  %_32 = call i64 @_ZN4core5alloc6layout6Layout5align17h97ea5ce6833c84d9E({ i64, i64 }* align 8 %new_layout)
  br label %bb17

bb17:                                             ; preds = %bb16
  %_29 = icmp eq i64 %_30, %_32
  call void @llvm.assume(i1 %_29)
  br label %bb18

bb18:                                             ; preds = %bb17
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  %_36.0 = load i64, i64* %43, align 8
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  %_36.1 = load i64, i64* %44, align 8, !range !18, !noundef !3
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_37.0 = load i64, i64* %45, align 8
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_37.1 = load i64, i64* %46, align 8, !range !18, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %47 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hc67b5bf37d4e7affE"(%"alloc::alloc::Global"* align 1 %alloc, i8* %ptr, i64 %_36.0, i64 %_36.1, i64 %_37.0, i64 %_37.1)
  store { i8*, i64 } %47, { i8*, i64 }* %memory, align 8
  br label %bb19

bb19:                                             ; preds = %bb18
  br label %bb21

bb22:                                             ; preds = %bb21
  br label %bb24
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h060992e6d24258e4E"() unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8, !range !5, !noundef !3
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h06b4d346eab194d4E"(i64* align 8 %_1) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %_5 = bitcast i64* %_1 to { i64, i64 }*
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %_4.0 = load i64, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %_4.1 = load i64, i64* %1, align 8, !range !18, !noundef !3
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  store i64 %_4.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %_4.1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %7 = load i64, i64* %6, align 8, !range !5, !noundef !3
; call <T as core::convert::Into<U>>::into
  %8 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h83129efac1cdb3faE"(i64 %5, i64 %7)
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = extractvalue { i64, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  %11 = insertvalue { i64, i64 } undef, i64 %9, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec14handle_reserve17h52fbbb30fc29dfceE(i64 %result.0, i64 %result.1) unnamed_addr #0 {
start:
  %_2 = alloca { i64, i64 }, align 8
; call core::result::Result<T,E>::map_err
  %0 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h99cf45faf88306afE"(i64 %result.0, i64 %result.1)
  store { i64, i64 } %0, { i64, i64 }* %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1
  %2 = load i64, i64* %1, align 8, !range !6, !noundef !3
  %3 = sub i64 %2, -9223372036854775807
  %4 = icmp eq i64 %3, 0
  %_6 = select i1 %4, i64 0, i64 1
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb3, %bb1
  unreachable

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !5, !noundef !3
  %7 = icmp eq i64 %6, 0
  %_5 = select i1 %7, i64 0, i64 1
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17h63652a71b6d5e23eE() #16
  unreachable

bb6:                                              ; preds = %bb3
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0
  %layout.0 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1
  %layout.1 = load i64, i64* %9, align 8, !range !18, !noundef !3
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h8fd33bf7cfbe659dE(i64 %layout.0, i64 %layout.1) #16
  unreachable
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h3ab2b65d054ae099E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %e = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call alloc::collections::TryReserveError::kind
  %4 = call { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h8bbb440b3052ddd7E({ i64, i64 }* align 8 %e)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h1af258a595ab79b3E"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_37 = alloca i8, align 1
  %result = alloca { i8*, i64 }, align 8
  %_15 = alloca { i64, i64 }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca { i8*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i8 1, i8* %_37, align 1
  br label %bb4

bb32:                                             ; preds = %cleanup
  %4 = load i8, i8* %_37, align 1, !range !2, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb31, label %bb30

cleanup:                                          ; preds = %bb27, %bb26, %bb25, %bb23, %bb19, %bb17, %bb14, %bb12, %bb11, %bb9, %bb7, %bb5
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb32

bb4:                                              ; preds = %start
  %11 = icmp eq i64 1, 0
  br i1 %11, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_4, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %_6 = icmp eq i64 %capacity, 0
  %12 = zext i1 %_6 to i8
  store i8 %12, i8* %_4, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %13 = load i8, i8* %_4, align 1, !range !2, !noundef !3
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb5, label %bb7

bb7:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::array
  %15 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h51b3175fd6f91d6eE(i64 %capacity)
          to label %bb8 unwind label %cleanup

bb5:                                              ; preds = %bb3
  store i8 0, i8* %_37, align 1
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %16 = invoke { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h28ee2be975f19a6fE"()
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store { i8*, i64 } %16, { i8*, i64 }* %2, align 8
  br label %bb29

bb29:                                             ; preds = %bb28, %bb6
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8, !nonnull !3, !noundef !3
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = insertvalue { i8*, i64 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i64 } %21, i64 %20, 1
  ret { i8*, i64 } %22

bb8:                                              ; preds = %bb7
  store { i64, i64 } %15, { i64, i64 }* %_10, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !range !5, !noundef !3
  %25 = icmp eq i64 %24, 0
  %_12 = select i1 %25, i64 1, i64 0
  switch i64 %_12, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ]

bb10:                                             ; preds = %bb8
  unreachable

bb11:                                             ; preds = %bb8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0
  %layout.0 = load i64, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  %layout.1 = load i64, i64* %27, align 8, !range !18, !noundef !3
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %layout.0, i64* %28, align 8
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %layout.1, i64* %29, align 8
; invoke core::alloc::layout::Layout::size
  %_16 = invoke i64 @_ZN4core5alloc6layout6Layout4size17h72fb6d9d3afefa76E({ i64, i64 }* align 8 %layout)
          to label %bb12 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17h63652a71b6d5e23eE() #16
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb23, %bb14, %bb9
  unreachable

bb12:                                             ; preds = %bb11
; invoke alloc::raw_vec::alloc_guard
  %30 = invoke { i64, i64 } @_ZN5alloc7raw_vec11alloc_guard17h1e3434c6c4a81725E(i64 %_16)
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb12
  store { i64, i64 } %30, { i64, i64 }* %_15, align 8
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1
  %32 = load i64, i64* %31, align 8, !range !6, !noundef !3
  %33 = sub i64 %32, -9223372036854775807
  %34 = icmp eq i64 %33, 0
  %_18 = select i1 %34, i64 0, i64 1
  switch i64 %_18, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ]

bb15:                                             ; preds = %bb13
  unreachable

bb16:                                             ; preds = %bb13
  %35 = load i8, i8* %init, align 1, !range !2, !noundef !3
  %36 = trunc i8 %35 to i1
  %_21 = zext i1 %36 to i64
  switch i64 %_21, label %bb18 [
    i64 0, label %bb19
    i64 1, label %bb17
  ]

bb14:                                             ; preds = %bb13
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17h63652a71b6d5e23eE() #16
          to label %unreachable unwind label %cleanup

bb18:                                             ; preds = %bb16
  unreachable

bb19:                                             ; preds = %bb16
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_23.0 = load i64, i64* %37, align 8
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_23.1 = load i64, i64* %38, align 8, !range !18, !noundef !3
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %39 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h61a85275b253a099E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %_23.0, i64 %_23.1)
          to label %bb20 unwind label %cleanup

bb17:                                             ; preds = %bb16
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_25.0 = load i64, i64* %40, align 8
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_25.1 = load i64, i64* %41, align 8, !range !18, !noundef !3
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %42 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hfce8e5e7a9a300b7E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %_25.0, i64 %_25.1)
          to label %bb21 unwind label %cleanup

bb21:                                             ; preds = %bb17
  store { i8*, i64 } %42, { i8*, i64 }* %result, align 8
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %43 = bitcast { i8*, i64 }* %result to {}**
  %44 = load {}*, {}** %43, align 8
  %45 = icmp eq {}* %44, null
  %_27 = select i1 %45, i64 1, i64 0
  switch i64 %_27, label %bb24 [
    i64 0, label %bb25
    i64 1, label %bb23
  ]

bb20:                                             ; preds = %bb19
  store { i8*, i64 } %39, { i8*, i64 }* %result, align 8
  br label %bb22

bb24:                                             ; preds = %bb22
  unreachable

bb25:                                             ; preds = %bb22
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0
  %ptr.0 = load i8*, i8** %46, align 8, !nonnull !3, !noundef !3
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1
  %ptr.1 = load i64, i64* %47, align 8
; invoke core::ptr::non_null::NonNull<T>::cast
  %_33 = invoke i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hd974d218b303352dE"(i8* %ptr.0, i64 %ptr.1)
          to label %bb26 unwind label %cleanup

bb23:                                             ; preds = %bb22
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_30.0 = load i64, i64* %48, align 8
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_30.1 = load i64, i64* %49, align 8, !range !18, !noundef !3
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h8fd33bf7cfbe659dE(i64 %_30.0, i64 %_30.1) #16
          to label %unreachable unwind label %cleanup

bb26:                                             ; preds = %bb25
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_32 = invoke i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %_33)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb26
; invoke core::ptr::unique::Unique<T>::new_unchecked
  %_31 = invoke i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5c99dae1d0335b2bE"(i8* %_32)
          to label %bb28 unwind label %cleanup

bb28:                                             ; preds = %bb27
  %50 = bitcast { i8*, i64 }* %2 to i8**
  store i8* %_31, i8** %50, align 8
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %capacity, i64* %51, align 8
  %52 = bitcast { i8*, i64 }* %2 to %"alloc::alloc::Global"*
  br label %bb29

bb30:                                             ; preds = %bb31, %bb32
  %53 = bitcast { i8*, i32 }* %1 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %58 = insertvalue { i8*, i32 } %57, i32 %56, 1
  resume { i8*, i32 } %58

bb31:                                             ; preds = %bb32
  br label %bb30
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h27e95fa3bfecd4c9E"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_37 = alloca i8, align 1
  %result = alloca { i8*, i64 }, align 8
  %_15 = alloca { i64, i64 }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca { i64*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i8 1, i8* %_37, align 1
  br label %bb4

bb32:                                             ; preds = %cleanup
  %4 = load i8, i8* %_37, align 1, !range !2, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb31, label %bb30

cleanup:                                          ; preds = %bb27, %bb26, %bb25, %bb23, %bb19, %bb17, %bb14, %bb12, %bb11, %bb9, %bb7, %bb5
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb32

bb4:                                              ; preds = %start
  %11 = icmp eq i64 16, 0
  br i1 %11, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_4, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %_6 = icmp eq i64 %capacity, 0
  %12 = zext i1 %_6 to i8
  store i8 %12, i8* %_4, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %13 = load i8, i8* %_4, align 1, !range !2, !noundef !3
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb5, label %bb7

bb7:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::array
  %15 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h2785aa23631a0ad4E(i64 %capacity)
          to label %bb8 unwind label %cleanup

bb5:                                              ; preds = %bb3
  store i8 0, i8* %_37, align 1
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %16 = invoke { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17he055cf6202d02d93E"()
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store { i64*, i64 } %16, { i64*, i64 }* %2, align 8
  br label %bb29

bb29:                                             ; preds = %bb28, %bb6
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8, !nonnull !3, !noundef !3
  %19 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = insertvalue { i64*, i64 } undef, i64* %18, 0
  %22 = insertvalue { i64*, i64 } %21, i64 %20, 1
  ret { i64*, i64 } %22

bb8:                                              ; preds = %bb7
  store { i64, i64 } %15, { i64, i64 }* %_10, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !range !5, !noundef !3
  %25 = icmp eq i64 %24, 0
  %_12 = select i1 %25, i64 1, i64 0
  switch i64 %_12, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ]

bb10:                                             ; preds = %bb8
  unreachable

bb11:                                             ; preds = %bb8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0
  %layout.0 = load i64, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  %layout.1 = load i64, i64* %27, align 8, !range !18, !noundef !3
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %layout.0, i64* %28, align 8
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %layout.1, i64* %29, align 8
; invoke core::alloc::layout::Layout::size
  %_16 = invoke i64 @_ZN4core5alloc6layout6Layout4size17h72fb6d9d3afefa76E({ i64, i64 }* align 8 %layout)
          to label %bb12 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17h63652a71b6d5e23eE() #16
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb23, %bb14, %bb9
  unreachable

bb12:                                             ; preds = %bb11
; invoke alloc::raw_vec::alloc_guard
  %30 = invoke { i64, i64 } @_ZN5alloc7raw_vec11alloc_guard17h1e3434c6c4a81725E(i64 %_16)
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb12
  store { i64, i64 } %30, { i64, i64 }* %_15, align 8
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1
  %32 = load i64, i64* %31, align 8, !range !6, !noundef !3
  %33 = sub i64 %32, -9223372036854775807
  %34 = icmp eq i64 %33, 0
  %_18 = select i1 %34, i64 0, i64 1
  switch i64 %_18, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ]

bb15:                                             ; preds = %bb13
  unreachable

bb16:                                             ; preds = %bb13
  %35 = load i8, i8* %init, align 1, !range !2, !noundef !3
  %36 = trunc i8 %35 to i1
  %_21 = zext i1 %36 to i64
  switch i64 %_21, label %bb18 [
    i64 0, label %bb19
    i64 1, label %bb17
  ]

bb14:                                             ; preds = %bb13
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17h63652a71b6d5e23eE() #16
          to label %unreachable unwind label %cleanup

bb18:                                             ; preds = %bb16
  unreachable

bb19:                                             ; preds = %bb16
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_23.0 = load i64, i64* %37, align 8
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_23.1 = load i64, i64* %38, align 8, !range !18, !noundef !3
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %39 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h61a85275b253a099E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %_23.0, i64 %_23.1)
          to label %bb20 unwind label %cleanup

bb17:                                             ; preds = %bb16
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_25.0 = load i64, i64* %40, align 8
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_25.1 = load i64, i64* %41, align 8, !range !18, !noundef !3
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %42 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hfce8e5e7a9a300b7E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %_25.0, i64 %_25.1)
          to label %bb21 unwind label %cleanup

bb21:                                             ; preds = %bb17
  store { i8*, i64 } %42, { i8*, i64 }* %result, align 8
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %43 = bitcast { i8*, i64 }* %result to {}**
  %44 = load {}*, {}** %43, align 8
  %45 = icmp eq {}* %44, null
  %_27 = select i1 %45, i64 1, i64 0
  switch i64 %_27, label %bb24 [
    i64 0, label %bb25
    i64 1, label %bb23
  ]

bb20:                                             ; preds = %bb19
  store { i8*, i64 } %39, { i8*, i64 }* %result, align 8
  br label %bb22

bb24:                                             ; preds = %bb22
  unreachable

bb25:                                             ; preds = %bb22
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0
  %ptr.0 = load i8*, i8** %46, align 8, !nonnull !3, !noundef !3
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1
  %ptr.1 = load i64, i64* %47, align 8
; invoke core::ptr::non_null::NonNull<T>::cast
  %_33 = invoke i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6a58a9255f006314E"(i8* %ptr.0, i64 %ptr.1)
          to label %bb26 unwind label %cleanup

bb23:                                             ; preds = %bb22
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_30.0 = load i64, i64* %48, align 8
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_30.1 = load i64, i64* %49, align 8, !range !18, !noundef !3
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h8fd33bf7cfbe659dE(i64 %_30.0, i64 %_30.1) #16
          to label %unreachable unwind label %cleanup

bb26:                                             ; preds = %bb25
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_32 = invoke { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2668ba30b6e2060cE"(i64* %_33)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb26
; invoke core::ptr::unique::Unique<T>::new_unchecked
  %_31 = invoke i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h215e984123570049E"({ [0 x i8]*, i64 }* %_32)
          to label %bb28 unwind label %cleanup

bb28:                                             ; preds = %bb27
  %50 = bitcast { i64*, i64 }* %2 to i64**
  store i64* %_31, i64** %50, align 8
  %51 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %capacity, i64* %51, align 8
  %52 = bitcast { i64*, i64 }* %2 to %"alloc::alloc::Global"*
  br label %bb29

bb30:                                             ; preds = %bb31, %bb32
  %53 = bitcast { i8*, i32 }* %1 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %58 = insertvalue { i8*, i32 } %57, i32 %56, 1
  resume { i8*, i32 } %58

bb31:                                             ; preds = %bb32
  br label %bb30
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h281809044104b7aeE"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %4 = sub i64 %3, %len
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = icmp ugt i64 %additional, %4
  ret i1 %5
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h30cb742058f4c690E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %4 = sub i64 %3, %len
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = icmp ugt i64 %additional, %4
  ret i1 %5
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h4521ddcce0498c4dE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i64*, i64 }* align 8 %self) unnamed_addr #1 {
start:
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 24, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !2, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  %6 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_8 = load i64, i64* %6, align 8
; call core::alloc::layout::Layout::array
  %7 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hcede0e1be8318310E(i64 %_8)
  %_7.0 = extractvalue { i64, i64 } %7, 0
  %_7.1 = extractvalue { i64, i64 } %7, 1
  br label %bb7

bb5:                                              ; preds = %bb3
  %8 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1
  store i64 0, i64* %8, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb5
  ret void

bb7:                                              ; preds = %bb6
; call core::result::Result<T,E>::unwrap_unchecked
  %9 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h71b673fb916944b1E"(i64 %_7.0, i64 %_7.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc795 to %"core::panic::location::Location"*))
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %10 = bitcast { i64*, i64 }* %self to i64**
  %_12 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
; call core::ptr::unique::Unique<T>::cast
  %_11 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h33c66d42388e949cE"(i64* %_12)
  br label %bb9

bb9:                                              ; preds = %bb8
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc304fc2e29a19363E"(i8* %_11)
  br label %bb10

bb10:                                             ; preds = %bb9
  %11 = bitcast { i8*, { i64, i64 } }* %_9 to i8**
  store i8* %_10, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  store i64 %layout.0, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  store i64 %layout.1, i64* %14, align 8
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %16 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %15 to { i8*, { i64, i64 } }*
  %17 = bitcast { i8*, { i64, i64 } }* %16 to i8*
  %18 = bitcast { i8*, { i64, i64 } }* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false)
  br label %bb11
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h5e3813ede19fa220E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i64*, i64 }* align 8 %self) unnamed_addr #1 {
start:
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 88, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !2, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  %6 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_8 = load i64, i64* %6, align 8
; call core::alloc::layout::Layout::array
  %7 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h40d61b9edba55bbdE(i64 %_8)
  %_7.0 = extractvalue { i64, i64 } %7, 0
  %_7.1 = extractvalue { i64, i64 } %7, 1
  br label %bb7

bb5:                                              ; preds = %bb3
  %8 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1
  store i64 0, i64* %8, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb5
  ret void

bb7:                                              ; preds = %bb6
; call core::result::Result<T,E>::unwrap_unchecked
  %9 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h71b673fb916944b1E"(i64 %_7.0, i64 %_7.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc795 to %"core::panic::location::Location"*))
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %10 = bitcast { i64*, i64 }* %self to i64**
  %_12 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
; call core::ptr::unique::Unique<T>::cast
  %_11 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h86e7a40adbafa37bE"(i64* %_12)
  br label %bb9

bb9:                                              ; preds = %bb8
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc304fc2e29a19363E"(i8* %_11)
  br label %bb10

bb10:                                             ; preds = %bb9
  %11 = bitcast { i8*, { i64, i64 } }* %_9 to i8**
  store i8* %_10, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  store i64 %layout.0, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  store i64 %layout.1, i64* %14, align 8
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %16 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %15 to { i8*, { i64, i64 } }*
  %17 = bitcast { i8*, { i64, i64 } }* %16 to i8*
  %18 = bitcast { i8*, { i64, i64 } }* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false)
  br label %bb11
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h7eb9f228f0e0147eE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i8*, i64 }* align 8 %self) unnamed_addr #1 {
start:
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 1, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !2, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_8 = load i64, i64* %6, align 8
; call core::alloc::layout::Layout::array
  %7 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h51b3175fd6f91d6eE(i64 %_8)
  %_7.0 = extractvalue { i64, i64 } %7, 0
  %_7.1 = extractvalue { i64, i64 } %7, 1
  br label %bb7

bb5:                                              ; preds = %bb3
  %8 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1
  store i64 0, i64* %8, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb5
  ret void

bb7:                                              ; preds = %bb6
; call core::result::Result<T,E>::unwrap_unchecked
  %9 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h71b673fb916944b1E"(i64 %_7.0, i64 %_7.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc795 to %"core::panic::location::Location"*))
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %10 = bitcast { i8*, i64 }* %self to i8**
  %_12 = load i8*, i8** %10, align 8, !nonnull !3, !noundef !3
; call core::ptr::unique::Unique<T>::cast
  %_11 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17he4a2ba8f465b151cE"(i8* %_12)
  br label %bb9

bb9:                                              ; preds = %bb8
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc304fc2e29a19363E"(i8* %_11)
  br label %bb10

bb10:                                             ; preds = %bb9
  %11 = bitcast { i8*, { i64, i64 } }* %_9 to i8**
  store i8* %_10, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  store i64 %layout.0, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  store i64 %layout.1, i64* %14, align 8
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %16 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %15 to { i8*, { i64, i64 } }*
  %17 = bitcast { i8*, { i64, i64 } }* %16 to i8*
  %18 = bitcast { i8*, { i64, i64 } }* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false)
  br label %bb11
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hdc1c1d205fb18ca0E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i64*, i64 }* align 8 %self) unnamed_addr #1 {
start:
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 16, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !2, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  %6 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_8 = load i64, i64* %6, align 8
; call core::alloc::layout::Layout::array
  %7 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h2785aa23631a0ad4E(i64 %_8)
  %_7.0 = extractvalue { i64, i64 } %7, 0
  %_7.1 = extractvalue { i64, i64 } %7, 1
  br label %bb7

bb5:                                              ; preds = %bb3
  %8 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1
  store i64 0, i64* %8, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb5
  ret void

bb7:                                              ; preds = %bb6
; call core::result::Result<T,E>::unwrap_unchecked
  %9 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h71b673fb916944b1E"(i64 %_7.0, i64 %_7.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc795 to %"core::panic::location::Location"*))
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %10 = bitcast { i64*, i64 }* %self to i64**
  %_12 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
; call core::ptr::unique::Unique<T>::cast
  %_11 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h513301e26e6e15d2E"(i64* %_12)
  br label %bb9

bb9:                                              ; preds = %bb8
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc304fc2e29a19363E"(i8* %_11)
  br label %bb10

bb10:                                             ; preds = %bb9
  %11 = bitcast { i8*, { i64, i64 } }* %_9 to i8**
  store i8* %_10, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  store i64 %layout.0, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  store i64 %layout.1, i64* %14, align 8
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %16 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %15 to { i8*, { i64, i64 } }*
  %17 = bitcast { i8*, { i64, i64 } }* %16 to i8*
  %18 = bitcast { i8*, { i64, i64 } }* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false)
  br label %bb11
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h4ec91aa88bee7d14E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_28 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 1, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !5, !noundef !3
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h83129efac1cdb3faE"(i64 %4, i64 %6)
  %_5.0 = extractvalue { i64, i64 } %7, 0
  %_5.1 = extractvalue { i64, i64 } %7, 1
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h1ad8a36291cc3344E"(i64 %len, i64 %additional)
  %_10.0 = extractvalue { i64, i64 } %8, 0
  %_10.1 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !range !5, !noundef !3
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h9bf5f067cd307435E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1f68ea66517e3db0E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") %_8, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*
  %_14 = load i64, i64* %14, align 8, !range !7, !noundef !3
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1
  %val = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_20 = load i64, i64* %17, align 8
  %_19 = mul i64 %_20, 2
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17h4bf4c75e9e56bd50E(i64 %_19, i64 %val)
  br label %bb12

bb10:                                             ; preds = %bb7
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %residual.0 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %residual.1 = load i64, i64* %21, align 8, !range !5, !noundef !3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %22 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd462cfabd6a3984aE"(i64 %residual.0, i64 %residual.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc797 to %"core::panic::location::Location"*))
  store { i64, i64 } %22, { i64, i64 }* %0, align 8
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb23

bb23:                                             ; preds = %bb21, %bb11
  br label %bb24

bb12:                                             ; preds = %bb8
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17h4bf4c75e9e56bd50E(i64 8, i64 %cap)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::alloc::layout::Layout::array
  %23 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h51b3175fd6f91d6eE(i64 %cap1)
  %new_layout.0 = extractvalue { i64, i64 } %23, 0
  %new_layout.1 = extractvalue { i64, i64 } %23, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h7eb9f228f0e0147eE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_30, { i8*, i64 }* align 8 %self)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_33 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h149fc6a5f741495aE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %_28, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_30, %"alloc::alloc::Global"* align 1 %_33)
  br label %bb16

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hdff810d60fcfe9b0E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") %_27, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %_28)
  br label %bb17

bb17:                                             ; preds = %bb16
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*
  %_34 = load i64, i64* %24, align 8, !range !7, !noundef !3
  switch i64 %_34, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb18:                                             ; preds = %bb17
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %26 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %25, i32 0, i32 1
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %26, i32 0, i32 0
  %val.0 = load i8*, i8** %27, align 8, !nonnull !3, !noundef !3
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %26, i32 0, i32 1
  %val.1 = load i64, i64* %28, align 8
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h96a7ea6b2d1a7082E"({ i8*, i64 }* align 8 %self, i8* %val.0, i64 %val.1, i64 %cap1)
  br label %bb22

bb20:                                             ; preds = %bb17
  %29 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %30 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %29, i32 0, i32 1
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0
  %residual.02 = load i64, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1
  %residual.13 = load i64, i64* %32, align 8, !range !5, !noundef !3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %33 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h12550c67f1637bd4E"(i64 %residual.02, i64 %residual.13, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc799 to %"core::panic::location::Location"*))
  store { i64, i64 } %33, { i64, i64 }* %0, align 8
  br label %bb21

bb21:                                             ; preds = %bb20
  br label %bb23

bb24:                                             ; preds = %bb3, %bb22, %bb23
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8, !range !6, !noundef !3
  %38 = insertvalue { i64, i64 } undef, i64 %35, 0
  %39 = insertvalue { i64, i64 } %38, i64 %37, 1
  ret { i64, i64 } %39

bb22:                                             ; preds = %bb18
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 -9223372036854775807, i64* %40, align 8
  br label %bb24

bb3:                                              ; preds = %bb2
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_5.0, i64* %41, align 8
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_5.1, i64* %42, align 8
  br label %bb24
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h60a7b7f2f9150892E"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_28 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 88, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !5, !noundef !3
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h83129efac1cdb3faE"(i64 %4, i64 %6)
  %_5.0 = extractvalue { i64, i64 } %7, 0
  %_5.1 = extractvalue { i64, i64 } %7, 1
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h1ad8a36291cc3344E"(i64 %len, i64 %additional)
  %_10.0 = extractvalue { i64, i64 } %8, 0
  %_10.1 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !range !5, !noundef !3
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h9bf5f067cd307435E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1f68ea66517e3db0E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") %_8, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*
  %_14 = load i64, i64* %14, align 8, !range !7, !noundef !3
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1
  %val = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_20 = load i64, i64* %17, align 8
  %_19 = mul i64 %_20, 2
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17h4bf4c75e9e56bd50E(i64 %_19, i64 %val)
  br label %bb12

bb10:                                             ; preds = %bb7
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %residual.0 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %residual.1 = load i64, i64* %21, align 8, !range !5, !noundef !3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %22 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd462cfabd6a3984aE"(i64 %residual.0, i64 %residual.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc797 to %"core::panic::location::Location"*))
  store { i64, i64 } %22, { i64, i64 }* %0, align 8
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb23

bb23:                                             ; preds = %bb21, %bb11
  br label %bb24

bb12:                                             ; preds = %bb8
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17h4bf4c75e9e56bd50E(i64 4, i64 %cap)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::alloc::layout::Layout::array
  %23 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h40d61b9edba55bbdE(i64 %cap1)
  %new_layout.0 = extractvalue { i64, i64 } %23, 0
  %new_layout.1 = extractvalue { i64, i64 } %23, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h5e3813ede19fa220E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_30, { i64*, i64 }* align 8 %self)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_33 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h149fc6a5f741495aE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %_28, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_30, %"alloc::alloc::Global"* align 1 %_33)
  br label %bb16

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hdff810d60fcfe9b0E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") %_27, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %_28)
  br label %bb17

bb17:                                             ; preds = %bb16
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*
  %_34 = load i64, i64* %24, align 8, !range !7, !noundef !3
  switch i64 %_34, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb18:                                             ; preds = %bb17
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %26 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %25, i32 0, i32 1
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %26, i32 0, i32 0
  %val.0 = load i8*, i8** %27, align 8, !nonnull !3, !noundef !3
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %26, i32 0, i32 1
  %val.1 = load i64, i64* %28, align 8
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h9b9963f5884759deE"({ i64*, i64 }* align 8 %self, i8* %val.0, i64 %val.1, i64 %cap1)
  br label %bb22

bb20:                                             ; preds = %bb17
  %29 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %30 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %29, i32 0, i32 1
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0
  %residual.02 = load i64, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1
  %residual.13 = load i64, i64* %32, align 8, !range !5, !noundef !3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %33 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h12550c67f1637bd4E"(i64 %residual.02, i64 %residual.13, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc799 to %"core::panic::location::Location"*))
  store { i64, i64 } %33, { i64, i64 }* %0, align 8
  br label %bb21

bb21:                                             ; preds = %bb20
  br label %bb23

bb24:                                             ; preds = %bb3, %bb22, %bb23
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8, !range !6, !noundef !3
  %38 = insertvalue { i64, i64 } undef, i64 %35, 0
  %39 = insertvalue { i64, i64 } %38, i64 %37, 1
  ret { i64, i64 } %39

bb22:                                             ; preds = %bb18
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 -9223372036854775807, i64* %40, align 8
  br label %bb24

bb3:                                              ; preds = %bb2
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_5.0, i64* %41, align 8
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_5.1, i64* %42, align 8
  br label %bb24
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h8e0a2a2e56dbb299E"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_28 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 16, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !5, !noundef !3
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h83129efac1cdb3faE"(i64 %4, i64 %6)
  %_5.0 = extractvalue { i64, i64 } %7, 0
  %_5.1 = extractvalue { i64, i64 } %7, 1
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h1ad8a36291cc3344E"(i64 %len, i64 %additional)
  %_10.0 = extractvalue { i64, i64 } %8, 0
  %_10.1 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !range !5, !noundef !3
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h9bf5f067cd307435E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1f68ea66517e3db0E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") %_8, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*
  %_14 = load i64, i64* %14, align 8, !range !7, !noundef !3
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1
  %val = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_20 = load i64, i64* %17, align 8
  %_19 = mul i64 %_20, 2
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17h4bf4c75e9e56bd50E(i64 %_19, i64 %val)
  br label %bb12

bb10:                                             ; preds = %bb7
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %residual.0 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %residual.1 = load i64, i64* %21, align 8, !range !5, !noundef !3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %22 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd462cfabd6a3984aE"(i64 %residual.0, i64 %residual.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc797 to %"core::panic::location::Location"*))
  store { i64, i64 } %22, { i64, i64 }* %0, align 8
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb23

bb23:                                             ; preds = %bb21, %bb11
  br label %bb24

bb12:                                             ; preds = %bb8
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17h4bf4c75e9e56bd50E(i64 4, i64 %cap)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::alloc::layout::Layout::array
  %23 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h2785aa23631a0ad4E(i64 %cap1)
  %new_layout.0 = extractvalue { i64, i64 } %23, 0
  %new_layout.1 = extractvalue { i64, i64 } %23, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hdc1c1d205fb18ca0E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_30, { i64*, i64 }* align 8 %self)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_33 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h149fc6a5f741495aE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %_28, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_30, %"alloc::alloc::Global"* align 1 %_33)
  br label %bb16

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hdff810d60fcfe9b0E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") %_27, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %_28)
  br label %bb17

bb17:                                             ; preds = %bb16
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*
  %_34 = load i64, i64* %24, align 8, !range !7, !noundef !3
  switch i64 %_34, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb18:                                             ; preds = %bb17
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %26 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %25, i32 0, i32 1
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %26, i32 0, i32 0
  %val.0 = load i8*, i8** %27, align 8, !nonnull !3, !noundef !3
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %26, i32 0, i32 1
  %val.1 = load i64, i64* %28, align 8
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17hddbeee04e517f1f6E"({ i64*, i64 }* align 8 %self, i8* %val.0, i64 %val.1, i64 %cap1)
  br label %bb22

bb20:                                             ; preds = %bb17
  %29 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %30 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %29, i32 0, i32 1
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0
  %residual.02 = load i64, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1
  %residual.13 = load i64, i64* %32, align 8, !range !5, !noundef !3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %33 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h12550c67f1637bd4E"(i64 %residual.02, i64 %residual.13, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc799 to %"core::panic::location::Location"*))
  store { i64, i64 } %33, { i64, i64 }* %0, align 8
  br label %bb21

bb21:                                             ; preds = %bb20
  br label %bb23

bb24:                                             ; preds = %bb3, %bb22, %bb23
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8, !range !6, !noundef !3
  %38 = insertvalue { i64, i64 } undef, i64 %35, 0
  %39 = insertvalue { i64, i64 } %38, i64 %37, 1
  ret { i64, i64 } %39

bb22:                                             ; preds = %bb18
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 -9223372036854775807, i64* %40, align 8
  br label %bb24

bb3:                                              ; preds = %bb2
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_5.0, i64* %41, align 8
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_5.1, i64* %42, align 8
  br label %bb24
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hd3c857cb955ec7f6E"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_28 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 24, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !5, !noundef !3
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h83129efac1cdb3faE"(i64 %4, i64 %6)
  %_5.0 = extractvalue { i64, i64 } %7, 0
  %_5.1 = extractvalue { i64, i64 } %7, 1
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h1ad8a36291cc3344E"(i64 %len, i64 %additional)
  %_10.0 = extractvalue { i64, i64 } %8, 0
  %_10.1 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !range !5, !noundef !3
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h9bf5f067cd307435E"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1f68ea66517e3db0E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") %_8, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*
  %_14 = load i64, i64* %14, align 8, !range !7, !noundef !3
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1
  %val = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_20 = load i64, i64* %17, align 8
  %_19 = mul i64 %_20, 2
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17h4bf4c75e9e56bd50E(i64 %_19, i64 %val)
  br label %bb12

bb10:                                             ; preds = %bb7
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %residual.0 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %residual.1 = load i64, i64* %21, align 8, !range !5, !noundef !3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %22 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd462cfabd6a3984aE"(i64 %residual.0, i64 %residual.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc797 to %"core::panic::location::Location"*))
  store { i64, i64 } %22, { i64, i64 }* %0, align 8
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb23

bb23:                                             ; preds = %bb21, %bb11
  br label %bb24

bb12:                                             ; preds = %bb8
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17h4bf4c75e9e56bd50E(i64 4, i64 %cap)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::alloc::layout::Layout::array
  %23 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hcede0e1be8318310E(i64 %cap1)
  %new_layout.0 = extractvalue { i64, i64 } %23, 0
  %new_layout.1 = extractvalue { i64, i64 } %23, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h4521ddcce0498c4dE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_30, { i64*, i64 }* align 8 %self)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_33 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h149fc6a5f741495aE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %_28, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_30, %"alloc::alloc::Global"* align 1 %_33)
  br label %bb16

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hdff810d60fcfe9b0E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") %_27, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %_28)
  br label %bb17

bb17:                                             ; preds = %bb16
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*
  %_34 = load i64, i64* %24, align 8, !range !7, !noundef !3
  switch i64 %_34, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb18:                                             ; preds = %bb17
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %26 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %25, i32 0, i32 1
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %26, i32 0, i32 0
  %val.0 = load i8*, i8** %27, align 8, !nonnull !3, !noundef !3
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %26, i32 0, i32 1
  %val.1 = load i64, i64* %28, align 8
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h716cacba86a3a5c0E"({ i64*, i64 }* align 8 %self, i8* %val.0, i64 %val.1, i64 %cap1)
  br label %bb22

bb20:                                             ; preds = %bb17
  %29 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %30 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %29, i32 0, i32 1
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0
  %residual.02 = load i64, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1
  %residual.13 = load i64, i64* %32, align 8, !range !5, !noundef !3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %33 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h12550c67f1637bd4E"(i64 %residual.02, i64 %residual.13, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc799 to %"core::panic::location::Location"*))
  store { i64, i64 } %33, { i64, i64 }* %0, align 8
  br label %bb21

bb21:                                             ; preds = %bb20
  br label %bb23

bb24:                                             ; preds = %bb3, %bb22, %bb23
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8, !range !6, !noundef !3
  %38 = insertvalue { i64, i64 } undef, i64 %35, 0
  %39 = insertvalue { i64, i64 } %38, i64 %37, 1
  ret { i64, i64 } %39

bb22:                                             ; preds = %bb18
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 -9223372036854775807, i64* %40, align 8
  br label %bb24

bb3:                                              ; preds = %bb2
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_5.0, i64* %41, align 8
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_5.1, i64* %42, align 8
  br label %bb24
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h716cacba86a3a5c0E"({ i64*, i64 }* align 8 %self, i8* %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_6 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h173894d03b6bf12aE"(i8* %ptr.0, i64 %ptr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h48e3c888979da70dE"(i64* %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_4 = call i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hbad6b5a441008e6cE"(%"alloc::vec::Vec<_ProbeNode>"* %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  %0 = bitcast { i64*, i64 }* %self to i64**
  store i64* %_4, i64** %0, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  store i64 %cap, i64* %1, align 8
  ret void
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h96a7ea6b2d1a7082E"({ i8*, i64 }* align 8 %self, i8* %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hd974d218b303352dE"(i8* %ptr.0, i64 %ptr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_4 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5c99dae1d0335b2bE"(i8* %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  %0 = bitcast { i8*, i64 }* %self to i8**
  store i8* %_4, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %cap, i64* %1, align 8
  ret void
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h9b9963f5884759deE"({ i64*, i64 }* align 8 %self, i8* %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_6 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5ff4ac1891867cbcE"(i8* %ptr.0, i64 %ptr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %_ProbeNode* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h187f07e9a8077e76E"(i64* %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_4 = call i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hca59a299ae736800E"(%_ProbeNode* %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  %0 = bitcast { i64*, i64 }* %self to i64**
  store i64* %_4, i64** %0, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  store i64 %cap, i64* %1, align 8
  ret void
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17hddbeee04e517f1f6E"({ i64*, i64 }* align 8 %self, i8* %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_6 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6a58a9255f006314E"(i8* %ptr.0, i64 %ptr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2668ba30b6e2060cE"(i64* %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_4 = call i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h215e984123570049E"({ [0 x i8]*, i64 }* %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  %0 = bitcast { i64*, i64 }* %self to i64**
  store i64* %_4, i64** %0, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  store i64 %cap, i64* %1, align 8
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h866d3c360f02615fE"({ i64*, i64 }* align 8 %self, i64 %len) unnamed_addr #2 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hd3c857cb955ec7f6E"({ i64*, i64 }* align 8 %self, i64 %len, i64 1)
  %_4.0 = extractvalue { i64, i64 } %0, 0
  %_4.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h52fbbb30fc29dfceE(i64 %_4.0, i64 %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h963efc0dd5d090e6E"({ i8*, i64 }* align 8 %self, i64 %len) unnamed_addr #2 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h4ec91aa88bee7d14E"({ i8*, i64 }* align 8 %self, i64 %len, i64 1)
  %_4.0 = extractvalue { i64, i64 } %0, 0
  %_4.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h52fbbb30fc29dfceE(i64 %_4.0, i64 %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17ha4b1ee5c391faad3E"({ i64*, i64 }* align 8 %self, i64 %len) unnamed_addr #2 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h60a7b7f2f9150892E"({ i64*, i64 }* align 8 %self, i64 %len, i64 1)
  %_4.0 = extractvalue { i64, i64 } %0, 0
  %_4.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h52fbbb30fc29dfceE(i64 %_4.0, i64 %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17he1765080ab3af11fE"(i64 %capacity) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  store i8 0, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !2, !noundef !3
  %1 = trunc i8 %0 to i1
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %2 = call { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h27e95fa3bfecd4c9E"(i64 %capacity, i1 zeroext %1)
  %3 = extractvalue { i64*, i64 } %2, 0
  %4 = extractvalue { i64*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { i64*, i64 } undef, i64* %3, 0
  %6 = insertvalue { i64*, i64 } %5, i64 %4, 1
  ret { i64*, i64 } %6
}

; alloc::raw_vec::RawVec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17he3531d83efcbf103E"(i64 %capacity) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  store i8 0, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !2, !noundef !3
  %1 = trunc i8 %0 to i1
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %2 = call { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h1af258a595ab79b3E"(i64 %capacity, i1 zeroext %1)
  %3 = extractvalue { i8*, i64 } %2, 0
  %4 = extractvalue { i8*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1
  ret { i8*, i64 } %6
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hac6d33c3986761f1E"({ i64*, i64 }* align 8 %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i64 }* %self to i64**
  %_2 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h5798e50d50d90568E"(i64* %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::vec::Vec<_ProbeNode>"* %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %_ProbeNode* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hd21855c159d16e07E"({ i64*, i64 }* align 8 %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i64 }* %self to i64**
  %_2 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call %_ProbeNode* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17he756531420a7d159E"(i64* %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %_ProbeNode* %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hf10bd1fca7000351E"({ i8*, i64 }* align 8 %self) unnamed_addr #0 {
start:
  %0 = bitcast { i8*, i64 }* %self to i8**
  %_2 = load i8*, i8** %0, align 8, !nonnull !3, !noundef !3
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h051062658672e4a5E"(i8* %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hf8bba98429f7c0a6E"({ i64*, i64 }* align 8 %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i64 }* %self to i64**
  %_2 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call { [0 x i8]*, i64 }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17haa77a50a27769782E"(i64* %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret { [0 x i8]*, i64 }* %1
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h28ee2be975f19a6fE"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i8*, i64 }, align 8
; invoke core::ptr::unique::Unique<T>::dangling
  %_2 = invoke i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h3a47a2829ecea7a6E"()
          to label %bb1 unwind label %cleanup

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb2

bb1:                                              ; preds = %start
  %7 = bitcast { i8*, i64 }* %1 to i8**
  store i8* %_2, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %8, align 8
  %9 = bitcast { i8*, i64 }* %1 to %"alloc::alloc::Global"*
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8, !nonnull !3, !noundef !3
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { i8*, i64 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i64 } %14, i64 %13, 1
  ret { i8*, i64 } %15

bb3:                                              ; preds = %bb2
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17he055cf6202d02d93E"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i64*, i64 }, align 8
; invoke core::ptr::unique::Unique<T>::dangling
  %_2 = invoke i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17hb39ae4d74540612bE"()
          to label %bb1 unwind label %cleanup

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb2

bb1:                                              ; preds = %start
  %7 = bitcast { i64*, i64 }* %1 to i64**
  store i64* %_2, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %8, align 8
  %9 = bitcast { i64*, i64 }* %1 to %"alloc::alloc::Global"*
  %10 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
  %12 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { i64*, i64 } undef, i64* %11, 0
  %15 = insertvalue { i64*, i64 } %14, i64 %13, 1
  ret { i64*, i64 } %15

bb3:                                              ; preds = %bb2
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h651a33896276f2bfE"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h30cb742058f4c690E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h1f50b76206ded602E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hdb77d2b46f6cf6d2E"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h281809044104b7aeE"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hef509547fd36af12E"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h1f50b76206ded602E"({ i8*, i64 }* align 8 %slf, i64 %len, i64 %additional) unnamed_addr #4 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h4ec91aa88bee7d14E"({ i8*, i64 }* align 8 %slf, i64 %len, i64 %additional)
  %_5.0 = extractvalue { i64, i64 } %0, 0
  %_5.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h52fbbb30fc29dfceE(i64 %_5.0, i64 %_5.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hef509547fd36af12E"({ i64*, i64 }* align 8 %slf, i64 %len, i64 %additional) unnamed_addr #4 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h8e0a2a2e56dbb299E"({ i64*, i64 }* align 8 %slf, i64 %len, i64 %additional)
  %_5.0 = extractvalue { i64, i64 } %0, 0
  %_5.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h52fbbb30fc29dfceE(i64 %_5.0, i64 %_5.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <alloc::string::String as core::fmt::Display>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h1abd42f5566fa5dfE"(%"alloc::string::String"* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 {
start:
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hff37365f7ba2ec55E"(%"alloc::string::String"* align 8 %self)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <str as core::fmt::Display>::fmt
  %1 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h9abc2910b16df253E"([0 x i8]* align 1 %_5.0, i64 %_5.1, %"core::fmt::Formatter"* align 8 %f)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h13d23d08d7338154E"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h299c7b25cba85329E"(%"core::str::iter::Split<&str>"* sret(%"core::str::iter::Split<&str>") %0, %"core::str::iter::Split<&str>"* %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::str::iter::Split<&str>"* %0 to i8*
  %2 = bitcast %"core::str::iter::Split<&str>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 128, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h62b0b94ae63b8b5aE"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h893301cba3a1010dE"(i64* %self.0, i64* %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64*, i64* } undef, i64* %self.0, 0
  %1 = insertvalue { i64*, i64* } %0, i64* %self.1, 1
  ret { i64*, i64* } %1
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5d37c3c4c97e0116E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h72fb6d9d3afefa76E({ i64, i64 }* align 8 %layout)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = icmp eq i64 %_4, 0
  br i1 %4, label %bb5, label %bb2

bb5:                                              ; preds = %bb1
  br label %bb6

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %ptr)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_8.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_8.1 = load i64, i64* %6, align 8, !range !18, !noundef !3
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17h8d77723404aad654E(i8* %_6, i64 %_8.0, i64 %_8.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  ret void
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hfce8e5e7a9a300b7E"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hb3467248fd92eb51E(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hc67b5bf37d4e7affE"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::grow_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h065ef695973454b6E(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h61a85275b253a099E"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hb3467248fd92eb51E(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <core::cell::BorrowRef as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$core..cell..BorrowRef$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6f22f2d5a6da4faeE"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_8 = load i64*, i64** %self, align 8, !nonnull !3, !align !8, !noundef !3
; call core::cell::Cell<T>::get
  %borrow = call i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17hc874a87851ea85fbE"(i64* align 8 %_8)
  br label %bb1

bb1:                                              ; preds = %start
  %_9 = load i64*, i64** %self, align 8, !nonnull !3, !align !8, !noundef !3
  %_6 = sub i64 %borrow, 1
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h2357636728a3c7c5E"(i64* align 8 %_9, i64 %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <core::cell::Ref<T> as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN63_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17hcce0fc3ca130ba4cE"({ i64*, i64* }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 {
start:
; call <core::cell::Ref<T> as core::ops::deref::Deref>::deref
  %_4 = call align 8 %"alloc::string::String"* @"_ZN68_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6cb29ed3a0472e3cE"({ i64*, i64* }* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::string::String as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h1abd42f5566fa5dfE"(%"alloc::string::String"* align 8 %_4, %"core::fmt::Formatter"* align 8 %f)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; <alloc::string::String as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hff37365f7ba2ec55E"(%"alloc::string::String"* align 8 %self) unnamed_addr #0 {
start:
  %_5 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8efdd91602f53adaE"(%"alloc::vec::Vec<u8>"* align 8 %_5)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked
  %1 = call { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17hec9bdbc98aee6333E([0 x i8]* align 1 %_3.0, i64 %_3.1)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; <core::alloc::layout::Layout as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h8ac851099be95f25E"({ i64, i64 }* align 8 %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %1 = load i64, i64* %0, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %3 = load i64, i64* %2, align 8, !range !18, !noundef !3
  %4 = insertvalue { i64, i64 } undef, i64 %1, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <core::cell::BorrowRefMut as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN66_$LT$core..cell..BorrowRefMut$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2fe815f8cb04a2fbE"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_8 = load i64*, i64** %self, align 8, !nonnull !3, !align !8, !noundef !3
; call core::cell::Cell<T>::get
  %borrow = call i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17hc874a87851ea85fbE"(i64* align 8 %_8)
  br label %bb1

bb1:                                              ; preds = %start
  %_9 = load i64*, i64** %self, align 8, !nonnull !3, !align !8, !noundef !3
  %_6 = add i64 %borrow, 1
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h2357636728a3c7c5E"(i64* align 8 %_9, i64 %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <core::cell::RefMut<T> as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN66_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17h058fe8da5778c3e5E"({ i32*, i64* }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 {
start:
; call <core::cell::RefMut<T> as core::ops::deref::Deref>::deref
  %_4 = call align 4 i32* @"_ZN71_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5642805deb8fa4b1E"({ i32*, i64* }* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h233a1fd6693c57bcE"(i32* align 4 %_4, %"core::fmt::Formatter"* align 8 %f)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; <std::io::error::ErrorKind as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN66_$LT$std..io..error..ErrorKind$u20$as$u20$core..cmp..PartialEq$GT$2eq17hec5376d7a016f81fE"(i8* align 1 %self, i8* align 1 %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = load i8, i8* %self, align 1, !range !9, !noundef !3
  %__self_vi = zext i8 %1 to i64
  %2 = load i8, i8* %other, align 1, !range !9, !noundef !3
  %__arg_1_vi = zext i8 %2 to i64
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h367a5493ebe72da7E"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i8, align 1
; call alloc::sync::Arc<T>::inner
  %_4 = call align 8 %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17hec1c270daa3983b2E"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_4 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_6, align 1
  %0 = load i8, i8* %_6, align 1, !range !12, !noundef !3
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h3fb1bc6c06e344ecE(%"core::sync::atomic::AtomicUsize"* align 8 %_3, i64 1, i8 %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = icmp eq i64 %_2, 1
  br i1 %1, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  store i8 2, i8* %_8, align 1
  %2 = load i8, i8* %_8, align 1, !range !12, !noundef !3
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h0a960d597d80f4f4E(i8 %2)
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h67e85ffb4a124dd3E"(i64** align 8 %self)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7559eb5a11871516E"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i8, align 1
; call alloc::sync::Arc<T>::inner
  %_4 = call align 8 %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h43d9ad4cb88caae3E"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_4 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_6, align 1
  %0 = load i8, i8* %_6, align 1, !range !12, !noundef !3
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h3fb1bc6c06e344ecE(%"core::sync::atomic::AtomicUsize"* align 8 %_3, i64 1, i8 %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = icmp eq i64 %_2, 1
  br i1 %1, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  store i8 2, i8* %_8, align 1
  %2 = load i8, i8* %_8, align 1, !range !12, !noundef !3
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h0a960d597d80f4f4E(i8 %2)
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h32b3073a5a51ccd8E"(i64** align 8 %self)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hec2ad667fbd19319E"(i64** align 8 %self) unnamed_addr #0 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i8, align 1
; call alloc::sync::Arc<T>::inner
  %_4 = call align 8 %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17hbad6c5f4e8d1a003E"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_4 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_6, align 1
  %0 = load i8, i8* %_6, align 1, !range !12, !noundef !3
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h3fb1bc6c06e344ecE(%"core::sync::atomic::AtomicUsize"* align 8 %_3, i64 1, i8 %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = icmp eq i64 %_2, 1
  br i1 %1, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  store i8 2, i8* %_8, align 1
  %2 = load i8, i8* %_8, align 1, !range !12, !noundef !3
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h0a960d597d80f4f4E(i8 %2)
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb4c65f94d4d469e3E"(i64** align 8 %self)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2ecb787dad0e8de8E"(i64** align 8 %self) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17ha380f2b0cb261049E"(i64** align 8 %self)
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 1
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0
  %inner.0 = load i64*, i64** %6, align 8, !nonnull !3, !align !8, !noundef !3
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1
  %inner.1 = load i64*, i64** %7, align 8, !nonnull !3, !align !8, !noundef !3
  %_20 = bitcast i64* %inner.0 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_9, align 1
  %8 = load i8, i8* %_9, align 1, !range !12, !noundef !3
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_7 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h3fb1bc6c06e344ecE(%"core::sync::atomic::AtomicUsize"* align 8 %_20, i64 1, i8 %8)
  br label %bb4

bb3:                                              ; preds = %bb1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  ret void

bb4:                                              ; preds = %bb2
  %9 = icmp eq i64 %_7, 1
  br i1 %9, label %bb5, label %bb11

bb5:                                              ; preds = %bb4
  store i8 2, i8* %_11, align 1
  %10 = load i8, i8* %_11, align 1, !range !12, !noundef !3
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h0a960d597d80f4f4E(i8 %10)
  br label %bb6

bb11:                                             ; preds = %bb4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  br label %bb13

bb6:                                              ; preds = %bb5
  %_14 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::cast
  %_13 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5ab5d9af92d364b3E"(i64* %_14)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_18 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb0b277d2cfc6cbefE"(i64* %_18)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::alloc::layout::Layout::for_value_raw
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hd95860f534434cb0E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_17)
  %_15.0 = extractvalue { i64, i64 } %11, 0
  %_15.1 = extractvalue { i64, i64 } %11, 1
  br label %bb9

bb9:                                              ; preds = %bb8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5d37c3c4c97e0116E"(%"alloc::alloc::Global"* align 1 bitcast (<{}>* @alloc222 to %"alloc::alloc::Global"*), i8* %_13, i64 %_15.0, i64 %_15.1)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb12
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6973a29d0d923927E"(i64** align 8 %self) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h59aef1d1899d1f28E"(i64** align 8 %self)
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 1
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0
  %inner.0 = load i64*, i64** %6, align 8, !nonnull !3, !align !8, !noundef !3
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1
  %inner.1 = load i64*, i64** %7, align 8, !nonnull !3, !align !8, !noundef !3
  %_20 = bitcast i64* %inner.0 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_9, align 1
  %8 = load i8, i8* %_9, align 1, !range !12, !noundef !3
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_7 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h3fb1bc6c06e344ecE(%"core::sync::atomic::AtomicUsize"* align 8 %_20, i64 1, i8 %8)
  br label %bb4

bb3:                                              ; preds = %bb1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  ret void

bb4:                                              ; preds = %bb2
  %9 = icmp eq i64 %_7, 1
  br i1 %9, label %bb5, label %bb11

bb5:                                              ; preds = %bb4
  store i8 2, i8* %_11, align 1
  %10 = load i8, i8* %_11, align 1, !range !12, !noundef !3
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h0a960d597d80f4f4E(i8 %10)
  br label %bb6

bb11:                                             ; preds = %bb4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  br label %bb13

bb6:                                              ; preds = %bb5
  %_14 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::cast
  %_13 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h0e138b66c798cf8fE"(i64* %_14)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_18 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h045696f7015da1fbE"(i64* %_18)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::alloc::layout::Layout::for_value_raw
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hccccbd98e44c388dE(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %_17)
  %_15.0 = extractvalue { i64, i64 } %11, 0
  %_15.1 = extractvalue { i64, i64 } %11, 1
  br label %bb9

bb9:                                              ; preds = %bb8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5d37c3c4c97e0116E"(%"alloc::alloc::Global"* align 1 bitcast (<{}>* @alloc222 to %"alloc::alloc::Global"*), i8* %_13, i64 %_15.0, i64 %_15.1)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb12
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he4d7b8b2b52af483E"(i64** align 8 %self) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h61927d49d0c6b123E"(i64** align 8 %self)
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 1
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0
  %inner.0 = load i64*, i64** %6, align 8, !nonnull !3, !align !8, !noundef !3
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1
  %inner.1 = load i64*, i64** %7, align 8, !nonnull !3, !align !8, !noundef !3
  %_20 = bitcast i64* %inner.0 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_9, align 1
  %8 = load i8, i8* %_9, align 1, !range !12, !noundef !3
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_7 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h3fb1bc6c06e344ecE(%"core::sync::atomic::AtomicUsize"* align 8 %_20, i64 1, i8 %8)
  br label %bb4

bb3:                                              ; preds = %bb1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  ret void

bb4:                                              ; preds = %bb2
  %9 = icmp eq i64 %_7, 1
  br i1 %9, label %bb5, label %bb11

bb5:                                              ; preds = %bb4
  store i8 2, i8* %_11, align 1
  %10 = load i8, i8* %_11, align 1, !range !12, !noundef !3
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h0a960d597d80f4f4E(i8 %10)
  br label %bb6

bb11:                                             ; preds = %bb4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  br label %bb13

bb6:                                              ; preds = %bb5
  %_14 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::cast
  %_13 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h830f356fcee4a203E"(i64* %_14)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_18 = load i64*, i64** %self, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h566cc3b78e934cc0E"(i64* %_18)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::alloc::layout::Layout::for_value_raw
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hd9f30ba4f7f968ddE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_17)
  %_15.0 = extractvalue { i64, i64 } %11, 0
  %_15.1 = extractvalue { i64, i64 } %11, 1
  br label %bb9

bb9:                                              ; preds = %bb8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5d37c3c4c97e0116E"(%"alloc::alloc::Global"* align 1 bitcast (<{}>* @alloc222 to %"alloc::alloc::Global"*), i8* %_13, i64 %_15.0, i64 %_15.1)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb12
}

; <core::cell::Ref<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN68_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h1a48521ee60e2b30E"({ i64*, i64* }* align 8 %self) unnamed_addr #0 {
start:
  %_2 = bitcast { i64*, i64* }* %self to i64**
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h4fa34fd9f64f714cE"(i64** align 8 %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <core::cell::Ref<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::string::String"* @"_ZN68_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6cb29ed3a0472e3cE"({ i64*, i64* }* align 8 %self) unnamed_addr #0 {
start:
  %_2 = bitcast { i64*, i64* }* %self to i64**
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 %"alloc::string::String"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hd947d57a4e3304a1E"(i64** align 8 %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::string::String"* %0
}

; <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 %_ProbeSemaphore* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h29e7026afe47dda5E"(i64** align 8 %self) unnamed_addr #0 {
start:
; call alloc::sync::Arc<T>::inner
  %_2 = call align 8 %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17hec1c270daa3983b2E"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::sync::ArcInner<_ProbeSemaphore>", %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_2, i32 0, i32 2
  ret %_ProbeSemaphore* %0
}

; <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5f90111ba101acefE"(i64** align 8 %self) unnamed_addr #0 {
start:
; call alloc::sync::Arc<T>::inner
  %_2 = call align 8 %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h43d9ad4cb88caae3E"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_2, i32 0, i32 2
  ret %"std::sync::mutex::Mutex<std::fs::File>"* %0
}

; <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9b6e721c9d5aae01E"(i64** align 8 %self) unnamed_addr #0 {
start:
; call alloc::sync::Arc<T>::inner
  %_2 = call align 8 %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17hbad6c5f4e8d1a003E"(i64** align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %_2, i32 0, i32 2
  ret %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %0
}

; <std::os::fd::owned::OwnedFd as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0bff09c81b3ffd10E"(i32* align 4 %self) unnamed_addr #0 {
start:
  %_3 = load i32, i32* %self, align 4
  %_2 = call i32 @close(i32 %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0c23ec2892382bceE"(%"alloc::vec::Vec<&str>"* align 8 %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h197f6d120c9fd40bE"(%"alloc::vec::Vec<&str>"* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hfbb538f3dd4fe013E({ [0 x i8]*, i64 }* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h27063ca47600abceE"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hb8dd395c40cf84b5E"(%"alloc::vec::Vec<u8>"* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h899b5789493e1550E(i8* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb2f14b15fa09dc15E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h5cd4c5ebc3d00fd3E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h34e52b72ff86fc97E(%"alloc::vec::Vec<_ProbeNode>"* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<[alloc::vec::Vec<probe_RSE::_ProbeNode>]>
  call void @"_ZN4core3ptr75drop_in_place$LT$$u5b$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$u5d$$GT$17h0d3610e516b5640fE"([0 x %"alloc::vec::Vec<_ProbeNode>"]* %_2.0, i64 %_2.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he85196254b0f3720E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call %_ProbeNode* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hd9e6e84d30f9236bE"(%"alloc::vec::Vec<_ProbeNode>"* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x %_ProbeNode]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h3401788f4ff7fdb1E(%_ProbeNode* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x %_ProbeNode]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x %_ProbeNode]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<[probe_RSE::_ProbeNode]>
  call void @"_ZN4core3ptr52drop_in_place$LT$$u5b$probe_RSE.._ProbeNode$u5d$$GT$17h2d3ecd9134fca327E"([0 x %_ProbeNode]* %_2.0, i64 %_2.1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <[T] as core::convert::AsRef<[T]>>::as_ref
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17hc6d73999908a91caE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %self.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %self.1, 1
  ret { [0 x i8]*, i64 } %1
}

; <core::cell::RefMut<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 i32* @"_ZN71_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5642805deb8fa4b1E"({ i32*, i64* }* align 8 %self) unnamed_addr #0 {
start:
  %_2 = bitcast { i32*, i64* }* %self to i32**
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 4 i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17ha6a21f4ce1840bbdE"(i32** align 8 %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %0
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %_ProbeNode]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h14f4d4727fa4751dE"(%"alloc::vec::Vec<_ProbeNode>"* align 8 %self) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call %_ProbeNode* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hb7801951afae94c1E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %0, align 8
; call core::slice::raw::from_raw_parts
  %1 = call { [0 x %_ProbeNode]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hfdc852c870656565E(%_ProbeNode* %_2, i64 %_4)
  %2 = extractvalue { [0 x %_ProbeNode]*, i64 } %1, 0
  %3 = extractvalue { [0 x %_ProbeNode]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x %_ProbeNode]*, i64 } undef, [0 x %_ProbeNode]* %2, 0
  %5 = insertvalue { [0 x %_ProbeNode]*, i64 } %4, i64 %3, 1
  ret { [0 x %_ProbeNode]*, i64 } %5
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2f597aa6cc694d53E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %self) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hecd0bdacad2d730cE"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %0, align 8
; call core::slice::raw::from_raw_parts
  %1 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core5slice3raw14from_raw_parts17ha19eb9fe9ad544a9E(%"alloc::vec::Vec<_ProbeNode>"* %_2, i64 %_4)
  %2 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 0
  %3 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %2, 0
  %5 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %4, i64 %3, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %5
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x { [0 x i8]*, i64 }]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4ea24fda51aceebdE"(%"alloc::vec::Vec<&str>"* align 8 %self) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h36c88e927925f111E"(%"alloc::vec::Vec<&str>"* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %0, align 8
; call core::slice::raw::from_raw_parts
  %1 = call { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hfd6fecc01def4661E({ [0 x i8]*, i64 }* %_2, i64 %_4)
  %2 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %1, 0
  %3 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } undef, [0 x { [0 x i8]*, i64 }]* %2, 0
  %5 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %4, i64 %3, 1
  ret { [0 x { [0 x i8]*, i64 }]*, i64 } %5
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8efdd91602f53adaE"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h3c56131cdf3fc8d4E"(%"alloc::vec::Vec<u8>"* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %0, align 8
; call core::slice::raw::from_raw_parts
  %1 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hb3af32f06dd41e01E(i8* %_2, i64 %_4)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h1838e1c4dbd6dff4E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_3 = icmp ne i64 %self.1, %other.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call core::mem::size_of_val
  %size = call i64 @_ZN4core3mem11size_of_val17h936acb577fba88a0E([0 x i8]* align 1 %self.0, i64 %self.1)
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb1
  %1 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %2 = trunc i8 %1 to i1
  ret i1 %2

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::as_ptr
  %_12 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h3b354085a3fa771eE"([0 x i8]* align 1 %self.0, i64 %self.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::slice::<impl [T]>::as_ptr
  %_15 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h3b354085a3fa771eE"([0 x i8]* align 1 %other.0, i64 %other.1)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_10 = call i32 @memcmp(i8* %_12, i8* %_15, i64 %size)
  br label %bb6

bb6:                                              ; preds = %bb5
  %3 = icmp eq i32 %_10, 0
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %0, align 1
  br label %bb7
}

; <core::cell::RefMut<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::string::String"* @"_ZN74_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h90b7c033cbd7ee25E"({ i64*, i64* }* align 8 %self) unnamed_addr #0 {
start:
  %_5 = bitcast { i64*, i64* }* %self to i64**
; call core::ptr::non_null::NonNull<T>::as_mut
  %_4 = call align 8 %"alloc::string::String"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17hacfcd61fbf0b9d96E"(i64** align 8 %_5)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::string::String"* %_4
}

; <core::cell::RefMut<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 i32* @"_ZN74_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hb89790c759197fd9E"({ i32*, i64* }* align 8 %self) unnamed_addr #0 {
start:
  %_5 = bitcast { i32*, i64* }* %self to i32**
; call core::ptr::non_null::NonNull<T>::as_mut
  %_4 = call align 4 i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17hc5e49e044582e02fE"(i32** align 8 %_5)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_4
}

; <core::cell::RefMut<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN74_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hb9efb12da34e96abE"({ i64*, i64* }* align 8 %self) unnamed_addr #0 {
start:
  %_5 = bitcast { i64*, i64* }* %self to i64**
; call core::ptr::non_null::NonNull<T>::as_mut
  %_4 = call align 8 i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17h1be921262d3b550bE"(i64** align 8 %_5)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %_4
}

; <alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @"_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hb97d5afd772bd192E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %self) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_5 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h5cd4c5ebc3d00fd3E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %self, i32 0, i32 1
  %_7 = load i64, i64* %0, align 8
; call core::slice::raw::from_raw_parts_mut
  %1 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17h04f7b6f0ace3c3aeE(%"alloc::vec::Vec<_ProbeNode>"* %_5, i64 %_7)
  %_4.0 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } undef, [0 x %"alloc::vec::Vec<_ProbeNode>"]* %_4.0, 0
  %3 = insertvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %3
}

; <core::option::Option<T> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h698e9ed9f43e31e3E"(i64 %output) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %output, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !range !7, !noundef !3
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha9cbb96c13bf50d0E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !7, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %6, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %v = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %v, i64* %8, align 8
  %9 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %9, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %11 = load i64, i64* %10, align 8, !range !7, !noundef !3
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1
  ret { i64, i64 } %15
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 i8* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb8530702e5107c56E"(i8* align 1 %0) unnamed_addr #0 {
start:
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast i8** %1 to {}**
  store {}* null, {}** %5, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !3, !align !4, !noundef !3
  store i8* %v, i8** %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i8*, i8** %1, align 8, !align !4
  ret i8* %6
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h8ed8ecfd2e7b76b1E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hd58cfd309dc5a254E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_4, i64 %self
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h58700e2b4cacdde0E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %_3 = icmp ult i64 %self, %slice.1
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast i8** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_9 = call i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h8ed8ecfd2e7b76b1E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8* %_9, i8** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %2 = load i8*, i8** %0, align 8, !align !4
  ret i8* %2
}

; <usize as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 { [0 x i8]*, i64 }* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h7cee16fc30b5f4c7E"(i64 %self, [0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
  %_5 = icmp ult i64 %self, %slice.1
  %1 = call i1 @llvm.expect.i1(i1 %_5, i1 true)
  br i1 %1, label %bb1, label %panic

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [0 x { [0 x i8]*, i64 }], [0 x { [0 x i8]*, i64 }]* %slice.0, i64 0, i64 %self
  ret { [0 x i8]*, i64 }* %2

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h0c2afddde5e93a98E(i64 %self, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) #16
  unreachable
}

; <usize as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::vec::Vec<_ProbeNode>"* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5ce29ca5edb49721E"(i64 %self, [0 x %"alloc::vec::Vec<_ProbeNode>"]* align 8 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
  %_7 = icmp ult i64 %self, %slice.1
  %1 = call i1 @llvm.expect.i1(i1 %_7, i1 true)
  br i1 %1, label %bb1, label %panic

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds [0 x %"alloc::vec::Vec<_ProbeNode>"], [0 x %"alloc::vec::Vec<_ProbeNode>"]* %slice.0, i64 0, i64 %self
  ret %"alloc::vec::Vec<_ProbeNode>"* %_4

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h0c2afddde5e93a98E(i64 %self, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) #16
  unreachable
}

; <alloc::string::String as core::convert::From<&str>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h5aa1ea86c096e88dE"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h4b6b67ee4f32cf84E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x i8]* align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hb60005733391d9f1E"({ i32*, i8 }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 {
start:
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  call void @_ZN4core3fmt9Formatter12debug_struct17h006f41a133dd71adE(%"core::fmt::builders::DebugStruct"* sret(%"core::fmt::builders::DebugStruct") %_4, %"core::fmt::Formatter"* align 8 %f, [0 x i8]* align 1 bitcast (<{ [11 x i8] }>* @alloc802 to [0 x i8]*), i64 11)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %0 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h11c6a9dded3454aaE(%"core::fmt::builders::DebugStruct"* align 8 %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hbc7e5de43e347243E"({ i32*, i8 }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 {
start:
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  call void @_ZN4core3fmt9Formatter12debug_struct17h006f41a133dd71adE(%"core::fmt::builders::DebugStruct"* sret(%"core::fmt::builders::DebugStruct") %_4, %"core::fmt::Formatter"* align 8 %f, [0 x i8]* align 1 bitcast (<{ [11 x i8] }>* @alloc802 to [0 x i8]*), i64 11)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %0 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h11c6a9dded3454aaE(%"core::fmt::builders::DebugStruct"* align 8 %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hc1b125b91bcf889eE"({ i64*, i8 }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 {
start:
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  call void @_ZN4core3fmt9Formatter12debug_struct17h006f41a133dd71adE(%"core::fmt::builders::DebugStruct"* sret(%"core::fmt::builders::DebugStruct") %_4, %"core::fmt::Formatter"* align 8 %f, [0 x i8]* align 1 bitcast (<{ [11 x i8] }>* @alloc802 to [0 x i8]*), i64 11)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %0 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h11c6a9dded3454aaE(%"core::fmt::builders::DebugStruct"* align 8 %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0cccc16ec20c5f85E"({ i64*, i64 }* align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hdc1c1d205fb18ca0E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i64*, i64 }* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1
  %1 = load i64, i64* %0, align 8, !range !5, !noundef !3
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !3, !noundef !3
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !18, !noundef !3
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5d37c3c4c97e0116E"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc5681820a40eae58E"({ i64*, i64 }* align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h5e3813ede19fa220E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i64*, i64 }* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1
  %1 = load i64, i64* %0, align 8, !range !5, !noundef !3
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !3, !noundef !3
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !18, !noundef !3
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5d37c3c4c97e0116E"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hd4abd811e2269644E"({ i64*, i64 }* align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h4521ddcce0498c4dE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i64*, i64 }* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1
  %1 = load i64, i64* %0, align 8, !range !5, !noundef !3
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !3, !noundef !3
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !18, !noundef !3
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5d37c3c4c97e0116E"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfe377038d2334d31E"({ i8*, i64 }* align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h7eb9f228f0e0147eE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i8*, i64 }* align 8 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1
  %1 = load i64, i64* %0, align 8, !range !5, !noundef !3
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !3, !noundef !3
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !18, !noundef !3
  %_7 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h5d37c3c4c97e0116E"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h3fc0e518081a5fdeE"({ i64, i64 }* align 8 %self) unnamed_addr #0 {
start:
  %_2 = alloca i64*, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = bitcast i64** %_2 to { i64, i64 }**
  store { i64, i64 }* %self, { i64, i64 }** %1, align 8
  %2 = bitcast i64** %_2 to { i64, i64 }**
  %_10 = load { i64, i64 }*, { i64, i64 }** %2, align 8, !nonnull !3, !align !8, !noundef !3
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  %4 = load i64, i64* %3, align 8, !range !5, !noundef !3
  %5 = icmp eq i64 %4, 0
  %_4 = select i1 %5, i64 0, i64 1
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  br label %bb5

bb1:                                              ; preds = %start
  %7 = bitcast i64** %_2 to { i64, i64 }**
  %_11 = load { i64, i64 }*, { i64, i64 }** %7, align 8, !nonnull !3, !align !8, !noundef !3
; call <core::alloc::layout::Layout as core::clone::Clone>::clone
  %8 = call { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h8ac851099be95f25E"({ i64, i64 }* align 8 %_11)
  %_7.0 = extractvalue { i64, i64 } %8, 0
  %_7.1 = extractvalue { i64, i64 } %8, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_7.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_7.1, i64* %10, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8, !range !5, !noundef !3
  %15 = insertvalue { i64, i64 } undef, i64 %12, 0
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1
  ret { i64, i64 } %16
}

; <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h27d3238970988e1cE"(i8** align 8 %self) unnamed_addr #0 {
start:
  %_2 = alloca %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>", align 8
  %_3 = load i8*, i8** %self, align 8, !nonnull !3, !noundef !3
; call std::io::error::repr_bitpacked::decode_repr
  call void @_ZN3std2io5error14repr_bitpacked11decode_repr17h3629a2e1bcf13274E(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* sret(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>") %_2, i8* %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>>
  call void @"_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17h8b076db4a92ee006E"(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"std::io::error::Custom"* @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17ha79ba72a39a31787E"(%"std::io::error::Custom"* %p) unnamed_addr #0 {
start:
; call alloc::boxed::Box<T>::from_raw
  %0 = call align 8 %"std::io::error::Custom"* @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17ha0a57454814b31afE"(%"std::io::error::Custom"* %p)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::io::error::Custom"* %0
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1f68ea66517e3db0E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") %0, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !7, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1
  %v = load i64, i64* %3, align 8
  %4 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %5 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %4, i32 0, i32 1
  store i64 %v, i64* %5, align 8
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to i64*
  store i64 0, i64* %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*
  %8 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %7, i32 0, i32 1
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0
  %e.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1
  %e.1 = load i64, i64* %10, align 8, !range !5, !noundef !3
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %12, align 8
  %13 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %14 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %13, i32 0, i32 1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %18 = load i64, i64* %17, align 8, !range !5, !noundef !3
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0
  store i64 %16, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h366739adea08c8e6E"(i64* align 8 %0) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err", align 1
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i64** %self to %"core::cell::RefCell<alloc::string::String>"**
  %v = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %5, align 8, !nonnull !3, !align !8, !noundef !3
  %6 = bitcast i64** %1 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %v, %"core::cell::RefCell<alloc::string::String>"** %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"* %_6 to %"std::thread::local::AccessError"*
  %8 = bitcast i64** %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::RefCell<alloc::string::String>>::Break"*
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::RefCell<alloc::string::String>>::Break"* %8 to %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"*
  %10 = bitcast i64** %1 to {}**
  store {}* null, {}** %10, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %11 = load i64*, i64** %1, align 8, !align !8
  ret i64* %11
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h43ec1fd6310e1b7dE"(i8* %0, i64 %1) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_2 = select i1 %7, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  %v.0 = load i8*, i8** %8, align 8, !nonnull !3, !noundef !3
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %v.1 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %v.0, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %v.1, i64* %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %12 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %_6 to %"core::alloc::AllocError"*
  %13 = bitcast { i8*, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %13 to %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"*
  %15 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1
  ret { i8*, i64 } %21
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a421a2288584c59E"(i64* align 8 %0) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err", align 1
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i64** %self to { i64, i64 }**
  %v = load { i64, i64 }*, { i64, i64 }** %5, align 8, !nonnull !3, !align !8, !noundef !3
  %6 = bitcast i64** %1 to { i64, i64 }**
  store { i64, i64 }* %v, { i64, i64 }** %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"* %_6 to %"std::thread::local::AccessError"*
  %8 = bitcast i64** %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::RefCell<usize>>::Break"*
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::RefCell<usize>>::Break"* %8 to %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"*
  %10 = bitcast i64** %1 to {}**
  store {}* null, {}** %10, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %11 = load i64*, i64** %1, align 8, !align !8
  ret i64* %11
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a9f81cba73ee9b7E"(i8* %0) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !3, !noundef !3
  store i8* %v, i8** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %_6 to %"core::alloc::AllocError"*
  %6 = bitcast i8** %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break"*
  %7 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break"* %6 to %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"*
  %8 = bitcast i8** %1 to {}**
  store {}* null, {}** %8, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8*, i8** %1, align 8
  ret i8* %9
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9d2cbeb3fdbb5df6E"(i64* align 8 %0) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err", align 1
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i64** %self to { i64, i32 }**
  %v = load { i64, i32 }*, { i64, i32 }** %5, align 8, !nonnull !3, !align !8, !noundef !3
  %6 = bitcast i64** %1 to { i64, i32 }**
  store { i64, i32 }* %v, { i64, i32 }** %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"* %_6 to %"std::thread::local::AccessError"*
  %8 = bitcast i64** %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::RefCell<i32>>::Break"*
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::RefCell<i32>>::Break"* %8 to %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"*
  %10 = bitcast i64** %1 to {}**
  store {}* null, {}** %10, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %11 = load i64*, i64** %1, align 8, !align !8
  ret i64* %11
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17haaee4af6145f68bcE"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !7, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %v = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %v, i64* %7, align 8
  %8 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %8, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %_6 to %"core::alloc::layout::LayoutError"*
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %11 = bitcast i64* %10 to %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"*
  %12 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %12, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %14 = load i64, i64* %13, align 8, !range !7, !noundef !3
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1
  ret { i64, i64 } %18
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hdff810d60fcfe9b0E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") %0, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !7, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0
  %v.0 = load i8*, i8** %4, align 8, !nonnull !3, !noundef !3
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %v.1 = load i64, i64* %5, align 8
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %7, i32 0, i32 0
  store i8* %v.0, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %7, i32 0, i32 1
  store i64 %v.1, i64* %9, align 8
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  %e.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  %e.1 = load i64, i64* %14, align 8, !range !5, !noundef !3
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %16, align 8
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %22 = load i64, i64* %21, align 8, !range !5, !noundef !3
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to i64*
  store i64 1, i64* %25, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he8888c209e6ab034E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !6, !noundef !3
  %7 = sub i64 %6, -9223372036854775807
  %8 = icmp eq i64 %7, 0
  %_2 = select i1 %8, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue"*
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue"* %9 to {}*
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 -9223372036854775807, i64* %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %e.0 = load i64, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %e.1 = load i64, i64* %13, align 8, !range !5, !noundef !3
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %19 = load i64, i64* %18, align 8, !range !5, !noundef !3
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  store i64 %17, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %19, i64* %21, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %25 = load i64, i64* %24, align 8, !range !6, !noundef !3
  %26 = insertvalue { i64, i64 } undef, i64 %23, 0
  %27 = insertvalue { i64, i64 } %26, i64 %25, 1
  ret { i64, i64 } %27
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfbc8f5dfb5de5fa7E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>") %0, %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !7, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %v.0 = load i64, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %v.1 = load i64, i64* %5, align 8, !range !18, !noundef !3
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0
  store i64 %v.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1
  store i64 %v.1, i64* %9, align 8
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  %e.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  %e.1 = load i64, i64* %14, align 8, !range !5, !noundef !3
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %16, align 8
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %22 = load i64, i64* %21, align 8, !range !5, !noundef !3
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to i64*
  store i64 1, i64* %25, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5b7dea98b0e6d3b5E"({ i32*, i8 }* align 8 %self) unnamed_addr #0 {
start:
  %0 = bitcast { i32*, i8 }* %self to %"std::sync::mutex::Mutex<i32>"**
  %_8 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %0, align 8, !nonnull !3, !align !13, !noundef !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %_8, i32 0, i32 1
  %_5 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %self, i32 0, i32 1
; call std::sync::poison::Flag::done
  call void @_ZN3std4sync6poison4Flag4done17h46dcba1c0700218dE(%"std::sync::poison::Flag"* align 1 %_3, i8* align 1 %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i32*, i8 }* %self to %"std::sync::mutex::Mutex<i32>"**
  %_9 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %1, align 8, !nonnull !3, !align !13, !noundef !3
  %_7 = bitcast %"std::sync::mutex::Mutex<i32>"* %_9 to %"std::sys_common::mutex::MovableMutex"*
; call std::sys_common::mutex::MovableMutex::raw_unlock
  call void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17ha75d423e1e710008E(%"std::sys_common::mutex::MovableMutex"* align 4 %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h637977af41ac9c9cE"({ i64*, i8 }* align 8 %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"**
  %_8 = load %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"*, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"** %0, align 8, !nonnull !3, !align !8, !noundef !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_8, i32 0, i32 1
  %_5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %self, i32 0, i32 1
; call std::sync::poison::Flag::done
  call void @_ZN3std4sync6poison4Flag4done17h46dcba1c0700218dE(%"std::sync::poison::Flag"* align 1 %_3, i8* align 1 %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"**
  %_9 = load %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"*, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"** %1, align 8, !nonnull !3, !align !8, !noundef !3
  %_7 = bitcast %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_9 to %"std::sys_common::mutex::MovableMutex"*
; call std::sys_common::mutex::MovableMutex::raw_unlock
  call void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17ha75d423e1e710008E(%"std::sys_common::mutex::MovableMutex"* align 4 %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc5eb041429a507caE"({ i32*, i8 }* align 8 %self) unnamed_addr #0 {
start:
  %0 = bitcast { i32*, i8 }* %self to %"std::sync::mutex::Mutex<std::fs::File>"**
  %_8 = load %"std::sync::mutex::Mutex<std::fs::File>"*, %"std::sync::mutex::Mutex<std::fs::File>"** %0, align 8, !nonnull !3, !align !13, !noundef !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %_8, i32 0, i32 1
  %_5 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %self, i32 0, i32 1
; call std::sync::poison::Flag::done
  call void @_ZN3std4sync6poison4Flag4done17h46dcba1c0700218dE(%"std::sync::poison::Flag"* align 1 %_3, i8* align 1 %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i32*, i8 }* %self to %"std::sync::mutex::Mutex<std::fs::File>"**
  %_9 = load %"std::sync::mutex::Mutex<std::fs::File>"*, %"std::sync::mutex::Mutex<std::fs::File>"** %1, align 8, !nonnull !3, !align !13, !noundef !3
  %_7 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %_9 to %"std::sys_common::mutex::MovableMutex"*
; call std::sys_common::mutex::MovableMutex::raw_unlock
  call void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17ha75d423e1e710008E(%"std::sys_common::mutex::MovableMutex"* align 4 %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h718c7bf83656aeb2E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::StrSearcher"* align 8 %self) unnamed_addr #0 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %3 = alloca { [0 x i8]*, i64 }, align 8
  %4 = alloca { [0 x i8]*, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_3 = alloca %"core::str::pattern::SearchStep", align 8
  %5 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %6 = bitcast %"core::str::pattern::StrSearcherImpl"* %5 to i64*
  %_2 = load i64, i64* %6, align 8, !range !7, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %8 = bitcast %"core::str::pattern::StrSearcherImpl"* %7 to %"core::str::pattern::StrSearcherImpl::TwoWay"*
  %searcher = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", %"core::str::pattern::StrSearcherImpl::TwoWay"* %8, i32 0, i32 1
  %9 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 6
  %_13 = load i64, i64* %9, align 8
  %is_long = icmp eq i64 %_13, -1
  br i1 %is_long, label %bb10, label %bb14

bb14:                                             ; preds = %bb1
  %10 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0
  %_31.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !nonnull !3, !align !4, !noundef !3
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1
  %_31.1 = load i64, i64* %12, align 8
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %_31.0, [0 x i8]** %13, align 8
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %_31.1, i64* %14, align 8
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  %16 = load [0 x i8]*, [0 x i8]** %15, align 8, !nonnull !3, !align !4, !noundef !3
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %16, 0
  %20 = insertvalue { [0 x i8]*, i64 } %19, i64 %18, 1
  %_24.0 = extractvalue { [0 x i8]*, i64 } %20, 0
  %_24.1 = extractvalue { [0 x i8]*, i64 } %20, 1
  br label %bb15

bb10:                                             ; preds = %bb1
  %21 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 0
  %_29.0 = load [0 x i8]*, [0 x i8]** %22, align 8, !nonnull !3, !align !4, !noundef !3
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 1
  %_29.1 = load i64, i64* %23, align 8
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %_29.0, [0 x i8]** %24, align 8
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %_29.1, i64* %25, align 8
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %27 = load [0 x i8]*, [0 x i8]** %26, align 8, !nonnull !3, !align !4, !noundef !3
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %27, 0
  %31 = insertvalue { [0 x i8]*, i64 } %30, i64 %29, 1
  %_17.0 = extractvalue { [0 x i8]*, i64 } %31, 0
  %_17.1 = extractvalue { [0 x i8]*, i64 } %31, 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %32 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0
  %_30.0 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !3, !align !4, !noundef !3
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1
  %_30.1 = load i64, i64* %34, align 8
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %_30.0, [0 x i8]** %35, align 8
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %_30.1, i64* %36, align 8
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  %38 = load [0 x i8]*, [0 x i8]** %37, align 8, !nonnull !3, !align !4, !noundef !3
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %38, 0
  %42 = insertvalue { [0 x i8]*, i64 } %41, i64 %40, 1
  %_20.0 = extractvalue { [0 x i8]*, i64 } %42, 0
  %_20.1 = extractvalue { [0 x i8]*, i64 } %42, 1
  br label %bb12

bb12:                                             ; preds = %bb11
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17hf7bc3354858c462aE(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::TwoWaySearcher"* align 8 %searcher, [0 x i8]* align 1 %_17.0, i64 %_17.1, [0 x i8]* align 1 %_20.0, i64 %_20.1, i1 zeroext true)
  br label %bb13

bb13:                                             ; preds = %bb12
  br label %bb18

bb18:                                             ; preds = %bb17, %bb13
  br label %bb20

bb15:                                             ; preds = %bb14
  %43 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %43, i32 0, i32 0
  %_32.0 = load [0 x i8]*, [0 x i8]** %44, align 8, !nonnull !3, !align !4, !noundef !3
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %43, i32 0, i32 1
  %_32.1 = load i64, i64* %45, align 8
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  store [0 x i8]* %_32.0, [0 x i8]** %46, align 8
  %47 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  store i64 %_32.1, i64* %47, align 8
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  %49 = load [0 x i8]*, [0 x i8]** %48, align 8, !nonnull !3, !align !4, !noundef !3
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %49, 0
  %53 = insertvalue { [0 x i8]*, i64 } %52, i64 %51, 1
  %_27.0 = extractvalue { [0 x i8]*, i64 } %53, 0
  %_27.1 = extractvalue { [0 x i8]*, i64 } %53, 1
  br label %bb16

bb16:                                             ; preds = %bb15
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17hf7bc3354858c462aE(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::TwoWaySearcher"* align 8 %searcher, [0 x i8]* align 1 %_24.0, i64 %_24.1, [0 x i8]* align 1 %_27.0, i64 %_27.1, i1 zeroext false)
  br label %bb17

bb17:                                             ; preds = %bb16
  br label %bb18

bb20:                                             ; preds = %bb19, %bb18
  ret void

bb4:                                              ; preds = %bb6, %bb3
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
  call void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h6d32a11537fe0983E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %_3, %"core::str::pattern::StrSearcher"* align 8 %self)
  br label %bb5

bb5:                                              ; preds = %bb4
  %54 = bitcast %"core::str::pattern::SearchStep"* %_3 to i64*
  %_5 = load i64, i64* %54, align 8, !range !22, !noundef !3
  switch i64 %_5, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
    i64 2, label %bb9
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb5
  %55 = bitcast %"core::str::pattern::SearchStep"* %_3 to %"core::str::pattern::SearchStep::Match"*
  %56 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %55, i32 0, i32 1
  %a = load i64, i64* %56, align 8
  %57 = bitcast %"core::str::pattern::SearchStep"* %_3 to %"core::str::pattern::SearchStep::Match"*
  %58 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %57, i32 0, i32 2
  %b = load i64, i64* %58, align 8
  %59 = bitcast { i64, i64 }* %_8 to i64*
  store i64 %a, i64* %59, align 8
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  store i64 %b, i64* %60, align 8
  %61 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*
  %62 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %61, i32 0, i32 1
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %62, i32 0, i32 0
  store i64 %64, i64* %67, align 8
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %62, i32 0, i32 1
  store i64 %66, i64* %68, align 8
  %69 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 1, i64* %69, align 8
  br label %bb19

bb6:                                              ; preds = %bb5
  br label %bb4

bb9:                                              ; preds = %bb5
  %70 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %70, align 8
  br label %bb19

bb19:                                             ; preds = %bb8, %bb9
  br label %bb20
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h6d32a11537fe0983E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, %"core::str::pattern::StrSearcher"* align 8 %self) unnamed_addr #0 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %otherwise = alloca %"core::str::pattern::SearchStep", align 8
  %b = alloca i64, align 8
  %_32 = alloca %"core::str::pattern::SearchStep", align 8
  %_14 = alloca i64, align 8
  %_10 = alloca { i8*, i8* }, align 8
  %_8 = alloca i32, align 4
  %3 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %4 = bitcast %"core::str::pattern::StrSearcherImpl"* %3 to i64*
  %_2 = load i64, i64* %4, align 8, !range !7, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %6 = bitcast %"core::str::pattern::StrSearcherImpl"* %5 to %"core::str::pattern::StrSearcherImpl::Empty"*
  %searcher1 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", %"core::str::pattern::StrSearcherImpl::Empty"* %6, i32 0, i32 1
  %7 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 4
  %8 = load i8, i8* %7, align 2, !range !2, !noundef !3
  %_4 = trunc i8 %8 to i1
  br i1 %_4, label %bb4, label %bb5

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2
  %10 = bitcast %"core::str::pattern::StrSearcherImpl"* %9 to %"core::str::pattern::StrSearcherImpl::TwoWay"*
  %searcher = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", %"core::str::pattern::StrSearcherImpl::TwoWay"* %10, i32 0, i32 1
  %11 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4
  %_27 = load i64, i64* %11, align 8
  %12 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0
  %_54.0 = load [0 x i8]*, [0 x i8]** %13, align 8, !nonnull !3, !align !4, !noundef !3
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1
  %_54.1 = load i64, i64* %14, align 8
; call core::str::<impl str>::len
  %_28 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hbd31a0d5f968687bE"([0 x i8]* align 1 %_54.0, i64 %_54.1)
  br label %bb16

bb16:                                             ; preds = %bb1
  %_26 = icmp eq i64 %_27, %_28
  br i1 %_26, label %bb17, label %bb18

bb18:                                             ; preds = %bb16
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 6
  %_31 = load i64, i64* %15, align 8
  %is_long = icmp eq i64 %_31, -1
  %16 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0
  %_56.0 = load [0 x i8]*, [0 x i8]** %17, align 8, !nonnull !3, !align !4, !noundef !3
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1
  %_56.1 = load i64, i64* %18, align 8
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %_56.0, [0 x i8]** %19, align 8
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %_56.1, i64* %20, align 8
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %22 = load [0 x i8]*, [0 x i8]** %21, align 8, !nonnull !3, !align !4, !noundef !3
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %22, 0
  %26 = insertvalue { [0 x i8]*, i64 } %25, i64 %24, 1
  %_35.0 = extractvalue { [0 x i8]*, i64 } %26, 0
  %_35.1 = extractvalue { [0 x i8]*, i64 } %26, 1
  br label %bb19

bb17:                                             ; preds = %bb16
  %27 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %27, align 8
  br label %bb30

bb30:                                             ; preds = %bb15, %bb4, %bb29, %bb17
  ret void

bb19:                                             ; preds = %bb18
  %28 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0
  %_57.0 = load [0 x i8]*, [0 x i8]** %29, align 8, !nonnull !3, !align !4, !noundef !3
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1
  %_57.1 = load i64, i64* %30, align 8
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %_57.0, [0 x i8]** %31, align 8
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %_57.1, i64* %32, align 8
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  %34 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !3, !align !4, !noundef !3
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %34, 0
  %38 = insertvalue { [0 x i8]*, i64 } %37, i64 %36, 1
  %_38.0 = extractvalue { [0 x i8]*, i64 } %38, 0
  %_38.1 = extractvalue { [0 x i8]*, i64 } %38, 1
  br label %bb20

bb20:                                             ; preds = %bb19
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17h4a07a4cd8346cb03E(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %_32, %"core::str::pattern::TwoWaySearcher"* align 8 %searcher, [0 x i8]* align 1 %_35.0, i64 %_35.1, [0 x i8]* align 1 %_38.0, i64 %_38.1, i1 zeroext %is_long)
  br label %bb21

bb21:                                             ; preds = %bb20
  %39 = bitcast %"core::str::pattern::SearchStep"* %_32 to i64*
  %_41 = load i64, i64* %39, align 8, !range !22, !noundef !3
  %40 = icmp eq i64 %_41, 1
  br i1 %40, label %bb23, label %bb22

bb23:                                             ; preds = %bb21
  %41 = bitcast %"core::str::pattern::SearchStep"* %_32 to %"core::str::pattern::SearchStep::Reject"*
  %42 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %41, i32 0, i32 1
  %a = load i64, i64* %42, align 8
  %43 = bitcast %"core::str::pattern::SearchStep"* %_32 to %"core::str::pattern::SearchStep::Reject"*
  %44 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %43, i32 0, i32 2
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %b, align 8
  br label %bb24

bb22:                                             ; preds = %bb21
  %46 = bitcast %"core::str::pattern::SearchStep"* %otherwise to i8*
  %47 = bitcast %"core::str::pattern::SearchStep"* %_32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false)
  %48 = bitcast %"core::str::pattern::SearchStep"* %0 to i8*
  %49 = bitcast %"core::str::pattern::SearchStep"* %otherwise to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false)
  br label %bb29

bb29:                                             ; preds = %bb28, %bb22
  br label %bb30

bb24:                                             ; preds = %bb26, %bb23
  %50 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %50, i32 0, i32 0
  %_58.0 = load [0 x i8]*, [0 x i8]** %51, align 8, !nonnull !3, !align !4, !noundef !3
  %52 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %50, i32 0, i32 1
  %_58.1 = load i64, i64* %52, align 8
  %_47 = load i64, i64* %b, align 8
; call core::str::<impl str>::is_char_boundary
  %_45 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hc9d54696ad85861bE"([0 x i8]* align 1 %_58.0, i64 %_58.1, i64 %_47)
  br label %bb25

bb25:                                             ; preds = %bb24
  %_44 = xor i1 %_45, true
  br i1 %_44, label %bb26, label %bb27

bb27:                                             ; preds = %bb25
  %_49 = load i64, i64* %b, align 8
  %53 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4
  %_50 = load i64, i64* %53, align 8
; call core::cmp::max
  %_48 = call i64 @_ZN4core3cmp3max17h4bf4c75e9e56bd50E(i64 %_49, i64 %_50)
  br label %bb28

bb26:                                             ; preds = %bb25
  %54 = load i64, i64* %b, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %b, align 8
  br label %bb24

bb28:                                             ; preds = %bb27
  %56 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4
  store i64 %_48, i64* %56, align 8
  %_52 = load i64, i64* %b, align 8
  %57 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %58 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %57, i32 0, i32 1
  store i64 %a, i64* %58, align 8
  %59 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %60 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %59, i32 0, i32 2
  store i64 %_52, i64* %60, align 8
  %61 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %61, align 8
  br label %bb29

bb5:                                              ; preds = %bb3
  %62 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 2
  %63 = load i8, i8* %62, align 8, !range !2, !noundef !3
  %is_match = trunc i8 %63 to i1
  %64 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 2
  %65 = load i8, i8* %64, align 8, !range !2, !noundef !3
  %_6 = trunc i8 %65 to i1
  %66 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 2
  %67 = xor i1 %_6, true
  %68 = zext i1 %67 to i8
  store i8 %68, i8* %66, align 8
  %69 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %pos = load i64, i64* %69, align 8
  %70 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %70, i32 0, i32 0
  %_55.0 = load [0 x i8]*, [0 x i8]** %71, align 8, !nonnull !3, !align !4, !noundef !3
  %72 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %70, i32 0, i32 1
  %_55.1 = load i64, i64* %72, align 8
  store i64 %pos, i64* %_14, align 8
  %73 = load i64, i64* %_14, align 8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %74 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h838c635d06422948E"([0 x i8]* align 1 %_55.0, i64 %_55.1, i64 %73, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc804 to %"core::panic::location::Location"*))
  %_12.0 = extractvalue { [0 x i8]*, i64 } %74, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %74, 1
  br label %bb6

bb4:                                              ; preds = %bb3
  %75 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %75, align 8
  br label %bb30

bb6:                                              ; preds = %bb5
; call core::str::<impl str>::chars
  %76 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17ha2cc4fda387903e5E"([0 x i8]* align 1 %_12.0, i64 %_12.1)
  store { i8*, i8* } %76, { i8*, i8* }* %_10, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %77 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf69c054a88d65de9E"({ i8*, i8* }* align 8 %_10), !range !21
  store i32 %77, i32* %_8, align 4
  br label %bb8

bb8:                                              ; preds = %bb7
  br i1 %is_match, label %bb11, label %bb12

bb12:                                             ; preds = %bb8
  %78 = load i32, i32* %_8, align 4, !range !21, !noundef !3
  %79 = sub i32 %78, 1114112
  %80 = icmp eq i32 %79, 0
  %_16 = select i1 %80, i64 0, i64 1
  switch i64 %_16, label %bb10 [
    i64 0, label %bb13
    i64 1, label %bb9
  ]

bb11:                                             ; preds = %bb8
  %81 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %82 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %81, i32 0, i32 1
  store i64 %pos, i64* %82, align 8
  %83 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %84 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %83, i32 0, i32 2
  store i64 %pos, i64* %84, align 8
  %85 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 0, i64* %85, align 8
  br label %bb15

bb15:                                             ; preds = %bb13, %bb14, %bb11
  br label %bb30

bb10:                                             ; preds = %bb12
  unreachable

bb13:                                             ; preds = %bb12
  %86 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher1, i32 0, i32 4
  store i8 1, i8* %86, align 2
  %87 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %87, align 8
  br label %bb15

bb9:                                              ; preds = %bb12
  %ch = load i32, i32* %_8, align 4, !range !20, !noundef !3
; call core::char::methods::<impl char>::len_utf8
  %_21 = call i64 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hcca34160c186885eE"(i32 %ch)
  br label %bb14

bb14:                                             ; preds = %bb9
  %88 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %89 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, %_21
  store i64 %91, i64* %88, align 8
  %92 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher1 to i64*
  %_24 = load i64, i64* %92, align 8
  %93 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %94 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %93, i32 0, i32 1
  store i64 %pos, i64* %94, align 8
  %95 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %96 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %95, i32 0, i32 2
  store i64 %_24, i64* %96, align 8
  %97 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %97, align 8
  br label %bb15
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::haystack
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h8ea1f8501bae1630E"(%"core::str::pattern::StrSearcher"* align 8 %self) unnamed_addr #0 {
start:
  %0 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %2 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1
  ret { [0 x i8]*, i64 } %6
}

; <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h7ad4762307c07efbE"({ i32*, i8* }* align 8 %self, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8*, align 8
  %_3 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %3 = bitcast { i32*, i8* }* %self to i32**
  %_12 = load i32*, i32** %3, align 8, !nonnull !3, !align !13, !noundef !3
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %s.1, i64* %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %7 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !3, !align !4, !noundef !3
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %7, 0
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %9, 1
  %_6.0 = extractvalue { [0 x i8]*, i64 } %11, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %11, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::io::Write::write_all
  %12 = call i8* @_ZN3std2io5Write9write_all17ha0d05a93835ab957E(i32* align 4 %_12, [0 x i8]* align 1 %_6.0, i64 %_6.1)
  store i8* %12, i8** %_3, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %13 = bitcast i8** %_3 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_8 = select i1 %15, i64 0, i64 1
  switch i64 %_8, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  store i8 0, i8* %2, align 1
  br label %bb8

bb3:                                              ; preds = %bb2
  %e = load i8*, i8** %_3, align 8, !nonnull !3, !noundef !3
  store i8* %e, i8** %_10, align 8
  %16 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %self, i32 0, i32 1
; invoke core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  invoke void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17hc5791f008c85b35fE"(i8** %16)
          to label %bb7 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  %17 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %self, i32 0, i32 1
  %18 = load i8*, i8** %_10, align 8
  store i8* %18, i8** %17, align 8
  %19 = bitcast { i8*, i32 }* %1 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24

cleanup:                                          ; preds = %bb3
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb6

bb7:                                              ; preds = %bb3
  %30 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %self, i32 0, i32 1
  %31 = load i8*, i8** %_10, align 8
  store i8* %31, i8** %30, align 8
  store i8 1, i8* %2, align 1
  br label %bb8

bb8:                                              ; preds = %bb5, %bb7
  %32 = load i8, i8* %2, align 1, !range !2, !noundef !3
  %33 = trunc i8 %32 to i1
  ret i1 %33
}

; <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 { [0 x i8]*, i64 }* @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h552a6ae0babd8b13E"(%"alloc::vec::Vec<&str>"* align 8 %self, i64 %index, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  store i8 1, i8* %_8, align 1
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %2 = invoke { [0 x { [0 x i8]*, i64 }]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4ea24fda51aceebdE"(%"alloc::vec::Vec<&str>"* align 8 %self)
          to label %bb1 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %3 = load i8, i8* %_8, align 1, !range !2, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb5

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %2, 0
  %_5.1 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %2, 1
  store i8 0, i8* %_8, align 1
; invoke core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %10 = invoke align 8 { [0 x i8]*, i64 }* @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hdc14d86088ea0afcE"([0 x { [0 x i8]*, i64 }]* align 8 %_5.0, i64 %_5.1, i64 %index, %"core::panic::location::Location"* align 8 %0)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret { [0 x i8]*, i64 }* %10

bb3:                                              ; preds = %bb4, %bb5
  %11 = bitcast { i8*, i32 }* %1 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb4:                                              ; preds = %bb5
  br label %bb3
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf69c054a88d65de9E"({ i8*, i8* }* align 8 %self) unnamed_addr #0 {
start:
; call core::str::validations::next_code_point
  %0 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17h3c9e347d6a9528d3E({ i8*, i8* }* align 8 %self)
  %_2.0 = extractvalue { i32, i32 } %0, 0
  %_2.1 = extractvalue { i32, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::map
  %1 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h01b7d58e47227ddfE"(i32 %_2.0, i32 %_2.1), !range !21
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %1
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hbdc251043a4d1ea9E"(i32 %ch) unnamed_addr #0 {
start:
; call core::char::from_u32_unchecked
  %0 = call i32 @_ZN4core4char18from_u32_unchecked17h39231f7ad397bfbdE(i32 %ch), !range !20
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define align 8 %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h208a39333881d27cE"({ i64*, i8 }* align 8 %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"**
  %_4 = load %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"*, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"** %0, align 8, !nonnull !3, !align !8, !noundef !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_4, i32 0, i32 3
  %_2.i = bitcast %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_3 to %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"*
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_2.i
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define align 4 i32* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h89cfc12053f15d80E"({ i32*, i8 }* align 8 %self) unnamed_addr #1 {
start:
  %0 = bitcast { i32*, i8 }* %self to %"std::sync::mutex::Mutex<i32>"**
  %_4 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %0, align 8, !nonnull !3, !align !13, !noundef !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %_4, i32 0, i32 3
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_3
}

; <alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 %"alloc::vec::Vec<_ProbeNode>"* @"_ZN84_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..IndexMut$LT$I$GT$$GT$9index_mut17h72f3b5cb4ab2ea03E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %self, i64 %index, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  store i8 1, i8* %_10, align 1
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut
  %2 = invoke { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @"_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hb97d5afd772bd192E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %self)
          to label %bb1 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %3 = load i8, i8* %_10, align 1, !range !2, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb5

bb1:                                              ; preds = %start
  %_7.0 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %2, 0
  %_7.1 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %2, 1
  store i8 0, i8* %_10, align 1
; invoke core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %_4 = invoke align 8 %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17he69e0cbfd92be79cE"([0 x %"alloc::vec::Vec<_ProbeNode>"]* align 8 %_7.0, i64 %_7.1, i64 %index, %"core::panic::location::Location"* align 8 %0)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret %"alloc::vec::Vec<_ProbeNode>"* %_4

bb3:                                              ; preds = %bb4, %bb5
  %10 = bitcast { i8*, i32 }* %1 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb4:                                              ; preds = %bb5
  br label %bb3
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h7a2819a4b2b99ea0E"() unnamed_addr #0 {
start:
  %0 = alloca { i32, i32 }, align 4
  %1 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %1, align 4
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4, !range !19, !noundef !3
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = insertvalue { i32, i32 } undef, i32 %3, 0
  %7 = insertvalue { i32, i32 } %6, i32 %5, 1
  ret { i32, i32 } %7
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hec9ab40678ac054aE"() unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8, !range !7, !noundef !3
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17hb3ea8011edd88049E"() unnamed_addr #0 {
start:
  ret i1 false
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17hc92855a4b4a6dd8cE"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, i64 %a, i64 %b) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_3 to i64*
  store i64 %a, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %b, i64* %2, align 8
  %3 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*
  %4 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  store i64 %8, i64* %10, align 8
  %11 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 1, i64* %11, align 8
  ret void
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h6575bae9c621f591E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, i64 %_a, i64 %_b) unnamed_addr #0 {
start:
  %1 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %1, align 8
  ret void
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define align 4 i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h1b155e851b3c7578E"({ i32*, i8 }* align 8 %self) unnamed_addr #1 {
start:
  %0 = bitcast { i32*, i8 }* %self to %"std::sync::mutex::Mutex<i32>"**
  %_7 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %0, align 8, !nonnull !3, !align !13, !noundef !3
  %_6 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %_7, i32 0, i32 3
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_6
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define align 4 i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h2056c553f944d2bfE"({ i32*, i8 }* align 8 %self) unnamed_addr #1 {
start:
  %0 = bitcast { i32*, i8 }* %self to %"std::sync::mutex::Mutex<std::fs::File>"**
  %_7 = load %"std::sync::mutex::Mutex<std::fs::File>"*, %"std::sync::mutex::Mutex<std::fs::File>"** %0, align 8, !nonnull !3, !align !13, !noundef !3
  %_6 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %_7, i32 0, i32 3
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_6
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define align 8 %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hff82c409b23eea5fE"({ i64*, i8 }* align 8 %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"**
  %_7 = load %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"*, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"** %0, align 8, !nonnull !3, !align !8, !noundef !3
  %_6 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_7, i32 0, i32 3
  %_2.i = bitcast %"core::cell::UnsafeCell<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_6 to %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"*
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_2.i
}

; <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call
; Function Attrs: nonlazybind uwtable
define void @"_ZN86_$LT$alloc..boxed..Box$LT$F$C$A$GT$$u20$as$u20$core..ops..function..Fn$LT$Args$GT$$GT$4call17heab242831f1926abE"({ {}*, [3 x i64]* }* align 8 %self, %"core::panic::panic_info::PanicInfo"* align 8 %0) unnamed_addr #1 {
start:
  %args = alloca i64*, align 8
  %1 = bitcast i64** %args to %"core::panic::panic_info::PanicInfo"**
  store %"core::panic::panic_info::PanicInfo"* %0, %"core::panic::panic_info::PanicInfo"** %1, align 8
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %self, i32 0, i32 0
  %_5.0 = load {}*, {}** %2, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %self, i32 0, i32 1
  %_5.1 = load [3 x i64]*, [3 x i64]** %3, align 8, !nonnull !3, !align !8, !noundef !3
  %4 = bitcast {}* %_5.0 to i8*
  %5 = bitcast [3 x i64]* %_5.1 to i64*
  %_6.0 = bitcast i8* %4 to {}*
  %_6.1 = bitcast i64* %5 to [3 x i64]*
  %_4 = load i64*, i64** %args, align 8, !nonnull !3, !align !8, !noundef !3
  %6 = bitcast [3 x i64]* %_6.1 to void ({}*, %"core::panic::panic_info::PanicInfo"*)**
  %7 = getelementptr inbounds void ({}*, %"core::panic::panic_info::PanicInfo"*)*, void ({}*, %"core::panic::panic_info::PanicInfo"*)** %6, i64 5
  %8 = load void ({}*, %"core::panic::panic_info::PanicInfo"*)*, void ({}*, %"core::panic::panic_info::PanicInfo"*)** %7, align 8, !invariant.load !3, !nonnull !3
  %9 = bitcast i64* %_4 to %"core::panic::panic_info::PanicInfo"*
  call void %8({}* align 1 %_6.0, %"core::panic::panic_info::PanicInfo"* align 8 %9)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h48ef42087b2552fbE"({ i64, i64 }* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i64, i64 }, align 8
  %_3 = bitcast { i64, i64 }* %self to i64*
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h0ef5cf6e606d1638E"(i64* align 8 %_3, i64* align 8 %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %2 = bitcast { i64, i64 }* %1 to i64*
  store i64 0, i64* %2, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hdf2ecd14c44edbc9E"(i64* align 8 %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::backward_unchecked
  %_5 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17hcacd72a9a485ca8fE"(i64 %_6, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb9

bb9:                                              ; preds = %bb4
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %_5, i64* %3, align 8
  %_9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_8 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hdf2ecd14c44edbc9E"(i64* align 8 %_9)
  br label %bb5

bb8:                                              ; No predecessors!
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %_5, i64* %4, align 8
  %5 = bitcast { i8*, i32 }* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb5:                                              ; preds = %bb9
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 %_8, i64* %11, align 8
  %12 = bitcast { i64, i64 }* %1 to i64*
  store i64 1, i64* %12, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8, !range !7, !noundef !3
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1
  ret { i64, i64 } %18
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h6684efa80248ba79E"({ i64, i64 }* align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %_3 = bitcast { i64, i64 }* %self to i64*
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h0ef5cf6e606d1638E"(i64* align 8 %_3, i64* align 8 %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hdf2ecd14c44edbc9E"(i64* align 8 %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h4d193116b8f80cffE"(i64 %_6, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17hccf0655e6c47e2aeE(i64* align 8 %_10, i64 %n)
  br label %bb5

bb5:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_8, i64* %2, align 8
  %3 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %3, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !range !7, !noundef !3
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17hbb707913dbc4b53dE"() unnamed_addr #0 {
start:
  ret i1 true
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h19d152bcafc68093E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, i64 %a, i64 %b) unnamed_addr #0 {
start:
  %1 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %2 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %1, i32 0, i32 1
  store i64 %a, i64* %2, align 8
  %3 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %4 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %3, i32 0, i32 2
  store i64 %b, i64* %4, align 8
  %5 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 0, i64* %5, align 8
  ret void
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h01be1bcd11ce7b08E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, i64 %a, i64 %b) unnamed_addr #0 {
start:
  %1 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %2 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %1, i32 0, i32 1
  store i64 %a, i64* %2, align 8
  %3 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %4 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %3, i32 0, i32 2
  store i64 %b, i64* %4, align 8
  %5 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %5, align 8
  ret void
}

; <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf96ea85dee7c4f28E"(%"core::str::iter::Split<&str>"* align 8 %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"core::str::iter::Split<&str>"* %self to %"core::str::iter::SplitInternal<&str>"*
; call core::str::iter::SplitInternal<P>::next
  %0 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h77b0878a510fff4cE"(%"core::str::iter::SplitInternal<&str>"* align 8 %_2)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h29e1c3eacbff9465E"({ i64*, i64* }* align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca %"alloc::vec::Vec<_ProbeNode>"*, align 8
  %1 = alloca %"alloc::vec::Vec<_ProbeNode>"*, align 8
  %2 = alloca i64*, align 8
  %3 = bitcast { i64*, i64* }* %self to i64**
  %_6 = load i64*, i64** %3, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h48e3c888979da70dE"(i64* %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hb303bc2295cae1f1E"(%"alloc::vec::Vec<_ProbeNode>"* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 24, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %6 = bitcast i64** %5 to %"alloc::vec::Vec<_ProbeNode>"**
  %_11 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %6, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h6c7cfe12183bd344E"(%"alloc::vec::Vec<_ProbeNode>"* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %7 = bitcast { i64*, i64* }* %self to i64**
  %_15 = load i64*, i64** %7, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h48e3c888979da70dE"(i64* %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %9 = bitcast i64** %8 to %"alloc::vec::Vec<_ProbeNode>"**
  %_16 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %9, align 8
  %_12 = icmp eq %"alloc::vec::Vec<_ProbeNode>"* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %10 = bitcast { i64*, i64* }* %self to i64**
  %_12.i = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h48e3c888979da70dE"(i64* %_12.i)
  %11 = bitcast { i64*, i64* }* %self to i64**
  %_16.i = load i64*, i64** %11, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call %"alloc::vec::Vec<_ProbeNode>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h48e3c888979da70dE"(i64* %_16.i)
  %12 = getelementptr inbounds %"alloc::vec::Vec<_ProbeNode>", %"alloc::vec::Vec<_ProbeNode>"* %_15.i, i64 1
  store %"alloc::vec::Vec<_ProbeNode>"* %12, %"alloc::vec::Vec<_ProbeNode>"** %0, align 8
  %_3.i.i = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h00a2b5b892261548E"(%"alloc::vec::Vec<_ProbeNode>"* %_3.i.i)
  %13 = bitcast { i64*, i64* }* %self to i64**
  store i64* %_13.i, i64** %13, align 8
  store %"alloc::vec::Vec<_ProbeNode>"* %old.i, %"alloc::vec::Vec<_ProbeNode>"** %1, align 8
  %14 = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %15 = bitcast i64** %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %16 = load i64*, i64** %2, align 8, !align !8
  ret i64* %16

bb13:                                             ; preds = %bb12
  %17 = bitcast i64** %2 to %"alloc::vec::Vec<_ProbeNode>"**
  store %"alloc::vec::Vec<_ProbeNode>"* %14, %"alloc::vec::Vec<_ProbeNode>"** %17, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4c84f16dbdac8dabE"({ i64*, i64* }* align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca %_ProbeNode*, align 8
  %1 = alloca %_ProbeNode*, align 8
  %2 = alloca i64*, align 8
  %3 = bitcast { i64*, i64* }* %self to i64**
  %_6 = load i64*, i64** %3, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %_ProbeNode* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h187f07e9a8077e76E"(i64* %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1c5791dd72ff3228E"(%_ProbeNode* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 88, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %6 = bitcast i64** %5 to %_ProbeNode**
  %_11 = load %_ProbeNode*, %_ProbeNode** %6, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha17490f38a27bce8E"(%_ProbeNode* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %7 = bitcast { i64*, i64* }* %self to i64**
  %_15 = load i64*, i64** %7, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call %_ProbeNode* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h187f07e9a8077e76E"(i64* %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %9 = bitcast i64** %8 to %_ProbeNode**
  %_16 = load %_ProbeNode*, %_ProbeNode** %9, align 8
  %_12 = icmp eq %_ProbeNode* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %10 = bitcast { i64*, i64* }* %self to i64**
  %_12.i = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call %_ProbeNode* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h187f07e9a8077e76E"(i64* %_12.i)
  %11 = bitcast { i64*, i64* }* %self to i64**
  %_16.i = load i64*, i64** %11, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call %_ProbeNode* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h187f07e9a8077e76E"(i64* %_16.i)
  %12 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %_15.i, i64 1
  store %_ProbeNode* %12, %_ProbeNode** %0, align 8
  %_3.i.i = load %_ProbeNode*, %_ProbeNode** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h10c68770b7646b31E"(%_ProbeNode* %_3.i.i)
  %13 = bitcast { i64*, i64* }* %self to i64**
  store i64* %_13.i, i64** %13, align 8
  store %_ProbeNode* %old.i, %_ProbeNode** %1, align 8
  %14 = load %_ProbeNode*, %_ProbeNode** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %15 = bitcast i64** %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %16 = load i64*, i64** %2, align 8, !align !8
  ret i64* %16

bb13:                                             ; preds = %bb12
  %17 = bitcast i64** %2 to %_ProbeNode**
  store %_ProbeNode* %14, %_ProbeNode** %17, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5565e6d1ac1a691dE"({ i8*, i8* }* align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = bitcast { i8*, i8* }* %self to i8**
  %_6 = load i8*, i8** %3, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha52556d6f760bcbeE"(i8* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 1, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_11 = load i8*, i8** %5, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h2d47dfafe3598345E"(i8* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %6 = bitcast { i8*, i8* }* %self to i8**
  %_15 = load i8*, i8** %6, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_16 = load i8*, i8** %7, align 8
  %_12 = icmp eq i8* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %8 = bitcast { i8*, i8* }* %self to i8**
  %_12.i = load i8*, i8** %8, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %_12.i)
  %9 = bitcast { i8*, i8* }* %self to i8**
  %_16.i = load i8*, i8** %9, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hba8a58a46a8f17edE"(i8* %_16.i)
  %10 = getelementptr inbounds i8, i8* %_15.i, i64 1
  store i8* %10, i8** %0, align 8
  %_3.i.i = load i8*, i8** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h067a576a00600763E"(i8* %_3.i.i)
  %11 = bitcast { i8*, i8* }* %self to i8**
  store i8* %_13.i, i8** %11, align 8
  store i8* %old.i, i8** %1, align 8
  %12 = load i8*, i8** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %13 = bitcast i8** %2 to {}**
  store {}* null, {}** %13, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %14 = load i8*, i8** %2, align 8, !align !4
  ret i8* %14

bb13:                                             ; preds = %bb12
  store i8* %12, i8** %2, align 8
  br label %bb14
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffafa6fa6d8619a9E"({ i64*, i64* }* align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca { [0 x i8]*, i64 }*, align 8
  %2 = alloca i64*, align 8
  %3 = bitcast { i64*, i64* }* %self to i64**
  %_6 = load i64*, i64** %3, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2668ba30b6e2060cE"(i64* %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h68fb6838fe63e5a2E"({ [0 x i8]*, i64 }* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 16, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %6 = bitcast i64** %5 to { [0 x i8]*, i64 }**
  %_11 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %6, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hb532bcddacb8e8e8E"({ [0 x i8]*, i64 }* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %7 = bitcast { i64*, i64* }* %self to i64**
  %_15 = load i64*, i64** %7, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2668ba30b6e2060cE"(i64* %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %9 = bitcast i64** %8 to { [0 x i8]*, i64 }**
  %_16 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %9, align 8
  %_12 = icmp eq { [0 x i8]*, i64 }* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %10 = bitcast { i64*, i64* }* %self to i64**
  %_12.i = load i64*, i64** %10, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2668ba30b6e2060cE"(i64* %_12.i)
  %11 = bitcast { i64*, i64* }* %self to i64**
  %_16.i = load i64*, i64** %11, align 8, !nonnull !3, !noundef !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2668ba30b6e2060cE"(i64* %_16.i)
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_15.i, i64 1
  store { [0 x i8]*, i64 }* %12, { [0 x i8]*, i64 }** %0, align 8
  %_3.i.i = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5a9da12769749ad0E"({ [0 x i8]*, i64 }* %_3.i.i)
  %13 = bitcast { i64*, i64* }* %self to i64**
  store i64* %_13.i, i64** %13, align 8
  store { [0 x i8]*, i64 }* %old.i, { [0 x i8]*, i64 }** %1, align 8
  %14 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %15 = bitcast i64** %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %16 = load i64*, i64** %2, align 8, !align !8
  ret i64* %16

bb13:                                             ; preds = %bb12
  %17 = bitcast i64** %2 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %14, { [0 x i8]*, i64 }** %17, align 8
  br label %bb14
}

; <&alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define { i64*, i64* } @"_ZN94_$LT$$RF$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h3b5ca5c0a6a3d903E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 %self) unnamed_addr #1 {
start:
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { [0 x %_ProbeNode]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h14f4d4727fa4751dE"(%"alloc::vec::Vec<_ProbeNode>"* align 8 %self)
  %_3.0 = extractvalue { [0 x %_ProbeNode]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x %_ProbeNode]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %1 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hac475596b8f7cf81E"([0 x %_ProbeNode]* align 8 %_3.0, i64 %_3.1)
  %2 = extractvalue { i64*, i64* } %1, 0
  %3 = extractvalue { i64*, i64* } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64*, i64* } undef, i64* %2, 0
  %5 = insertvalue { i64*, i64* } %4, i64* %3, 1
  ret { i64*, i64* } %5
}

; <&alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define { i64*, i64* } @"_ZN94_$LT$$RF$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd0e197dfbeeaf848E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %self) unnamed_addr #1 {
start:
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2f597aa6cc694d53E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %self)
  %_3.0 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x %"alloc::vec::Vec<_ProbeNode>"]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %1 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h58baf518c070f177E"([0 x %"alloc::vec::Vec<_ProbeNode>"]* align 8 %_3.0, i64 %_3.1)
  %2 = extractvalue { i64*, i64* } %1, 0
  %3 = extractvalue { i64*, i64* } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64*, i64* } undef, i64* %2, 0
  %5 = insertvalue { i64*, i64* } %4, i64* %3, 1
  ret { i64*, i64* } %5
}

; <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17hfee1b05494d4638aE"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, %"core::str::iter::Split<&str>"* %iter) unnamed_addr #0 {
start:
  %_3 = alloca %"core::str::iter::Split<&str>", align 8
  %_2 = alloca %"core::str::iter::Split<&str>", align 8
  %1 = bitcast %"core::str::iter::Split<&str>"* %_3 to i8*
  %2 = bitcast %"core::str::iter::Split<&str>"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 128, i1 false)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h299c7b25cba85329E"(%"core::str::iter::Split<&str>"* sret(%"core::str::iter::Split<&str>") %_2, %"core::str::iter::Split<&str>"* %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
  call void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17ha2ab4d5fff84818aE"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, %"core::str::iter::Split<&str>"* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h6a707b43e076b3a3E"(%"alloc::vec::Vec<&str>"* align 8 %self, %"core::str::iter::Split<&str>"* %iter) unnamed_addr #1 {
start:
  %_4 = alloca %"core::str::iter::Split<&str>", align 8
  %0 = bitcast %"core::str::iter::Split<&str>"* %_4 to i8*
  %1 = bitcast %"core::str::iter::Split<&str>"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 128, i1 false)
; call alloc::vec::Vec<T,A>::extend_desugared
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17h66c1b86bd490ba67E"(%"alloc::vec::Vec<&str>"* align 8 %self, %"core::str::iter::Split<&str>"* %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17ha68c41c6777dc08bE"([0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 {
start:
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %slice.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %slice.1, 1
  ret { [0 x i8]*, i64 } %2
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17ha2ab4d5fff84818aE"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, %"core::str::iter::Split<&str>"* %iterator) unnamed_addr #1 {
start:
  %_2 = alloca %"core::str::iter::Split<&str>", align 8
  %1 = bitcast %"core::str::iter::Split<&str>"* %_2 to i8*
  %2 = bitcast %"core::str::iter::Split<&str>"* %iterator to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 128, i1 false)
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
  call void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h4c773666d88b70bcE"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, %"core::str::iter::Split<&str>"* %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf00761eb18344a9aE"({ i64, i64 }* align 8 %self) unnamed_addr #0 {
start:
; call core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
  %0 = call { i64, i64 } @"_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17hb156b3d7d001077aE"({ i64, i64 }* align 8 %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h3a4ad508b034d5c2E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* align 8 %reference) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"**
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"* %reference, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %2
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h58d3b9a25a1d1549E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* align 8 %reference) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"**
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %reference, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %2
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h6786136b85721c60E"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* align 8 %reference) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<_ProbeSemaphore>"**
  store %"alloc::sync::ArcInner<_ProbeSemaphore>"* %reference, %"alloc::sync::ArcInner<_ProbeSemaphore>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3, !noundef !3
  ret i64* %2
}

; probe_RSE::_init_
; Function Attrs: nonlazybind uwtable
define void @_ZN9probe_RSE6_init_17h4b2a35616602d784E() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %x.i = alloca { i8*, i64* }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_57 = alloca i8, align 1
  %_52 = alloca { i8*, i64* }, align 8
  %_38 = alloca %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", align 8
  %_37 = alloca %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>", align 8
  %_35 = alloca i64*, align 8
  %_34 = alloca %"alloc::vec::Vec<_ProbeNode>", align 8
  %thrd_vec = alloca %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>", align 8
  %_29 = alloca %"std::fs::OpenOptions", align 4
  %_25 = alloca %"core::result::Result<std::fs::File, std::io::error::Error>", align 8
  %_23 = alloca %"std::fs::OpenOptions", align 4
  %_17 = alloca %"core::result::Result<std::fs::File, std::io::error::Error>", align 8
  %_15 = alloca %"std::sync::mutex::Mutex<std::fs::File>", align 4
  %_13 = alloca i64*, align 8
  %_11 = alloca %_ProbeSemaphore, align 4
  %_9 = alloca i64*, align 8
  %_2 = alloca %"core::fmt::Arguments", align 8
  store i8 0, i8* %_57, align 1
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_2, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc226 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc222 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb1

bb1:                                              ; preds = %start
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h8bb1c38522373978E(%"core::fmt::Arguments"* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
; call probe_RSE::_ProbeSemaphore::new
  call void @_ZN9probe_RSE15_ProbeSemaphore3new17he60b62d0790765eaE(%_ProbeSemaphore* sret(%_ProbeSemaphore) %_11, i32 1)
  br label %bb3

bb3:                                              ; preds = %bb2
; call alloc::sync::Arc<T>::new
  %_10 = call i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17hc87f7c4362180a92E"(%_ProbeSemaphore* %_11)
  br label %bb4

bb4:                                              ; preds = %bb3
  store i64* %_10, i64** %_9, align 8
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<probe_RSE::_ProbeSemaphore>>>
  invoke void @"_ZN4core3ptr99drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$probe_RSE.._ProbeSemaphore$GT$$GT$$GT$17h49a1f2962a4c1c2dE"(i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_SEM17h8031662f11c75f52E to i64**))
          to label %bb33 unwind label %cleanup

bb32:                                             ; preds = %cleanup
  %2 = load i64*, i64** %_9, align 8
  store i64* %2, i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_SEM17h8031662f11c75f52E to i64**), align 8
  br label %bb31

cleanup:                                          ; preds = %bb4
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb32

bb33:                                             ; preds = %bb4
  %8 = load i64*, i64** %_9, align 8
  store i64* %8, i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_SEM17h8031662f11c75f52E to i64**), align 8
; call std::fs::OpenOptions::new
  call void @_ZN3std2fs11OpenOptions3new17h18f041043248e65eE(%"std::fs::OpenOptions"* sret(%"std::fs::OpenOptions") %_23)
  br label %bb5

bb31:                                             ; preds = %bb30, %bb34, %bb32
  %9 = bitcast { i8*, i32 }* %1 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb5:                                              ; preds = %bb33
; call std::fs::OpenOptions::write
  %_21 = call align 4 %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions5write17h50198105038a5cfaE(%"std::fs::OpenOptions"* align 4 %_23, i1 zeroext true)
  br label %bb6

bb6:                                              ; preds = %bb5
; call std::fs::OpenOptions::create
  %_19 = call align 4 %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions6create17hb525584dfee8d97bE(%"std::fs::OpenOptions"* align 4 %_21, i1 zeroext true)
  br label %bb7

bb7:                                              ; preds = %bb6
; call std::fs::OpenOptions::open
  call void @_ZN3std2fs11OpenOptions4open17h1cacde18989112ccE(%"core::result::Result<std::fs::File, std::io::error::Error>"* sret(%"core::result::Result<std::fs::File, std::io::error::Error>") %_17, %"std::fs::OpenOptions"* align 4 %_19, [0 x i8]* align 1 bitcast (<{ [3 x i8] }>* @alloc805 to [0 x i8]*), i64 3)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::result::Result<T,E>::unwrap
  %_16 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h988feaf3afc656d7E"(%"core::result::Result<std::fs::File, std::io::error::Error>"* %_17, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc807 to %"core::panic::location::Location"*)), !range !14
  br label %bb9

bb9:                                              ; preds = %bb8
; call std::sync::mutex::Mutex<T>::new
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h9286fd783ce50440E"(%"std::sync::mutex::Mutex<std::fs::File>"* sret(%"std::sync::mutex::Mutex<std::fs::File>") %_15, i32 %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
; call alloc::sync::Arc<T>::new
  %_14 = call i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h40165cb1adccfe5dE"(%"std::sync::mutex::Mutex<std::fs::File>"* %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
  store i64* %_14, i64** %_13, align 8
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<std::fs::File>>>>
  invoke void @"_ZN4core3ptr117drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$$GT$17hdd3cab558fca5789E"(i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE9_PROBE_FP17heeddb26bdf91b043E to i64**))
          to label %bb35 unwind label %cleanup1

bb34:                                             ; preds = %cleanup1
  %15 = load i64*, i64** %_13, align 8
  store i64* %15, i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE9_PROBE_FP17heeddb26bdf91b043E to i64**), align 8
  br label %bb31

cleanup1:                                         ; preds = %bb11
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb34

bb35:                                             ; preds = %bb11
  %21 = load i64*, i64** %_13, align 8
  store i64* %21, i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE9_PROBE_FP17heeddb26bdf91b043E to i64**), align 8
; call std::fs::OpenOptions::new
  call void @_ZN3std2fs11OpenOptions3new17h18f041043248e65eE(%"std::fs::OpenOptions"* sret(%"std::fs::OpenOptions") %_29)
  br label %bb12

bb12:                                             ; preds = %bb35
; call std::fs::OpenOptions::read
  %_27 = call align 4 %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions4read17h0059a47bab46cf22E(%"std::fs::OpenOptions"* align 4 %_29, i1 zeroext true)
  br label %bb13

bb13:                                             ; preds = %bb12
; call std::fs::OpenOptions::open
  call void @_ZN3std2fs11OpenOptions4open17h1cacde18989112ccE(%"core::result::Result<std::fs::File, std::io::error::Error>"* sret(%"core::result::Result<std::fs::File, std::io::error::Error>") %_25, %"std::fs::OpenOptions"* align 4 %_27, [0 x i8]* align 1 bitcast (<{ [6 x i8] }>* @alloc819 to [0 x i8]*), i64 6)
  br label %bb14

bb14:                                             ; preds = %bb13
  %22 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %_25 to i32*
  %23 = load i32, i32* %22, align 8, !range !19, !noundef !3
  %_30 = zext i32 %23 to i64
  switch i64 %_30, label %bb16 [
    i64 0, label %bb22
    i64 1, label %bb15
  ]

bb16:                                             ; preds = %bb14
  unreachable

bb22:                                             ; preds = %bb37, %bb14
; call core::ptr::drop_in_place<core::result::Result<std::fs::File,std::io::error::Error>>
  call void @"_ZN4core3ptr86drop_in_place$LT$core..result..Result$LT$std..fs..File$C$std..io..error..Error$GT$$GT$17h4d0d01666eac015eE"(%"core::result::Result<std::fs::File, std::io::error::Error>"* %_25)
  br label %bb23

bb15:                                             ; preds = %bb14
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h9a950cc54e92afa7E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* sret(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>") %thrd_vec)
          to label %bb17 unwind label %cleanup2

bb30:                                             ; preds = %bb38, %bb39, %cleanup2
; invoke core::ptr::drop_in_place<core::result::Result<std::fs::File,std::io::error::Error>>
  invoke void @"_ZN4core3ptr86drop_in_place$LT$core..result..Result$LT$std..fs..File$C$std..io..error..Error$GT$$GT$17h4d0d01666eac015eE"(%"core::result::Result<std::fs::File, std::io::error::Error>"* %_25) #17
          to label %bb31 unwind label %abort

cleanup2:                                         ; preds = %bb15
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  %26 = extractvalue { i8*, i32 } %24, 1
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %25, i8** %27, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %26, i32* %28, align 8
  br label %bb30

bb17:                                             ; preds = %bb15
  store i8 1, i8* %_57, align 1
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h0862bd97ec3cb98aE"(%"alloc::vec::Vec<_ProbeNode>"* sret(%"alloc::vec::Vec<_ProbeNode>") %_34)
          to label %bb18 unwind label %cleanup3

bb39:                                             ; preds = %bb36, %cleanup3
  %29 = load i8, i8* %_57, align 1, !range !2, !noundef !3
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb38, label %bb30

cleanup3:                                         ; preds = %bb20, %bb19, %bb18, %bb17
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  %33 = extractvalue { i8*, i32 } %31, 1
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %33, i32* %35, align 8
  br label %bb39

bb18:                                             ; preds = %bb17
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hd0105c6a79d9cd45E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %thrd_vec, %"alloc::vec::Vec<_ProbeNode>"* %_34)
          to label %bb19 unwind label %cleanup3

bb19:                                             ; preds = %bb18
  store i8 0, i8* %_57, align 1
  %36 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_38 to i8*
  %37 = bitcast %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %thrd_vec to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false)
; invoke std::sync::mutex::Mutex<T>::new
  invoke void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h56f2fedaa4d6e0bbE"(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* sret(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>") %_37, %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %_38)
          to label %bb20 unwind label %cleanup3

bb20:                                             ; preds = %bb19
; invoke alloc::sync::Arc<T>::new
  %_36 = invoke i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h3d0a86f7d6e78af7E"(%"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* %_37)
          to label %bb21 unwind label %cleanup3

bb21:                                             ; preds = %bb20
  store i64* %_36, i64** %_35, align 8
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>>>
  invoke void @"_ZN4core3ptr171drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$$GT$$GT$17hcc0df788402ecf63E"(i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_EXE17h6cfd9f0d4be367c8E to i64**))
          to label %bb37 unwind label %cleanup4

bb36:                                             ; preds = %cleanup4
  %38 = load i64*, i64** %_35, align 8
  store i64* %38, i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_EXE17h6cfd9f0d4be367c8E to i64**), align 8
  br label %bb39

cleanup4:                                         ; preds = %bb21
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  %41 = extractvalue { i8*, i32 } %39, 1
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %41, i32* %43, align 8
  br label %bb36

bb37:                                             ; preds = %bb21
  %44 = load i64*, i64** %_35, align 8
  store i64* %44, i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_EXE17h6cfd9f0d4be367c8E to i64**), align 8
  store i8 0, i8* %_57, align 1
  br label %bb22

bb38:                                             ; preds = %bb39
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>
  invoke void @"_ZN4core3ptr88drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$17hbbd851914b219a57E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* %thrd_vec) #17
          to label %bb30 unwind label %abort

abort:                                            ; preds = %bb30, %bb38
  %45 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb23:                                             ; preds = %bb22
  %_40 = call i32 @atexit(void ()* @_ZN9probe_RSE7_final_17h8e9a2e8c5b9c92b2E)
  br label %bb24

bb24:                                             ; preds = %bb23
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17hde55851a68d1a64dE"(i64** align 8 bitcast (<{ i8* }>* @alloc563 to i64**))
  br label %bb25

bb25:                                             ; preds = %bb24
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h36ccf6f60364f7e5E"(i64** align 8 bitcast (<{ i8* }>* @alloc554 to i64**))
  br label %bb26

bb26:                                             ; preds = %bb25
; call std::panicking::take_hook
  %46 = call { {}*, [3 x i64]* } @_ZN3std9panicking9take_hook17h63e88fac63f5e270E()
  %ori_hook.0 = extractvalue { {}*, [3 x i64]* } %46, 0
  %ori_hook.1 = extractvalue { {}*, [3 x i64]* } %46, 1
  br label %bb27

bb27:                                             ; preds = %bb26
  %47 = bitcast { i8*, i64* }* %_52 to { {}*, [3 x i64]* }*
  %48 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %47, i32 0, i32 0
  store {}* %ori_hook.0, {}** %48, align 8
  %49 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %47, i32 0, i32 1
  store [3 x i64]* %ori_hook.1, [3 x i64]** %49, align 8
  %50 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_52, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8, !nonnull !3, !align !4, !noundef !3
  %52 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_52, i32 0, i32 1
  %53 = load i64*, i64** %52, align 8, !nonnull !3, !align !8, !noundef !3
  %54 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %x.i, i32 0, i32 0
  store i8* %51, i8** %54, align 8
  %55 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %x.i, i32 0, i32 1
  store i64* %53, i64** %55, align 8
; invoke alloc::alloc::exchange_malloc
  %_4.i = invoke i8* @_ZN5alloc5alloc15exchange_malloc17hd827dc6d52e80d04E(i64 16, i64 8)
          to label %"_ZN5alloc5boxed12Box$LT$T$GT$3new17h21bc9747a2a5702cE.exit" unwind label %cleanup.i

cleanup.i:                                        ; preds = %bb27
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = extractvalue { i8*, i32 } %56, 0
  %58 = extractvalue { i8*, i32 } %56, 1
  %59 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %57, i8** %59, align 8
  %60 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %58, i32* %60, align 8
; invoke core::ptr::drop_in_place<probe_RSE::_init_::{{closure}}>
  invoke void @"_ZN4core3ptr67drop_in_place$LT$probe_RSE.._init_..$u7b$$u7b$closure$u7d$$u7d$$GT$17hbd64bf292dedb01fE"({ i8*, i64* }* %x.i) #17
          to label %bb3.i unwind label %abort.i

abort.i:                                          ; preds = %cleanup.i
  %61 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb3.i:                                            ; preds = %cleanup.i
  %62 = bitcast { i8*, i32 }* %0 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = insertvalue { i8*, i32 } undef, i8* %63, 0
  %67 = insertvalue { i8*, i32 } %66, i32 %65, 1
  resume { i8*, i32 } %67

"_ZN5alloc5boxed12Box$LT$T$GT$3new17h21bc9747a2a5702cE.exit": ; preds = %bb27
  %68 = bitcast i8* %_4.i to { i8*, i64* }*
  %69 = bitcast { i8*, i64* }* %68 to i64*
  %70 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %x.i, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8, !nonnull !3, !align !4, !noundef !3
  %72 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %x.i, i32 0, i32 1
  %73 = load i64*, i64** %72, align 8, !nonnull !3, !align !8, !noundef !3
  %74 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %68, i32 0, i32 0
  store i8* %71, i8** %74, align 8
  %75 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %68, i32 0, i32 1
  store i64* %73, i64** %75, align 8
  br label %bb28

bb28:                                             ; preds = %"_ZN5alloc5boxed12Box$LT$T$GT$3new17h21bc9747a2a5702cE.exit"
  %76 = bitcast { i8*, i64* }* %68 to {}*
  %77 = bitcast {}* %76 to i8*
  %_50.0 = bitcast i8* %77 to {}*
; call std::panicking::set_hook
  call void @_ZN3std9panicking8set_hook17hefd7c315fbdcc83bE({}* align 1 %_50.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8*, i8*, i8* }>* @vtable.e to [3 x i64]*))
  br label %bb29

bb29:                                             ; preds = %bb28
  ret void
}

; probe_RSE::_init_::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_RSE6_init_28_$u7b$$u7b$closure$u7d$$u7d$17h7a8476bda1794bd5E"({ i64, i64 }* align 8 %exe_node_id) unnamed_addr #0 {
start:
; call core::cell::RefCell<T>::replace
  %_3 = call i64 @"_ZN4core4cell16RefCell$LT$T$GT$7replace17h0a09d308f053f76dE"({ i64, i64 }* align 8 %exe_node_id, i64 0, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc815 to %"core::panic::location::Location"*))
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; probe_RSE::_init_::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_RSE6_init_28_$u7b$$u7b$closure$u7d$$u7d$17hc7655921b88410f0E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %tid) unnamed_addr #0 {
start:
  %_5 = alloca %"alloc::string::String", align 8
  %_3 = alloca %"alloc::string::String", align 8
; call <alloc::string::String as core::convert::From<&str>>::from
  call void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h5aa1ea86c096e88dE"(%"alloc::string::String"* sret(%"alloc::string::String") %_5, [0 x i8]* align 1 bitcast (<{ [1 x i8] }>* @alloc816 to [0 x i8]*), i64 1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::cell::RefCell<T>::replace
  call void @"_ZN4core4cell16RefCell$LT$T$GT$7replace17h317d27f65a45ce62E"(%"alloc::string::String"* sret(%"alloc::string::String") %_3, %"core::cell::RefCell<alloc::string::String>"* align 8 %tid, %"alloc::string::String"* %_5, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc818 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; probe_RSE::_init_::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_RSE6_init_28_$u7b$$u7b$closure$u7d$$u7d$17h424f42a2ccf1e0b6E"({ i8*, i64* }* align 8 %_1, %"core::panic::panic_info::PanicInfo"* align 8 %panic_info) unnamed_addr #0 {
start:
  %_5 = alloca i64*, align 8
  %_4 = bitcast { i8*, i64* }* %_1 to { {}*, [3 x i64]* }*
  %0 = bitcast i64** %_5 to %"core::panic::panic_info::PanicInfo"**
  store %"core::panic::panic_info::PanicInfo"* %panic_info, %"core::panic::panic_info::PanicInfo"** %0, align 8
  %1 = load i64*, i64** %_5, align 8, !nonnull !3, !align !8, !noundef !3
  %2 = bitcast i64* %1 to %"core::panic::panic_info::PanicInfo"*
; call <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call
  call void @"_ZN86_$LT$alloc..boxed..Box$LT$F$C$A$GT$$u20$as$u20$core..ops..function..Fn$LT$Args$GT$$GT$4call17heab242831f1926abE"({ {}*, [3 x i64]* }* align 8 %_4, %"core::panic::panic_info::PanicInfo"* align 8 %2)
  br label %bb1

bb1:                                              ; preds = %start
; call std::process::exit
  call void @_ZN3std7process4exit17h2870dff8ec14d392E(i32 1) #16
  unreachable
}

; probe_RSE::_final_
; Function Attrs: nonlazybind uwtable
define void @_ZN9probe_RSE7_final_17h8e9a2e8c5b9c92b2E() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_68 = alloca [1 x { i8*, i64* }], align 8
  %_61 = alloca %"core::fmt::Arguments", align 8
  %node = alloca %_ProbeNode*, align 8
  %_52 = alloca i64*, align 8
  %iter1 = alloca { i64*, i64* }, align 8
  %_42 = alloca [1 x { i8*, i64* }], align 8
  %_35 = alloca %"core::fmt::Arguments", align 8
  %_26 = alloca i64*, align 8
  %iter = alloca { i64*, i64* }, align 8
  %i = alloca i32, align 4
  %_16 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>", align 8
  %vec_thrds = alloca { i64*, i8 }, align 8
  %_14 = alloca %"std::fs::OpenOptions", align 4
  %_6 = alloca %"core::result::Result<std::fs::File, std::io::error::Error>", align 8
  %struct_stream = alloca i32, align 4
  %1 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_EXE17h6cfd9f0d4be367c8E to {}**), align 8
  %2 = icmp eq {}* %1, null
  %_3 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_3, 1
  br i1 %3, label %bb1, label %bb32

bb1:                                              ; preds = %start
; call std::fs::OpenOptions::new
  call void @_ZN3std2fs11OpenOptions3new17h18f041043248e65eE(%"std::fs::OpenOptions"* sret(%"std::fs::OpenOptions") %_14)
  br label %bb2

bb32:                                             ; preds = %bb31, %start
  ret void

bb2:                                              ; preds = %bb1
; call std::fs::OpenOptions::write
  %_12 = call align 4 %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions5write17h50198105038a5cfaE(%"std::fs::OpenOptions"* align 4 %_14, i1 zeroext true)
  br label %bb3

bb3:                                              ; preds = %bb2
; call std::fs::OpenOptions::create
  %_10 = call align 4 %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions6create17hb525584dfee8d97bE(%"std::fs::OpenOptions"* align 4 %_12, i1 zeroext true)
  br label %bb4

bb4:                                              ; preds = %bb3
; call std::fs::OpenOptions::append
  %_8 = call align 4 %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions6append17hbe22195fb8cc1c4cE(%"std::fs::OpenOptions"* align 4 %_10, i1 zeroext true)
  br label %bb5

bb5:                                              ; preds = %bb4
; call std::fs::OpenOptions::open
  call void @_ZN3std2fs11OpenOptions4open17h1cacde18989112ccE(%"core::result::Result<std::fs::File, std::io::error::Error>"* sret(%"core::result::Result<std::fs::File, std::io::error::Error>") %_6, %"std::fs::OpenOptions"* align 4 %_8, [0 x i8]* align 1 bitcast (<{ [6 x i8] }>* @alloc819 to [0 x i8]*), i64 6)
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::result::Result<T,E>::unwrap
  %4 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h988feaf3afc656d7E"(%"core::result::Result<std::fs::File, std::io::error::Error>"* %_6, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc821 to %"core::panic::location::Location"*)), !range !14
  store i32 %4, i32* %struct_stream, align 4
  br label %bb7

bb7:                                              ; preds = %bb6
; invoke <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_18 = invoke align 8 %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9b6e721c9d5aae01E"(i64** align 8 bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_EXE17h6cfd9f0d4be367c8E to i64**))
          to label %bb8 unwind label %cleanup

bb34:                                             ; preds = %bb33, %cleanup
; invoke core::ptr::drop_in_place<std::fs::File>
  invoke void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17he19acbe034eaa267E"(i32* %struct_stream) #17
          to label %bb35 unwind label %abort

cleanup:                                          ; preds = %bb17, %bb9, %bb8, %bb7
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb34

bb8:                                              ; preds = %bb7
; invoke std::sync::mutex::Mutex<T>::lock
  invoke void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h6db853d776ba8611E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>") %_16, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* align 8 %_18)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke core::result::Result<T,E>::unwrap
  %10 = invoke { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h5d4d0610472450bfE"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %_16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc823 to %"core::panic::location::Location"*))
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  store { i64*, i8 } %10, { i64*, i8 }* %vec_thrds, align 8
  store i32 1, i32* %i, align 4
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
  %_23 = invoke align 8 %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h208a39333881d27cE"({ i64*, i8 }* align 8 %vec_thrds)
          to label %bb11 unwind label %cleanup2

bb33:                                             ; preds = %cleanup2
; invoke core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>
  invoke void @"_ZN4core3ptr124drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$17h8a902d0cfc456658E"({ i64*, i8 }* %vec_thrds) #17
          to label %bb34 unwind label %abort

cleanup2:                                         ; preds = %bb30, %bb29, %bb28, %bb26, %bb24, %bb22, %panic, %bb20, %bb19, %bb18, %bb15, %bb13, %bb11, %bb10
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb33

bb11:                                             ; preds = %bb10
; invoke <&alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  %16 = invoke { i64*, i64* } @"_ZN94_$LT$$RF$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd0e197dfbeeaf848E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %_23)
          to label %bb12 unwind label %cleanup2

bb12:                                             ; preds = %bb11
  %_21.0 = extractvalue { i64*, i64* } %16, 0
  %_21.1 = extractvalue { i64*, i64* } %16, 1
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 0
  store i64* %_21.0, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1
  store i64* %_21.1, i64** %18, align 8
  br label %bb13

bb13:                                             ; preds = %bb25, %bb12
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %19 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h29e1c3eacbff9465E"({ i64*, i64* }* align 8 %iter)
          to label %bb14 unwind label %cleanup2

bb14:                                             ; preds = %bb13
  store i64* %19, i64** %_26, align 8
  %20 = bitcast i64** %_26 to {}**
  %21 = load {}*, {}** %20, align 8
  %22 = icmp eq {}* %21, null
  %_29 = select i1 %22, i64 0, i64 1
  switch i64 %_29, label %bb16 [
    i64 0, label %bb17
    i64 1, label %bb15
  ]

bb16:                                             ; preds = %bb14
  unreachable

bb17:                                             ; preds = %bb14
; invoke core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>
  invoke void @"_ZN4core3ptr124drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$17h8a902d0cfc456658E"({ i64*, i8 }* %vec_thrds)
          to label %bb31 unwind label %cleanup

bb15:                                             ; preds = %bb14
  %23 = bitcast i64** %_26 to %"alloc::vec::Vec<_ProbeNode>"**
  %vec_thrd = load %"alloc::vec::Vec<_ProbeNode>"*, %"alloc::vec::Vec<_ProbeNode>"** %23, align 8, !nonnull !3, !align !8, !noundef !3
; invoke core::fmt::ArgumentV1::new_display
  %24 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h7ed329f22a7624acE(i32* align 4 %i)
          to label %bb18 unwind label %cleanup2

bb18:                                             ; preds = %bb15
  %_43.0 = extractvalue { i8*, i64* } %24, 0
  %_43.1 = extractvalue { i8*, i64* } %24, 1
  %25 = bitcast [1 x { i8*, i64* }]* %_42 to { i8*, i64* }*
  %26 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %25, i32 0, i32 0
  store i8* %_43.0, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %25, i32 0, i32 1
  store i64* %_43.1, i64** %27, align 8
  %_39.0 = bitcast [1 x { i8*, i64* }]* %_42 to [0 x { i8*, i64* }]*
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_35, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc275 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_39.0, i64 1)
          to label %bb19 unwind label %cleanup2

bb19:                                             ; preds = %bb18
; invoke std::io::Write::write_fmt
  %result = invoke i8* @_ZN3std2io5Write9write_fmt17h0ce8b27eee387111E(i32* align 4 %struct_stream, %"core::fmt::Arguments"* %_35)
          to label %bb20 unwind label %cleanup2

bb20:                                             ; preds = %bb19
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1d5f92f10f03697eE"(i8* %result, [0 x i8]* align 1 bitcast (<{ [13 x i8] }>* @alloc901 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc826 to %"core::panic::location::Location"*))
          to label %bb21 unwind label %cleanup2

bb21:                                             ; preds = %bb20
  %28 = load i32, i32* %i, align 4
  %29 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 1)
  %_48.0 = extractvalue { i32, i1 } %29, 0
  %_48.1 = extractvalue { i32, i1 } %29, 1
  %30 = call i1 @llvm.expect.i1(i1 %_48.1, i1 false)
  br i1 %30, label %panic, label %bb22

bb22:                                             ; preds = %bb21
  store i32 %_48.0, i32* %i, align 4
; invoke <&alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  %31 = invoke { i64*, i64* } @"_ZN94_$LT$$RF$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h3b5ca5c0a6a3d903E"(%"alloc::vec::Vec<_ProbeNode>"* align 8 %vec_thrd)
          to label %bb23 unwind label %cleanup2

panic:                                            ; preds = %bb21
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h1efed56daac899acE([0 x i8]* align 1 bitcast ([28 x i8]* @str.f to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc828 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup2

unreachable:                                      ; preds = %panic
  unreachable

bb23:                                             ; preds = %bb22
  %_49.0 = extractvalue { i64*, i64* } %31, 0
  %_49.1 = extractvalue { i64*, i64* } %31, 1
  %32 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter1, i32 0, i32 0
  store i64* %_49.0, i64** %32, align 8
  %33 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter1, i32 0, i32 1
  store i64* %_49.1, i64** %33, align 8
  br label %bb24

bb24:                                             ; preds = %bb36, %bb23
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %34 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4c84f16dbdac8dabE"({ i64*, i64* }* align 8 %iter1)
          to label %bb25 unwind label %cleanup2

bb25:                                             ; preds = %bb24
  store i64* %34, i64** %_52, align 8
  %35 = bitcast i64** %_52 to {}**
  %36 = load {}*, {}** %35, align 8
  %37 = icmp eq {}* %36, null
  %_55 = select i1 %37, i64 0, i64 1
  switch i64 %_55, label %bb27 [
    i64 0, label %bb13
    i64 1, label %bb26
  ]

bb27:                                             ; preds = %bb25
  unreachable

bb26:                                             ; preds = %bb25
  %38 = bitcast i64** %_52 to %_ProbeNode**
  %39 = load %_ProbeNode*, %_ProbeNode** %38, align 8, !nonnull !3, !align !8, !noundef !3
  store %_ProbeNode* %39, %_ProbeNode** %node, align 8
; invoke core::fmt::ArgumentV1::new_display
  %40 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h2c79311daa69a0d8E(%_ProbeNode** align 8 %node)
          to label %bb28 unwind label %cleanup2

bb28:                                             ; preds = %bb26
  %_69.0 = extractvalue { i8*, i64* } %40, 0
  %_69.1 = extractvalue { i8*, i64* } %40, 1
  %41 = bitcast [1 x { i8*, i64* }]* %_68 to { i8*, i64* }*
  %42 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %41, i32 0, i32 0
  store i8* %_69.0, i8** %42, align 8
  %43 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %41, i32 0, i32 1
  store i64* %_69.1, i64** %43, align 8
  %_65.0 = bitcast [1 x { i8*, i64* }]* %_68 to [0 x { i8*, i64* }]*
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_61, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc281 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_65.0, i64 1)
          to label %bb29 unwind label %cleanup2

bb29:                                             ; preds = %bb28
; invoke std::io::Write::write_fmt
  %result3 = invoke i8* @_ZN3std2io5Write9write_fmt17h0ce8b27eee387111E(i32* align 4 %struct_stream, %"core::fmt::Arguments"* %_61)
          to label %bb30 unwind label %cleanup2

bb30:                                             ; preds = %bb29
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1d5f92f10f03697eE"(i8* %result3, [0 x i8]* align 1 bitcast (<{ [13 x i8] }>* @alloc901 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc831 to %"core::panic::location::Location"*))
          to label %bb36 unwind label %cleanup2

bb36:                                             ; preds = %bb30
  br label %bb24

abort:                                            ; preds = %bb34, %bb33
  %44 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb31:                                             ; preds = %bb17
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17he19acbe034eaa267E"(i32* %struct_stream)
  br label %bb32

bb35:                                             ; preds = %bb34
  %45 = bitcast { i8*, i32 }* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1
  resume { i8*, i32 } %50
}

; probe_RSE::_probe_mutex_
; Function Attrs: nonlazybind uwtable
define void @_ZN9probe_RSE13_probe_mutex_17hebb682d9900a17b3E(i32 %0, i32 %1, i8* %func_name, i64* %2, i8* %3) unnamed_addr #1 {
start:
  %_14 = alloca %"[closure@./probe_RSE.rs:97:18: 103:10]", align 8
  %_8 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %func_name_str = alloca { [0 x i8]*, i64 }, align 8
  %file_path = alloca i8*, align 8
  %_lock_var_addr = alloca i64*, align 8
  %func_num = alloca i32, align 4
  %line = alloca i32, align 4
  store i32 %0, i32* %line, align 4
  store i32 %1, i32* %func_num, align 4
  store i64* %2, i64** %_lock_var_addr, align 8
  store i8* %3, i8** %file_path, align 8
; call probe_RSE::__random_sleep
  call void @_ZN9probe_RSE14__random_sleep17h65863d114ffdfd28E()
  br label %bb1

bb1:                                              ; preds = %start
; call core::ffi::c_str::CStr::from_ptr
  %4 = call { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ffi5c_str4CStr8from_ptr17hdc7536f17352db0bE(i8* %func_name)
  %_10.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %4, 0
  %_10.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %4, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ffi::c_str::CStr::to_str
  call void @_ZN4core3ffi5c_str4CStr6to_str17hef57ed6c63562b9bE(%"core::result::Result<&str, core::str::error::Utf8Error>"* sret(%"core::result::Result<&str, core::str::error::Utf8Error>") %_8, %"core::ffi::c_str::CStr"* align 1 %_10.0, i64 %_10.1)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::result::Result<T,E>::unwrap
  %5 = call { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h27265b1272c97b70E"(%"core::result::Result<&str, core::str::error::Utf8Error>"* %_8, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc833 to %"core::panic::location::Location"*))
  store { [0 x i8]*, i64 } %5, { [0 x i8]*, i64 }* %func_name_str, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %6 = bitcast %"[closure@./probe_RSE.rs:97:18: 103:10]"* %_14 to i32**
  store i32* %func_num, i32** %6, align 8
  %7 = getelementptr inbounds %"[closure@./probe_RSE.rs:97:18: 103:10]", %"[closure@./probe_RSE.rs:97:18: 103:10]"* %_14, i32 0, i32 1
  store i8** %file_path, i8*** %7, align 8
  %8 = getelementptr inbounds %"[closure@./probe_RSE.rs:97:18: 103:10]", %"[closure@./probe_RSE.rs:97:18: 103:10]"* %_14, i32 0, i32 2
  store i32* %line, i32** %8, align 8
  %9 = getelementptr inbounds %"[closure@./probe_RSE.rs:97:18: 103:10]", %"[closure@./probe_RSE.rs:97:18: 103:10]"* %_14, i32 0, i32 3
  store { [0 x i8]*, i64 }* %func_name_str, { [0 x i8]*, i64 }** %9, align 8
  %10 = getelementptr inbounds %"[closure@./probe_RSE.rs:97:18: 103:10]", %"[closure@./probe_RSE.rs:97:18: 103:10]"* %_14, i32 0, i32 4
  store i64** %_lock_var_addr, i64*** %10, align 8
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h4da1e174e6473303E"(i64** align 8 bitcast (<{ i8* }>* @alloc554 to i64**), %"[closure@./probe_RSE.rs:97:18: 103:10]"* %_14)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret void
}

; probe_RSE::_probe_mutex_::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_RSE13_probe_mutex_28_$u7b$$u7b$closure$u7d$$u7d$17hd390cecbc402f9c1E"(%"[closure@./probe_RSE.rs:97:18: 103:10]"* %_1, %"core::cell::RefCell<alloc::string::String>"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_14 = alloca %"[closure@./probe_RSE.rs:99:30: 102:14]", align 8
  %_9 = alloca { i64*, i64* }, align 8
  %tid = alloca %"core::cell::RefCell<alloc::string::String>"*, align 8
  store %"core::cell::RefCell<alloc::string::String>"* %0, %"core::cell::RefCell<alloc::string::String>"** %tid, align 8
  %_10 = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %tid, align 8, !nonnull !3, !align !8, !noundef !3
; call core::cell::RefCell<T>::borrow
  %2 = call { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17h522209af0c1afa20E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %_10, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc835 to %"core::panic::location::Location"*))
  store { i64*, i64* } %2, { i64*, i64* }* %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
; invoke <core::cell::Ref<T> as core::ops::deref::Deref>::deref
  %_7 = invoke align 8 %"alloc::string::String"* @"_ZN68_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6cb29ed3a0472e3cE"({ i64*, i64* }* align 8 %_9)
          to label %bb2 unwind label %cleanup

bb7:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_9) #17
          to label %bb8 unwind label %abort

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
; invoke alloc::string::String::as_str
  %8 = invoke { [0 x i8]*, i64 } @_ZN5alloc6string6String6as_str17h7d830e6e0c0d6b42E(%"alloc::string::String"* align 8 %_7)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  %9 = bitcast %"[closure@./probe_RSE.rs:97:18: 103:10]"* %_1 to i32**
  %_21 = load i32*, i32** %9, align 8, !nonnull !3, !align !13, !noundef !3
  %_11 = load i32, i32* %_21, align 4
; invoke probe_RSE::__write_log
  invoke void @_ZN9probe_RSE11__write_log17hc7704a69f23ba170E([0 x i8]* align 1 %_5.0, i64 %_5.1, i32 %_11)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; call core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  call void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_9)
  br label %bb5

abort:                                            ; preds = %bb7
  %10 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb8:                                              ; preds = %bb7
  %11 = bitcast { i8*, i32 }* %1 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb5:                                              ; preds = %bb4
  %17 = getelementptr inbounds %"[closure@./probe_RSE.rs:97:18: 103:10]", %"[closure@./probe_RSE.rs:97:18: 103:10]"* %_1, i32 0, i32 1
  %_22 = load i8**, i8*** %17, align 8, !nonnull !3, !align !8, !noundef !3
  %18 = getelementptr inbounds %"[closure@./probe_RSE.rs:97:18: 103:10]", %"[closure@./probe_RSE.rs:97:18: 103:10]"* %_1, i32 0, i32 2
  %_23 = load i32*, i32** %18, align 8, !nonnull !3, !align !13, !noundef !3
  %19 = getelementptr inbounds %"[closure@./probe_RSE.rs:97:18: 103:10]", %"[closure@./probe_RSE.rs:97:18: 103:10]"* %_1, i32 0, i32 3
  %_24 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %19, align 8, !nonnull !3, !align !8, !noundef !3
  %20 = getelementptr inbounds %"[closure@./probe_RSE.rs:97:18: 103:10]", %"[closure@./probe_RSE.rs:97:18: 103:10]"* %_1, i32 0, i32 4
  %_25 = load i64**, i64*** %20, align 8, !nonnull !3, !align !8, !noundef !3
  %21 = bitcast %"[closure@./probe_RSE.rs:99:30: 102:14]"* %_14 to i8***
  store i8** %_22, i8*** %21, align 8
  %22 = getelementptr inbounds %"[closure@./probe_RSE.rs:99:30: 102:14]", %"[closure@./probe_RSE.rs:99:30: 102:14]"* %_14, i32 0, i32 1
  store %"core::cell::RefCell<alloc::string::String>"** %tid, %"core::cell::RefCell<alloc::string::String>"*** %22, align 8
  %23 = getelementptr inbounds %"[closure@./probe_RSE.rs:99:30: 102:14]", %"[closure@./probe_RSE.rs:99:30: 102:14]"* %_14, i32 0, i32 2
  store i32* %_23, i32** %23, align 8
  %24 = getelementptr inbounds %"[closure@./probe_RSE.rs:99:30: 102:14]", %"[closure@./probe_RSE.rs:99:30: 102:14]"* %_14, i32 0, i32 3
  store { [0 x i8]*, i64 }* %_24, { [0 x i8]*, i64 }** %24, align 8
  %25 = getelementptr inbounds %"[closure@./probe_RSE.rs:99:30: 102:14]", %"[closure@./probe_RSE.rs:99:30: 102:14]"* %_14, i32 0, i32 4
  store i64** %_25, i64*** %25, align 8
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17hbe5b2c299862664cE"(i64** align 8 bitcast (<{ i8* }>* @alloc563 to i64**), %"[closure@./probe_RSE.rs:99:30: 102:14]"* %_14)
  br label %bb6

bb6:                                              ; preds = %bb5
  ret void
}

; probe_RSE::_probe_mutex_::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_RSE13_probe_mutex_28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hff64a96d592ddac7E"(%"[closure@./probe_RSE.rs:99:30: 102:14]"* %_1, { i64, i64 }* align 8 %exe_node_id) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_25 = alloca { i8*, i64 }, align 8
  %_22 = alloca { i64, i8* }, align 8
  %_18 = alloca { i64*, i64* }, align 8
  %_14 = alloca %"alloc::string::String", align 8
  %_12 = alloca { i64*, i64* }, align 8
  %_4 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %1 = bitcast %"[closure@./probe_RSE.rs:99:30: 102:14]"* %_1 to i8***
  %_27 = load i8**, i8*** %1, align 8, !nonnull !3, !align !8, !noundef !3
  %_7 = load i8*, i8** %_27, align 8
; call core::ffi::c_str::CStr::from_ptr
  %2 = call { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ffi5c_str4CStr8from_ptr17hdc7536f17352db0bE(i8* %_7)
  %_6.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 0
  %_6.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::ffi::c_str::CStr::to_str
  call void @_ZN4core3ffi5c_str4CStr6to_str17hef57ed6c63562b9bE(%"core::result::Result<&str, core::str::error::Utf8Error>"* sret(%"core::result::Result<&str, core::str::error::Utf8Error>") %_4, %"core::ffi::c_str::CStr"* align 1 %_6.0, i64 %_6.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::result::Result<T,E>::unwrap
  %3 = call { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h27265b1272c97b70E"(%"core::result::Result<&str, core::str::error::Utf8Error>"* %_4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc837 to %"core::panic::location::Location"*))
  %file_path_str.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %file_path_str.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::cell::RefCell<T>::borrow
  %4 = call { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17heb40be7814151f08E"({ i64, i64 }* align 8 %exe_node_id, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc839 to %"core::panic::location::Location"*))
  store { i64*, i64* } %4, { i64*, i64* }* %_12, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke <core::cell::Ref<T> as core::ops::deref::Deref>::deref
  %_10 = invoke align 8 i64* @"_ZN68_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h1a48521ee60e2b30E"({ i64*, i64* }* align 8 %_12)
          to label %bb5 unwind label %cleanup

bb13:                                             ; preds = %bb12, %cleanup
; invoke core::ptr::drop_in_place<core::cell::Ref<usize>>
  invoke void @"_ZN4core3ptr49drop_in_place$LT$core..cell..Ref$LT$usize$GT$$GT$17h3756d7c001a8867bE"({ i64*, i64* }* %_12) #17
          to label %bb14 unwind label %abort

cleanup:                                          ; preds = %bb9, %bb5, %bb4
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb13

bb5:                                              ; preds = %bb4
  %_9 = load i64, i64* %_10, align 8
  %10 = getelementptr inbounds %"[closure@./probe_RSE.rs:99:30: 102:14]", %"[closure@./probe_RSE.rs:99:30: 102:14]"* %_1, i32 0, i32 1
  %_28 = load %"core::cell::RefCell<alloc::string::String>"**, %"core::cell::RefCell<alloc::string::String>"*** %10, align 8, !nonnull !3, !align !8, !noundef !3
  %_29 = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %_28, align 8, !nonnull !3, !align !8, !noundef !3
; invoke core::cell::RefCell<T>::borrow
  %11 = invoke { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17h522209af0c1afa20E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %_29, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc841 to %"core::panic::location::Location"*))
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store { i64*, i64* } %11, { i64*, i64* }* %_18, align 8
; invoke <core::cell::Ref<T> as core::ops::deref::Deref>::deref
  %_16 = invoke align 8 %"alloc::string::String"* @"_ZN68_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6cb29ed3a0472e3cE"({ i64*, i64* }* align 8 %_18)
          to label %bb7 unwind label %cleanup1

bb12:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_18) #17
          to label %bb13 unwind label %abort

cleanup1:                                         ; preds = %bb8, %bb7, %bb6
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb12

bb7:                                              ; preds = %bb6
; invoke <alloc::string::String as core::clone::Clone>::clone
  invoke void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17h652f7df73894e8cdE"(%"alloc::string::String"* sret(%"alloc::string::String") %_14, %"alloc::string::String"* align 8 %_16)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
  %17 = getelementptr inbounds %"[closure@./probe_RSE.rs:99:30: 102:14]", %"[closure@./probe_RSE.rs:99:30: 102:14]"* %_1, i32 0, i32 2
  %_30 = load i32*, i32** %17, align 8, !nonnull !3, !align !13, !noundef !3
  %_20 = load i32, i32* %_30, align 4
  %18 = getelementptr inbounds %"[closure@./probe_RSE.rs:99:30: 102:14]", %"[closure@./probe_RSE.rs:99:30: 102:14]"* %_1, i32 0, i32 3
  %_31 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %18, align 8, !nonnull !3, !align !8, !noundef !3
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_31, i32 0, i32 0
  %_32.0 = load [0 x i8]*, [0 x i8]** %19, align 8, !nonnull !3, !align !4, !noundef !3
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_31, i32 0, i32 1
  %_32.1 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds %"[closure@./probe_RSE.rs:99:30: 102:14]", %"[closure@./probe_RSE.rs:99:30: 102:14]"* %_1, i32 0, i32 4
  %_33 = load i64**, i64*** %21, align 8, !nonnull !3, !align !8, !noundef !3
  %_24 = load i64*, i64** %_33, align 8
  %22 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_22, i32 0, i32 1
  %23 = bitcast i8** %22 to i64**
  store i64* %_24, i64** %23, align 8
  %24 = bitcast { i64, i8* }* %_22 to i64*
  store i64 1, i64* %24, align 8
  %25 = bitcast { i8*, i64 }* %_25 to { [0 x i8]*, i64 }*
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %25, i32 0, i32 0
  store [0 x i8]* %file_path_str.0, [0 x i8]** %26, align 8
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %25, i32 0, i32 1
  store i64 %file_path_str.1, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_22, i32 0, i32 0
  %29 = load i64, i64* %28, align 8, !range !7, !noundef !3
  %30 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_22, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_25, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8, !align !4
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_25, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
; invoke probe_RSE::__record_thread_structure
  invoke void @_ZN9probe_RSE25__record_thread_structure17ha1f83420ddc94320E(i64 %_9, %"alloc::string::String"* %_14, i32 %_20, [0 x i8]* align 1 %_32.0, i64 %_32.1, i64 %29, i8* %31, i8* align 1 %33, i64 %35)
          to label %bb9 unwind label %cleanup1

bb9:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_18)
          to label %bb10 unwind label %cleanup

abort:                                            ; preds = %bb13, %bb12
  %36 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb10:                                             ; preds = %bb9
; call core::ptr::drop_in_place<core::cell::Ref<usize>>
  call void @"_ZN4core3ptr49drop_in_place$LT$core..cell..Ref$LT$usize$GT$$GT$17h3756d7c001a8867bE"({ i64*, i64* }* %_12)
  br label %bb11

bb14:                                             ; preds = %bb13
  %37 = bitcast { i8*, i32 }* %0 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1
  resume { i8*, i32 } %42

bb11:                                             ; preds = %bb10
  ret void
}

; probe_RSE::_probe_func_
; Function Attrs: nonlazybind uwtable
define void @_ZN9probe_RSE12_probe_func_17h76edebab8a1c6c6aE(i32 %0, i32 %1, i8* %func_name, i8* %2) unnamed_addr #1 {
start:
  %_16 = alloca %"[closure@./probe_RSE.rs:116:18: 122:10]", align 8
  %_6 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %func_name_str = alloca { [0 x i8]*, i64 }, align 8
  %file_path = alloca i8*, align 8
  %func_num = alloca i32, align 4
  %line = alloca i32, align 4
  store i32 %0, i32* %line, align 4
  store i32 %1, i32* %func_num, align 4
  store i8* %2, i8** %file_path, align 8
; call core::ffi::c_str::CStr::from_ptr
  %3 = call { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ffi5c_str4CStr8from_ptr17hdc7536f17352db0bE(i8* %func_name)
  %_8.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %3, 0
  %_8.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::ffi::c_str::CStr::to_str
  call void @_ZN4core3ffi5c_str4CStr6to_str17hef57ed6c63562b9bE(%"core::result::Result<&str, core::str::error::Utf8Error>"* sret(%"core::result::Result<&str, core::str::error::Utf8Error>") %_6, %"core::ffi::c_str::CStr"* align 1 %_8.0, i64 %_8.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::result::Result<T,E>::unwrap
  %4 = call { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h27265b1272c97b70E"(%"core::result::Result<&str, core::str::error::Utf8Error>"* %_6, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc843 to %"core::panic::location::Location"*))
  store { [0 x i8]*, i64 } %4, { [0 x i8]*, i64 }* %func_name_str, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::ne
  %_10 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2ne17h41d92785e6701561E"({ [0 x i8]*, i64 }* align 8 %func_name_str, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc516 to { [0 x i8]*, i64 }*))
  br label %bb4

bb4:                                              ; preds = %bb3
  br i1 %_10, label %bb5, label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %5 = bitcast %"[closure@./probe_RSE.rs:116:18: 122:10]"* %_16 to i32**
  store i32* %func_num, i32** %5, align 8
  %6 = getelementptr inbounds %"[closure@./probe_RSE.rs:116:18: 122:10]", %"[closure@./probe_RSE.rs:116:18: 122:10]"* %_16, i32 0, i32 1
  store i8** %file_path, i8*** %6, align 8
  %7 = getelementptr inbounds %"[closure@./probe_RSE.rs:116:18: 122:10]", %"[closure@./probe_RSE.rs:116:18: 122:10]"* %_16, i32 0, i32 2
  store i32* %line, i32** %7, align 8
  %8 = getelementptr inbounds %"[closure@./probe_RSE.rs:116:18: 122:10]", %"[closure@./probe_RSE.rs:116:18: 122:10]"* %_16, i32 0, i32 3
  store { [0 x i8]*, i64 }* %func_name_str, { [0 x i8]*, i64 }** %8, align 8
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h7e698ac1446a5e62E"(i64** align 8 bitcast (<{ i8* }>* @alloc554 to i64**), %"[closure@./probe_RSE.rs:116:18: 122:10]"* %_16)
  br label %bb7

bb5:                                              ; preds = %bb4
; call probe_RSE::__random_sleep
  call void @_ZN9probe_RSE14__random_sleep17h65863d114ffdfd28E()
  br label %bb6

bb7:                                              ; preds = %bb6
  ret void
}

; probe_RSE::_probe_func_::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_RSE12_probe_func_28_$u7b$$u7b$closure$u7d$$u7d$17h66e1240a7d701e70E"(%"[closure@./probe_RSE.rs:116:18: 122:10]"* %_1, %"core::cell::RefCell<alloc::string::String>"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_14 = alloca %"[closure@./probe_RSE.rs:118:30: 121:14]", align 8
  %_9 = alloca { i64*, i64* }, align 8
  %tid = alloca %"core::cell::RefCell<alloc::string::String>"*, align 8
  store %"core::cell::RefCell<alloc::string::String>"* %0, %"core::cell::RefCell<alloc::string::String>"** %tid, align 8
  %_10 = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %tid, align 8, !nonnull !3, !align !8, !noundef !3
; call core::cell::RefCell<T>::borrow
  %2 = call { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17h522209af0c1afa20E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %_10, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc845 to %"core::panic::location::Location"*))
  store { i64*, i64* } %2, { i64*, i64* }* %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
; invoke <core::cell::Ref<T> as core::ops::deref::Deref>::deref
  %_7 = invoke align 8 %"alloc::string::String"* @"_ZN68_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6cb29ed3a0472e3cE"({ i64*, i64* }* align 8 %_9)
          to label %bb2 unwind label %cleanup

bb7:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_9) #17
          to label %bb8 unwind label %abort

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
; invoke alloc::string::String::as_str
  %8 = invoke { [0 x i8]*, i64 } @_ZN5alloc6string6String6as_str17h7d830e6e0c0d6b42E(%"alloc::string::String"* align 8 %_7)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  %9 = bitcast %"[closure@./probe_RSE.rs:116:18: 122:10]"* %_1 to i32**
  %_20 = load i32*, i32** %9, align 8, !nonnull !3, !align !13, !noundef !3
  %_11 = load i32, i32* %_20, align 4
; invoke probe_RSE::__write_log
  invoke void @_ZN9probe_RSE11__write_log17hc7704a69f23ba170E([0 x i8]* align 1 %_5.0, i64 %_5.1, i32 %_11)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; call core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  call void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_9)
  br label %bb5

abort:                                            ; preds = %bb7
  %10 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb8:                                              ; preds = %bb7
  %11 = bitcast { i8*, i32 }* %1 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb5:                                              ; preds = %bb4
  %17 = getelementptr inbounds %"[closure@./probe_RSE.rs:116:18: 122:10]", %"[closure@./probe_RSE.rs:116:18: 122:10]"* %_1, i32 0, i32 1
  %_21 = load i8**, i8*** %17, align 8, !nonnull !3, !align !8, !noundef !3
  %18 = getelementptr inbounds %"[closure@./probe_RSE.rs:116:18: 122:10]", %"[closure@./probe_RSE.rs:116:18: 122:10]"* %_1, i32 0, i32 2
  %_22 = load i32*, i32** %18, align 8, !nonnull !3, !align !13, !noundef !3
  %19 = getelementptr inbounds %"[closure@./probe_RSE.rs:116:18: 122:10]", %"[closure@./probe_RSE.rs:116:18: 122:10]"* %_1, i32 0, i32 3
  %_23 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %19, align 8, !nonnull !3, !align !8, !noundef !3
  %20 = bitcast %"[closure@./probe_RSE.rs:118:30: 121:14]"* %_14 to i8***
  store i8** %_21, i8*** %20, align 8
  %21 = getelementptr inbounds %"[closure@./probe_RSE.rs:118:30: 121:14]", %"[closure@./probe_RSE.rs:118:30: 121:14]"* %_14, i32 0, i32 1
  store %"core::cell::RefCell<alloc::string::String>"** %tid, %"core::cell::RefCell<alloc::string::String>"*** %21, align 8
  %22 = getelementptr inbounds %"[closure@./probe_RSE.rs:118:30: 121:14]", %"[closure@./probe_RSE.rs:118:30: 121:14]"* %_14, i32 0, i32 2
  store i32* %_22, i32** %22, align 8
  %23 = getelementptr inbounds %"[closure@./probe_RSE.rs:118:30: 121:14]", %"[closure@./probe_RSE.rs:118:30: 121:14]"* %_14, i32 0, i32 3
  store { [0 x i8]*, i64 }* %_23, { [0 x i8]*, i64 }** %23, align 8
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h21ffc1a568d3044aE"(i64** align 8 bitcast (<{ i8* }>* @alloc563 to i64**), %"[closure@./probe_RSE.rs:118:30: 121:14]"* %_14)
  br label %bb6

bb6:                                              ; preds = %bb5
  ret void
}

; probe_RSE::_probe_func_::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_RSE12_probe_func_28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h796570f6fd38a9d4E"(%"[closure@./probe_RSE.rs:118:30: 121:14]"* %_1, { i64, i64 }* align 8 %exe_node_id) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_21 = alloca { i8*, i64 }, align 8
  %_20 = alloca { i64, i8* }, align 8
  %_16 = alloca { i64*, i64* }, align 8
  %_14 = alloca %"alloc::string::String", align 8
  %_12 = alloca { i64*, i64* }, align 8
  %_4 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %1 = bitcast %"[closure@./probe_RSE.rs:118:30: 121:14]"* %_1 to i8***
  %_23 = load i8**, i8*** %1, align 8, !nonnull !3, !align !8, !noundef !3
  %_7 = load i8*, i8** %_23, align 8
; call core::ffi::c_str::CStr::from_ptr
  %2 = call { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ffi5c_str4CStr8from_ptr17hdc7536f17352db0bE(i8* %_7)
  %_6.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 0
  %_6.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::ffi::c_str::CStr::to_str
  call void @_ZN4core3ffi5c_str4CStr6to_str17hef57ed6c63562b9bE(%"core::result::Result<&str, core::str::error::Utf8Error>"* sret(%"core::result::Result<&str, core::str::error::Utf8Error>") %_4, %"core::ffi::c_str::CStr"* align 1 %_6.0, i64 %_6.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::result::Result<T,E>::unwrap
  %3 = call { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h27265b1272c97b70E"(%"core::result::Result<&str, core::str::error::Utf8Error>"* %_4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc847 to %"core::panic::location::Location"*))
  %file_path_str.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %file_path_str.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::cell::RefCell<T>::borrow
  %4 = call { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17heb40be7814151f08E"({ i64, i64 }* align 8 %exe_node_id, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc849 to %"core::panic::location::Location"*))
  store { i64*, i64* } %4, { i64*, i64* }* %_12, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke <core::cell::Ref<T> as core::ops::deref::Deref>::deref
  %_10 = invoke align 8 i64* @"_ZN68_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h1a48521ee60e2b30E"({ i64*, i64* }* align 8 %_12)
          to label %bb5 unwind label %cleanup

bb12:                                             ; preds = %bb11, %cleanup
; invoke core::ptr::drop_in_place<core::cell::Ref<usize>>
  invoke void @"_ZN4core3ptr49drop_in_place$LT$core..cell..Ref$LT$usize$GT$$GT$17h3756d7c001a8867bE"({ i64*, i64* }* %_12) #17
          to label %bb13 unwind label %abort

cleanup:                                          ; preds = %bb8, %bb5, %bb4
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb12

bb5:                                              ; preds = %bb4
  %_9 = load i64, i64* %_10, align 8
  %10 = getelementptr inbounds %"[closure@./probe_RSE.rs:118:30: 121:14]", %"[closure@./probe_RSE.rs:118:30: 121:14]"* %_1, i32 0, i32 1
  %_24 = load %"core::cell::RefCell<alloc::string::String>"**, %"core::cell::RefCell<alloc::string::String>"*** %10, align 8, !nonnull !3, !align !8, !noundef !3
  %_25 = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %_24, align 8, !nonnull !3, !align !8, !noundef !3
; invoke core::cell::RefCell<T>::borrow
  %11 = invoke { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17h522209af0c1afa20E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %_25, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc851 to %"core::panic::location::Location"*))
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store { i64*, i64* } %11, { i64*, i64* }* %_16, align 8
; invoke <T as alloc::string::ToString>::to_string
  invoke void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hacedbccc08cf976dE"(%"alloc::string::String"* sret(%"alloc::string::String") %_14, { i64*, i64* }* align 8 %_16)
          to label %bb7 unwind label %cleanup1

bb11:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_16) #17
          to label %bb12 unwind label %abort

cleanup1:                                         ; preds = %bb7, %bb6
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb11

bb7:                                              ; preds = %bb6
  %17 = getelementptr inbounds %"[closure@./probe_RSE.rs:118:30: 121:14]", %"[closure@./probe_RSE.rs:118:30: 121:14]"* %_1, i32 0, i32 2
  %_26 = load i32*, i32** %17, align 8, !nonnull !3, !align !13, !noundef !3
  %_18 = load i32, i32* %_26, align 4
  %18 = getelementptr inbounds %"[closure@./probe_RSE.rs:118:30: 121:14]", %"[closure@./probe_RSE.rs:118:30: 121:14]"* %_1, i32 0, i32 3
  %_27 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %18, align 8, !nonnull !3, !align !8, !noundef !3
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_27, i32 0, i32 0
  %_28.0 = load [0 x i8]*, [0 x i8]** %19, align 8, !nonnull !3, !align !4, !noundef !3
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_27, i32 0, i32 1
  %_28.1 = load i64, i64* %20, align 8
  %21 = bitcast { i64, i8* }* %_20 to i64*
  store i64 0, i64* %21, align 8
  %22 = bitcast { i8*, i64 }* %_21 to { [0 x i8]*, i64 }*
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %22, i32 0, i32 0
  store [0 x i8]* %file_path_str.0, [0 x i8]** %23, align 8
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %22, i32 0, i32 1
  store i64 %file_path_str.1, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_20, i32 0, i32 0
  %26 = load i64, i64* %25, align 8, !range !7, !noundef !3
  %27 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_20, i32 0, i32 1
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_21, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8, !align !4
  %31 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_21, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
; invoke probe_RSE::__record_thread_structure
  invoke void @_ZN9probe_RSE25__record_thread_structure17ha1f83420ddc94320E(i64 %_9, %"alloc::string::String"* %_14, i32 %_18, [0 x i8]* align 1 %_28.0, i64 %_28.1, i64 %26, i8* %28, i8* align 1 %30, i64 %32)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_16)
          to label %bb9 unwind label %cleanup

abort:                                            ; preds = %bb12, %bb11
  %33 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb9:                                              ; preds = %bb8
; call core::ptr::drop_in_place<core::cell::Ref<usize>>
  call void @"_ZN4core3ptr49drop_in_place$LT$core..cell..Ref$LT$usize$GT$$GT$17h3756d7c001a8867bE"({ i64*, i64* }* %_12)
  br label %bb10

bb13:                                             ; preds = %bb12
  %34 = bitcast { i8*, i32 }* %0 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

bb10:                                             ; preds = %bb9
  ret void
}

; probe_RSE::_probe_spawning_
; Function Attrs: nonlazybind uwtable
define void @_ZN9probe_RSE16_probe_spawning_17h0bb1a5cc15bc0ecaE(i32 %0, i32 %1, i8* %2) unnamed_addr #1 {
start:
  %_14 = alloca %"[closure@./probe_RSE.rs:134:18: 146:10]", align 8
  %file_path = alloca i8*, align 8
  %func_num = alloca i32, align 4
  %line = alloca i32, align 4
  store i32 %0, i32* %line, align 4
  store i32 %1, i32* %func_num, align 4
  store i8* %2, i8** %file_path, align 8
  %3 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_SEM17h8031662f11c75f52E to {}**), align 8
  %4 = icmp eq {}* %3, null
  %_6 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_6, 1
  br i1 %5, label %bb1, label %bb3

bb1:                                              ; preds = %start
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_10 = call align 4 %_ProbeSemaphore* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h29e7026afe47dda5E"(i64** align 8 bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_SEM17h8031662f11c75f52E to i64**))
  br label %bb2

bb3:                                              ; preds = %bb2, %start
  %6 = bitcast %"[closure@./probe_RSE.rs:134:18: 146:10]"* %_14 to i32**
  store i32* %func_num, i32** %6, align 8
  %7 = getelementptr inbounds %"[closure@./probe_RSE.rs:134:18: 146:10]", %"[closure@./probe_RSE.rs:134:18: 146:10]"* %_14, i32 0, i32 1
  store i8** %file_path, i8*** %7, align 8
  %8 = getelementptr inbounds %"[closure@./probe_RSE.rs:134:18: 146:10]", %"[closure@./probe_RSE.rs:134:18: 146:10]"* %_14, i32 0, i32 2
  store i32* %line, i32** %8, align 8
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17hf827740a087f6acfE"(i64** align 8 bitcast (<{ i8* }>* @alloc554 to i64**), %"[closure@./probe_RSE.rs:134:18: 146:10]"* %_14)
  br label %bb4

bb2:                                              ; preds = %bb1
; call probe_RSE::_ProbeSemaphore::dec
  call void @_ZN9probe_RSE15_ProbeSemaphore3dec17h9b0e9095cb379cacE(%_ProbeSemaphore* align 4 %_10)
  br label %bb3

bb4:                                              ; preds = %bb3
  ret void
}

; probe_RSE::_probe_spawning_::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_RSE16_probe_spawning_28_$u7b$$u7b$closure$u7d$$u7d$17h9001f0b13128967dE"(%"[closure@./probe_RSE.rs:134:18: 146:10]"* %_1, %"core::cell::RefCell<alloc::string::String>"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_13 = alloca %"[closure@./probe_RSE.rs:136:27: 145:14]", align 8
  %_9 = alloca { i64*, i64* }, align 8
  %tid = alloca %"core::cell::RefCell<alloc::string::String>"*, align 8
  store %"core::cell::RefCell<alloc::string::String>"* %0, %"core::cell::RefCell<alloc::string::String>"** %tid, align 8
  %_10 = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %tid, align 8, !nonnull !3, !align !8, !noundef !3
; call core::cell::RefCell<T>::borrow
  %2 = call { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17h522209af0c1afa20E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %_10, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc853 to %"core::panic::location::Location"*))
  store { i64*, i64* } %2, { i64*, i64* }* %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
; invoke <core::cell::Ref<T> as core::ops::deref::Deref>::deref
  %_7 = invoke align 8 %"alloc::string::String"* @"_ZN68_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6cb29ed3a0472e3cE"({ i64*, i64* }* align 8 %_9)
          to label %bb2 unwind label %cleanup

bb7:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_9) #17
          to label %bb8 unwind label %abort

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
; invoke alloc::string::String::as_str
  %8 = invoke { [0 x i8]*, i64 } @_ZN5alloc6string6String6as_str17h7d830e6e0c0d6b42E(%"alloc::string::String"* align 8 %_7)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  %9 = bitcast %"[closure@./probe_RSE.rs:134:18: 146:10]"* %_1 to i32**
  %_18 = load i32*, i32** %9, align 8, !nonnull !3, !align !13, !noundef !3
  %_11 = load i32, i32* %_18, align 4
; invoke probe_RSE::__write_log
  invoke void @_ZN9probe_RSE11__write_log17hc7704a69f23ba170E([0 x i8]* align 1 %_5.0, i64 %_5.1, i32 %_11)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; call core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  call void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_9)
  br label %bb5

abort:                                            ; preds = %bb7
  %10 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb8:                                              ; preds = %bb7
  %11 = bitcast { i8*, i32 }* %1 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb5:                                              ; preds = %bb4
  %17 = getelementptr inbounds %"[closure@./probe_RSE.rs:134:18: 146:10]", %"[closure@./probe_RSE.rs:134:18: 146:10]"* %_1, i32 0, i32 1
  %_19 = load i8**, i8*** %17, align 8, !nonnull !3, !align !8, !noundef !3
  %18 = getelementptr inbounds %"[closure@./probe_RSE.rs:134:18: 146:10]", %"[closure@./probe_RSE.rs:134:18: 146:10]"* %_1, i32 0, i32 2
  %_20 = load i32*, i32** %18, align 8, !nonnull !3, !align !13, !noundef !3
  %19 = bitcast %"[closure@./probe_RSE.rs:136:27: 145:14]"* %_13 to %"core::cell::RefCell<alloc::string::String>"***
  store %"core::cell::RefCell<alloc::string::String>"** %tid, %"core::cell::RefCell<alloc::string::String>"*** %19, align 8
  %20 = getelementptr inbounds %"[closure@./probe_RSE.rs:136:27: 145:14]", %"[closure@./probe_RSE.rs:136:27: 145:14]"* %_13, i32 0, i32 1
  store i8** %_19, i8*** %20, align 8
  %21 = getelementptr inbounds %"[closure@./probe_RSE.rs:136:27: 145:14]", %"[closure@./probe_RSE.rs:136:27: 145:14]"* %_13, i32 0, i32 2
  store i32* %_20, i32** %21, align 8
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h86dd68af219dacb3E"(i64** align 8 bitcast (<{ i8* }>* @alloc543 to i64**), %"[closure@./probe_RSE.rs:136:27: 145:14]"* %_13)
  br label %bb6

bb6:                                              ; preds = %bb5
  ret void
}

; probe_RSE::_probe_spawning_::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_RSE16_probe_spawning_28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h6c113c8a9b0ba016E"(%"[closure@./probe_RSE.rs:136:27: 145:14]"* %_1, { i64, i32 }* align 8 %child_id) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_31 = alloca %"[closure@./probe_RSE.rs:141:34: 144:18]", align 8
  %_20 = alloca { i64*, i64* }, align 8
  %_19 = alloca { i64*, i64* }*, align 8
  %_15 = alloca [2 x { i8*, i64* }], align 8
  %_8 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_6 = alloca %"alloc::string::String", align 8
  %_5 = alloca %"core::option::Option<alloc::string::String>", align 8
  %child_id1 = alloca { i32*, i64* }, align 8
; call core::cell::RefCell<T>::borrow_mut
  %1 = call { i32*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$10borrow_mut17hf85f71a5836bc6caE"({ i64, i32 }* align 8 %child_id, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc855 to %"core::panic::location::Location"*))
  store { i32*, i64* } %1, { i32*, i64* }* %child_id1, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"[closure@./probe_RSE.rs:136:27: 145:14]"* %_1 to %"core::cell::RefCell<alloc::string::String>"***
  %_37 = load %"core::cell::RefCell<alloc::string::String>"**, %"core::cell::RefCell<alloc::string::String>"*** %2, align 8, !nonnull !3, !align !8, !noundef !3
  %_38 = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %_37, align 8, !nonnull !3, !align !8, !noundef !3
; invoke core::cell::RefCell<T>::borrow
  %3 = invoke { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17h522209af0c1afa20E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %_38, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc857 to %"core::panic::location::Location"*))
          to label %bb2 unwind label %cleanup

bb14:                                             ; preds = %bb16, %bb12, %bb13, %cleanup
; invoke core::ptr::drop_in_place<core::cell::RefMut<i32>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$core..cell..RefMut$LT$i32$GT$$GT$17h939472ced23394a3E"({ i32*, i64* }* %child_id1) #17
          to label %bb15 unwind label %abort

cleanup:                                          ; preds = %bb9, %panic, %bb17, %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb14

bb2:                                              ; preds = %bb1
  store { i64*, i64* } %3, { i64*, i64* }* %_20, align 8
  store { i64*, i64* }* %_20, { i64*, i64* }** %_19, align 8
; invoke core::fmt::ArgumentV1::new_display
  %9 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h6de1f7bab5be1818E({ i64*, i64* }** align 8 %_19)
          to label %bb3 unwind label %cleanup2

bb13:                                             ; preds = %cleanup2
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_20) #17
          to label %bb14 unwind label %abort

cleanup2:                                         ; preds = %bb5, %bb4, %bb3, %bb2
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb13

bb3:                                              ; preds = %bb2
  %_16.0 = extractvalue { i8*, i64* } %9, 0
  %_16.1 = extractvalue { i8*, i64* } %9, 1
; invoke core::fmt::ArgumentV1::new_display
  %15 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h35509908dd72e4eeE({ i32*, i64* }* align 8 %child_id1)
          to label %bb4 unwind label %cleanup2

bb4:                                              ; preds = %bb3
  %_22.0 = extractvalue { i8*, i64* } %15, 0
  %_22.1 = extractvalue { i8*, i64* } %15, 1
  %16 = bitcast [2 x { i8*, i64* }]* %_15 to { i8*, i64* }*
  %17 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 0
  store i8* %_16.0, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 1
  store i64* %_16.1, i64** %18, align 8
  %19 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_15, i32 0, i32 1
  %20 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %19, i32 0, i32 0
  store i8* %_22.0, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %19, i32 0, i32 1
  store i64* %_22.1, i64** %21, align 8
  %_12.0 = bitcast [2 x { i8*, i64* }]* %_15 to [0 x { i8*, i64* }]*
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_8, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc546 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_12.0, i64 2)
          to label %bb5 unwind label %cleanup2

bb5:                                              ; preds = %bb4
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17hf8ffbd9ceceb6841E(%"alloc::string::String"* sret(%"alloc::string::String") %res, %"core::fmt::Arguments"* %_8)
          to label %bb6 unwind label %cleanup2

bb6:                                              ; preds = %bb5
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_20)
          to label %bb7 unwind label %cleanup3

abort:                                            ; preds = %bb14, %bb12, %bb13
  %22 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb12:                                             ; preds = %cleanup3
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %res) #17
          to label %bb14 unwind label %abort

cleanup3:                                         ; preds = %bb6
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  br label %bb12

bb7:                                              ; preds = %bb6
  %28 = bitcast %"alloc::string::String"* %_6 to i8*
  %29 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false)
  %30 = bitcast %"core::option::Option<alloc::string::String>"* %_5 to %"core::option::Option<alloc::string::String>::Some"*
  %31 = bitcast %"core::option::Option<alloc::string::String>::Some"* %30 to %"alloc::string::String"*
  %32 = bitcast %"alloc::string::String"* %31 to i8*
  %33 = bitcast %"alloc::string::String"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false)
; invoke core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17hcab60bc2b9726a26E"(%"core::option::Option<alloc::string::String>"* bitcast (<{ [8 x i8], [16 x i8] }>* @_ZN9probe_RSE20_PROBE_NEW_THREAD_ID17hb3c5bb923c61dc6aE to %"core::option::Option<alloc::string::String>"*))
          to label %bb17 unwind label %cleanup4

bb16:                                             ; preds = %cleanup4
  %34 = bitcast %"core::option::Option<alloc::string::String>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (<{ [8 x i8], [16 x i8] }>, <{ [8 x i8], [16 x i8] }>* @_ZN9probe_RSE20_PROBE_NEW_THREAD_ID17hb3c5bb923c61dc6aE, i32 0, i32 0, i32 0), i8* align 8 %34, i64 24, i1 false)
  br label %bb14

cleanup4:                                         ; preds = %bb7
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  %37 = extractvalue { i8*, i32 } %35, 1
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %37, i32* %39, align 8
  br label %bb16

bb17:                                             ; preds = %bb7
  %40 = bitcast %"core::option::Option<alloc::string::String>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (<{ [8 x i8], [16 x i8] }>, <{ [8 x i8], [16 x i8] }>* @_ZN9probe_RSE20_PROBE_NEW_THREAD_ID17hb3c5bb923c61dc6aE, i32 0, i32 0, i32 0), i8* align 8 %40, i64 24, i1 false)
; invoke <core::cell::RefMut<T> as core::ops::deref::DerefMut>::deref_mut
  %_26 = invoke align 4 i32* @"_ZN74_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hb89790c759197fd9E"({ i32*, i64* }* align 8 %child_id1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb17
  %41 = load i32, i32* %_26, align 4
  %42 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %41, i32 1)
  %_28.0 = extractvalue { i32, i1 } %42, 0
  %_28.1 = extractvalue { i32, i1 } %42, 1
  %43 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false)
  br i1 %43, label %panic, label %bb9

bb9:                                              ; preds = %bb8
  store i32 %_28.0, i32* %_26, align 4
  %44 = getelementptr inbounds %"[closure@./probe_RSE.rs:136:27: 145:14]", %"[closure@./probe_RSE.rs:136:27: 145:14]"* %_1, i32 0, i32 1
  %_39 = load i8**, i8*** %44, align 8, !nonnull !3, !align !8, !noundef !3
  %45 = bitcast %"[closure@./probe_RSE.rs:136:27: 145:14]"* %_1 to %"core::cell::RefCell<alloc::string::String>"***
  %_40 = load %"core::cell::RefCell<alloc::string::String>"**, %"core::cell::RefCell<alloc::string::String>"*** %45, align 8, !nonnull !3, !align !8, !noundef !3
  %46 = getelementptr inbounds %"[closure@./probe_RSE.rs:136:27: 145:14]", %"[closure@./probe_RSE.rs:136:27: 145:14]"* %_1, i32 0, i32 2
  %_41 = load i32*, i32** %46, align 8, !nonnull !3, !align !13, !noundef !3
  %47 = bitcast %"[closure@./probe_RSE.rs:141:34: 144:18]"* %_31 to i8***
  store i8** %_39, i8*** %47, align 8
  %48 = getelementptr inbounds %"[closure@./probe_RSE.rs:141:34: 144:18]", %"[closure@./probe_RSE.rs:141:34: 144:18]"* %_31, i32 0, i32 1
  store %"core::cell::RefCell<alloc::string::String>"** %_40, %"core::cell::RefCell<alloc::string::String>"*** %48, align 8
  %49 = getelementptr inbounds %"[closure@./probe_RSE.rs:141:34: 144:18]", %"[closure@./probe_RSE.rs:141:34: 144:18]"* %_31, i32 0, i32 2
  store i32* %_41, i32** %49, align 8
; invoke std::thread::local::LocalKey<T>::with
  invoke void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h071f1d2e6692564dE"(i64** align 8 bitcast (<{ i8* }>* @alloc563 to i64**), %"[closure@./probe_RSE.rs:141:34: 144:18]"* %_31)
          to label %bb10 unwind label %cleanup

panic:                                            ; preds = %bb8
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h1efed56daac899acE([0 x i8]* align 1 bitcast ([28 x i8]* @str.f to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc859 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb10:                                             ; preds = %bb9
; call core::ptr::drop_in_place<core::cell::RefMut<i32>>
  call void @"_ZN4core3ptr50drop_in_place$LT$core..cell..RefMut$LT$i32$GT$$GT$17h939472ced23394a3E"({ i32*, i64* }* %child_id1)
  br label %bb11

bb15:                                             ; preds = %bb14
  %50 = bitcast { i8*, i32 }* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %55 = insertvalue { i8*, i32 } %54, i32 %53, 1
  resume { i8*, i32 } %55

bb11:                                             ; preds = %bb10
  ret void
}

; probe_RSE::_probe_spawning_::{{closure}}::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_RSE16_probe_spawning_28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h51e77ad9a7d4b14bE"(%"[closure@./probe_RSE.rs:141:34: 144:18]"* %_1, { i64, i64 }* align 8 %exe_node_id) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_20 = alloca { i8*, i64 }, align 8
  %_19 = alloca { i64, i8* }, align 8
  %_16 = alloca { i64*, i64* }, align 8
  %_14 = alloca %"alloc::string::String", align 8
  %_12 = alloca { i64*, i64* }, align 8
  %_4 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %1 = bitcast %"[closure@./probe_RSE.rs:141:34: 144:18]"* %_1 to i8***
  %_22 = load i8**, i8*** %1, align 8, !nonnull !3, !align !8, !noundef !3
  %_7 = load i8*, i8** %_22, align 8
; call core::ffi::c_str::CStr::from_ptr
  %2 = call { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ffi5c_str4CStr8from_ptr17hdc7536f17352db0bE(i8* %_7)
  %_6.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 0
  %_6.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::ffi::c_str::CStr::to_str
  call void @_ZN4core3ffi5c_str4CStr6to_str17hef57ed6c63562b9bE(%"core::result::Result<&str, core::str::error::Utf8Error>"* sret(%"core::result::Result<&str, core::str::error::Utf8Error>") %_4, %"core::ffi::c_str::CStr"* align 1 %_6.0, i64 %_6.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::result::Result<T,E>::unwrap
  %3 = call { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h27265b1272c97b70E"(%"core::result::Result<&str, core::str::error::Utf8Error>"* %_4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc861 to %"core::panic::location::Location"*))
  %file_path_str.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %file_path_str.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::cell::RefCell<T>::borrow
  %4 = call { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17heb40be7814151f08E"({ i64, i64 }* align 8 %exe_node_id, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc863 to %"core::panic::location::Location"*))
  store { i64*, i64* } %4, { i64*, i64* }* %_12, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke <core::cell::Ref<T> as core::ops::deref::Deref>::deref
  %_10 = invoke align 8 i64* @"_ZN68_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h1a48521ee60e2b30E"({ i64*, i64* }* align 8 %_12)
          to label %bb5 unwind label %cleanup

bb12:                                             ; preds = %bb11, %cleanup
; invoke core::ptr::drop_in_place<core::cell::Ref<usize>>
  invoke void @"_ZN4core3ptr49drop_in_place$LT$core..cell..Ref$LT$usize$GT$$GT$17h3756d7c001a8867bE"({ i64*, i64* }* %_12) #17
          to label %bb13 unwind label %abort

cleanup:                                          ; preds = %bb8, %bb5, %bb4
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb12

bb5:                                              ; preds = %bb4
  %_9 = load i64, i64* %_10, align 8
  %10 = getelementptr inbounds %"[closure@./probe_RSE.rs:141:34: 144:18]", %"[closure@./probe_RSE.rs:141:34: 144:18]"* %_1, i32 0, i32 1
  %_23 = load %"core::cell::RefCell<alloc::string::String>"**, %"core::cell::RefCell<alloc::string::String>"*** %10, align 8, !nonnull !3, !align !8, !noundef !3
  %_24 = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %_23, align 8, !nonnull !3, !align !8, !noundef !3
; invoke core::cell::RefCell<T>::borrow
  %11 = invoke { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17h522209af0c1afa20E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %_24, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc865 to %"core::panic::location::Location"*))
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store { i64*, i64* } %11, { i64*, i64* }* %_16, align 8
; invoke <T as alloc::string::ToString>::to_string
  invoke void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hacedbccc08cf976dE"(%"alloc::string::String"* sret(%"alloc::string::String") %_14, { i64*, i64* }* align 8 %_16)
          to label %bb7 unwind label %cleanup1

bb11:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_16) #17
          to label %bb12 unwind label %abort

cleanup1:                                         ; preds = %bb7, %bb6
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb11

bb7:                                              ; preds = %bb6
  %17 = getelementptr inbounds %"[closure@./probe_RSE.rs:141:34: 144:18]", %"[closure@./probe_RSE.rs:141:34: 144:18]"* %_1, i32 0, i32 2
  %_25 = load i32*, i32** %17, align 8, !nonnull !3, !align !13, !noundef !3
  %_18 = load i32, i32* %_25, align 4
  %18 = bitcast { i64, i8* }* %_19 to i64*
  store i64 0, i64* %18, align 8
  %19 = bitcast { i8*, i64 }* %_20 to { [0 x i8]*, i64 }*
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 0
  store [0 x i8]* %file_path_str.0, [0 x i8]** %20, align 8
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 1
  store i64 %file_path_str.1, i64* %21, align 8
  %22 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_19, i32 0, i32 0
  %23 = load i64, i64* %22, align 8, !range !7, !noundef !3
  %24 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_19, i32 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_20, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8, !align !4
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_20, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
; invoke probe_RSE::__record_thread_structure
  invoke void @_ZN9probe_RSE25__record_thread_structure17ha1f83420ddc94320E(i64 %_9, %"alloc::string::String"* %_14, i32 %_18, [0 x i8]* align 1 bitcast (<{ [8 x i8] }>* @alloc866 to [0 x i8]*), i64 8, i64 %23, i8* %25, i8* align 1 %27, i64 %29)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_16)
          to label %bb9 unwind label %cleanup

abort:                                            ; preds = %bb12, %bb11
  %30 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb9:                                              ; preds = %bb8
; call core::ptr::drop_in_place<core::cell::Ref<usize>>
  call void @"_ZN4core3ptr49drop_in_place$LT$core..cell..Ref$LT$usize$GT$$GT$17h3756d7c001a8867bE"({ i64*, i64* }* %_12)
  br label %bb10

bb13:                                             ; preds = %bb12
  %31 = bitcast { i8*, i32 }* %0 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = insertvalue { i8*, i32 } undef, i8* %32, 0
  %36 = insertvalue { i8*, i32 } %35, i32 %34, 1
  resume { i8*, i32 } %36

bb10:                                             ; preds = %bb9
  ret void
}

; probe_RSE::_probe_spawned_
; Function Attrs: nonlazybind uwtable
define void @_ZN9probe_RSE15_probe_spawned_17h4b10d4dcbc8435a1E(i32 %0, i32 %1) unnamed_addr #1 {
start:
  %_17 = alloca { i32*, i32* }, align 8
  %func_num = alloca i32, align 4
  %line = alloca i32, align 4
  store i32 %0, i32* %line, align 4
  store i32 %1, i32* %func_num, align 4
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h33b0847ebcbc2decE"(i64** align 8 bitcast (<{ i8* }>* @alloc554 to i64**))
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_SEM17h8031662f11c75f52E to {}**), align 8
  %3 = icmp eq {}* %2, null
  %_8 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_8, 1
  br i1 %4, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_12 = call align 4 %_ProbeSemaphore* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h29e7026afe47dda5E"(i64** align 8 bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_SEM17h8031662f11c75f52E to i64**))
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
; call probe_RSE::__random_sleep
  call void @_ZN9probe_RSE14__random_sleep17h65863d114ffdfd28E()
  br label %bb5

bb3:                                              ; preds = %bb2
; call probe_RSE::_ProbeSemaphore::inc
  call void @_ZN9probe_RSE15_ProbeSemaphore3inc17h3528b9e06b996852E(%_ProbeSemaphore* align 4 %_12)
  br label %bb4

bb5:                                              ; preds = %bb4
  %5 = bitcast { i32*, i32* }* %_17 to i32**
  store i32* %func_num, i32** %5, align 8
  %6 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_17, i32 0, i32 1
  store i32* %line, i32** %6, align 8
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_17, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8, !nonnull !3, !align !13, !noundef !3
  %9 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_17, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8, !nonnull !3, !align !13, !noundef !3
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h62a8ea36ce9e120fE"(i64** align 8 bitcast (<{ i8* }>* @alloc554 to i64**), i32* align 4 %8, i32* align 4 %10)
  br label %bb6

bb6:                                              ; preds = %bb5
  ret void
}

; probe_RSE::_probe_spawned_::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_RSE15_probe_spawned_28_$u7b$$u7b$closure$u7d$$u7d$17h3280b470c70e3ec3E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %tid) unnamed_addr #0 {
start:
  %_9 = alloca %"alloc::string::String", align 8
  %_7 = alloca %"alloc::string::String", align 8
  %0 = load {}*, {}** getelementptr inbounds (%"core::option::Option<alloc::string::String>", %"core::option::Option<alloc::string::String>"* bitcast (<{ [8 x i8], [16 x i8] }>* @_ZN9probe_RSE20_PROBE_NEW_THREAD_ID17hb3c5bb923c61dc6aE to %"core::option::Option<alloc::string::String>"*), i32 0, i32 0), align 8
  %1 = icmp eq {}* %0, null
  %_5 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_5, 1
  br i1 %2, label %bb1, label %bb4

bb1:                                              ; preds = %start
; call <T as alloc::borrow::ToOwned>::to_owned
  call void @"_ZN44_$LT$T$u20$as$u20$alloc..borrow..ToOwned$GT$8to_owned17h6603066356e40ff7E"(%"alloc::string::String"* sret(%"alloc::string::String") %_9, %"alloc::string::String"* align 8 bitcast (<{ [8 x i8], [16 x i8] }>* @_ZN9probe_RSE20_PROBE_NEW_THREAD_ID17hb3c5bb923c61dc6aE to %"alloc::string::String"*))
  br label %bb2

bb4:                                              ; preds = %bb3, %start
  ret void

bb2:                                              ; preds = %bb1
; call core::cell::RefCell<T>::replace
  call void @"_ZN4core4cell16RefCell$LT$T$GT$7replace17h317d27f65a45ce62E"(%"alloc::string::String"* sret(%"alloc::string::String") %_7, %"core::cell::RefCell<alloc::string::String>"* align 8 %tid, %"alloc::string::String"* %_9, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc868 to %"core::panic::location::Location"*))
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %_7)
  br label %bb4
}

; probe_RSE::_probe_spawned_::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_RSE15_probe_spawned_28_$u7b$$u7b$closure$u7d$$u7d$17h90342812813d831bE"(i32* align 4 %_1.0, i32* align 4 %_1.1, %"core::cell::RefCell<alloc::string::String>"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_14 = alloca { i64*, i32* }, align 8
  %_9 = alloca { i64*, i64* }, align 8
  %tid = alloca %"core::cell::RefCell<alloc::string::String>"*, align 8
  store %"core::cell::RefCell<alloc::string::String>"* %0, %"core::cell::RefCell<alloc::string::String>"** %tid, align 8
  %_10 = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %tid, align 8, !nonnull !3, !align !8, !noundef !3
; call core::cell::RefCell<T>::borrow
  %2 = call { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17h522209af0c1afa20E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %_10, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc870 to %"core::panic::location::Location"*))
  store { i64*, i64* } %2, { i64*, i64* }* %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
; invoke <core::cell::Ref<T> as core::ops::deref::Deref>::deref
  %_7 = invoke align 8 %"alloc::string::String"* @"_ZN68_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6cb29ed3a0472e3cE"({ i64*, i64* }* align 8 %_9)
          to label %bb2 unwind label %cleanup

bb7:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_9) #17
          to label %bb8 unwind label %abort

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
; invoke alloc::string::String::as_str
  %8 = invoke { [0 x i8]*, i64 } @_ZN5alloc6string6String6as_str17h7d830e6e0c0d6b42E(%"alloc::string::String"* align 8 %_7)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  %_11 = load i32, i32* %_1.0, align 4
; invoke probe_RSE::__write_log
  invoke void @_ZN9probe_RSE11__write_log17hc7704a69f23ba170E([0 x i8]* align 1 %_5.0, i64 %_5.1, i32 %_11)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; call core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  call void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_9)
  br label %bb5

abort:                                            ; preds = %bb7
  %9 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb8:                                              ; preds = %bb7
  %10 = bitcast { i8*, i32 }* %1 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb5:                                              ; preds = %bb4
  %16 = bitcast { i64*, i32* }* %_14 to %"core::cell::RefCell<alloc::string::String>"***
  store %"core::cell::RefCell<alloc::string::String>"** %tid, %"core::cell::RefCell<alloc::string::String>"*** %16, align 8
  %17 = getelementptr inbounds { i64*, i32* }, { i64*, i32* }* %_14, i32 0, i32 1
  store i32* %_1.1, i32** %17, align 8
  %18 = getelementptr inbounds { i64*, i32* }, { i64*, i32* }* %_14, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8, !nonnull !3, !align !8, !noundef !3
  %20 = getelementptr inbounds { i64*, i32* }, { i64*, i32* }* %_14, i32 0, i32 1
  %21 = load i32*, i32** %20, align 8, !nonnull !3, !align !13, !noundef !3
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h14e14c20e2c776faE"(i64** align 8 bitcast (<{ i8* }>* @alloc563 to i64**), i64* align 8 %19, i32* align 4 %21)
  br label %bb6

bb6:                                              ; preds = %bb5
  ret void
}

; probe_RSE::_probe_spawned_::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_RSE15_probe_spawned_28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h8d44ddc251ed47d4E"(i64* align 8 %_1.0, i32* align 4 %_1.1, { i64, i64 }* align 8 %exe_node_id) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_35 = alloca { i8*, i64 }, align 8
  %_34 = alloca { i64, i8* }, align 8
  %_31 = alloca { i64*, i64* }, align 8
  %_29 = alloca %"alloc::string::String", align 8
  %_27 = alloca { i64*, i64* }, align 8
  %_22 = alloca %"alloc::vec::Vec<_ProbeNode>", align 8
  %_8 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>", align 8
  %thrd_vec = alloca { i64*, i8 }, align 8
  %1 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_EXE17h6cfd9f0d4be367c8E to {}**), align 8
  %2 = icmp eq {}* %1, null
  %_5 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_5, 1
  br i1 %3, label %bb1, label %bb11

bb1:                                              ; preds = %start
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_10 = call align 8 %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9b6e721c9d5aae01E"(i64** align 8 bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_EXE17h6cfd9f0d4be367c8E to i64**))
  br label %bb2

bb11:                                             ; preds = %bb10, %start
; call core::cell::RefCell<T>::borrow
  %4 = call { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17heb40be7814151f08E"({ i64, i64 }* align 8 %exe_node_id, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc876 to %"core::panic::location::Location"*))
  store { i64*, i64* } %4, { i64*, i64* }* %_27, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h6db853d776ba8611E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>") %_8, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* align 8 %_10)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::result::Result<T,E>::unwrap
  %5 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h5d4d0610472450bfE"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %_8, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc872 to %"core::panic::location::Location"*))
  store { i64*, i8 } %5, { i64*, i8 }* %thrd_vec, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
  %_16 = invoke align 8 %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h208a39333881d27cE"({ i64*, i8 }* align 8 %thrd_vec)
          to label %bb5 unwind label %cleanup

bb21:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>
  invoke void @"_ZN4core3ptr124drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$17h8a902d0cfc456658E"({ i64*, i8 }* %thrd_vec) #17
          to label %bb22 unwind label %abort

cleanup:                                          ; preds = %bb9, %bb8, %bb7, %bb6, %bb5, %bb4
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb21

bb5:                                              ; preds = %bb4
; invoke alloc::vec::Vec<T,A>::len
  %_14 = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h1cbb675179debfa2E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %_16)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke core::cell::RefCell<T>::replace
  %_12 = invoke i64 @"_ZN4core4cell16RefCell$LT$T$GT$7replace17h0a09d308f053f76dE"({ i64, i64 }* align 8 %exe_node_id, i64 %_14, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc874 to %"core::panic::location::Location"*))
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_20 = invoke align 8 %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hff82c409b23eea5fE"({ i64*, i8 }* align 8 %thrd_vec)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h0862bd97ec3cb98aE"(%"alloc::vec::Vec<_ProbeNode>"* sret(%"alloc::vec::Vec<_ProbeNode>") %_22)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hd0105c6a79d9cd45E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %_20, %"alloc::vec::Vec<_ProbeNode>"* %_22)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>
  call void @"_ZN4core3ptr124drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$17h8a902d0cfc456658E"({ i64*, i8 }* %thrd_vec)
  br label %bb11

abort:                                            ; preds = %bb20, %bb19, %bb21
  %11 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb22:                                             ; preds = %bb20, %bb21
  %12 = bitcast { i8*, i32 }* %0 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17

bb12:                                             ; preds = %bb11
; invoke <core::cell::Ref<T> as core::ops::deref::Deref>::deref
  %_25 = invoke align 8 i64* @"_ZN68_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h1a48521ee60e2b30E"({ i64*, i64* }* align 8 %_27)
          to label %bb13 unwind label %cleanup1

bb20:                                             ; preds = %bb19, %cleanup1
; invoke core::ptr::drop_in_place<core::cell::Ref<usize>>
  invoke void @"_ZN4core3ptr49drop_in_place$LT$core..cell..Ref$LT$usize$GT$$GT$17h3756d7c001a8867bE"({ i64*, i64* }* %_27) #17
          to label %bb22 unwind label %abort

cleanup1:                                         ; preds = %bb16, %bb13, %bb12
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb20

bb13:                                             ; preds = %bb12
  %_24 = load i64, i64* %_25, align 8
  %_36 = bitcast i64* %_1.0 to %"core::cell::RefCell<alloc::string::String>"**
  %_37 = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %_36, align 8, !nonnull !3, !align !8, !noundef !3
; invoke core::cell::RefCell<T>::borrow
  %23 = invoke { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17h522209af0c1afa20E"(%"core::cell::RefCell<alloc::string::String>"* align 8 %_37, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc878 to %"core::panic::location::Location"*))
          to label %bb14 unwind label %cleanup1

bb14:                                             ; preds = %bb13
  store { i64*, i64* } %23, { i64*, i64* }* %_31, align 8
; invoke <T as alloc::string::ToString>::to_string
  invoke void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17hacedbccc08cf976dE"(%"alloc::string::String"* sret(%"alloc::string::String") %_29, { i64*, i64* }* align 8 %_31)
          to label %bb15 unwind label %cleanup2

bb19:                                             ; preds = %cleanup2
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_31) #17
          to label %bb20 unwind label %abort

cleanup2:                                         ; preds = %bb15, %bb14
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  %26 = extractvalue { i8*, i32 } %24, 1
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %25, i8** %27, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %26, i32* %28, align 8
  br label %bb19

bb15:                                             ; preds = %bb14
  %_33 = load i32, i32* %_1.1, align 4
  %29 = bitcast { i64, i8* }* %_34 to i64*
  store i64 0, i64* %29, align 8
  %30 = bitcast { i8*, i64 }* %_35 to {}**
  store {}* null, {}** %30, align 8
  %31 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_34, i32 0, i32 0
  %32 = load i64, i64* %31, align 8, !range !7, !noundef !3
  %33 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_34, i32 0, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_35, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8, !align !4
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_35, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
; invoke probe_RSE::__record_thread_structure
  invoke void @_ZN9probe_RSE25__record_thread_structure17ha1f83420ddc94320E(i64 %_24, %"alloc::string::String"* %_29, i32 %_33, [0 x i8]* align 1 bitcast (<{ [7 x i8] }>* @alloc879 to [0 x i8]*), i64 7, i64 %32, i8* %34, i8* align 1 %36, i64 %38)
          to label %bb16 unwind label %cleanup2

bb16:                                             ; preds = %bb15
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17h395a40235abd8a9eE"({ i64*, i64* }* %_31)
          to label %bb17 unwind label %cleanup1

bb17:                                             ; preds = %bb16
; call core::ptr::drop_in_place<core::cell::Ref<usize>>
  call void @"_ZN4core3ptr49drop_in_place$LT$core..cell..Ref$LT$usize$GT$$GT$17h3756d7c001a8867bE"({ i64*, i64* }* %_27)
  br label %bb18

bb18:                                             ; preds = %bb17
  ret void
}

; probe_RSE::__record_thread_structure
; Function Attrs: nonlazybind uwtable
define internal void @_ZN9probe_RSE25__record_thread_structure17ha1f83420ddc94320E(i64 %tid_ind, %"alloc::string::String"* %tid, i32 %line_num, [0 x i8]* align 1 %func_name.0, i64 %func_name.1, i64 %var_addr.0, i8* %var_addr.1, i8* align 1 %0, i64 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_63 = alloca i8, align 1
  %_62 = alloca i8, align 1
  %_60 = alloca %"alloc::string::String", align 8
  %_56 = alloca %"alloc::string::String", align 8
  %_55 = alloca %_ProbeNode, align 8
  %_44 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>", align 8
  %thrd_vec = alloca { i64*, i8 }, align 8
  %i = alloca i64, align 8
  %_11 = alloca %"core::str::iter::Split<&str>", align 8
  %str_vec = alloca %"alloc::vec::Vec<&str>", align 8
  %file_path1 = alloca %"alloc::string::String", align 8
  %file_path = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %file_path, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %file_path, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_63, align 1
  store i8 0, i8* %_62, align 1
  store i8 1, i8* %_63, align 1
  %5 = bitcast { i8*, i64 }* %file_path to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_8 = select i1 %7, i64 0, i64 1
  switch i64 %_8, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; invoke <alloc::string::String as core::convert::From<&str>>::from
  invoke void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h5aa1ea86c096e88dE"(%"alloc::string::String"* sret(%"alloc::string::String") %file_path1, [0 x i8]* align 1 bitcast (<{ [4 x i8] }>* @alloc409 to [0 x i8]*), i64 4)
          to label %bb34 unwind label %cleanup

bb3:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %file_path to { [0 x i8]*, i64 }*
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0
  %path.0 = load [0 x i8]*, [0 x i8]** %9, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1
  %path.1 = load i64, i64* %10, align 8
; invoke core::str::<impl str>::split
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h52e7db32a2a8f3a0E"(%"core::str::iter::Split<&str>"* sret(%"core::str::iter::Split<&str>") %_11, [0 x i8]* align 1 %path.0, i64 %path.1, [0 x i8]* align 1 bitcast (<{ [1 x i8] }>* @alloc893 to [0 x i8]*), i64 1)
          to label %bb4 unwind label %cleanup

bb41:                                             ; preds = %bb38, %bb39, %bb32, %cleanup
  %11 = load i8, i8* %_63, align 1, !range !2, !noundef !3
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb40, label %bb33

cleanup:                                          ; preds = %bb35, %bb1, %bb20, %bb4, %bb3
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb41

bb4:                                              ; preds = %bb3
; invoke core::iter::traits::iterator::Iterator::collect
  invoke void @_ZN4core4iter6traits8iterator8Iterator7collect17h6e13de7d8f1eef69E(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %str_vec, %"core::str::iter::Split<&str>"* %_11)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store i64 0, i64* %i, align 8
  br label %bb6

bb6:                                              ; preds = %bb17, %bb5
  %_15 = load i64, i64* %i, align 8
; invoke alloc::vec::Vec<T,A>::len
  %_16 = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hc8b52f87df8139edE"(%"alloc::vec::Vec<&str>"* align 8 %str_vec)
          to label %bb7 unwind label %cleanup2

bb32:                                             ; preds = %cleanup2
; invoke core::ptr::drop_in_place<alloc::vec::Vec<&str>>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17hb406b4f70dcf6f14E"(%"alloc::vec::Vec<&str>"* %str_vec) #17
          to label %bb41 unwind label %abort

cleanup2:                                         ; preds = %bb19, %bb18, %panic4, %panic3, %bb13, %panic, %bb11, %bb9, %bb8, %bb6
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb32

bb7:                                              ; preds = %bb6
  %_14 = icmp ult i64 %_15, %_16
  br i1 %_14, label %bb8, label %bb18

bb18:                                             ; preds = %bb7
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %23 = invoke { [0 x { [0 x i8]*, i64 }]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4ea24fda51aceebdE"(%"alloc::vec::Vec<&str>"* align 8 %str_vec)
          to label %bb19 unwind label %cleanup2

bb8:                                              ; preds = %bb7
  %_22 = load i64, i64* %i, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %_20 = invoke align 8 { [0 x i8]*, i64 }* @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h552a6ae0babd8b13E"(%"alloc::vec::Vec<&str>"* align 8 %str_vec, i64 %_22, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc882 to %"core::panic::location::Location"*))
          to label %bb9 unwind label %cleanup2

bb9:                                              ; preds = %bb8
; invoke core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_18 = invoke zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h9ef71eb360f983c4E"({ [0 x i8]*, i64 }* align 8 %_20, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc477 to { [0 x i8]*, i64 }*))
          to label %bb10 unwind label %cleanup2

bb10:                                             ; preds = %bb9
  br i1 %_18, label %bb11, label %bb16

bb16:                                             ; preds = %bb15, %bb10
  %24 = load i64, i64* %i, align 8
  %25 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %24, i64 1)
  %_33.0 = extractvalue { i64, i1 } %25, 0
  %_33.1 = extractvalue { i64, i1 } %25, 1
  %26 = call i1 @llvm.expect.i1(i1 %_33.1, i1 false)
  br i1 %26, label %panic4, label %bb17

bb11:                                             ; preds = %bb10
  %_26 = load i64, i64* %i, align 8
; invoke alloc::vec::Vec<T,A>::remove
  %27 = invoke { [0 x i8]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove17h9d141d440282a308E"(%"alloc::vec::Vec<&str>"* align 8 %str_vec, i64 %_26, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc884 to %"core::panic::location::Location"*))
          to label %bb12 unwind label %cleanup2

bb12:                                             ; preds = %bb11
  %_24.0 = extractvalue { [0 x i8]*, i64 } %27, 0
  %_24.1 = extractvalue { [0 x i8]*, i64 } %27, 1
  %_30 = load i64, i64* %i, align 8
  %28 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %_30, i64 1)
  %_31.0 = extractvalue { i64, i1 } %28, 0
  %_31.1 = extractvalue { i64, i1 } %28, 1
  %29 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false)
  br i1 %29, label %panic, label %bb13

bb13:                                             ; preds = %bb12
; invoke alloc::vec::Vec<T,A>::remove
  %30 = invoke { [0 x i8]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove17h9d141d440282a308E"(%"alloc::vec::Vec<&str>"* align 8 %str_vec, i64 %_31.0, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc888 to %"core::panic::location::Location"*))
          to label %bb14 unwind label %cleanup2

panic:                                            ; preds = %bb12
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h1efed56daac899acE([0 x i8]* align 1 bitcast ([33 x i8]* @str.g to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc886 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup2

unreachable:                                      ; preds = %panic4, %panic3, %panic
  unreachable

bb14:                                             ; preds = %bb13
  %_27.0 = extractvalue { [0 x i8]*, i64 } %30, 0
  %_27.1 = extractvalue { [0 x i8]*, i64 } %30, 1
  %31 = load i64, i64* %i, align 8
  %32 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %31, i64 2)
  %_32.0 = extractvalue { i64, i1 } %32, 0
  %_32.1 = extractvalue { i64, i1 } %32, 1
  %33 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false)
  br i1 %33, label %panic3, label %bb15

bb15:                                             ; preds = %bb14
  store i64 %_32.0, i64* %i, align 8
  br label %bb16

panic3:                                           ; preds = %bb14
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h1efed56daac899acE([0 x i8]* align 1 bitcast ([33 x i8]* @str.g to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc890 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup2

bb17:                                             ; preds = %bb16
  store i64 %_33.0, i64* %i, align 8
  br label %bb6

panic4:                                           ; preds = %bb16
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h1efed56daac899acE([0 x i8]* align 1 bitcast ([28 x i8]* @str.f to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc892 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup2

bb19:                                             ; preds = %bb18
  %_35.0 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %23, 0
  %_35.1 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %23, 1
; invoke alloc::slice::<impl [T]>::join
  invoke void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4join17hba9ff7284823e8b5E"(%"alloc::string::String"* sret(%"alloc::string::String") %file_path1, [0 x { [0 x i8]*, i64 }]* align 8 %_35.0, i64 %_35.1, [0 x i8]* align 1 bitcast (<{ [1 x i8] }>* @alloc893 to [0 x i8]*), i64 1)
          to label %bb20 unwind label %cleanup2

bb20:                                             ; preds = %bb19
  store i8 1, i8* %_62, align 1
; invoke core::ptr::drop_in_place<alloc::vec::Vec<&str>>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17hb406b4f70dcf6f14E"(%"alloc::vec::Vec<&str>"* %str_vec)
          to label %bb21 unwind label %cleanup

abort:                                            ; preds = %bb40, %bb38, %bb31, %bb32
  %34 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb21:                                             ; preds = %bb34, %bb20
  %35 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_EXE17h6cfd9f0d4be367c8E to {}**), align 8
  %36 = icmp eq {}* %35, null
  %_41 = select i1 %36, i64 0, i64 1
  %37 = icmp eq i64 %_41, 1
  br i1 %37, label %bb22, label %bb36

bb34:                                             ; preds = %bb1
  store i8 1, i8* %_62, align 1
  br label %bb21

bb22:                                             ; preds = %bb21
; invoke <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_46 = invoke align 8 %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9b6e721c9d5aae01E"(i64** align 8 bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE15_PROBE_THRD_EXE17h6cfd9f0d4be367c8E to i64**))
          to label %bb23 unwind label %cleanup5

bb36:                                             ; preds = %bb28, %bb21
  %38 = load i8, i8* %_62, align 1, !range !2, !noundef !3
  %39 = trunc i8 %38 to i1
  br i1 %39, label %bb35, label %bb29

bb39:                                             ; preds = %bb31, %cleanup5
  %40 = load i8, i8* %_62, align 1, !range !2, !noundef !3
  %41 = trunc i8 %40 to i1
  br i1 %41, label %bb38, label %bb41

cleanup5:                                         ; preds = %bb28, %bb24, %bb23, %bb22
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  %44 = extractvalue { i8*, i32 } %42, 1
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %43, i8** %45, align 8
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %44, i32* %46, align 8
  br label %bb39

bb23:                                             ; preds = %bb22
; invoke std::sync::mutex::Mutex<T>::lock
  invoke void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h6db853d776ba8611E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>") %_44, %"std::sync::mutex::Mutex<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>"* align 8 %_46)
          to label %bb24 unwind label %cleanup5

bb24:                                             ; preds = %bb23
; invoke core::result::Result<T,E>::unwrap
  %47 = invoke { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h5d4d0610472450bfE"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>>>>"* %_44, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc896 to %"core::panic::location::Location"*))
          to label %bb25 unwind label %cleanup5

bb25:                                             ; preds = %bb24
  store { i64*, i8 } %47, { i64*, i8 }* %thrd_vec, align 8
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_52 = invoke align 8 %"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hff82c409b23eea5fE"({ i64*, i8 }* align 8 %thrd_vec)
          to label %bb26 unwind label %cleanup6

bb31:                                             ; preds = %cleanup6
; invoke core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>
  invoke void @"_ZN4core3ptr124drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$17h8a902d0cfc456658E"({ i64*, i8 }* %thrd_vec) #17
          to label %bb39 unwind label %abort

cleanup6:                                         ; preds = %bb27, %bb26, %bb25
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  %50 = extractvalue { i8*, i32 } %48, 1
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %49, i8** %51, align 8
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %50, i32* %52, align 8
  br label %bb31

bb26:                                             ; preds = %bb25
; invoke <alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut
  %_50 = invoke align 8 %"alloc::vec::Vec<_ProbeNode>"* @"_ZN84_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..IndexMut$LT$I$GT$$GT$9index_mut17h72f3b5cb4ab2ea03E"(%"alloc::vec::Vec<alloc::vec::Vec<_ProbeNode>>"* align 8 %_52, i64 %tid_ind, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc898 to %"core::panic::location::Location"*))
          to label %bb27 unwind label %cleanup6

bb27:                                             ; preds = %bb26
  store i8 0, i8* %_63, align 1
  %53 = bitcast %"alloc::string::String"* %_56 to i8*
  %54 = bitcast %"alloc::string::String"* %tid to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false)
  store i8 0, i8* %_62, align 1
  %55 = bitcast %"alloc::string::String"* %_60 to i8*
  %56 = bitcast %"alloc::string::String"* %file_path1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false)
  %57 = bitcast %_ProbeNode* %_55 to %"alloc::string::String"*
  %58 = bitcast %"alloc::string::String"* %57 to i8*
  %59 = bitcast %"alloc::string::String"* %_56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false)
  %60 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %_55, i32 0, i32 4
  store i32 %line_num, i32* %60, align 8
  %61 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %_55, i32 0, i32 1
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 0
  store [0 x i8]* %func_name.0, [0 x i8]** %62, align 8
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 1
  store i64 %func_name.1, i64* %63, align 8
  %64 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %_55, i32 0, i32 2
  %65 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %64, i32 0, i32 0
  store i64 %var_addr.0, i64* %65, align 8
  %66 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %64, i32 0, i32 1
  store i8* %var_addr.1, i8** %66, align 8
  %67 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %_55, i32 0, i32 3
  %68 = bitcast %"alloc::string::String"* %67 to i8*
  %69 = bitcast %"alloc::string::String"* %_60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 24, i1 false)
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hb04276d4d119158bE"(%"alloc::vec::Vec<_ProbeNode>"* align 8 %_50, %_ProbeNode* %_55)
          to label %bb28 unwind label %cleanup6

bb28:                                             ; preds = %bb27
; invoke core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::vec::Vec<alloc::vec::Vec<probe_RSE::_ProbeNode>>>>
  invoke void @"_ZN4core3ptr124drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$probe_RSE.._ProbeNode$GT$$GT$$GT$$GT$17h8a902d0cfc456658E"({ i64*, i8 }* %thrd_vec)
          to label %bb36 unwind label %cleanup5

bb38:                                             ; preds = %bb39
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %file_path1) #17
          to label %bb41 unwind label %abort

bb29:                                             ; preds = %bb35, %bb36
  store i8 0, i8* %_62, align 1
  %70 = load i8, i8* %_63, align 1, !range !2, !noundef !3
  %71 = trunc i8 %70 to i1
  br i1 %71, label %bb37, label %bb30

bb35:                                             ; preds = %bb36
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %file_path1)
          to label %bb29 unwind label %cleanup

bb33:                                             ; preds = %bb40, %bb41
  %72 = bitcast { i8*, i32 }* %2 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = insertvalue { i8*, i32 } undef, i8* %73, 0
  %77 = insertvalue { i8*, i32 } %76, i32 %75, 1
  resume { i8*, i32 } %77

bb40:                                             ; preds = %bb41
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %tid) #17
          to label %bb33 unwind label %abort

bb30:                                             ; preds = %bb37, %bb29
  ret void

bb37:                                             ; preds = %bb29
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h4e849759aad899b4E"(%"alloc::string::String"* %tid)
  br label %bb30
}

; probe_RSE::__write_log
; Function Attrs: nonlazybind uwtable
define internal void @_ZN9probe_RSE11__write_log17hc7704a69f23ba170E([0 x i8]* align 1 %0, i64 %1, i32 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_25 = alloca [2 x { i8*, i64* }], align 8
  %_18 = alloca %"core::fmt::Arguments", align 8
  %_8 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>", align 8
  %file_stream = alloca { i32*, i8 }, align 8
  %func_num = alloca i32, align 4
  %tid = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tid, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tid, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %func_num, align 4
  %6 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE9_PROBE_FP17heeddb26bdf91b043E to {}**), align 8
  %7 = icmp eq {}* %6, null
  %_5 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_5, 1
  br i1 %8, label %bb1, label %bb11

bb1:                                              ; preds = %start
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_10 = call align 4 %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5f90111ba101acefE"(i64** align 8 bitcast (<{ [8 x i8] }>* @_ZN9probe_RSE9_PROBE_FP17heeddb26bdf91b043E to i64**))
  br label %bb2

bb11:                                             ; preds = %bb10, %start
  ret void

bb2:                                              ; preds = %bb1
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17hcd80d8b0b86df56cE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") %_8, %"std::sync::mutex::Mutex<std::fs::File>"* align 4 %_10)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::result::Result<T,E>::unwrap
  %9 = call { i32*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hfacfb63b3076d2d2E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %_8, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc900 to %"core::panic::location::Location"*))
  store { i32*, i8 } %9, { i32*, i8 }* %file_stream, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_16 = invoke align 4 i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h2056c553f944d2bfE"({ i32*, i8 }* align 8 %file_stream)
          to label %bb5 unwind label %cleanup

bb12:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h78d0f88112f077a8E"({ i32*, i8 }* %file_stream) #17
          to label %bb13 unwind label %abort

cleanup:                                          ; preds = %bb9, %bb8, %bb7, %bb6, %bb5, %bb4
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb12

bb5:                                              ; preds = %bb4
; invoke core::fmt::ArgumentV1::new_display
  %15 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17he4e794f2eedaa811E({ [0 x i8]*, i64 }* align 8 %tid)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_26.0 = extractvalue { i8*, i64* } %15, 0
  %_26.1 = extractvalue { i8*, i64* } %15, 1
; invoke core::fmt::ArgumentV1::new_display
  %16 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h7ed329f22a7624acE(i32* align 4 %func_num)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %_29.0 = extractvalue { i8*, i64* } %16, 0
  %_29.1 = extractvalue { i8*, i64* } %16, 1
  %17 = bitcast [2 x { i8*, i64* }]* %_25 to { i8*, i64* }*
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %17, i32 0, i32 0
  store i8* %_26.0, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %17, i32 0, i32 1
  store i64* %_26.1, i64** %19, align 8
  %20 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_25, i32 0, i32 1
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 0
  store i8* %_29.0, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 1
  store i64* %_29.1, i64** %22, align 8
  %_22.0 = bitcast [2 x { i8*, i64* }]* %_25 to [0 x { i8*, i64* }]*
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_18, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc464 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* align 8 %_22.0, i64 2)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke std::io::Write::write_fmt
  %result = invoke i8* @_ZN3std2io5Write9write_fmt17h0ce8b27eee387111E(i32* align 4 %_16, %"core::fmt::Arguments"* %_18)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1d5f92f10f03697eE"(i8* %result, [0 x i8]* align 1 bitcast (<{ [13 x i8] }>* @alloc901 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc903 to %"core::panic::location::Location"*))
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h78d0f88112f077a8E"({ i32*, i8 }* %file_stream)
  br label %bb11

abort:                                            ; preds = %bb12
  %23 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb13:                                             ; preds = %bb12
  %24 = bitcast { i8*, i32 }* %3 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29
}

; probe_RSE::__random_sleep
; Function Attrs: nonlazybind uwtable
define internal void @_ZN9probe_RSE14__random_sleep17h65863d114ffdfd28E() unnamed_addr #1 {
start:
  %seed = alloca i64, align 8
  store i64 0, i64* %seed, align 8
  %_5 = call i64 @time(i64* %seed)
  br label %bb1

bb1:                                              ; preds = %start
; call <T as core::convert::TryInto<U>>::try_into
  %0 = call { i32, i32 } @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17hdac5959febd68b5aE"(i64 %_5)
  %_4.0 = extractvalue { i32, i32 } %0, 0
  %_4.1 = extractvalue { i32, i32 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::result::Result<T,E>::unwrap
  %_3 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h0855576d736a62aeE"(i32 %_4.0, i32 %_4.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc905 to %"core::panic::location::Location"*))
  br label %bb3

bb3:                                              ; preds = %bb2
  call void @srand(i32 %_3)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = call i32 @rand()
  br label %bb5

bb5:                                              ; preds = %bb4
; call <T as core::convert::TryInto<U>>::try_into
  %1 = call { i64, i64 } @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17hbb280aaa9d054cf2E"(i32 %_10)
  %_9.0 = extractvalue { i64, i64 } %1, 0
  %_9.1 = extractvalue { i64, i64 } %1, 1
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::result::Result<T,E>::unwrap
  %r = call i64 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h091317455155d942E"(i64 %_9.0, i64 %_9.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc907 to %"core::panic::location::Location"*))
  br label %bb7

bb7:                                              ; preds = %bb6
  %_14 = urem i64 %r, 2
  %2 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_14, i64 10)
  %_16.0 = extractvalue { i64, i1 } %2, 0
  %_16.1 = extractvalue { i64, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false)
  br i1 %3, label %panic, label %bb8

bb8:                                              ; preds = %bb7
; call core::time::Duration::from_millis
  %4 = call { i64, i32 } @_ZN4core4time8Duration11from_millis17h373a43a51fb7579aE(i64 %_16.0)
  %_12.0 = extractvalue { i64, i32 } %4, 0
  %_12.1 = extractvalue { i64, i32 } %4, 1
  br label %bb9

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h1efed56daac899acE([0 x i8]* align 1 bitcast ([33 x i8]* @str.h to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc909 to %"core::panic::location::Location"*)) #16
  unreachable

bb9:                                              ; preds = %bb8
; call std::thread::sleep
  call void @_ZN3std6thread5sleep17h787a68d775972c52E(i64 %_12.0, i32 %_12.1)
  br label %bb10

bb10:                                             ; preds = %bb9
  ret void
}

; probe_RSE::_ProbeSemaphore::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN9probe_RSE15_ProbeSemaphore3new17he60b62d0790765eaE(%_ProbeSemaphore* sret(%_ProbeSemaphore) %0, i32 %count) unnamed_addr #1 {
start:
  %1 = alloca i32, align 4
  %_4 = alloca %"std::sync::condvar::Condvar", align 4
  %_2 = alloca %"std::sync::mutex::Mutex<i32>", align 4
; call std::sync::mutex::Mutex<T>::new
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17hb42a7453e1e1ba2bE"(%"std::sync::mutex::Mutex<i32>"* sret(%"std::sync::mutex::Mutex<i32>") %_2, i32 %count)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::condvar::Condvar::new
  %2 = call i32 @_ZN3std4sync7condvar7Condvar3new17hc4a1ce7986357493E()
  store i32 %2, i32* %1, align 4
  %3 = bitcast %"std::sync::condvar::Condvar"* %_4 to i8*
  %4 = bitcast i32* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast %_ProbeSemaphore* %0 to %"std::sync::mutex::Mutex<i32>"*
  %6 = bitcast %"std::sync::mutex::Mutex<i32>"* %5 to i8*
  %7 = bitcast %"std::sync::mutex::Mutex<i32>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 12, i1 false)
  %8 = getelementptr inbounds %_ProbeSemaphore, %_ProbeSemaphore* %0, i32 0, i32 1
  %9 = bitcast %"std::sync::condvar::Condvar"* %8 to i8*
  %10 = bitcast %"std::sync::condvar::Condvar"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false)
  ret void
}

; probe_RSE::_ProbeSemaphore::dec
; Function Attrs: nonlazybind uwtable
define internal void @_ZN9probe_RSE15_ProbeSemaphore3dec17h9b0e9095cb379cacE(%_ProbeSemaphore* align 4 %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_16 = alloca i8, align 1
  %_13 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>", align 8
  %_3 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>", align 8
  %lock = alloca { i32*, i8 }, align 8
  store i8 0, i8* %_16, align 1
  %_4 = bitcast %_ProbeSemaphore* %self to %"std::sync::mutex::Mutex<i32>"*
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17hf54553982b26d4d4E"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") %_3, %"std::sync::mutex::Mutex<i32>"* align 4 %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::unwrap
  %1 = call { i32*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h56fdb3c93dcafc3cE"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %_3, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc911 to %"core::panic::location::Location"*))
  store { i32*, i8 } %1, { i32*, i8 }* %lock, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_16, align 1
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_5 = invoke align 4 i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h1b155e851b3c7578E"({ i32*, i8 }* align 8 %lock)
          to label %bb3 unwind label %cleanup

bb14:                                             ; preds = %cleanup
  %2 = load i8, i8* %_16, align 1, !range !2, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb13, label %bb12

cleanup:                                          ; preds = %bb8, %bb7, %bb5, %panic, %bb2
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb14

bb3:                                              ; preds = %bb2
  %9 = load i32, i32* %_5, align 4
  %10 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %9, i32 1)
  %_7.0 = extractvalue { i32, i1 } %10, 0
  %_7.1 = extractvalue { i32, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false)
  br i1 %11, label %panic, label %bb4

bb4:                                              ; preds = %bb3
  store i32 %_7.0, i32* %_5, align 4
  br label %bb5

panic:                                            ; preds = %bb3
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h1efed56daac899acE([0 x i8]* align 1 bitcast ([33 x i8]* @str.g to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc913 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb5:                                              ; preds = %bb9, %bb4
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
  %_10 = invoke align 4 i32* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h89cfc12053f15d80E"({ i32*, i8 }* align 8 %lock)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_9 = load i32, i32* %_10, align 4
  %_8 = icmp slt i32 %_9, 0
  br i1 %_8, label %bb7, label %bb10

bb10:                                             ; preds = %bb6
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h474c10dddfe9366aE"({ i32*, i8 }* %lock)
  br label %bb11

bb7:                                              ; preds = %bb6
  %_14 = getelementptr inbounds %_ProbeSemaphore, %_ProbeSemaphore* %self, i32 0, i32 1
  store i8 0, i8* %_16, align 1
  %12 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %lock, i32 0, i32 0
  %_15.0 = load i32*, i32** %12, align 8, !nonnull !3, !align !13, !noundef !3
  %13 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %lock, i32 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !2, !noundef !3
  %_15.1 = trunc i8 %14 to i1
; invoke std::sync::condvar::Condvar::wait
  invoke void @_ZN3std4sync7condvar7Condvar4wait17h58f6201f6e3c46b8E(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") %_13, %"std::sync::condvar::Condvar"* align 4 %_14, i32* align 4 %_15.0, i1 zeroext %_15.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke core::result::Result<T,E>::unwrap
  %15 = invoke { i32*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h56fdb3c93dcafc3cE"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %_13, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc915 to %"core::panic::location::Location"*))
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %_12.0 = extractvalue { i32*, i8 } %15, 0
  %16 = extractvalue { i32*, i8 } %15, 1
  %_12.1 = trunc i8 %16 to i1
  store i8 1, i8* %_16, align 1
  %17 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %lock, i32 0, i32 0
  store i32* %_12.0, i32** %17, align 8
  %18 = getelementptr inbounds { i32*, i8 }, { i32*, i8 }* %lock, i32 0, i32 1
  %19 = zext i1 %_12.1 to i8
  store i8 %19, i8* %18, align 8
  br label %bb5

bb12:                                             ; preds = %bb13, %bb14
  %20 = bitcast { i8*, i32 }* %0 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  resume { i8*, i32 } %25

bb13:                                             ; preds = %bb14
; invoke core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  invoke void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h474c10dddfe9366aE"({ i32*, i8 }* %lock) #17
          to label %bb12 unwind label %abort

abort:                                            ; preds = %bb13
  %26 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_16, align 1
  ret void
}

; probe_RSE::_ProbeSemaphore::inc
; Function Attrs: nonlazybind uwtable
define internal void @_ZN9probe_RSE15_ProbeSemaphore3inc17h3528b9e06b996852E(%_ProbeSemaphore* align 4 %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_3 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>", align 8
  %lock = alloca { i32*, i8 }, align 8
  %_4 = bitcast %_ProbeSemaphore* %self to %"std::sync::mutex::Mutex<i32>"*
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17hf54553982b26d4d4E"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") %_3, %"std::sync::mutex::Mutex<i32>"* align 4 %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::unwrap
  %1 = call { i32*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h56fdb3c93dcafc3cE"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %_3, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc917 to %"core::panic::location::Location"*))
  store { i32*, i8 } %1, { i32*, i8 }* %lock, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_5 = invoke align 4 i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h1b155e851b3c7578E"({ i32*, i8 }* align 8 %lock)
          to label %bb3 unwind label %cleanup

bb9:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  invoke void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h474c10dddfe9366aE"({ i32*, i8 }* %lock) #17
          to label %bb10 unwind label %abort

cleanup:                                          ; preds = %bb6, %bb4, %panic, %bb2
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb9

bb3:                                              ; preds = %bb2
  %7 = load i32, i32* %_5, align 4
  %8 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %7, i32 1)
  %_7.0 = extractvalue { i32, i1 } %8, 0
  %_7.1 = extractvalue { i32, i1 } %8, 1
  %9 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false)
  br i1 %9, label %panic, label %bb4

bb4:                                              ; preds = %bb3
  store i32 %_7.0, i32* %_5, align 4
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
  %_10 = invoke align 4 i32* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h89cfc12053f15d80E"({ i32*, i8 }* align 8 %lock)
          to label %bb5 unwind label %cleanup

panic:                                            ; preds = %bb3
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h1efed56daac899acE([0 x i8]* align 1 bitcast ([28 x i8]* @str.f to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc919 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb5:                                              ; preds = %bb4
  %_9 = load i32, i32* %_10, align 4
  %_8 = icmp sle i32 %_9, 0
  br i1 %_8, label %bb6, label %bb7

bb7:                                              ; preds = %bb11, %bb5
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h474c10dddfe9366aE"({ i32*, i8 }* %lock)
  br label %bb8

bb6:                                              ; preds = %bb5
  %_13 = getelementptr inbounds %_ProbeSemaphore, %_ProbeSemaphore* %self, i32 0, i32 1
; invoke std::sync::condvar::Condvar::notify_one
  invoke void @_ZN3std4sync7condvar7Condvar10notify_one17h78cf1d94cbb9aa75E(%"std::sync::condvar::Condvar"* align 4 %_13)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb6
  br label %bb7

abort:                                            ; preds = %bb9
  %10 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb10:                                             ; preds = %bb9
  %11 = bitcast { i8*, i32 }* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb8:                                              ; preds = %bb7
  ret void
}

; <probe_RSE::_ProbeNode as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN60_$LT$probe_RSE.._ProbeNode$u20$as$u20$core..fmt..Display$GT$3fmt17hbc755235d42ae378E"(%_ProbeNode* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 {
start:
  %_43 = alloca [5 x { i8*, i64* }], align 8
  %_36 = alloca %"core::fmt::Arguments", align 8
  %_14 = alloca [5 x { i8*, i64* }], align 8
  %_7 = alloca %"core::fmt::Arguments", align 8
  %var_addr = alloca i64*, align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 2
  %2 = bitcast { i64, i8* }* %1 to i64*
  %_3 = load i64, i64* %2, align 8, !range !7, !noundef !3
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %_46 = bitcast %_ProbeNode* %self to %"alloc::string::String"*
; call core::fmt::ArgumentV1::new_display
  %3 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h3bd36a8e965164daE(%"alloc::string::String"* align 8 %_46)
  %_44.0 = extractvalue { i8*, i64* } %3, 0
  %_44.1 = extractvalue { i8*, i64* } %3, 1
  br label %bb12

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 2
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %4, i32 0, i32 1
  %6 = bitcast i8** %5 to i64**
  %7 = load i64*, i64** %6, align 8
  store i64* %7, i64** %var_addr, align 8
  %_17 = bitcast %_ProbeNode* %self to %"alloc::string::String"*
; call core::fmt::ArgumentV1::new_display
  %8 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h3bd36a8e965164daE(%"alloc::string::String"* align 8 %_17)
  %_15.0 = extractvalue { i8*, i64* } %8, 0
  %_15.1 = extractvalue { i8*, i64* } %8, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %_20 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 1
; call core::fmt::ArgumentV1::new_display
  %9 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17he4e794f2eedaa811E({ [0 x i8]*, i64 }* align 8 %_20)
  %_18.0 = extractvalue { i8*, i64* } %9, 0
  %_18.1 = extractvalue { i8*, i64* } %9, 1
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::fmt::ArgumentV1::new_debug
  %10 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV19new_debug17h88b49f32a251f8d7E(i64** align 8 %var_addr)
  %_21.0 = extractvalue { i8*, i64* } %10, 0
  %_21.1 = extractvalue { i8*, i64* } %10, 1
  br label %bb6

bb6:                                              ; preds = %bb5
  %_26 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 3
; call core::fmt::ArgumentV1::new_display
  %11 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h3bd36a8e965164daE(%"alloc::string::String"* align 8 %_26)
  %_24.0 = extractvalue { i8*, i64* } %11, 0
  %_24.1 = extractvalue { i8*, i64* } %11, 1
  br label %bb7

bb7:                                              ; preds = %bb6
  %_29 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 4
; call core::fmt::ArgumentV1::new_display
  %12 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h7ed329f22a7624acE(i32* align 4 %_29)
  %_27.0 = extractvalue { i8*, i64* } %12, 0
  %_27.1 = extractvalue { i8*, i64* } %12, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %13 = bitcast [5 x { i8*, i64* }]* %_14 to { i8*, i64* }*
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 0
  store i8* %_15.0, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 1
  store i64* %_15.1, i64** %15, align 8
  %16 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_14, i32 0, i32 1
  %17 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 0
  store i8* %_18.0, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 1
  store i64* %_18.1, i64** %18, align 8
  %19 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_14, i32 0, i32 2
  %20 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %19, i32 0, i32 0
  store i8* %_21.0, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %19, i32 0, i32 1
  store i64* %_21.1, i64** %21, align 8
  %22 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_14, i32 0, i32 3
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %22, i32 0, i32 0
  store i8* %_24.0, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %22, i32 0, i32 1
  store i64* %_24.1, i64** %24, align 8
  %25 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_14, i32 0, i32 4
  %26 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %25, i32 0, i32 0
  store i8* %_27.0, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %25, i32 0, i32 1
  store i64* %_27.1, i64** %27, align 8
  %_11.0 = bitcast [5 x { i8*, i64* }]* %_14 to [0 x { i8*, i64* }]*
  br label %bb9

bb9:                                              ; preds = %bb8
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17ha5aa0030d4c187b9E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_7, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc369 to [0 x { [0 x i8]*, i64 }]*), i64 5, [0 x { i8*, i64* }]* align 8 %_11.0, i64 5, [0 x %"core::fmt::rt::v1::Argument"]* align 8 bitcast (<{ [280 x i8] }>* @alloc437 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 5)
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::fmt::Formatter::write_fmt
  %result = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hcf6971974da6eae0E(%"core::fmt::Formatter"* align 8 %f, %"core::fmt::Arguments"* %_7)
  br label %bb11

bb11:                                             ; preds = %bb10
  %28 = zext i1 %result to i8
  store i8 %28, i8* %0, align 1
  br label %bb20

bb20:                                             ; preds = %bb19, %bb11
  %29 = load i8, i8* %0, align 1, !range !2, !noundef !3
  %30 = trunc i8 %29 to i1
  ret i1 %30

bb12:                                             ; preds = %bb1
  %_49 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 1
; call core::fmt::ArgumentV1::new_display
  %31 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17he4e794f2eedaa811E({ [0 x i8]*, i64 }* align 8 %_49)
  %_47.0 = extractvalue { i8*, i64* } %31, 0
  %_47.1 = extractvalue { i8*, i64* } %31, 1
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::fmt::ArgumentV1::new_display
  %32 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17he4e794f2eedaa811E({ [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc410 to { [0 x i8]*, i64 }*))
  %_50.0 = extractvalue { i8*, i64* } %32, 0
  %_50.1 = extractvalue { i8*, i64* } %32, 1
  br label %bb14

bb14:                                             ; preds = %bb13
  %_55 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 3
; call core::fmt::ArgumentV1::new_display
  %33 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h3bd36a8e965164daE(%"alloc::string::String"* align 8 %_55)
  %_53.0 = extractvalue { i8*, i64* } %33, 0
  %_53.1 = extractvalue { i8*, i64* } %33, 1
  br label %bb15

bb15:                                             ; preds = %bb14
  %_58 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 4
; call core::fmt::ArgumentV1::new_display
  %34 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h7ed329f22a7624acE(i32* align 4 %_58)
  %_56.0 = extractvalue { i8*, i64* } %34, 0
  %_56.1 = extractvalue { i8*, i64* } %34, 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %35 = bitcast [5 x { i8*, i64* }]* %_43 to { i8*, i64* }*
  %36 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %35, i32 0, i32 0
  store i8* %_44.0, i8** %36, align 8
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %35, i32 0, i32 1
  store i64* %_44.1, i64** %37, align 8
  %38 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_43, i32 0, i32 1
  %39 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %38, i32 0, i32 0
  store i8* %_47.0, i8** %39, align 8
  %40 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %38, i32 0, i32 1
  store i64* %_47.1, i64** %40, align 8
  %41 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_43, i32 0, i32 2
  %42 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %41, i32 0, i32 0
  store i8* %_50.0, i8** %42, align 8
  %43 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %41, i32 0, i32 1
  store i64* %_50.1, i64** %43, align 8
  %44 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_43, i32 0, i32 3
  %45 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %44, i32 0, i32 0
  store i8* %_53.0, i8** %45, align 8
  %46 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %44, i32 0, i32 1
  store i64* %_53.1, i64** %46, align 8
  %47 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_43, i32 0, i32 4
  %48 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %47, i32 0, i32 0
  store i8* %_56.0, i8** %48, align 8
  %49 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %47, i32 0, i32 1
  store i64* %_56.1, i64** %49, align 8
  %_40.0 = bitcast [5 x { i8*, i64* }]* %_43 to [0 x { i8*, i64* }]*
  br label %bb17

bb17:                                             ; preds = %bb16
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17ha5aa0030d4c187b9E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_36, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc369 to [0 x { [0 x i8]*, i64 }]*), i64 5, [0 x { i8*, i64* }]* align 8 %_40.0, i64 5, [0 x %"core::fmt::rt::v1::Argument"]* align 8 bitcast (<{ [280 x i8] }>* @alloc437 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 5)
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::fmt::Formatter::write_fmt
  %result1 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hcf6971974da6eae0E(%"core::fmt::Formatter"* align 8 %f, %"core::fmt::Arguments"* %_36)
  br label %bb19

bb19:                                             ; preds = %bb18
  %50 = zext i1 %result1 to i8
  store i8 %50, i8* %0, align 1
  br label %bb20
}

; probe_RSE::TID::__init
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN9probe_RSE3TID6__init17hdbf3cd8d09f5c654E(%"core::cell::RefCell<alloc::string::String>"* sret(%"core::cell::RefCell<alloc::string::String>") %0) unnamed_addr #0 {
start:
  %_1 = alloca %"alloc::string::String", align 8
; call <alloc::string::String as core::convert::From<&str>>::from
  call void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h5aa1ea86c096e88dE"(%"alloc::string::String"* sret(%"alloc::string::String") %_1, [0 x i8]* align 1 bitcast (<{ [4 x i8] }>* @alloc920 to [0 x i8]*), i64 4)
  br label %bb1

bb1:                                              ; preds = %start
; call core::cell::RefCell<T>::new
  call void @"_ZN4core4cell16RefCell$LT$T$GT$3new17h246d02b7745fe43aE"(%"core::cell::RefCell<alloc::string::String>"* sret(%"core::cell::RefCell<alloc::string::String>") %0, %"alloc::string::String"* %_1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; probe_RSE::TID::__getit
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 i64* @_ZN9probe_RSE3TID7__getit17hbf808cfb437c2ed1E(i64* align 8 %init) unnamed_addr #0 {
start:
  %_4 = alloca i64*, align 8
  store i64* %init, i64** %_4, align 8
  %0 = load i64*, i64** %_4, align 8, !align !8
; call std::thread::local::fast::Key<T>::get
  %1 = call align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17h1a5e8fb09b683633E"(%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* align 8 bitcast (<{ [8 x i8], [32 x i8], [1 x i8], [7 x i8] }>* @_ZN9probe_RSE3TID7__getit5__KEY17h24d0998fa9957dc6E to %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"*), i64* align 8 %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %1
}

; probe_RSE::TID::__getit::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_RSE3TID7__getit28_$u7b$$u7b$closure$u7d$$u7d$17he557099d5b4fb8abE"(%"core::cell::RefCell<alloc::string::String>"* sret(%"core::cell::RefCell<alloc::string::String>") %0, i64* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_20 = alloca %"core::fmt::Arguments", align 8
  %_16 = alloca [1 x { i8*, i64* }], align 8
  %_9 = alloca %"core::fmt::Arguments", align 8
  %value = alloca %"core::cell::RefCell<alloc::string::String>", align 8
  %_4 = alloca %"core::option::Option<core::cell::RefCell<alloc::string::String>>", align 8
  %_1 = alloca i64*, align 8
  store i64* %1, i64** %_1, align 8
  %3 = bitcast i64** %_1 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_2 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_2, 1
  br i1 %6, label %bb1, label %bb8

bb1:                                              ; preds = %start
  %7 = bitcast i64** %_1 to %"core::option::Option<core::cell::RefCell<alloc::string::String>>"**
  %init = load %"core::option::Option<core::cell::RefCell<alloc::string::String>>"*, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"** %7, align 8, !nonnull !3, !align !8, !noundef !3
; call core::option::Option<T>::take
  call void @"_ZN4core6option15Option$LT$T$GT$4take17h33d8518500dca0c8E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") %_4, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* align 8 %init)
  br label %bb2

bb8:                                              ; preds = %start
; call probe_RSE::TID::__init
  call void @_ZN9probe_RSE3TID6__init17hdbf3cd8d09f5c654E(%"core::cell::RefCell<alloc::string::String>"* sret(%"core::cell::RefCell<alloc::string::String>") %0)
  br label %bb9

bb9:                                              ; preds = %bb3, %bb8
  ret void

bb2:                                              ; preds = %bb1
  %8 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_4 to i64*
  %_6 = load i64, i64* %8, align 8, !range !7, !noundef !3
  %9 = icmp eq i64 %_6, 1
  br i1 %9, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %10 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_4 to %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"*
  %11 = getelementptr inbounds %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some", %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"* %10, i32 0, i32 1
  %12 = bitcast %"core::cell::RefCell<alloc::string::String>"* %value to i8*
  %13 = bitcast %"core::cell::RefCell<alloc::string::String>"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false)
  %14 = bitcast %"core::cell::RefCell<alloc::string::String>"* %0 to i8*
  %15 = bitcast %"core::cell::RefCell<alloc::string::String>"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 32, i1 false)
  br label %bb9

bb4:                                              ; preds = %bb2
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_20, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc220 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc222 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb5 unwind label %cleanup

bb10:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::option::Option<core::cell::RefCell<alloc::string::String>>>
  invoke void @"_ZN4core3ptr97drop_in_place$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17h5681b90f8c3e3136E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_4) #17
          to label %bb11 unwind label %abort

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb10

bb5:                                              ; preds = %bb4
; invoke core::fmt::ArgumentV1::new_display
  %21 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hdedfc4fff3879a7cE(%"core::fmt::Arguments"* align 8 %_20)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_17.0 = extractvalue { i8*, i64* } %21, 0
  %_17.1 = extractvalue { i8*, i64* } %21, 1
  %22 = bitcast [1 x { i8*, i64* }]* %_16 to { i8*, i64* }*
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %22, i32 0, i32 0
  store i8* %_17.0, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %22, i32 0, i32 1
  store i64* %_17.1, i64** %24, align 8
  %_13.0 = bitcast [1 x { i8*, i64* }]* %_16 to [0 x { i8*, i64* }]*
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_9, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc217 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 %_13.0, i64 1)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"* %_9, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc922 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb7
  unreachable

abort:                                            ; preds = %bb10
  %25 = landingpad { i8*, i32 }
          cleanup
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() #18
  unreachable

bb11:                                             ; preds = %bb10
  %26 = bitcast { i8*, i32 }* %2 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; probe_RSE::CHILD_ID::__init
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @_ZN9probe_RSE8CHILD_ID6__init17h93c3a8de002822beE() unnamed_addr #0 {
start:
; call core::cell::RefCell<T>::new
  %0 = call { i64, i32 } @"_ZN4core4cell16RefCell$LT$T$GT$3new17hc79880b1f0860f80E"(i32 1)
  %1 = extractvalue { i64, i32 } %0, 0
  %2 = extractvalue { i64, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i32 } undef, i64 %1, 0
  %4 = insertvalue { i64, i32 } %3, i32 %2, 1
  ret { i64, i32 } %4
}

; probe_RSE::CHILD_ID::__getit
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 i64* @_ZN9probe_RSE8CHILD_ID7__getit17h28aa4e647d59bb4aE(i64* align 8 %init) unnamed_addr #0 {
start:
  %_4 = alloca i64*, align 8
  store i64* %init, i64** %_4, align 8
  %0 = load i64*, i64** %_4, align 8, !align !8
; call std::thread::local::fast::Key<T>::get
  %1 = call align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17h418d86ac29da7ddfE"(%"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* align 8 bitcast (<{ [8 x i8], [16 x i8], [1 x i8], [7 x i8] }>* @_ZN9probe_RSE8CHILD_ID7__getit5__KEY17hd6e5d27321e3878bE to %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"*), i64* align 8 %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %1
}

; probe_RSE::CHILD_ID::__getit::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN9probe_RSE8CHILD_ID7__getit28_$u7b$$u7b$closure$u7d$$u7d$17hf4d91aa70291960dE"(i64* align 8 %0) unnamed_addr #0 {
start:
  %_20 = alloca %"core::fmt::Arguments", align 8
  %_16 = alloca [1 x { i8*, i64* }], align 8
  %_9 = alloca %"core::fmt::Arguments", align 8
  %_4 = alloca %"core::option::Option<core::cell::RefCell<i32>>", align 8
  %1 = alloca { i64, i32 }, align 8
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  %2 = bitcast i64** %_1 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_2, 1
  br i1 %5, label %bb1, label %bb8

bb1:                                              ; preds = %start
  %6 = bitcast i64** %_1 to %"core::option::Option<core::cell::RefCell<i32>>"**
  %init = load %"core::option::Option<core::cell::RefCell<i32>>"*, %"core::option::Option<core::cell::RefCell<i32>>"** %6, align 8, !nonnull !3, !align !8, !noundef !3
; call core::option::Option<T>::take
  call void @"_ZN4core6option15Option$LT$T$GT$4take17h5ab29685d261a13eE"(%"core::option::Option<core::cell::RefCell<i32>>"* sret(%"core::option::Option<core::cell::RefCell<i32>>") %_4, %"core::option::Option<core::cell::RefCell<i32>>"* align 8 %init)
  br label %bb2

bb8:                                              ; preds = %start
; call probe_RSE::CHILD_ID::__init
  %7 = call { i64, i32 } @_ZN9probe_RSE8CHILD_ID6__init17h93c3a8de002822beE()
  store { i64, i32 } %7, { i64, i32 }* %1, align 8
  br label %bb9

bb9:                                              ; preds = %bb3, %bb8
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i64, i32 } undef, i64 %9, 0
  %13 = insertvalue { i64, i32 } %12, i32 %11, 1
  ret { i64, i32 } %13

bb2:                                              ; preds = %bb1
  %14 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_4 to i64*
  %_6 = load i64, i64* %14, align 8, !range !7, !noundef !3
  %15 = icmp eq i64 %_6, 1
  br i1 %15, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %16 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_4 to %"core::option::Option<core::cell::RefCell<i32>>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<core::cell::RefCell<i32>>::Some", %"core::option::Option<core::cell::RefCell<i32>>::Some"* %16, i32 0, i32 1
  %18 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 0
  %value.0 = load i64, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 1
  %value.1 = load i32, i32* %19, align 8
  %20 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 0
  store i64 %value.0, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 1
  store i32 %value.1, i32* %21, align 8
  br label %bb9

bb4:                                              ; preds = %bb2
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_20, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc220 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc222 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::fmt::ArgumentV1::new_display
  %22 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hdedfc4fff3879a7cE(%"core::fmt::Arguments"* align 8 %_20)
  %_17.0 = extractvalue { i8*, i64* } %22, 0
  %_17.1 = extractvalue { i8*, i64* } %22, 1
  br label %bb6

bb6:                                              ; preds = %bb5
  %23 = bitcast [1 x { i8*, i64* }]* %_16 to { i8*, i64* }*
  %24 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %23, i32 0, i32 0
  store i8* %_17.0, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %23, i32 0, i32 1
  store i64* %_17.1, i64** %25, align 8
  %_13.0 = bitcast [1 x { i8*, i64* }]* %_16 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_9, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc217 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 %_13.0, i64 1)
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"* %_9, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc922 to %"core::panic::location::Location"*)) #16
  unreachable
}

; probe_RSE::EXE_NODE_ID::__init
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN9probe_RSE11EXE_NODE_ID6__init17hd289a613b50432a0E() unnamed_addr #0 {
start:
; call core::cell::RefCell<T>::new
  %0 = call { i64, i64 } @"_ZN4core4cell16RefCell$LT$T$GT$3new17h6bfaf57087d2e534E"(i64 0)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; probe_RSE::EXE_NODE_ID::__getit
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 i64* @_ZN9probe_RSE11EXE_NODE_ID7__getit17h8b72b9ffbc5aba84E(i64* align 8 %init) unnamed_addr #0 {
start:
  %_4 = alloca i64*, align 8
  store i64* %init, i64** %_4, align 8
  %0 = load i64*, i64** %_4, align 8, !align !8
; call std::thread::local::fast::Key<T>::get
  %1 = call align 8 i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17h1d91bade4be6e03eE"(%"std::thread::local::fast::Key<core::cell::RefCell<usize>>"* align 8 bitcast (<{ [8 x i8], [16 x i8], [1 x i8], [7 x i8] }>* @_ZN9probe_RSE11EXE_NODE_ID7__getit5__KEY17ha76a9dd8d26a4195E to %"std::thread::local::fast::Key<core::cell::RefCell<usize>>"*), i64* align 8 %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %1
}

; probe_RSE::EXE_NODE_ID::__getit::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN9probe_RSE11EXE_NODE_ID7__getit28_$u7b$$u7b$closure$u7d$$u7d$17h6924ae22c5267a72E"(i64* align 8 %0) unnamed_addr #0 {
start:
  %_20 = alloca %"core::fmt::Arguments", align 8
  %_16 = alloca [1 x { i8*, i64* }], align 8
  %_9 = alloca %"core::fmt::Arguments", align 8
  %_4 = alloca %"core::option::Option<core::cell::RefCell<usize>>", align 8
  %1 = alloca { i64, i64 }, align 8
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  %2 = bitcast i64** %_1 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_2, 1
  br i1 %5, label %bb1, label %bb8

bb1:                                              ; preds = %start
  %6 = bitcast i64** %_1 to %"core::option::Option<core::cell::RefCell<usize>>"**
  %init = load %"core::option::Option<core::cell::RefCell<usize>>"*, %"core::option::Option<core::cell::RefCell<usize>>"** %6, align 8, !nonnull !3, !align !8, !noundef !3
; call core::option::Option<T>::take
  call void @"_ZN4core6option15Option$LT$T$GT$4take17hf25ba049743cd2d5E"(%"core::option::Option<core::cell::RefCell<usize>>"* sret(%"core::option::Option<core::cell::RefCell<usize>>") %_4, %"core::option::Option<core::cell::RefCell<usize>>"* align 8 %init)
  br label %bb2

bb8:                                              ; preds = %start
; call probe_RSE::EXE_NODE_ID::__init
  %7 = call { i64, i64 } @_ZN9probe_RSE11EXE_NODE_ID6__init17hd289a613b50432a0E()
  store { i64, i64 } %7, { i64, i64 }* %1, align 8
  br label %bb9

bb9:                                              ; preds = %bb3, %bb8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { i64, i64 } undef, i64 %9, 0
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1
  ret { i64, i64 } %13

bb2:                                              ; preds = %bb1
  %14 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %_4 to i64*
  %_6 = load i64, i64* %14, align 8, !range !7, !noundef !3
  %15 = icmp eq i64 %_6, 1
  br i1 %15, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %16 = bitcast %"core::option::Option<core::cell::RefCell<usize>>"* %_4 to %"core::option::Option<core::cell::RefCell<usize>>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<core::cell::RefCell<usize>>::Some", %"core::option::Option<core::cell::RefCell<usize>>::Some"* %16, i32 0, i32 1
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  %value.0 = load i64, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  %value.1 = load i64, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  store i64 %value.0, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 %value.1, i64* %21, align 8
  br label %bb9

bb4:                                              ; preds = %bb2
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_20, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc220 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc222 to [0 x { i8*, i64* }]*), i64 0)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::fmt::ArgumentV1::new_display
  %22 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hdedfc4fff3879a7cE(%"core::fmt::Arguments"* align 8 %_20)
  %_17.0 = extractvalue { i8*, i64* } %22, 0
  %_17.1 = extractvalue { i8*, i64* } %22, 1
  br label %bb6

bb6:                                              ; preds = %bb5
  %23 = bitcast [1 x { i8*, i64* }]* %_16 to { i8*, i64* }*
  %24 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %23, i32 0, i32 0
  store i8* %_17.0, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %23, i32 0, i32 1
  store i64* %_17.1, i64** %25, align 8
  %_13.0 = bitcast [1 x { i8*, i64* }]* %_16 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117hca2dd6f546114b74E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_9, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc217 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 %_13.0, i64 1)
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"* %_9, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc922 to %"core::panic::location::Location"*)) #16
  unreachable
}

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #1

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17h550c73f3adb5cd24E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #5

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17haf0079bd512d9735E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #5

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index26slice_start_index_len_fail17h06f2a0f4777a1797E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #5

; core::panicking::panic_no_unwind
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking15panic_no_unwind17h25931e178d980d9cE() unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; std::sys_common::condvar::check::NoCheck::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std10sys_common7condvar5check7NoCheck3new17hdcda4e15b3855677E() unnamed_addr #1

; std::sys_common::condvar::check::NoCheck::verify
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std10sys_common7condvar5check7NoCheck6verify17h3d36dcb4d41125a4E(%"std::sys_common::condvar::check::NoCheck"* align 1, %"std::sys_common::mutex::MovableMutex"* align 4) unnamed_addr #1

; std::sys_common::mutex::MovableMutex::raw
; Function Attrs: nonlazybind uwtable
declare align 4 %"std::sys::unix::locks::futex::Mutex"* @_ZN3std10sys_common5mutex12MovableMutex3raw17h877bd82121b58baeE(%"std::sys_common::mutex::MovableMutex"* align 4) unnamed_addr #1

; std::sys::unix::locks::futex::Condvar::wait
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix5locks5futex7Condvar4wait17h46be168019e02852E(%"std::sys::unix::locks::futex::Condvar"* align 4, %"std::sys::unix::locks::futex::Mutex"* align 4) unnamed_addr #1

; std::fs::OpenOptions::_open
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std2fs11OpenOptions5_open17h0acb4f6ef6573b83E(%"core::result::Result<std::fs::File, std::io::error::Error>"* sret(%"core::result::Result<std::fs::File, std::io::error::Error>"), %"std::fs::OpenOptions"* align 4, %"std::path::Path"* align 1, i64) unnamed_addr #1

; <std::fs::File as std::io::Write>::write
; Function Attrs: nonlazybind uwtable
declare void @"_ZN48_$LT$std..fs..File$u20$as$u20$std..io..Write$GT$5write17h48eccdc7891d1e28E"(%"core::result::Result<usize, std::io::error::Error>"* sret(%"core::result::Result<usize, std::io::error::Error>"), i32* align 4, [0 x i8]* align 1, i64) unnamed_addr #1

; core::fmt::write
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt5write17h5c45f38d408cd7eeE({}* align 1, [3 x i64]* align 8, %"core::fmt::Arguments"*) unnamed_addr #1

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17h1efed56daac899acE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #5

; std::sys::unix::decode_error_kind
; Function Attrs: nonlazybind uwtable
declare i8 @_ZN3std3sys4unix17decode_error_kind17hc6c2f8ac2883b3fbE(i32) unnamed_addr #1

; std::sys::unix::locks::futex::Mutex::lock_contended
; Function Attrs: cold nonlazybind uwtable
declare void @_ZN3std3sys4unix5locks5futex5Mutex14lock_contended17h2b2c34d3d35da8a3E(%"std::sys::unix::locks::futex::Mutex"* align 4) unnamed_addr #4

; std::sys::unix::locks::futex::Mutex::wake
; Function Attrs: cold nonlazybind uwtable
declare void @_ZN3std3sys4unix5locks5futex5Mutex4wake17h2c0716e4d3c63bd3E(%"std::sys::unix::locks::futex::Mutex"* align 4) unnamed_addr #4

; std::sys::unix::thread_local_dtor::register_dtor
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix17thread_local_dtor13register_dtor17h0b2d131ff119ed65E(i8*, void (i8*)*) unnamed_addr #1

; std::panicking::panic_count::is_zero_slow_path
; Function Attrs: cold noinline nonlazybind uwtable
declare zeroext i1 @_ZN3std9panicking11panic_count17is_zero_slow_path17h0c9abb9b450a53d6E() unnamed_addr #8

; <str as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h9abc2910b16df253E"([0 x i8]* align 1, i64, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; <alloc::string::String as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
declare void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17h652f7df73894e8cdE"(%"alloc::string::String"* sret(%"alloc::string::String"), %"alloc::string::String"* align 8) unnamed_addr #1

; core::fmt::Formatter::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter3new17h4d8dfe51f7b5f9d5E(%"core::fmt::Formatter"* sret(%"core::fmt::Formatter"), {}* align 1, [3 x i64]* align 8) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

; Function Attrs: nonlazybind uwtable
declare i64 @strlen(i8*) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h233a1fd6693c57bcE"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hbf95652e534546d1E"(i64* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; <core::fmt::Arguments as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17h521c0fec020f7a8aE"(%"core::fmt::Arguments"* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17he6f8b2f549b06d98E"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17hbe07bf5951d9d17bE(%"core::fmt::Arguments"*, %"core::panic::location::Location"* align 8) unnamed_addr #5

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #10

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #11

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.uadd.sat.i64(i64, i64) #12

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #12

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #12

; core::str::slice_error_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core3str16slice_error_fail17h6bd5e73e3d5d5eafE([0 x i8]* align 1, i64, i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #5

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h0c2afddde5e93a98E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #5

; core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17len_mismatch_fail17hcfdf5da19964f9fdE"(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #5

; core::option::expect_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6option13expect_failed17h28f8073c4c31bb9fE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #5

; <std::io::error::Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h0105867e837c5397E"(i8** align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6result13unwrap_failed17h26ea43169558ec2cE([0 x i8]* align 1, i64, {}* align 1, [3 x i64]* align 8, %"core::panic::location::Location"* align 8) unnamed_addr #5

; <core::cell::BorrowError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN60_$LT$core..cell..BorrowError$u20$as$u20$core..fmt..Debug$GT$3fmt17h72cd10022f05d097E"(%"core::cell::BorrowError"* align 1, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; <std::thread::local::AccessError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN68_$LT$std..thread..local..AccessError$u20$as$u20$core..fmt..Debug$GT$3fmt17h34b34bfb4b17421aE"(%"std::thread::local::AccessError"* align 1, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; <core::cell::BorrowMutError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN63_$LT$core..cell..BorrowMutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hc351f090db32f140E"(%"core::cell::BorrowMutError"* align 1, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; <core::fmt::Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h5047489994ec6febE"(%"core::fmt::Error"* align 1, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; <core::num::error::TryFromIntError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN70_$LT$core..num..error..TryFromIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17hdc6f451ac6548ca8E"(%"core::num::error::TryFromIntError"* align 1, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; <core::str::error::Utf8Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h095ae28033eaf4f9E"(%"core::str::error::Utf8Error"* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::pointer_fmt_inner
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt17pointer_fmt_inner17h0cf48016ebec1053E(i64, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::str::pattern::StrSearcher::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3str7pattern11StrSearcher3new17h7be12f099352ddf3E(%"core::str::pattern::StrSearcher"* sret(%"core::str::pattern::StrSearcher"), [0 x i8]* align 1, i64, [0 x i8]* align 1, i64) unnamed_addr #1

; alloc::fmt::format::format_inner
; Function Attrs: nonlazybind uwtable
declare void @_ZN5alloc3fmt6format12format_inner17hb224ae155a9ded66E(%"alloc::string::String"* sret(%"alloc::string::String"), %"core::fmt::Arguments"*) unnamed_addr #1

; alloc::vec::Vec<T,A>::remove::assert_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove13assert_failed17hf3aab60f071315a7E"(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #5

; Function Attrs: nounwind nonlazybind uwtable
declare i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #13

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h8fd33bf7cfbe659dE(i64, i64) unnamed_addr #14

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #13

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #13

; Function Attrs: nounwind nonlazybind uwtable
declare i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #13

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17h63652a71b6d5e23eE() unnamed_addr #15

; Function Attrs: nonlazybind uwtable
declare i32 @close(i32) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @memcmp(i8*, i8*, i64) unnamed_addr #1

; core::fmt::Formatter::debug_struct
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter12debug_struct17h006f41a133dd71adE(%"core::fmt::builders::DebugStruct"* sret(%"core::fmt::builders::DebugStruct"), %"core::fmt::Formatter"* align 8, [0 x i8]* align 1, i64) unnamed_addr #1

; core::fmt::builders::DebugStruct::finish_non_exhaustive
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h11c6a9dded3454aaE(%"core::fmt::builders::DebugStruct"* align 8) unnamed_addr #1

; std::io::stdio::_print
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std2io5stdio6_print17h8bb1c38522373978E(%"core::fmt::Arguments"*) unnamed_addr #1

; std::fs::OpenOptions::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std2fs11OpenOptions3new17h18f041043248e65eE(%"std::fs::OpenOptions"* sret(%"std::fs::OpenOptions")) unnamed_addr #1

; std::fs::OpenOptions::write
; Function Attrs: nonlazybind uwtable
declare align 4 %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions5write17h50198105038a5cfaE(%"std::fs::OpenOptions"* align 4, i1 zeroext) unnamed_addr #1

; std::fs::OpenOptions::create
; Function Attrs: nonlazybind uwtable
declare align 4 %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions6create17hb525584dfee8d97bE(%"std::fs::OpenOptions"* align 4, i1 zeroext) unnamed_addr #1

; std::fs::OpenOptions::read
; Function Attrs: nonlazybind uwtable
declare align 4 %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions4read17h0059a47bab46cf22E(%"std::fs::OpenOptions"* align 4, i1 zeroext) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @atexit(void ()*) unnamed_addr #1

; std::panicking::take_hook
; Function Attrs: nonlazybind uwtable
declare { {}*, [3 x i64]* } @_ZN3std9panicking9take_hook17h63e88fac63f5e270E() unnamed_addr #1

; std::panicking::set_hook
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std9panicking8set_hook17hefd7c315fbdcc83bE({}* align 1, [3 x i64]* align 8) unnamed_addr #1

; std::process::exit
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN3std7process4exit17h2870dff8ec14d392E(i32) unnamed_addr #15

; std::fs::OpenOptions::append
; Function Attrs: nonlazybind uwtable
declare align 4 %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions6append17hbe22195fb8cc1c4cE(%"std::fs::OpenOptions"* align 4, i1 zeroext) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #12

; core::ffi::c_str::CStr::to_str
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3ffi5c_str4CStr6to_str17hef57ed6c63562b9bE(%"core::result::Result<&str, core::str::error::Utf8Error>"* sret(%"core::result::Result<&str, core::str::error::Utf8Error>"), %"core::ffi::c_str::CStr"* align 1, i64) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #12

; Function Attrs: nonlazybind uwtable
declare i64 @time(i64*) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare void @srand(i32) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @rand() unnamed_addr #1

; std::thread::sleep
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std6thread5sleep17h787a68d775972c52E(i64, i32) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #12

; std::sync::condvar::Condvar::notify_one
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std4sync7condvar7Condvar10notify_one17h78cf1d94cbb9aa75E(%"std::sync::condvar::Condvar"* align 4) unnamed_addr #1

; core::fmt::Formatter::write_fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hcf6971974da6eae0E(%"core::fmt::Formatter"* align 8, %"core::fmt::Arguments"*) unnamed_addr #1

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { inlinehint noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { cold nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #5 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #6 = { cold noinline noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #7 = { argmemonly nofree nounwind willreturn }
attributes #8 = { cold noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #9 = { argmemonly nofree nounwind willreturn writeonly }
attributes #10 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #11 = { nofree nosync nounwind readnone willreturn }
attributes #12 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #13 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #14 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #15 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #16 = { noreturn }
attributes #17 = { noinline }
attributes #18 = { noinline noreturn nounwind }
attributes #19 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 7, !"PIC Level", i32 2}
!1 = !{i32 2, !"RtLibUseGOT", i32 1}
!2 = !{i8 0, i8 2}
!3 = !{}
!4 = !{i64 1}
!5 = !{i64 0, i64 -9223372036854775807}
!6 = !{i64 0, i64 -9223372036854775806}
!7 = !{i64 0, i64 2}
!8 = !{i64 8}
!9 = !{i8 0, i8 41}
!10 = !{i8 0, i8 42}
!11 = !{i8 0, i8 4}
!12 = !{i8 0, i8 5}
!13 = !{i64 4}
!14 = !{i32 0, i32 -1}
!15 = !{i8 0, i8 3}
!16 = !{i8 -1, i8 2}
!17 = !{i64 1, i64 0}
!18 = !{i64 1, i64 -9223372036854775807}
!19 = !{i32 0, i32 2}
!20 = !{i32 0, i32 1114112}
!21 = !{i32 0, i32 1114113}
!22 = !{i64 0, i64 3}
