; ModuleID = 'probe_tle.cc5d9553-cgu.0'
source_filename = "probe_tle.cc5d9553-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"core::sync::atomic::AtomicUsize" = type { i64 }
%"alloc::vec::into_iter::IntoIter<&str>" = type { %"core::marker::PhantomData<&str>", %"alloc::alloc::Global", i64*, i64, { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }* }
%"core::marker::PhantomData<&str>" = type {}
%"alloc::alloc::Global" = type {}
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"core::option::Option<usize>::Some" = type { [1 x i64], i64 }
%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>" = type { %"core::str::IsNotEmpty", %"core::str::iter::Split<core::str::IsWhitespace>" }
%"core::str::IsNotEmpty" = type {}
%"core::str::iter::Split<core::str::IsWhitespace>" = type { %"core::str::iter::SplitInternal<core::str::IsWhitespace>" }
%"core::str::iter::SplitInternal<core::str::IsWhitespace>" = type { i64, i64, %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>", i8, i8, [6 x i8] }
%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>" = type { %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>" }
%"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>" = type { %"core::str::IsWhitespace", { [0 x i8]*, i64 }, %"core::str::iter::CharIndices" }
%"core::str::IsWhitespace" = type {}
%"core::str::iter::CharIndices" = type { i64, { i8*, i8* } }
%"alloc::vec::Vec<&str>" = type { { i64*, i64 }, i64 }
%"core::str::iter::SplitWhitespace" = type { %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>" }
%"core::result::Result<(), alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::result::Result<(), alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<(), std::thread::local::AccessError>::Err" = type { [1 x i8], %"std::thread::local::AccessError" }
%"std::thread::local::AccessError" = type {}
%"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::alloc::layout::LayoutError" = type {}
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::alloc::AllocError" = type {}
%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>" = type { [1 x i64], i64, [1 x i64] }
%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"std::sys::unix::mutex::Mutex" = type { %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>" }
%"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>" = type { %"libc::unix::linux_like::linux::pthread_mutex_t" }
%"libc::unix::linux_like::linux::pthread_mutex_t" = type { [40 x i8] }
%"std::sys::unix::rwlock::RWLock" = type { %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>", %"core::sync::atomic::AtomicUsize", i8, [7 x i8] }
%"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>" = type { %"libc::unix::linux_like::linux::pthread_rwlock_t" }
%"libc::unix::linux_like::linux::pthread_rwlock_t" = type { [56 x i8] }
%"std::sys_common::condvar::Condvar" = type { %"std::sys::unix::condvar::Condvar"*, %"std::sys_common::condvar::check::SameMutexCheck" }
%"std::sys::unix::condvar::Condvar" = type { %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_cond_t>" }
%"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_cond_t>" = type { %"libc::unix::linux_like::linux::pthread_cond_t" }
%"libc::unix::linux_like::linux::pthread_cond_t" = type { [48 x i8] }
%"std::sys_common::condvar::check::SameMutexCheck" = type { %"core::sync::atomic::AtomicUsize" }
%"[closure@std::panicking::begin_panic<&str>::{closure#0}]" = type { { [0 x i8]*, i64 }, %"core::panic::location::Location"* }
%"core::result::Result<std::fs::File, std::io::error::Error>" = type { i32, [5 x i32] }
%"std::fs::OpenOptions" = type { %"std::sys::unix::fs::OpenOptions" }
%"std::sys::unix::fs::OpenOptions" = type { i32, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }
%"std::path::Path" = type { %"std::ffi::os_str::OsStr" }
%"std::ffi::os_str::OsStr" = type { %"std::sys::unix::os_str::Slice" }
%"std::sys::unix::os_str::Slice" = type { [0 x i8] }
%"std::io::error::Error" = type { %"std::io::error::Repr" }
%"std::io::error::Repr" = type { i8, [15 x i8] }
%"core::result::Result<usize, std::io::error::Error>" = type { i64, [2 x i64] }
%"core::result::Result<(), std::io::error::Error>" = type { i8, [15 x i8] }
%"core::result::Result<usize, std::io::error::Error>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<usize, std::io::error::Error>::Err" = type { [1 x i64], %"std::io::error::Error" }
%"core::result::Result<(), std::io::error::Error>::Err" = type { %"std::io::error::Error" }
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"std::io::Write::write_fmt::Adapter<std::fs::File>" = type { i32*, %"core::result::Result<(), std::io::error::Error>" }
%"std::io::error::Repr::Os" = type { [1 x i32], i32 }
%"std::io::error::Repr::Simple" = type { [1 x i8], i8 }
%"std::io::error::Repr::SimpleMessage" = type { [1 x i8], i8, [6 x i8], { [0 x i8]*, i64 }* }
%"std::io::error::Repr::Custom" = type { [1 x i64], %"std::io::error::Custom"* }
%"std::io::error::Custom" = type { { {}*, [3 x i64]* }, i8, [7 x i8] }
%"std::sync::mutex::Mutex<i32>" = type { i64*, %"std::sync::poison::Flag", [3 x i8], i32 }
%"std::sync::poison::Flag" = type { %"core::sync::atomic::AtomicBool" }
%"core::sync::atomic::AtomicBool" = type { i8 }
%"std::sync::mutex::Mutex<()>" = type { i64*, %"std::sync::poison::Flag", %"core::cell::UnsafeCell<()>", [7 x i8] }
%"core::cell::UnsafeCell<()>" = type { {} }
%"std::sync::mutex::Mutex<std::fs::File>" = type { i64*, %"std::sync::poison::Flag", [3 x i8], i32 }
%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>" = type { i64*, %"std::sync::poison::Flag", [7 x i8], %"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>" }
%"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>" = type { %"alloc::collections::vec_deque::VecDeque<i32>" }
%"alloc::collections::vec_deque::VecDeque<i32>" = type { i64, i64, { i32*, i64 } }
%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>" = type { i64, [2 x i64] }
%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>" = type { i64, [2 x i64] }
%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>" = type { i64, [2 x i64] }
%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>" = type { i64, [2 x i64] }
%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>" = type { i64, [2 x i64] }
%"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok" = type { [1 x i8], i8 }
%"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err" = type { [1 x i8], i8 }
%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Err" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Ok" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Err" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Ok" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok" = type { [1 x i64], { i64*, i8 } }
%"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Err" = type { [1 x i64], i64* }
%"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Ok" = type { [1 x i64], i64* }
%"std::sync::rwlock::RwLock<i32>" = type { i64*, %"std::sync::poison::Flag", [3 x i8], i32 }
%"std::sync::condvar::Condvar" = type { %"std::sys_common::condvar::Condvar" }
%"[closure@./probe/probe_tle.rs:116:27: 126:14]" = type { %"core::cell::RefCell<alloc::string::String>"**, i32*, i32* }
%"core::cell::RefCell<alloc::string::String>" = type { i64, %"core::cell::UnsafeCell<alloc::string::String>" }
%"core::cell::UnsafeCell<alloc::string::String>" = type { %"alloc::string::String" }
%"alloc::string::String" = type { %"alloc::vec::Vec<u8>" }
%"alloc::vec::Vec<u8>" = type { { i8*, i64 }, i64 }
%"[closure@./probe/probe_tle.rs:76:18: 84:10]" = type { i8**, i32*, i32*, i64** }
%"[closure@./probe/probe_tle.rs:94:18: 102:10]" = type { i8**, i32*, i32* }
%"core::result::Result<(), std::thread::local::AccessError>::Ok" = type { [1 x i8], {} }
%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>" = type { %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>", i8, [7 x i8] }
%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>" = type { %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>" }
%"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>" = type { %"core::option::Option<core::cell::RefCell<alloc::string::String>>" }
%"core::option::Option<core::cell::RefCell<alloc::string::String>>" = type { i64, [4 x i64] }
%"std::thread::local::fast::Key<core::cell::RefCell<i32>>" = type { %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>", i8, [7 x i8] }
%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>" = type { %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>" }
%"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>" = type { %"core::option::Option<core::cell::RefCell<i32>>" }
%"core::option::Option<core::cell::RefCell<i32>>" = type { i64, [2 x i64] }
%"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some" = type { [1 x i64], %"core::cell::RefCell<alloc::string::String>" }
%"core::option::Option<core::cell::RefCell<i32>>::Some" = type { [1 x i64], { i64, i32 } }
%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"core::str::pattern::MultiCharEqPattern<core::str::IsWhitespace>" = type { %"core::str::IsWhitespace" }
%"core::fmt::Opaque" = type {}
%"core::fmt::rt::v1::Argument" = type { i64, %"core::fmt::rt::v1::FormatSpec" }
%"core::fmt::rt::v1::FormatSpec" = type { { i64, i64 }, { i64, i64 }, i32, i32, i8, [7 x i8] }
%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"std::sync::mutex::Mutex<std::fs::File>" }
%"alloc::sync::ArcInner<_ProbeSemaphore>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %_ProbeSemaphore }
%_ProbeSemaphore = type { %"std::sync::mutex::Mutex<i32>", %"std::sync::condvar::Condvar" }
%"alloc::sync::ArcInner<_ShuffledOrder>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %_ShuffledOrder }
%_ShuffledOrder = type { %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::rwlock::RwLock<i32>", %"std::sync::condvar::Condvar", %"std::sync::mutex::Mutex<()>" }
%"core::cell::BorrowError" = type {}
%"core::cell::BorrowMutError" = type {}
%"core::str::error::Utf8Error" = type { i64, { i8, i8 }, [6 x i8] }
%"core::mem::manually_drop::ManuallyDrop<alloc::string::String>" = type { %"alloc::string::String" }
%"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>" = type { [3 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>" = type { [0 x i8] }
%"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<i32>>>" = type { %"core::option::Option<core::cell::RefCell<i32>>" }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<alloc::string::String>>>" = type { %"core::option::Option<core::cell::RefCell<alloc::string::String>>" }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>" = type { [5 x i64] }
%"core::option::Option<alloc::string::String>" = type { {}*, [2 x i64] }
%"core::option::Option<alloc::string::String>::Some" = type { %"alloc::string::String" }
%"core::result::Result<std::fs::File, std::io::error::Error>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<std::fs::File, std::io::error::Error>::Err" = type { [1 x i64], %"std::io::error::Error" }
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[i32]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[&str]>" = type { [2 x i64] }
%"core::option::Option<u32>::Some" = type { [1 x i32], i32 }
%"core::result::Result<i32, core::num::error::ParseIntError>" = type { i8, [7 x i8] }
%"core::option::Option<(usize, usize)>" = type { i64, [2 x i64] }
%"core::option::Option<(usize, usize)>::Some" = type { [1 x i64], { i64, i64 } }
%"core::str::pattern::SearchStep" = type { i64, [2 x i64] }
%"core::str::pattern::SearchStep::Match" = type { [1 x i64], i64, i64 }
%"core::option::Option<core::fmt::Arguments>" = type { {}*, [5 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>" = type { [1 x i64], i64, [1 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue" = type { { { i64, i64 }, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue" = type { [1 x i64], i64 }
%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Ok" = type { { { i64, i64 }, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::result::Result<&core::cell::RefCell<alloc::string::String>, std::thread::local::AccessError>::Err" = type { %"std::thread::local::AccessError" }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<usize, core::alloc::layout::LayoutError>::Err" = type { [8 x i8], %"core::alloc::layout::LayoutError" }
%"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<&core::cell::RefCell<i32>, std::thread::local::AccessError>::Err" = type { %"std::thread::local::AccessError" }
%"core::option::Option<i32>::Some" = type { [1 x i32], i32 }
%"core::result::Result<i32, core::num::error::ParseIntError>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<i32, core::num::error::ParseIntError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<&str, core::str::error::Utf8Error>" = type { i64, [2 x i64] }
%"core::result::Result<&str, core::str::error::Utf8Error>::Ok" = type { [1 x i64], { [0 x i8]*, i64 } }
%"core::result::Result<&str, core::str::error::Utf8Error>::Err" = type { [1 x i64], %"core::str::error::Utf8Error" }
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok" = type { [8 x i8], {} }
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { {}*, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::fmt::builders::DebugTuple" = type { %"core::fmt::Formatter"*, i64, i8, i8, [6 x i8] }
%"core::fmt::builders::DebugStruct" = type { %"core::fmt::Formatter"*, i8, i8, [6 x i8] }
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" }
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break" = type { [8 x i8], %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" }
%"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err" = type { %"std::thread::local::AccessError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::RefCell<alloc::string::String>>::Break" = type { %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::RefCell<i32>>::Break" = type { %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break" = type { %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Break" = type { %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue" = type { [8 x i8], {} }
%"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>" = type { %"alloc::vec::Vec<&str>" }
%"core::ops::control_flow::ControlFlow<&str>::Continue" = type { {} }
%"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<&str, core::convert::Infallible>>::Continue" = type { {} }
%"core::str::pattern::SearchStep::Reject" = type { [1 x i64], i64, i64 }
%"std::ffi::c_str::CStr" = type { [0 x i8] }
%_ProbeNode = type { { [0 x i8]*, i64 }, { i64, i8* }, i32, i32, i32, i32 }
%"core::option::Option<*const u64>::Some" = type { [1 x i64], i64* }
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@alloc421 = private unnamed_addr constant <{ [78 x i8] }> <{ [78 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/alloc/src/vec/into_iter.rs" }>, align 1
@alloc422 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc421, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00\91\00\00\00\1B\00\00\00" }>, align 8
@alloc145 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"#" }>, align 1
@alloc440 = private unnamed_addr constant <{ [69 x i8] }> <{ [69 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/std/src/io/mod.rs" }>, align 1
@alloc441 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [69 x i8] }>, <{ [69 x i8] }>* @alloc440, i32 0, i32 0, i32 0), [16 x i8] c"E\00\00\00\00\00\00\00\1B\06\00\00!\00\00\00" }>, align 8
@alloc142 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"failed to write whole buffer" }>, align 1
@alloc143 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [28 x i8] }>, <{ [28 x i8] }>* @alloc142, i32 0, i32 0, i32 0), [8 x i8] c"\1C\00\00\00\00\00\00\00" }>, align 8
@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::io::Write::write_fmt::Adapter<std::fs::File>"*)* @"_ZN4core3ptr76drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..fs..File$GT$$GT$17h0c0b82882c1b1196E" to i8*), [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::io::Write::write_fmt::Adapter<std::fs::File>"*, [0 x i8]*, i64)* @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hcb811b3ebb30a9ceE" to i8*), i8* bitcast (i1 (%"std::io::Write::write_fmt::Adapter<std::fs::File>"*, i32)* @_ZN4core3fmt5Write10write_char17hf7c3841d55cdd675E to i8*), i8* bitcast (i1 (%"std::io::Write::write_fmt::Adapter<std::fs::File>"*, %"core::fmt::Arguments"*)* @_ZN4core3fmt5Write9write_fmt17h0d5f236765de11f9E to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc139 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"formatter error" }>, align 1
@alloc140 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [15 x i8] }>, <{ [15 x i8] }>* @alloc139, i32 0, i32 0, i32 0), [8 x i8] c"\0F\00\00\00\00\00\00\00" }>, align 8
@alloc447 = private unnamed_addr constant <{ [36 x i8] }> <{ [36 x i8] c"rwlock maximum reader count exceeded" }>, align 1
@alloc454 = private unnamed_addr constant <{ [78 x i8] }> <{ [78 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/std/src/sys/unix/rwlock.rs" }>, align 1
@alloc449 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc454, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00)\00\00\00\0D\00\00\00" }>, align 8
@alloc450 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"rwlock read lock would result in deadlock" }>, align 1
@alloc452 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc454, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\001\00\00\00\0D\00\00\00" }>, align 8
@alloc453 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"rwlock write lock would result in deadlock" }>, align 1
@alloc455 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc454, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00X\00\00\00\0D\00\00\00" }>, align 8
@alloc463 = private unnamed_addr constant <{ [70 x i8] }> <{ [70 x i8] c"cannot access a Thread Local Storage value during or after destruction" }>, align 1
@alloc457 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/std/src/thread/local.rs" }>, align 1
@alloc458 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc457, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00w\01\00\00\1A\00\00\00" }>, align 8
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, [0 x i8] }> <{ i8* bitcast (void ({ i8*, i64 }*)* @"_ZN4core3ptr77drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$$RF$str$GT$$GT$17h049568cd6d74d4e5E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast ({ {}*, [3 x i64]* } ({ i8*, i64 }*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17hef591409de37e9a6E" to i8*), i8* bitcast ({ {}*, [3 x i64]* } ({ i8*, i64 }*)* @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17hce570b05a7708a45E" to i8*), [0 x i8] zeroinitializer }>, align 8
@_ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h9f4123c916e0c58dE = external global %"core::sync::atomic::AtomicUsize"
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::io::Write::write_fmt::Adapter<std::fs::File>"**)* @"_ZN4core3ptr88drop_in_place$LT$$RF$mut$u20$std..io..Write..write_fmt..Adapter$LT$std..fs..File$GT$$GT$17h346c51ad5f5c1e8dE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::io::Write::write_fmt::Adapter<std::fs::File>"**, [0 x i8]*, i64)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hf5770310a8c2424bE" to i8*), i8* bitcast (i1 (%"std::io::Write::write_fmt::Adapter<std::fs::File>"**, i32)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hb07bc20f919e0ddcE" to i8*), i8* bitcast (i1 (%"std::io::Write::write_fmt::Adapter<std::fs::File>"**, %"core::fmt::Arguments"*)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17hc5cc6c9b45d7c36fE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc473 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc474 = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/fmt/mod.rs" }>, align 1
@alloc475 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [71 x i8] }>, <{ [71 x i8] }>* @alloc474, i32 0, i32 0, i32 0), [16 x i8] c"G\00\00\00\00\00\00\00k\01\00\00\0D\00\00\00" }>, align 8
@str.3 = internal constant [58 x i8] c"attempted to zero-initialize type `&str`, which is invalid"
@alloc476 = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/num/mod.rs" }>, align 1
@alloc477 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [71 x i8] }>, <{ [71 x i8] }>* @alloc476, i32 0, i32 0, i32 0), [16 x i8] c"G\00\00\00\00\00\00\00S\03\00\00\05\00\00\00" }>, align 8
@str.4 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc478 = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/ptr/mod.rs" }>, align 1
@alloc479 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [71 x i8] }>, <{ [71 x i8] }>* @alloc478, i32 0, i32 0, i32 0), [16 x i8] c"G\00\00\00\00\00\00\00\BC\02\00\00\0D\00\00\00" }>, align 8
@alloc480 = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize" }>, align 1
@alloc481 = private unnamed_addr constant <{ [77 x i8] }> <{ [77 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/ptr/const_ptr.rs" }>, align 1
@alloc482 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc481, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00\85\01\00\00\09\00\00\00" }>, align 8
@alloc484 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"already borrowed" }>, align 1
@alloc485 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"already mutably borrowed" }>, align 1
@alloc490 = private unnamed_addr constant <{ [76 x i8] }> <{ [76 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/char/methods.rs" }>, align 1
@alloc487 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc490, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00v\06\00\00\16\00\00\00" }>, align 8
@alloc489 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc490, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\90\06\00\00\0A\00\00\00" }>, align 8
@alloc147 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"encode_utf8: need " }>, align 1
@alloc149 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c" bytes to encode U+" }>, align 1
@alloc150 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c", but the buffer has " }>, align 1
@alloc148 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc147, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc149, i32 0, i32 0, i32 0), [8 x i8] c"\13\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc150, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc491 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc490, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\89\06\00\00\0E\00\00\00" }>, align 8
@alloc492 = private unnamed_addr constant <{ [86 x i8] }> <{ [86 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/iter/traits/exact_size.rs" }>, align 1
@alloc493 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [86 x i8] }>, <{ [86 x i8] }>* @alloc492, i32 0, i32 0, i32 0), [16 x i8] c"V\00\00\00\00\00\00\00l\00\00\00\09\00\00\00" }>, align 8
@0 = private unnamed_addr constant <{ [16 x i8] }> zeroinitializer, align 8
@alloc500 = private unnamed_addr constant <{ [49 x i8] }> <{ [49 x i8] c"there is no such thing as an acquire/release load" }>, align 1
@alloc509 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/sync/atomic.rs" }>, align 1
@alloc496 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc509, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00<\09\00\00\17\00\00\00" }>, align 8
@alloc501 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"there is no such thing as a release load" }>, align 1
@alloc499 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc509, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00;\09\00\00\18\00\00\00" }>, align 8
@alloc502 = private unnamed_addr constant <{ [50 x i8] }> <{ [50 x i8] c"there is no such thing as an acquire/release store" }>, align 1
@alloc504 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc509, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00.\09\00\00\17\00\00\00" }>, align 8
@alloc505 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"there is no such thing as an acquire store" }>, align 1
@alloc507 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc509, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00-\09\00\00\18\00\00\00" }>, align 8
@alloc508 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"there is no such thing as a relaxed fence" }>, align 1
@alloc510 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc509, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00{\0A\00\00\18\00\00\00" }>, align 8
@alloc511 = private unnamed_addr constant <{ [76 x i8] }> <{ [76 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/alloc/layout.rs" }>, align 1
@alloc512 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [76 x i8] }>, <{ [76 x i8] }>* @alloc511, i32 0, i32 0, i32 0), [16 x i8] c"L\00\00\00\00\00\00\00\18\01\00\009\00\00\00" }>, align 8
@alloc513 = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: mid <= self.len()" }>, align 1
@alloc514 = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/core/src/slice/mod.rs" }>, align 1
@alloc515 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [73 x i8] }>, <{ [73 x i8] }>* @alloc514, i32 0, i32 0, i32 0), [16 x i8] c"I\00\00\00\00\00\00\00\1F\06\00\00\09\00\00\00" }>, align 8
@alloc516 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Option::unwrap()` on a `None` value" }>, align 1
@vtable.5 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"core::cell::BorrowMutError"*)* @"_ZN4core3ptr47drop_in_place$LT$core..cell..BorrowMutError$GT$17he4fe56a2cffc7169E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::cell::BorrowMutError"*, %"core::fmt::Formatter"*)* @"_ZN63_$LT$core..cell..BorrowMutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hcb6b239d20f4c4a6E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.6 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::thread::local::AccessError"*)* @"_ZN4core3ptr52drop_in_place$LT$std..thread..local..AccessError$GT$17h4a435bf059f9a35cE" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::thread::local::AccessError"*, %"core::fmt::Formatter"*)* @"_ZN68_$LT$std..thread..local..AccessError$u20$as$u20$core..fmt..Debug$GT$3fmt17h4742560aef5d22b8E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.7 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::io::error::Error"*)* @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hda7771387f347390E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::io::error::Error"*, %"core::fmt::Formatter"*)* @"_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h827e52fb911077aeE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.8 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"core::cell::BorrowError"*)* @"_ZN4core3ptr44drop_in_place$LT$core..cell..BorrowError$GT$17h4eb9cf3fe3320816E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::cell::BorrowError"*, %"core::fmt::Formatter"*)* @"_ZN60_$LT$core..cell..BorrowError$u20$as$u20$core..fmt..Debug$GT$3fmt17h181a42d1bc7840fcE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc562 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.9 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"core::alloc::layout::LayoutError"*)* @"_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17h84f351adb5c81ce7E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::alloc::layout::LayoutError"*, %"core::fmt::Formatter"*)* @"_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17h18b08294eb593cf2E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.a = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64*, i8 }*)* @"_ZN4core3ptr98drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$$GT$17hdf6e55af722f77ccE" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64*, i8 }*, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hdab25b09e2acb206E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.b = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64*, i8 }*)* @"_ZN4core3ptr105drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..rwlock..RwLockWriteGuard$LT$i32$GT$$GT$$GT$17hcd4e14d7be50d595E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64*, i8 }*, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hf86fd2058421a8f1E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.c = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64*, i8 }*)* @"_ZN4core3ptr145drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$$GT$17hc8311b3a2fb80a78E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64*, i8 }*, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hca53bef3b42bfa6bE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.d = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr104drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..rwlock..RwLockReadGuard$LT$i32$GT$$GT$$GT$17hc00c6a3dbc8306b5E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i64**, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h39f93223cb57838cE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.e = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64*, i8 }*)* @"_ZN4core3ptr103drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$$GT$17h9dabfa2b54ef84d2E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64*, i8 }*, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hbd0989bc47ff2b9aE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.f = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64*, i8 }*)* @"_ZN4core3ptr108drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$$GT$17hef8b788b9abac303E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64*, i8 }*, %"core::fmt::Formatter"*)* @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h85261de5cae6d1d7E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.g = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i8*)* @"_ZN4core3ptr52drop_in_place$LT$core..num..error..ParseIntError$GT$17hb0b2760884451146E" to i8*), [16 x i8] c"\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (i8*, %"core::fmt::Formatter"*)* @"_ZN68_$LT$core..num..error..ParseIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17he685b773c162151eE" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.h = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"core::str::error::Utf8Error"*)* @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h8791befe6fd7b788E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"core::str::error::Utf8Error"*, %"core::fmt::Formatter"*)* @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h1c178a3c145491d4E" to i8*), [0 x i8] zeroinitializer }>, align 8
@vtable.i = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64, i64 }**)* @"_ZN4core3ptr58drop_in_place$LT$$RF$core..option..Option$LT$usize$GT$$GT$17hefabcf07edef6565E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64, i64 }**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he3c8612b608bf411E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc569 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"capacity overflow" }>, align 1
@alloc573 = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/alloc/src/collections/vec_deque/mod.rs" }>, align 1
@alloc571 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc573, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00$\02\00\00\09\00\00\00" }>, align 8
@alloc572 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"assertion failed: self.cap() == old_cap * 2" }>, align 1
@alloc574 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc573, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\8D\08\00\00\0D\00\00\00" }>, align 8
@1 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@2 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc269 = private unnamed_addr constant <{ [0 x i8] }> zeroinitializer, align 8
@alloc575 = private unnamed_addr constant <{ [72 x i8] }> <{ [72 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/alloc/src/raw_vec.rs" }>, align 1
@alloc576 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [72 x i8] }>, <{ [72 x i8] }>* @alloc575, i32 0, i32 0, i32 0), [16 x i8] c"H\00\00\00\00\00\00\00\9A\01\00\00\09\00\00\00" }>, align 8
@str.j = internal constant [25 x i8] c"attempt to divide by zero"
@alloc577 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"Some" }>, align 1
@vtable.k = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h19237c4617f9bc32E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i64**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h1423a36f1dfab93bE" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc581 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"None" }>, align 1
@alloc587 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"PoisonError" }>, align 1
@vtable.l = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ [0 x i8]*, i64 }*)* @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h9fbf1424ed5c113aE" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i64 ({ [0 x i8]*, i64 }*)* @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h429444587d557444E" to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc591 = private unnamed_addr constant <{ [98 x i8] }> <{ [98 x i8] c"/build/rustc-7HAmMa/rustc-1.57.0+dfsg1+llvm/library/alloc/src/collections/vec_deque/ring_slices.rs" }>, align 1
@alloc592 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [98 x i8] }>, <{ [98 x i8] }>* @alloc591, i32 0, i32 0, i32 0), [16 x i8] c"b\00\00\00\00\00\00\00 \00\00\00\0E\00\00\00" }>, align 8
@_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E = internal global <{ [8 x i8] }> zeroinitializer, align 8
@_ZN9probe_tle15_PROBE_THRD_SEM17h3b4f837b99158c04E = internal global <{ [8 x i8] }> zeroinitializer, align 8
@_ZN9probe_tle20_PROBE_NEW_THREAD_ID17hfb79ff6743752cd9E = internal global <{ [24 x i8] }> zeroinitializer, align 8
@_ZN9probe_tle15_SHUFFLED_ORDER17h638985828a80dff6E = internal global <{ [8 x i8] }> zeroinitializer, align 8
@alloc593 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"log" }>, align 1
@alloc680 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"./probe/probe_tle.rs" }>, align 1
@alloc595 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00)\00\00\00.\00\00\00" }>, align 8
@alloc597 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00+\00\00\001\00\00\00" }>, align 8
@alloc106 = private unnamed_addr constant <{ [54 x i8] }> <{ [54 x i8] c"---------------------From _init_---------------------\0A" }>, align 1
@alloc107 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [54 x i8] }>, <{ [54 x i8] }>* @alloc106, i32 0, i32 0, i32 0), [8 x i8] c"6\00\00\00\00\00\00\00" }>, align 8
@alloc653 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"write failed\0A" }>, align 1
@alloc600 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00,\00\00\00\\\00\00\00" }>, align 8
@alloc113 = private unnamed_addr constant <{ [23 x i8] }> <{ [23 x i8] c"ThreadId(1) :     main\0A" }>, align 1
@alloc114 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [23 x i8] }>, <{ [23 x i8] }>* @alloc113, i32 0, i32 0, i32 0), [8 x i8] c"\17\00\00\00\00\00\00\00" }>, align 8
@alloc603 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00.\00\00\00=\00\00\00" }>, align 8
@alloc604 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"scenario" }>, align 1
@alloc122 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"DEBUG read scenario success\0A" }>, align 1
@alloc123 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [28 x i8] }>, <{ [28 x i8] }>* @alloc122, i32 0, i32 0, i32 0), [8 x i8] c"\1C\00\00\00\00\00\00\00" }>, align 8
@alloc605 = private unnamed_addr constant <{ [23 x i8] }> <{ [23 x i8] c"fail to read from file\0A" }>, align 1
@alloc607 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\006\00\00\00?\00\00\00" }>, align 8
@alloc296 = private unnamed_addr constant <{ i8*, [0 x i8] }> <{ i8* bitcast (i64* ()* @_ZN9probe_tle3TID7__getit17h37c28b5d351cffcbE to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc608 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"1" }>, align 1
@alloc610 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00=\00\00\00\0D\00\00\00" }>, align 8
@alloc612 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00D\00\00\001\00\00\00" }>, align 8
@alloc159 = private unnamed_addr constant <{ [54 x i8] }> <{ [54 x i8] c"---------------------From _final---------------------\0A" }>, align 1
@alloc160 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [54 x i8] }>, <{ [54 x i8] }>* @alloc159, i32 0, i32 0, i32 0), [8 x i8] c"6\00\00\00\00\00\00\00" }>, align 8
@alloc615 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00E\00\00\00\\\00\00\00" }>, align 8
@alloc617 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00M\00\00\00D\00\00\00" }>, align 8
@alloc619 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00P\00\00\005\00\00\00" }>, align 8
@alloc324 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"tid: " }>, align 1
@alloc236 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c" | func_name: " }>, align 1
@alloc237 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c" | line: " }>, align 1
@alloc303 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c" | func_num: " }>, align 1
@alloc195 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c" | lock_var_addr: " }>, align 1
@alloc196 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\0A" }>, align 1
@alloc191 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc324, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc236, i32 0, i32 0, i32 0), [8 x i8] c"\0E\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc237, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc303, i32 0, i32 0, i32 0), [8 x i8] c"\0D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc195, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc196, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc621 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00R\00\00\00%\00\00\00" }>, align 8
@alloc223 = private unnamed_addr constant <{ [280 x i8] }> <{ [280 x i8] c}>, align 8
@alloc624 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00R\00\00\00]\00\00\00" }>, align 8
@alloc626 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00_\00\00\00D\00\00\00" }>, align 8
@alloc628 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00b\00\00\005\00\00\00" }>, align 8
@alloc277 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c" |\0A" }>, align 1
@alloc235 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc324, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc236, i32 0, i32 0, i32 0), [8 x i8] c"\0E\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc237, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc303, i32 0, i32 0, i32 0), [8 x i8] c"\0D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc277, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc630 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00d\00\00\00%\00\00\00" }>, align 8
@alloc261 = private unnamed_addr constant <{ [224 x i8] }> <{ [224 x i8] c}>, align 8
@alloc633 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00d\00\00\00N\00\00\00" }>, align 8
@alloc635 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00u\00\00\00-\00\00\00" }>, align 8
@alloc271 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"." }>, align 1
@alloc270 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc269, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc271, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc637 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00v\00\00\00B\00\00\00" }>, align 8
@alloc639 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00w\00\00\00\11\00\00\00" }>, align 8
@alloc641 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00z\00\00\009\00\00\00" }>, align 8
@alloc275 = private unnamed_addr constant <{ [31 x i8] }> <{ [31 x i8] c" | func_name: spawning | line: " }>, align 1
@alloc274 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc324, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [31 x i8] }>, <{ [31 x i8] }>* @alloc275, i32 0, i32 0, i32 0), [8 x i8] c"\1F\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc303, i32 0, i32 0, i32 0), [8 x i8] c"\0D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc277, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc643 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00|\00\00\00)\00\00\00" }>, align 8
@alloc321 = private unnamed_addr constant <{ [168 x i8] }> <{ [168 x i8] c}>, align 8
@alloc646 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00|\00\00\00C\00\00\00" }>, align 8
@alloc267 = private unnamed_addr constant <{ i8*, [0 x i8] }> <{ i8* bitcast (i64* ()* @_ZN9probe_tle8CHILD_ID7__getit17hdbc20204649a9f04E to i8*), [0 x i8] zeroinitializer }>, align 8
@alloc648 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\8B\00\00\00\15\00\00\00" }>, align 8
@alloc650 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\8F\00\00\005\00\00\00" }>, align 8
@alloc302 = private unnamed_addr constant <{ [31 x i8] }> <{ [31 x i8] c" | func_name:  spawned | line: " }>, align 1
@alloc304 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c" | \0A" }>, align 1
@alloc301 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc324, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [31 x i8] }>, <{ [31 x i8] }>* @alloc302, i32 0, i32 0, i32 0), [8 x i8] c"\1F\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc303, i32 0, i32 0, i32 0), [8 x i8] c"\0D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc304, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc652 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\91\00\00\00%\00\00\00" }>, align 8
@alloc655 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\91\00\00\00?\00\00\00" }>, align 8
@alloc657 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\AD\00\00\00*\00\00\00" }>, align 8
@alloc659 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\AE\00\00\00\09\00\00\00" }>, align 8
@str.m = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc661 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\B0\00\00\00)\00\00\00" }>, align 8
@alloc663 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\B4\00\00\00*\00\00\00" }>, align 8
@alloc665 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\B5\00\00\00\09\00\00\00" }>, align 8
@alloc326 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c", parent_tid: " }>, align 1
@alloc327 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c", line: " }>, align 1
@alloc328 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c", func: " }>, align 1
@alloc329 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c", func_num: " }>, align 1
@alloc343 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c", var: " }>, align 1
@alloc338 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc324, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc326, i32 0, i32 0, i32 0), [8 x i8] c"\0E\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc327, i32 0, i32 0, i32 0), [8 x i8] c"\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc328, i32 0, i32 0, i32 0), [8 x i8] c"\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc329, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [7 x i8] }>, <{ [7 x i8] }>* @alloc343, i32 0, i32 0, i32 0), [8 x i8] c"\07\00\00\00\00\00\00\00" }>, align 8
@alloc383 = private unnamed_addr constant <{ [336 x i8] }> <{ [336 x i8] c}>, align 8
@alloc330 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c", var: None" }>, align 1
@alloc325 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc324, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc326, i32 0, i32 0, i32 0), [8 x i8] c"\0E\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc327, i32 0, i32 0, i32 0), [8 x i8] c"\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc328, i32 0, i32 0, i32 0), [8 x i8] c"\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc329, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [11 x i8] }>, <{ [11 x i8] }>* @alloc330, i32 0, i32 0, i32 0), [8 x i8] c"\0B\00\00\00\00\00\00\00" }>, align 8
@alloc411 = private unnamed_addr constant <{ [280 x i8] }> <{ [280 x i8] c}>, align 8
@alloc667 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\DF\00\00\006\00\00\00" }>, align 8
@alloc669 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\E1\00\00\00/\00\00\00" }>, align 8
@alloc671 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\EC\00\00\00'\00\00\00" }>, align 8
@alloc673 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\ED\00\00\007\00\00\00" }>, align 8
@alloc675 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\F0\00\00\00+\00\00\00" }>, align 8
@alloc677 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\F1\00\00\003\00\00\00" }>, align 8
@alloc679 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\F6\00\00\001\00\00\00" }>, align 8
@alloc681 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc680, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\FA\00\00\003\00\00\00" }>, align 8
@alloc682 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"none" }>, align 1
@_ZN9probe_tle3TID7__getit5__KEY17hf86e3cd814c9b041E = internal thread_local global <{ [48 x i8] }> zeroinitializer, align 8
@_ZN9probe_tle8CHILD_ID7__getit5__KEY17h77ab8dfced1ef3b1E = internal thread_local global <{ [32 x i8] }> zeroinitializer, align 8

; <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb80d59ce6085ce06E"(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca i8*, align 8
  %2 = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  %_4 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8
  %4 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 5
  %_5 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %4, align 8
  %_2 = icmp eq { [0 x i8]*, i64 }* %_4, %_5
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  br label %bb3

bb1:                                              ; preds = %start
  %5 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %5, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb1
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i8*, i64 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i64 } %10, i64 %9, 1
  ret { i8*, i64 } %11

bb3:                                              ; preds = %bb2
  %12 = icmp eq i64 16, 0
  br i1 %12, label %bb4, label %bb7

bb4:                                              ; preds = %bb3
  %13 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  %_11 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %13, align 8
  %_10 = bitcast { [0 x i8]*, i64 }* %_11 to i8*
  %14 = getelementptr i8, i8* %_10, i64 1
  store i8* %14, i8** %1, align 8
  %_9 = load i8*, i8** %1, align 8
  br label %bb5

bb7:                                              ; preds = %bb3
  %15 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  %old = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %15, align 8
  %16 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  %_15 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %16, align 8
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_15, i64 1
  store { [0 x i8]*, i64 }* %17, { [0 x i8]*, i64 }** %0, align 8
  %18 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  %19 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  store { [0 x i8]*, i64 }* %18, { [0 x i8]*, i64 }** %19, align 8
; call core::ptr::read
  %20 = call { [0 x i8]*, i64 } @_ZN4core3ptr4read17h7c06b2d66da0217bE({ [0 x i8]*, i64 }* %old)
  %_16.0 = extractvalue { [0 x i8]*, i64 } %20, 0
  %_16.1 = extractvalue { [0 x i8]*, i64 } %20, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %21 = bitcast { i8*, i64 }* %2 to { [0 x i8]*, i64 }*
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 0
  store [0 x i8]* %_16.0, [0 x i8]** %22, align 8
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 1
  store i64 %_16.1, i64* %23, align 8
  br label %bb10

bb10:                                             ; preds = %bb6, %bb9
  br label %bb11

bb5:                                              ; preds = %bb4
  %_8 = bitcast i8* %_9 to { [0 x i8]*, i64 }*
  %24 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  store { [0 x i8]*, i64 }* %_8, { [0 x i8]*, i64 }** %24, align 8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([58 x i8]* @str.3 to [0 x i8]*), i64 58, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc422 to %"core::panic::location::Location"*)) #18
; call core::mem::maybe_uninit::MaybeUninit<T>::zeroed
  %25 = call { i8*, i64 } @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6zeroed17h90f18cb591a9721fE"()
  %_2.0.i = extractvalue { i8*, i64 } %25, 0
  %_2.1.i = extractvalue { i8*, i64 } %25, 1
  %26 = bitcast i8* %_2.0.i to [0 x i8]*
  %27 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %26, 0
  %28 = insertvalue { [0 x i8]*, i64 } %27, i64 %_2.1.i, 1
  %29 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %26, 0
  %30 = insertvalue { [0 x i8]*, i64 } %29, i64 %_2.1.i, 1
  %31 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %26, 0
  %32 = insertvalue { [0 x i8]*, i64 } %31, i64 %_2.1.i, 1
  %_12.0 = extractvalue { [0 x i8]*, i64 } %32, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %32, 1
  br label %bb6

bb6:                                              ; preds = %bb5
  %33 = bitcast { i8*, i64 }* %2 to { [0 x i8]*, i64 }*
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %33, i32 0, i32 0
  store [0 x i8]* %_12.0, [0 x i8]** %34, align 8
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %33, i32 0, i32 1
  store i64 %_12.1, i64* %35, align 8
  br label %bb10
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hebf9b9aee7f87936E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, %"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_12 = alloca { i64, i64 }, align 8
  %exact = alloca i64, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 16, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 5
  %_5 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %2, align 8
  %_4 = ptrtoint { [0 x i8]*, i64 }* %_5 to i64
  %3 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  %_7 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8
  %_6 = ptrtoint { [0 x i8]*, i64 }* %_7 to i64
  %4 = sub i64 %_4, %_6
  store i64 %4, i64* %exact, align 8
  br label %bb3

bb4:                                              ; preds = %bb1
  %5 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 5
  %_9 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %self, i32 0, i32 4
  %_10 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %6, align 8
; call core::ptr::const_ptr::<impl *const T>::offset_from
  %_8 = call i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$11offset_from17hc698d6e1696f1f87E"({ [0 x i8]*, i64 }* %_9, { [0 x i8]*, i64 }* %_10)
  br label %bb5

bb5:                                              ; preds = %bb4
  store i64 %_8, i64* %exact, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb5
  %_11 = load i64, i64* %exact, align 8
  %_13 = load i64, i64* %exact, align 8
  %7 = bitcast { i64, i64 }* %_12 to %"core::option::Option<usize>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %7, i32 0, i32 1
  store i64 %_13, i64* %8, align 8
  %9 = bitcast { i64, i64 }* %_12 to i64*
  store i64 1, i64* %9, align 8
  %10 = bitcast { i64, { i64, i64 } }* %0 to i64*
  store i64 %_11, i64* %10, align 8
  %11 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 0
  %13 = load i64, i64* %12, align 8, !range !2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %15, i64* %17, align 8
  ret void

bb3:                                              ; preds = %bb2
  br label %bb6
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h36b3a97f8b378da0E"(i8* nonnull align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %2 = alloca { i8*, i64 }, align 8
  %residual = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %residual, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %residual, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %residual to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  %b.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  %b.1 = load i64, i64* %7, align 8
  %8 = bitcast { i8*, i64 }* %2 to { [0 x i8]*, i64 }*
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0
  store [0 x i8]* %b.0, [0 x i8]** %9, align 8
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1
  store i64 %b.1, i64* %10, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = insertvalue { i8*, i64 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i64 } %15, i64 %14, 1
  ret { i8*, i64 } %16
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17ha5ca05359a49f10eE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hb143949bde6f761eE"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_4, i64 %self.0
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h0ad27f302787a75bE(i8* %2, i64 %_7)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h14087f0c0976df23E"(i64 %self.0, i64 %self.1, [0 x i32]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %1 = bitcast [0 x i32]* %slice.0 to i32*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i32, i32* %1, i64 %self.0
  store i32* %2, i32** %0, align 8
  %_3.i.i = load i32*, i32** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts_mut
  %3 = call { [0 x i32]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hadb1fd8ce09fb23bE(i32* %_3.i.i, i64 %_7)
  %4 = extractvalue { [0 x i32]*, i64 } %3, 0
  %5 = extractvalue { [0 x i32]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %4, 0
  %7 = insertvalue { [0 x i32]*, i64 } %6, i64 %5, 1
  ret { [0 x i32]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h6f4e8b334ba6770dE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = bitcast [0 x i8]* %slice.0 to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, i8* %1, i64 %self.0
  store i8* %2, i8** %0, align 8
  %_3.i.i = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts_mut
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17he9459e820dc6fd6fE(i8* %_3.i.i, i64 %_7)
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1
  ret { [0 x i8]*, i64 } %7
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h291b6b03bd225418E"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_4 = icmp ugt i64 %self.0, %self.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1
  br i1 %_9, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17hf6d6ed6dae21e8e9E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #18
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h6f4e8b334ba6770dE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1)
  %_18.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_18.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h811b684e8de6a021E(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #18
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_18.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_18.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h445c8b0cfcb8a89cE"(i64 %self.0, i64 %self.1, [0 x i32]* nonnull align 4 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_4 = icmp ugt i64 %self.0, %self.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1
  br i1 %_9, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17hf6d6ed6dae21e8e9E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #18
  unreachable

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h14087f0c0976df23E"(i64 %self.0, i64 %self.1, [0 x i32]* %slice.0, i64 %slice.1)
  %_18.0 = extractvalue { [0 x i32]*, i64 } %1, 0
  %_18.1 = extractvalue { [0 x i32]*, i64 } %1, 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h811b684e8de6a021E(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #18
  unreachable

bb5:                                              ; preds = %bb4
  %2 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %_18.0, 0
  %3 = insertvalue { [0 x i32]*, i64 } %2, i64 %_18.1, 1
  ret { [0 x i32]*, i64 } %3
}

; <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h047d6a2026768a41E"(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* align 8 dereferenceable(64) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* %self to %"core::str::iter::Split<core::str::IsWhitespace>"*
  %_3 = bitcast %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* %self to %"core::str::IsNotEmpty"*
; call core::iter::traits::iterator::Iterator::find
  %0 = call { i8*, i64 } @_ZN4core4iter6traits8iterator8Iterator4find17h1588069a85c7d88fE(%"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %_2, %"core::str::IsNotEmpty"* nonnull align 1 %_3)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h840acd41ec4d9802E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* align 8 dereferenceable(64) %self) unnamed_addr #0 {
start:
  %_3 = alloca { i64, { i64, i64 } }, align 8
  %_4 = bitcast %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* %self to %"core::str::iter::Split<core::str::IsWhitespace>"*
; call core::iter::traits::iterator::Iterator::size_hint
  call void @_ZN4core4iter6traits8iterator8Iterator9size_hint17hcb23d572a12c4f89E({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_3, %"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %_3, i32 0, i32 1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %upper.0 = load i64, i64* %2, align 8, !range !2
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %upper.1 = load i64, i64* %3, align 8
  %4 = bitcast { i64, { i64, i64 } }* %0 to i64*
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0
  store i64 %upper.0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1
  store i64 %upper.1, i64* %7, align 8
  ret void
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h9b78542be0462365E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_5 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_5 to i64*
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %self, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %7 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h291b6b03bd225418E"(i64 %4, i64 %6, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %7, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %9
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hd858dd49c8869485E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_5 = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h3289d9651df5d157E"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast { i64, i64 }* %_3 to i64*
  store i64 %self, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %_5, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %6 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17ha5ca05359a49f10eE"(i64 %3, i64 %5, [0 x i8]* %slice.0, i64 %slice.1)
  %7 = extractvalue { [0 x i8]*, i64 } %6, 0
  %8 = extractvalue { [0 x i8]*, i64 } %6, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %7, 0
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %8, 1
  ret { [0 x i8]*, i64 } %10
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h7f403350a4144d33E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_3 = icmp ugt i64 %self, %slice.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hd858dd49c8869485E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1)
  %_10.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_10.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb3

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17h429384a76db70f0fE(i64 %self, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #18
  unreachable

bb3:                                              ; preds = %bb2
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_10.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_10.1, 1
  ret { [0 x i8]*, i64 } %3
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h6f3b455cc3283eecE"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %iterator) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_24 = alloca i8, align 1
  %_23 = alloca i8, align 1
  %_22 = alloca %"core::str::iter::SplitWhitespace", align 8
  %vector1 = alloca %"alloc::vec::Vec<&str>", align 8
  %_8 = alloca { i64, { i64, i64 } }, align 8
  %_3 = alloca { i8*, i64 }, align 8
  %vector = alloca %"alloc::vec::Vec<&str>", align 8
  store i8 0, i8* %_24, align 1
  store i8 0, i8* %_23, align 1
  store i8 1, i8* %_24, align 1
; invoke <core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator>::next
  %3 = invoke { i8*, i64 } @"_ZN91_$LT$core..str..iter..SplitWhitespace$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hae7398579b2a0071E"(%"core::str::iter::SplitWhitespace"* align 8 dereferenceable(64) %iterator)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store { i8*, i64 } %3, { i8*, i64 }* %_3, align 8
  %4 = bitcast { i8*, i64 }* %_3 to {}**
  %5 = load {}*, {}** %4, align 8
  %6 = icmp eq {}* %5, null
  %_5 = select i1 %6, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb21:                                             ; preds = %bb19, %bb13, %cleanup
  %7 = load i8, i8* %_24, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb20, label %bb15

cleanup:                                          ; preds = %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb21

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h0bda1a8261c8fe23E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0)
          to label %bb16 unwind label %cleanup5

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_23, align 1
  %14 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0
  %element.0 = load [0 x i8]*, [0 x i8]** %15, align 8, !nonnull !3
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1
  %element.1 = load i64, i64* %16, align 8
; invoke <core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN91_$LT$core..str..iter..SplitWhitespace$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4b880ed25504de35E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_8, %"core::str::iter::SplitWhitespace"* align 8 dereferenceable(64) %iterator)
          to label %bb5 unwind label %cleanup2

bb5:                                              ; preds = %bb2
  %17 = bitcast { i64, { i64, i64 } }* %_8 to i64*
  %lower = load i64, i64* %17, align 8
  %18 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1)
  store i64 %18, i64* %1, align 8
  %19 = load i64, i64* %1, align 8
  br label %bb6

bb18:                                             ; preds = %bb14, %cleanup2
  %20 = load i8, i8* %_23, align 1, !range !4
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb17, label %bb19

cleanup2:                                         ; preds = %bb6, %bb2
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb18

bb6:                                              ; preds = %bb5
; invoke alloc::vec::Vec<T>::with_capacity
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hb6f6f8b3d20e5973E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %vector1, i64 %19)
          to label %bb7 unwind label %cleanup2

bb7:                                              ; preds = %bb6
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_14 = invoke { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h56a927d1ddf002baE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %vector1)
          to label %bb8 unwind label %cleanup3

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_23, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hcd3f32d9859e1eaeE({ [0 x i8]*, i64 }* %_14, [0 x i8]* nonnull align 1 %element.0, i64 %element.1)
          to label %bb9 unwind label %cleanup3

bb14:                                             ; preds = %cleanup3
; call core::ptr::drop_in_place<alloc::vec::Vec<&str>>
  call void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17hddd125c81345c4d3E"(%"alloc::vec::Vec<&str>"* %vector1) #19
  br label %bb18

cleanup3:                                         ; preds = %bb9, %bb8, %bb7
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb14

bb9:                                              ; preds = %bb8
; invoke alloc::vec::Vec<T,A>::set_len
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17ha146557e890ec883E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %vector1, i64 1)
          to label %bb10 unwind label %cleanup3

bb10:                                             ; preds = %bb9
  %32 = bitcast %"alloc::vec::Vec<&str>"* %vector to i8*
  %33 = bitcast %"alloc::vec::Vec<&str>"* %vector1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false)
  store i8 0, i8* %_23, align 1
  store i8 0, i8* %_24, align 1
  %34 = bitcast %"core::str::iter::SplitWhitespace"* %_22 to i8*
  %35 = bitcast %"core::str::iter::SplitWhitespace"* %iterator to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 64, i1 false)
; invoke <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  invoke void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h34cf22cd7063e45dE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %vector, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %_22)
          to label %bb11 unwind label %cleanup4

bb19:                                             ; preds = %cleanup5, %bb17, %bb18
  br label %bb21

bb17:                                             ; preds = %bb18
  br label %bb19

bb11:                                             ; preds = %bb10
  %36 = bitcast %"alloc::vec::Vec<&str>"* %0 to i8*
  %37 = bitcast %"alloc::vec::Vec<&str>"* %vector to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false)
  br label %bb12

bb13:                                             ; preds = %cleanup4
; call core::ptr::drop_in_place<alloc::vec::Vec<&str>>
  call void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17hddd125c81345c4d3E"(%"alloc::vec::Vec<&str>"* %vector) #19
  br label %bb21

cleanup4:                                         ; preds = %bb10
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  %40 = extractvalue { i8*, i32 } %38, 1
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %39, i8** %41, align 8
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %40, i32* %42, align 8
  br label %bb13

bb12:                                             ; preds = %bb16, %bb11
  ret void

bb16:                                             ; preds = %bb4
  br label %bb12

cleanup5:                                         ; preds = %bb4
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  %45 = extractvalue { i8*, i32 } %43, 1
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %45, i32* %47, align 8
  br label %bb19

bb15:                                             ; preds = %bb20, %bb21
  %48 = bitcast { i8*, i32 }* %2 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %53 = insertvalue { i8*, i32 } %52, i32 %51, 1
  resume { i8*, i32 } %53

bb20:                                             ; preds = %bb21
  br label %bb15
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h66cb4df4a0e28509E"(i8* nonnull %unique) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hd1bf3f18bda5738cE"(i8* nonnull %unique)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf8d7b6265503ad0eE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hb23a4b01080d49d6E"(i64 %kind.0, i64 %kind.1) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h171823e31cc97e76E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 {
start:
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %6, align 8
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %7 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hb23a4b01080d49d6E"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h658e2f5616f46916E"() unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hbde3f54f004e1b55E"()
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast i8* %0 to %"core::result::Result<(), std::thread::local::AccessError>::Err"*
  %2 = getelementptr inbounds %"core::result::Result<(), std::thread::local::AccessError>::Err", %"core::result::Result<(), std::thread::local::AccessError>::Err"* %1, i32 0, i32 1
  store i8 1, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h658e3eed332e3858E"() unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h6b1f13a124eb5313E"()
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err"*
  %2 = bitcast %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>::Err"* %1 to %"core::alloc::layout::LayoutError"*
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6cc498ec0cdce594E"() unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hee7bceaf5dbddff7E"()
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i8*, i64 }* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err"*
  %2 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>::Err"* %1 to %"core::alloc::AllocError"*
  %3 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8bf2ec286f265f70E"(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h6b1f13a124eb5313E"()
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* %0 to %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Err"*
  %2 = bitcast %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Err"* %1 to %"core::alloc::layout::LayoutError"*
  %3 = getelementptr inbounds %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* %0, i32 0, i32 1
  store i64 0, i64* %3, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc428c001cb2fcb9bE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 {
start:
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %6, align 8
; call <T as core::convert::From<T>>::from
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hdf6cf1c952f216eeE"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hce0ee3d6dea7375eE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 {
start:
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %6, align 8
; call <T as core::convert::From<T>>::from
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hdf6cf1c952f216eeE"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd34d6402dbe179a3E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 {
start:
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  %e.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  %e.1 = load i64, i64* %6, align 8
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %7 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hb23a4b01080d49d6E"(i64 %e.0, i64 %e.1)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  ret void
}

; <<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN157_$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hddb594ec32be0f49E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_5 = alloca { i64*, i64 }, align 8
  store i8 0, i8* %_10, align 1
  %1 = bitcast i64** %self to %"alloc::vec::into_iter::IntoIter<&str>"**
  %2 = load %"alloc::vec::into_iter::IntoIter<&str>"*, %"alloc::vec::into_iter::IntoIter<&str>"** %1, align 8, !nonnull !3
  %_4 = bitcast %"alloc::vec::into_iter::IntoIter<&str>"* %2 to %"alloc::alloc::Global"*
  store i8 1, i8* %_10, align 1
; call core::ptr::read
  call void @_ZN4core3ptr4read17h964699b2b6f1dea9E(%"alloc::alloc::Global"* %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %self to %"alloc::vec::into_iter::IntoIter<&str>"**
  %4 = load %"alloc::vec::into_iter::IntoIter<&str>"*, %"alloc::vec::into_iter::IntoIter<&str>"** %3, align 8, !nonnull !3
  %5 = bitcast %"alloc::vec::into_iter::IntoIter<&str>"* %4 to i64**
  %_7 = load i64*, i64** %5, align 8, !nonnull !3
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = invoke { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7ab75b1de90bb502E"(i64* nonnull %_7)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %6 = bitcast i64** %self to %"alloc::vec::into_iter::IntoIter<&str>"**
  %7 = load %"alloc::vec::into_iter::IntoIter<&str>"*, %"alloc::vec::into_iter::IntoIter<&str>"** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %7, i32 0, i32 3
  %_8 = load i64, i64* %8, align 8
  store i8 0, i8* %_10, align 1
; invoke alloc::raw_vec::RawVec<T,A>::from_raw_parts_in
  %9 = invoke { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17h7e68f63690fbe453E"({ [0 x i8]*, i64 }* %_6, i64 %_8)
          to label %bb3 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %10 = load i8, i8* %_10, align 1, !range !4
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  store { i64*, i64 } %9, { i64*, i64 }* %_5, align 8
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h545104aaffa70c4fE"({ i64*, i64 }* %_5)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_10, align 1
  ret void

bb5:                                              ; preds = %bb6, %bb7
  %17 = bitcast { i8*, i32 }* %0 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22

bb6:                                              ; preds = %bb7
  br label %bb5
}

; <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::Dropper<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN159_$LT$$LT$alloc..collections..vec_deque..VecDeque$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..Dropper$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3fba8f92c1fa0847E"({ i32*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i32*, i64 }* %self to { [0 x i32]*, i64 }*
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %0, i32 0, i32 0
  %_3.0 = load [0 x i32]*, [0 x i32]** %1, align 8, !nonnull !3
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %0, i32 0, i32 1
  %_3.1 = load i64, i64* %2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <T as core::any::Any>::type_id
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h429444587d557444E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::any::TypeId::of
  %0 = call i64 @_ZN4core3any6TypeId2of17h1a13facda8af68cfE()
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; std::sys_common::mutex::MovableMutex::raw_unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17h5f94e28bdda7112aE(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = bitcast i64** %self to %"std::sys::unix::mutex::Mutex"**
  %_2 = load %"std::sys::unix::mutex::Mutex"*, %"std::sys::unix::mutex::Mutex"** %0, align 8, !nonnull !3
; call std::sys::unix::mutex::Mutex::unlock
  call void @_ZN3std3sys4unix5mutex5Mutex6unlock17h1afb3806ebcc5ea4E(%"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::sys_common::mutex::MovableMutex::raw_lock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17haed4bb903318d43eE(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = bitcast i64** %self to %"std::sys::unix::mutex::Mutex"**
  %_2 = load %"std::sys::unix::mutex::Mutex"*, %"std::sys::unix::mutex::Mutex"** %0, align 8, !nonnull !3
; call std::sys::unix::mutex::Mutex::lock
  call void @_ZN3std3sys4unix5mutex5Mutex4lock17h8d4122560abb067dE(%"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::sys_common::rwlock::MovableRWLock::read_unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common6rwlock13MovableRWLock11read_unlock17hfd30b6a702dda1e3E(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = bitcast i64** %self to %"std::sys::unix::rwlock::RWLock"**
  %_2 = load %"std::sys::unix::rwlock::RWLock"*, %"std::sys::unix::rwlock::RWLock"** %0, align 8, !nonnull !3
; call std::sys::unix::rwlock::RWLock::read_unlock
  call void @_ZN3std3sys4unix6rwlock6RWLock11read_unlock17hdb79f8daad622389E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::sys_common::rwlock::MovableRWLock::write_unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common6rwlock13MovableRWLock12write_unlock17h852df36d603159b1E(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = bitcast i64** %self to %"std::sys::unix::rwlock::RWLock"**
  %_2 = load %"std::sys::unix::rwlock::RWLock"*, %"std::sys::unix::rwlock::RWLock"** %0, align 8, !nonnull !3
; call std::sys::unix::rwlock::RWLock::write_unlock
  call void @_ZN3std3sys4unix6rwlock6RWLock12write_unlock17h0c546cbc93360edcE(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::sys_common::rwlock::MovableRWLock::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common6rwlock13MovableRWLock4read17h6928ca4ab194e2caE(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = bitcast i64** %self to %"std::sys::unix::rwlock::RWLock"**
  %_2 = load %"std::sys::unix::rwlock::RWLock"*, %"std::sys::unix::rwlock::RWLock"** %0, align 8, !nonnull !3
; call std::sys::unix::rwlock::RWLock::read
  call void @_ZN3std3sys4unix6rwlock6RWLock4read17h22e9267a9fd4f134E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::sys_common::rwlock::MovableRWLock::write
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common6rwlock13MovableRWLock5write17h33ae9d0e4116b354E(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %0 = bitcast i64** %self to %"std::sys::unix::rwlock::RWLock"**
  %_2 = load %"std::sys::unix::rwlock::RWLock"*, %"std::sys::unix::rwlock::RWLock"** %0, align 8, !nonnull !3
; call std::sys::unix::rwlock::RWLock::write
  call void @_ZN3std3sys4unix6rwlock6RWLock5write17h0af39311ab0e1da5E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; std::sys_common::condvar::Condvar::wait
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std10sys_common7condvar7Condvar4wait17h987ab69f5866cb43E(%"std::sys_common::condvar::Condvar"* align 8 dereferenceable(16) %self, i64** align 8 dereferenceable(8) %mutex) unnamed_addr #0 {
start:
  %_4 = getelementptr inbounds %"std::sys_common::condvar::Condvar", %"std::sys_common::condvar::Condvar"* %self, i32 0, i32 1
; call std::sys_common::condvar::check::SameMutexCheck::verify
  call void @_ZN3std10sys_common7condvar5check14SameMutexCheck6verify17h05fd77e152fcfa51E(%"std::sys_common::condvar::check::SameMutexCheck"* align 8 dereferenceable(8) %_4, i64** align 8 dereferenceable(8) %mutex)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"std::sys_common::condvar::Condvar"* %self to %"std::sys::unix::condvar::Condvar"**
  %_6 = load %"std::sys::unix::condvar::Condvar"*, %"std::sys::unix::condvar::Condvar"** %0, align 8, !nonnull !3
; call std::sys_common::mutex::MovableMutex::raw
  %_8 = call align 8 dereferenceable(40) %"std::sys::unix::mutex::Mutex"* @_ZN3std10sys_common5mutex12MovableMutex3raw17h291a5d574400a240E(i64** align 8 dereferenceable(8) %mutex)
  br label %bb2

bb2:                                              ; preds = %bb1
; call std::sys::unix::condvar::Condvar::wait
  call void @_ZN3std3sys4unix7condvar7Condvar4wait17he7f8b748991a0426E(%"std::sys::unix::condvar::Condvar"* align 8 dereferenceable(48) %_6, %"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %_8)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; std::sys_common::backtrace::__rust_end_short_backtrace
; Function Attrs: noinline noreturn nonlazybind uwtable
define void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17h0760564b8a8a04c7E(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", align 8
  %1 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_2 to i8*
  %2 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call std::panicking::begin_panic::{{closure}}
  call void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17he7bb4826521dec23E"(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_2) #18
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::hint::black_box
  invoke void @_ZN4core4hint9black_box17hf935e9ccbd4e1b58E()
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.trap()
  unreachable

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13
}

; std::fs::OpenOptions::open
; Function Attrs: nonlazybind uwtable
define void @_ZN3std2fs11OpenOptions4open17h097803acad1b1380E(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24) %0, %"std::fs::OpenOptions"* align 4 dereferenceable(16) %self, [0 x i8]* nonnull align 1 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %path = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %path, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %path, i32 0, i32 1
  store i64 %2, i64* %5, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %6 = invoke { %"std::path::Path"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h0484ca0dc3439f02E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %path)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { %"std::path::Path"*, i64 } %6, 0
  %_5.1 = extractvalue { %"std::path::Path"*, i64 } %6, 1
; invoke std::fs::OpenOptions::_open
  invoke void @_ZN3std2fs11OpenOptions5_open17hf9a7f113c14c71dfE(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24) %0, %"std::fs::OpenOptions"* align 4 dereferenceable(16) %self, %"std::path::Path"* nonnull align 1 %_5.0, i64 %_5.1)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  br label %bb3

bb5:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %3 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17

bb3:                                              ; preds = %bb2
  ret void
}

; std::io::Write::write_all
; Function Attrs: nonlazybind uwtable
define i128 @_ZN3std2io5Write9write_all17hb9fa382607ad4181E(i32* align 4 dereferenceable(4) %self, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i128, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_32 = alloca i8, align 1
  %_29 = alloca %"std::io::error::Error", align 8
  %e1 = alloca %"std::io::error::Error", align 8
  %_25 = alloca i8, align 1
  %e = alloca %"std::io::error::Error"*, align 8
  %_19 = alloca i64, align 8
  %_11 = alloca i8, align 1
  %_10 = alloca %"std::io::error::Error", align 8
  %_6 = alloca %"core::result::Result<usize, std::io::error::Error>", align 8
  %4 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %buf = alloca { [0 x i8]*, i64 }, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  store i64 %1, i64* %6, align 8
  store i8 0, i8* %_32, align 1
  br label %bb1

bb1:                                              ; preds = %bb20, %start
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  %_5.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !3
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  %_5.1 = load i64, i64* %8, align 8
; call core::slice::<impl [T]>::is_empty
  %_4 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h832a0757a2494090E"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb3, label %bb16

bb16:                                             ; preds = %bb2
  %9 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to i8*
  store i8 4, i8* %9, align 8
  br label %bb18

bb3:                                              ; preds = %bb2
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  %_8.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !3
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  %_8.1 = load i64, i64* %11, align 8
  store i8 1, i8* %_32, align 1
; call <std::fs::File as std::io::Write>::write
  call void @"_ZN48_$LT$std..fs..File$u20$as$u20$std..io..Write$GT$5write17h03102cc4fd32491dE"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<usize, std::io::error::Error>") dereferenceable(24) %_6, i32* align 4 dereferenceable(4) %self, [0 x i8]* nonnull align 1 %_8.0, i64 %_8.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %12 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to i64*
  %_9 = load i64, i64* %12, align 8, !range !2
  switch i64 %_9, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb11
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
  %13 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Ok"*
  %14 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Ok", %"core::result::Result<usize, std::io::error::Error>::Ok"* %13, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %bb7, label %bb9

bb11:                                             ; preds = %bb4
  %17 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %17, i32 0, i32 1
  store %"std::io::error::Error"* %18, %"std::io::error::Error"** %e, align 8
  %_26 = load %"std::io::error::Error"*, %"std::io::error::Error"** %e, align 8, !nonnull !3
; invoke std::io::error::Error::kind
  %19 = invoke i8 @_ZN3std2io5error5Error4kind17hebbc620e405d939aE(%"std::io::error::Error"* align 8 dereferenceable(16) %_26)
          to label %bb12 unwind label %cleanup, !range !5

bb12:                                             ; preds = %bb11
  store i8 %19, i8* %_25, align 1
; invoke <std::io::error::ErrorKind as core::cmp::PartialEq>::eq
  %_23 = invoke zeroext i1 @"_ZN66_$LT$std..io..error..ErrorKind$u20$as$u20$core..cmp..PartialEq$GT$2eq17h80e77723a301e536E"(i8* align 1 dereferenceable(1) %_25, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc145, i32 0, i32 0, i32 0))
          to label %bb13 unwind label %cleanup

bb26:                                             ; preds = %cleanup
  %20 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to i64*
  %_34 = load i64, i64* %20, align 8, !range !2
  %21 = icmp eq i64 %_34, 1
  br i1 %21, label %bb24, label %bb19

cleanup:                                          ; preds = %bb7, %bb9, %bb12, %bb11
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb26

bb13:                                             ; preds = %bb12
  br i1 %_23, label %bb14, label %bb15

bb15:                                             ; preds = %bb13
  store i8 0, i8* %_32, align 1
  %27 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %27, i32 0, i32 1
  %29 = bitcast %"std::io::error::Error"* %e1 to i8*
  %30 = bitcast %"std::io::error::Error"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false)
  %31 = bitcast %"std::io::error::Error"* %_29 to i8*
  %32 = bitcast %"std::io::error::Error"* %e1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false)
  %33 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %34 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %33 to %"std::io::error::Error"*
  %35 = bitcast %"std::io::error::Error"* %34 to i8*
  %36 = bitcast %"std::io::error::Error"* %_29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false)
  br label %bb17

bb14:                                             ; preds = %bb13
  br label %bb23

bb23:                                             ; preds = %bb10, %bb14
  %37 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to i64*
  %_33 = load i64, i64* %37, align 8, !range !2
  %38 = icmp eq i64 %_33, 1
  br i1 %38, label %bb21, label %bb20

bb17:                                             ; preds = %bb8, %bb15
  store i8 0, i8* %_32, align 1
  br label %bb18

bb7:                                              ; preds = %bb5
  store i8 23, i8* %_11, align 1
  %39 = load i8, i8* %_11, align 1, !range !5
; invoke std::io::error::Error::new_const
  %40 = invoke i128 @_ZN3std2io5error5Error9new_const17h4ed44353156bf8d5E(i8 %39, { [0 x i8]*, i64 }* align 8 dereferenceable(16) bitcast (<{ i8*, [8 x i8] }>* @alloc143 to { [0 x i8]*, i64 }*))
          to label %bb8 unwind label %cleanup

bb9:                                              ; preds = %bb5
  %41 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Ok"*
  %42 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Ok", %"core::result::Result<usize, std::io::error::Error>::Ok"* %41, i32 0, i32 1
  %n = load i64, i64* %42, align 8
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  %_18.0 = load [0 x i8]*, [0 x i8]** %43, align 8, !nonnull !3
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  %_18.1 = load i64, i64* %44, align 8
  store i64 %n, i64* %_19, align 8
  %45 = load i64, i64* %_19, align 8
; invoke core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %46 = invoke { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h88570b1ac1839af9E"([0 x i8]* nonnull align 1 %_18.0, i64 %_18.1, i64 %45, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc441 to %"core::panic::location::Location"*))
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %_17.0 = extractvalue { [0 x i8]*, i64 } %46, 0
  %_17.1 = extractvalue { [0 x i8]*, i64 } %46, 1
  %47 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  store [0 x i8]* %_17.0, [0 x i8]** %47, align 8
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  store i64 %_17.1, i64* %48, align 8
  br label %bb23

bb21:                                             ; preds = %bb23
  %49 = load i8, i8* %_32, align 1, !range !4
  %50 = trunc i8 %49 to i1
  br i1 %50, label %bb22, label %bb20

bb20:                                             ; preds = %bb22, %bb21, %bb23
  store i8 0, i8* %_32, align 1
  br label %bb1

bb22:                                             ; preds = %bb21
  %51 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %52 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %51, i32 0, i32 1
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hda7771387f347390E"(%"std::io::error::Error"* %52)
  br label %bb20

bb8:                                              ; preds = %bb7
  store i128 %40, i128* %2, align 8
  %53 = bitcast %"std::io::error::Error"* %_10 to i8*
  %54 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 16, i1 false)
  %55 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %56 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %55 to %"std::io::error::Error"*
  %57 = bitcast %"std::io::error::Error"* %56 to i8*
  %58 = bitcast %"std::io::error::Error"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 16, i1 false)
  br label %bb17

bb24:                                             ; preds = %bb26
  %59 = load i8, i8* %_32, align 1, !range !4
  %60 = trunc i8 %59 to i1
  br i1 %60, label %bb25, label %bb19

bb19:                                             ; preds = %bb25, %bb24, %bb26
  %61 = bitcast { i8*, i32 }* %3 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = insertvalue { i8*, i32 } undef, i8* %62, 0
  %66 = insertvalue { i8*, i32 } %65, i32 %64, 1
  resume { i8*, i32 } %66

bb25:                                             ; preds = %bb24
  %67 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %68 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %67, i32 0, i32 1
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hda7771387f347390E"(%"std::io::error::Error"* %68) #19
  br label %bb19

bb18:                                             ; preds = %bb16, %bb17
  %69 = bitcast %"core::result::Result<(), std::io::error::Error>"* %4 to i128*
  %70 = load i128, i128* %69, align 8
  ret i128 %70
}

; std::io::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define i128 @_ZN3std2io5Write9write_fmt17h85f0732d49b4061dE(i32* align 4 dereferenceable(4) %self, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %fmt) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i128, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_19 = alloca i8, align 1
  %_15 = alloca i8, align 1
  %_14 = alloca %"std::io::error::Error", align 8
  %_10 = alloca %"core::fmt::Arguments", align 8
  %_6 = alloca i8, align 1
  %_5 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %output = alloca %"std::io::Write::write_fmt::Adapter<std::fs::File>", align 8
  %2 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  store i8 0, i8* %_19, align 1
  %3 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_5 to i8*
  store i8 4, i8* %3, align 8
  store i8 1, i8* %_19, align 1
  %4 = bitcast %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %output to i32**
  store i32* %self, i32** %4, align 8
  %5 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %output, i32 0, i32 1
  %6 = bitcast %"core::result::Result<(), std::io::error::Error>"* %5 to i8*
  %7 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false)
  %_7.0 = bitcast %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %output to {}*
  %8 = bitcast %"core::fmt::Arguments"* %_10 to i8*
  %9 = bitcast %"core::fmt::Arguments"* %fmt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 48, i1 false)
; invoke core::fmt::write
  %10 = invoke zeroext i1 @_ZN4core3fmt5write17h182b3dab33fa727dE({}* nonnull align 1 %_7.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.0 to [3 x i64]*), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_10)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %_6, align 1
  %12 = load i8, i8* %_6, align 1, !range !4
  %13 = trunc i8 %12 to i1
  %_11 = zext i1 %13 to i64
  switch i64 %_11, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ]

bb10:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::Write::write_fmt::Adapter<std::fs::File>>
  call void @"_ZN4core3ptr76drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..fs..File$GT$$GT$17h0c0b82882c1b1196E"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* %output) #19
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb2, %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb10

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<(), std::io::error::Error>"* %2 to i8*
  store i8 4, i8* %19, align 8
  br label %bb14

bb2:                                              ; preds = %bb1
  %_13 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %output, i32 0, i32 1
; invoke core::result::Result<T,E>::is_err
  %_12 = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h8f18556c2787f4eaE"(%"core::result::Result<(), std::io::error::Error>"* align 8 dereferenceable(16) %_13)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb2
  br i1 %_12, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  store i8 40, i8* %_15, align 1
  %20 = load i8, i8* %_15, align 1, !range !5
; invoke std::io::error::Error::new_const
  %21 = invoke i128 @_ZN3std2io5error5Error9new_const17h4ed44353156bf8d5E(i8 %20, { [0 x i8]*, i64 }* align 8 dereferenceable(16) bitcast (<{ i8*, [8 x i8] }>* @alloc140 to { [0 x i8]*, i64 }*))
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_19, align 1
  %22 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %output, i32 0, i32 1
  %23 = bitcast %"core::result::Result<(), std::io::error::Error>"* %2 to i8*
  %24 = bitcast %"core::result::Result<(), std::io::error::Error>"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  br label %bb9

bb9:                                              ; preds = %bb8, %bb6
  br label %bb14

bb8:                                              ; preds = %bb7
  store i128 %21, i128* %0, align 8
  %25 = bitcast %"std::io::error::Error"* %_14 to i8*
  %26 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false)
  %27 = bitcast %"core::result::Result<(), std::io::error::Error>"* %2 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %28 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %27 to %"std::io::error::Error"*
  %29 = bitcast %"std::io::error::Error"* %28 to i8*
  %30 = bitcast %"std::io::error::Error"* %_14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false)
  br label %bb9

bb11:                                             ; preds = %bb10
  %31 = bitcast { i8*, i32 }* %1 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = insertvalue { i8*, i32 } undef, i8* %32, 0
  %36 = insertvalue { i8*, i32 } %35, i32 %34, 1
  resume { i8*, i32 } %36

bb14:                                             ; preds = %bb4, %bb9
  %37 = load i8, i8* %_19, align 1, !range !4
  %38 = trunc i8 %37 to i1
  br i1 %38, label %bb13, label %bb12

bb12:                                             ; preds = %bb13, %bb14
  store i8 0, i8* %_19, align 1
  %39 = bitcast %"core::result::Result<(), std::io::error::Error>"* %2 to i128*
  %40 = load i128, i128* %39, align 8
  ret i128 %40

bb13:                                             ; preds = %bb14
  %41 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %output, i32 0, i32 1
; call core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  call void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17ha3b6bcf921980c34E"(%"core::result::Result<(), std::io::error::Error>"* %41)
  br label %bb12
}

; std::io::error::Error::kind
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN3std2io5error5Error4kind17hebbc620e405d939aE(%"std::io::error::Error"* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %2 = bitcast %"std::io::error::Repr"* %1 to i8*
  %3 = load i8, i8* %2, align 8, !range !6
  %_2 = zext i8 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb6
    i64 2, label %bb1
    i64 3, label %bb5
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %5 = bitcast %"std::io::error::Repr"* %4 to %"std::io::error::Repr::Os"*
  %6 = getelementptr inbounds %"std::io::error::Repr::Os", %"std::io::error::Repr::Os"* %5, i32 0, i32 1
  %code = load i32, i32* %6, align 4
; call std::sys::unix::decode_error_kind
  %7 = call i8 @_ZN3std3sys4unix17decode_error_kind17h0b4b195659215c25E(i32 %code), !range !5
  store i8 %7, i8* %0, align 1
  br label %bb4

bb6:                                              ; preds = %start
  %8 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %9 = bitcast %"std::io::error::Repr"* %8 to %"std::io::error::Repr::Simple"*
  %10 = getelementptr inbounds %"std::io::error::Repr::Simple", %"std::io::error::Repr::Simple"* %9, i32 0, i32 1
  %kind1 = load i8, i8* %10, align 1, !range !5
  store i8 %kind1, i8* %0, align 1
  br label %bb7

bb1:                                              ; preds = %start
  %11 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %12 = bitcast %"std::io::error::Repr"* %11 to %"std::io::error::Repr::SimpleMessage"*
  %13 = getelementptr inbounds %"std::io::error::Repr::SimpleMessage", %"std::io::error::Repr::SimpleMessage"* %12, i32 0, i32 1
  %kind = load i8, i8* %13, align 1, !range !5
  store i8 %kind, i8* %0, align 1
  br label %bb7

bb5:                                              ; preds = %start
  %14 = bitcast %"std::io::error::Error"* %self to %"std::io::error::Repr"*
  %15 = bitcast %"std::io::error::Repr"* %14 to %"std::io::error::Repr::Custom"*
  %c = getelementptr inbounds %"std::io::error::Repr::Custom", %"std::io::error::Repr::Custom"* %15, i32 0, i32 1
  %16 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %c, align 8, !nonnull !3
  %17 = getelementptr inbounds %"std::io::error::Custom", %"std::io::error::Custom"* %16, i32 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !5
  store i8 %18, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6, %bb1, %bb5
  %19 = load i8, i8* %0, align 1, !range !5
  ret i8 %19

bb4:                                              ; preds = %bb3
  br label %bb7
}

; std::io::error::Error::new_const
; Function Attrs: inlinehint nonlazybind uwtable
define internal i128 @_ZN3std2io5error5Error9new_const17h4ed44353156bf8d5E(i8 %kind, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %message) unnamed_addr #0 {
start:
  %_3 = alloca %"std::io::error::Repr", align 8
  %0 = alloca %"std::io::error::Error", align 8
  %1 = bitcast %"std::io::error::Repr"* %_3 to %"std::io::error::Repr::SimpleMessage"*
  %2 = getelementptr inbounds %"std::io::error::Repr::SimpleMessage", %"std::io::error::Repr::SimpleMessage"* %1, i32 0, i32 1
  store i8 %kind, i8* %2, align 1
  %3 = bitcast %"std::io::error::Repr"* %_3 to %"std::io::error::Repr::SimpleMessage"*
  %4 = getelementptr inbounds %"std::io::error::Repr::SimpleMessage", %"std::io::error::Repr::SimpleMessage"* %3, i32 0, i32 3
  store { [0 x i8]*, i64 }* %message, { [0 x i8]*, i64 }** %4, align 8
  %5 = bitcast %"std::io::error::Repr"* %_3 to i8*
  store i8 2, i8* %5, align 8
  %6 = bitcast %"std::io::error::Error"* %0 to %"std::io::error::Repr"*
  %7 = bitcast %"std::io::error::Repr"* %6 to i8*
  %8 = bitcast %"std::io::error::Repr"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  %9 = bitcast %"std::io::error::Error"* %0 to i128*
  %10 = load i128, i128* %9, align 8
  ret i128 %10
}

; std::ffi::os_str::OsStr::from_inner
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::os_str::OsStr"*, i64 } @_ZN3std3ffi6os_str5OsStr10from_inner17ha08c5008ac9647a5E(%"std::sys::unix::os_str::Slice"* nonnull align 1 %inner.0, i64 %inner.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast %"std::sys::unix::os_str::Slice"* %inner.0 to %"std::ffi::os_str::OsStr"*
  %0 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } undef, %"std::ffi::os_str::OsStr"* %_2.0, 0
  %1 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } %0, i64 %inner.1, 1
  ret { %"std::ffi::os_str::OsStr"*, i64 } %1
}

; std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h6ed3165b5f2415c4E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call std::sys::unix::os_str::Slice::from_str
  %0 = call { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice8from_str17h9c8fc03daeea6907E([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %_3.0 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %0, 0
  %_3.1 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::ffi::os_str::OsStr::from_inner
  %1 = call { %"std::ffi::os_str::OsStr"*, i64 } @_ZN3std3ffi6os_str5OsStr10from_inner17ha08c5008ac9647a5E(%"std::sys::unix::os_str::Slice"* nonnull align 1 %_3.0, i64 %_3.1)
  %2 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %1, 0
  %3 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } undef, %"std::ffi::os_str::OsStr"* %2, 0
  %5 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } %4, i64 %3, 1
  ret { %"std::ffi::os_str::OsStr"*, i64 } %5
}

; std::sys::unix::mutex::raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal %"libc::unix::linux_like::linux::pthread_mutex_t"* @_ZN3std3sys4unix5mutex3raw17h325051196e052154E(%"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %m) unnamed_addr #0 {
start:
  %_2 = bitcast %"std::sys::unix::mutex::Mutex"* %m to %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>"* %_2 to %"libc::unix::linux_like::linux::pthread_mutex_t"*
  br label %bb1

bb1:                                              ; preds = %start
  ret %"libc::unix::linux_like::linux::pthread_mutex_t"* %_2.i
}

; std::sys::unix::mutex::Mutex::lock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix5mutex5Mutex4lock17h8d4122560abb067dE(%"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_4 = bitcast %"std::sys::unix::mutex::Mutex"* %self to %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>"* %_4 to %"libc::unix::linux_like::linux::pthread_mutex_t"*
  br label %bb1

bb1:                                              ; preds = %start
  %r = call i32 @pthread_mutex_lock(%"libc::unix::linux_like::linux::pthread_mutex_t"* %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sys::unix::mutex::Mutex::unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix5mutex5Mutex6unlock17h1afb3806ebcc5ea4E(%"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_4 = bitcast %"std::sys::unix::mutex::Mutex"* %self to %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_mutex_t>"* %_4 to %"libc::unix::linux_like::linux::pthread_mutex_t"*
  br label %bb1

bb1:                                              ; preds = %start
  %r = call i32 @pthread_mutex_unlock(%"libc::unix::linux_like::linux::pthread_mutex_t"* %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sys::unix::os_str::Slice::from_u8_slice
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice13from_u8_slice17h5ee8d6a8f3bd210fE([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %0 = alloca { %"std::sys::unix::os_str::Slice"*, i64 }, align 8
  %1 = bitcast { %"std::sys::unix::os_str::Slice"*, i64 }* %0 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %s.1, i64* %3, align 8
  %4 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 0
  %5 = load %"std::sys::unix::os_str::Slice"*, %"std::sys::unix::os_str::Slice"** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } undef, %"std::sys::unix::os_str::Slice"* %5, 0
  %9 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } %8, i64 %7, 1
  ret { %"std::sys::unix::os_str::Slice"*, i64 } %9
}

; std::sys::unix::os_str::Slice::from_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice8from_str17h9c8fc03daeea6907E([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !3
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %_3.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::sys::unix::os_str::Slice::from_u8_slice
  %9 = call { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str5Slice13from_u8_slice17h5ee8d6a8f3bd210fE([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1)
  %10 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %9, 0
  %11 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %9, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %12 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } undef, %"std::sys::unix::os_str::Slice"* %10, 0
  %13 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } %12, i64 %11, 1
  ret { %"std::sys::unix::os_str::Slice"*, i64 } %13
}

; std::sys::unix::rwlock::RWLock::raw_unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix6rwlock6RWLock10raw_unlock17hda2c1cf00605ac34E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self) unnamed_addr #0 {
start:
  %_4 = bitcast %"std::sys::unix::rwlock::RWLock"* %self to %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>"* %_4 to %"libc::unix::linux_like::linux::pthread_rwlock_t"*
  br label %bb1

bb1:                                              ; preds = %start
  %r = call i32 @pthread_rwlock_unlock(%"libc::unix::linux_like::linux::pthread_rwlock_t"* %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sys::unix::rwlock::RWLock::read_unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix6rwlock6RWLock11read_unlock17hdb79f8daad622389E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  %_3 = getelementptr inbounds %"std::sys::unix::rwlock::RWLock", %"std::sys::unix::rwlock::RWLock"* %self, i32 0, i32 1
  store i8 0, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h4de5bdca29faa70cE(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_3, i64 1, i8 %0)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sys::unix::rwlock::RWLock::raw_unlock
  call void @_ZN3std3sys4unix6rwlock6RWLock10raw_unlock17hda2c1cf00605ac34E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sys::unix::rwlock::RWLock::write_unlock
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix6rwlock6RWLock12write_unlock17h0c546cbc93360edcE(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self) unnamed_addr #0 {
start:
  %_6 = getelementptr inbounds %"std::sys::unix::rwlock::RWLock", %"std::sys::unix::rwlock::RWLock"* %self, i32 0, i32 2
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_6, align 1
; call std::sys::unix::rwlock::RWLock::raw_unlock
  call void @_ZN3std3sys4unix6rwlock6RWLock10raw_unlock17hda2c1cf00605ac34E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sys::unix::rwlock::RWLock::read
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix6rwlock6RWLock4read17h22e9267a9fd4f134E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self) unnamed_addr #0 {
start:
  %_23 = alloca i8, align 1
  %_10 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %_4 = bitcast %"std::sys::unix::rwlock::RWLock"* %self to %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>"* %_4 to %"libc::unix::linux_like::linux::pthread_rwlock_t"*
  br label %bb1

bb1:                                              ; preds = %start
  %r = call i32 @pthread_rwlock_rdlock(%"libc::unix::linux_like::linux::pthread_rwlock_t"* %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = icmp eq i32 %r, 11
  br i1 %_5, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_8 = icmp eq i32 %r, 35
  br i1 %_8, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17h87a6b8f3b352b2c2E([0 x i8]* nonnull align 1 bitcast (<{ [36 x i8] }>* @alloc447 to [0 x i8]*), i64 36, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc449 to %"core::panic::location::Location"*)) #18
  unreachable

bb6:                                              ; preds = %bb4
  %0 = icmp eq i32 %r, 0
  br i1 %0, label %bb9, label %bb8

bb5:                                              ; preds = %bb4
  store i8 1, i8* %_7, align 1
  br label %bb7

bb7:                                              ; preds = %bb10, %bb5
  %1 = load i8, i8* %_7, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb12, label %bb17

bb9:                                              ; preds = %bb6
  %_14 = getelementptr inbounds %"std::sys::unix::rwlock::RWLock", %"std::sys::unix::rwlock::RWLock"* %self, i32 0, i32 2
  br label %bb11

bb8:                                              ; preds = %bb6
  store i8 0, i8* %_10, align 1
  br label %bb10

bb10:                                             ; preds = %bb11, %bb8
  %3 = load i8, i8* %_10, align 1, !range !4
  %4 = trunc i8 %3 to i1
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %_7, align 1
  br label %bb7

bb11:                                             ; preds = %bb9
  %6 = load i8, i8* %_14, align 1, !range !4
  %_12 = trunc i8 %6 to i1
  %7 = zext i1 %_12 to i8
  store i8 %7, i8* %_10, align 1
  br label %bb10

bb17:                                             ; preds = %bb7
  %_22 = getelementptr inbounds %"std::sys::unix::rwlock::RWLock", %"std::sys::unix::rwlock::RWLock"* %self, i32 0, i32 1
  store i8 0, i8* %_23, align 1
  %8 = load i8, i8* %_23, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_add
  %_21 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_add17h3955efa3ec429adbE(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_22, i64 1, i8 %8)
  br label %bb18

bb12:                                             ; preds = %bb7
  %9 = icmp eq i32 %r, 0
  br i1 %9, label %bb13, label %bb15

bb13:                                             ; preds = %bb12
; call std::sys::unix::rwlock::RWLock::raw_unlock
  call void @_ZN3std3sys4unix6rwlock6RWLock10raw_unlock17hda2c1cf00605ac34E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self)
  br label %bb14

bb15:                                             ; preds = %bb12
  br label %bb16

bb16:                                             ; preds = %bb14, %bb15
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17h87a6b8f3b352b2c2E([0 x i8]* nonnull align 1 bitcast (<{ [41 x i8] }>* @alloc450 to [0 x i8]*), i64 41, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc452 to %"core::panic::location::Location"*)) #18
  unreachable

bb14:                                             ; preds = %bb13
  br label %bb16

bb18:                                             ; preds = %bb17
  ret void
}

; std::sys::unix::rwlock::RWLock::write
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix6rwlock6RWLock5write17h0af39311ab0e1da5E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self) unnamed_addr #0 {
start:
  %_17 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_6 = alloca i8, align 1
  %_5 = alloca i8, align 1
  %_4 = bitcast %"std::sys::unix::rwlock::RWLock"* %self to %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_rwlock_t>"* %_4 to %"libc::unix::linux_like::linux::pthread_rwlock_t"*
  br label %bb1

bb1:                                              ; preds = %start
  %r = call i32 @pthread_rwlock_wrlock(%"libc::unix::linux_like::linux::pthread_rwlock_t"* %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = icmp eq i32 %r, 35
  br i1 %_7, label %bb6, label %bb7

bb7:                                              ; preds = %bb2
  %0 = icmp eq i32 %r, 0
  br i1 %0, label %bb10, label %bb9

bb6:                                              ; preds = %bb2
  store i8 1, i8* %_6, align 1
  br label %bb8

bb8:                                              ; preds = %bb11, %bb6
  %1 = load i8, i8* %_6, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb3, label %bb4

bb10:                                             ; preds = %bb7
  %_13 = getelementptr inbounds %"std::sys::unix::rwlock::RWLock", %"std::sys::unix::rwlock::RWLock"* %self, i32 0, i32 2
  br label %bb12

bb9:                                              ; preds = %bb7
  store i8 0, i8* %_9, align 1
  br label %bb11

bb11:                                             ; preds = %bb12, %bb9
  %3 = load i8, i8* %_9, align 1, !range !4
  %4 = trunc i8 %3 to i1
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %_6, align 1
  br label %bb8

bb12:                                             ; preds = %bb10
  %6 = load i8, i8* %_13, align 1, !range !4
  %_11 = trunc i8 %6 to i1
  %7 = zext i1 %_11 to i8
  store i8 %7, i8* %_9, align 1
  br label %bb11

bb4:                                              ; preds = %bb8
  %_16 = getelementptr inbounds %"std::sys::unix::rwlock::RWLock", %"std::sys::unix::rwlock::RWLock"* %self, i32 0, i32 1
  store i8 0, i8* %_17, align 1
  %8 = load i8, i8* %_17, align 1, !range !7
; call core::sync::atomic::AtomicUsize::load
  %_15 = call i64 @_ZN4core4sync6atomic11AtomicUsize4load17h3bd2c95b5cfe9b6eE(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_16, i8 %8)
  br label %bb13

bb3:                                              ; preds = %bb8
  store i8 1, i8* %_5, align 1
  br label %bb5

bb5:                                              ; preds = %bb13, %bb3
  %9 = load i8, i8* %_5, align 1, !range !4
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb14, label %bb19

bb13:                                             ; preds = %bb4
  %_14 = icmp ne i64 %_15, 0
  %11 = zext i1 %_14 to i8
  store i8 %11, i8* %_5, align 1
  br label %bb5

bb19:                                             ; preds = %bb5
  %_25 = getelementptr inbounds %"std::sys::unix::rwlock::RWLock", %"std::sys::unix::rwlock::RWLock"* %self, i32 0, i32 2
  br label %bb20

bb14:                                             ; preds = %bb5
  %12 = icmp eq i32 %r, 0
  br i1 %12, label %bb15, label %bb17

bb15:                                             ; preds = %bb14
; call std::sys::unix::rwlock::RWLock::raw_unlock
  call void @_ZN3std3sys4unix6rwlock6RWLock10raw_unlock17hda2c1cf00605ac34E(%"std::sys::unix::rwlock::RWLock"* align 8 dereferenceable(72) %self)
  br label %bb16

bb17:                                             ; preds = %bb14
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17h87a6b8f3b352b2c2E([0 x i8]* nonnull align 1 bitcast (<{ [42 x i8] }>* @alloc453 to [0 x i8]*), i64 42, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc455 to %"core::panic::location::Location"*)) #18
  unreachable

bb16:                                             ; preds = %bb15
  br label %bb18

bb20:                                             ; preds = %bb19
  store i8 1, i8* %_25, align 1
  ret void
}

; std::sys::unix::condvar::Condvar::wait
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3sys4unix7condvar7Condvar4wait17he7f8b748991a0426E(%"std::sys::unix::condvar::Condvar"* align 8 dereferenceable(48) %self, %"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %mutex) unnamed_addr #0 {
start:
  %_5 = bitcast %"std::sys::unix::condvar::Condvar"* %self to %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_cond_t>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<libc::unix::linux_like::linux::pthread_cond_t>"* %_5 to %"libc::unix::linux_like::linux::pthread_cond_t"*
  br label %bb1

bb1:                                              ; preds = %start
; call std::sys::unix::mutex::raw
  %_6 = call %"libc::unix::linux_like::linux::pthread_mutex_t"* @_ZN3std3sys4unix5mutex3raw17h325051196e052154E(%"std::sys::unix::mutex::Mutex"* align 8 dereferenceable(40) %mutex)
  br label %bb2

bb2:                                              ; preds = %bb1
  %r = call i32 @pthread_cond_wait(%"libc::unix::linux_like::linux::pthread_cond_t"* %_2.i, %"libc::unix::linux_like::linux::pthread_mutex_t"* %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; std::path::Path::new
; Function Attrs: nonlazybind uwtable
define { %"std::path::Path"*, i64 } @_ZN3std4path4Path3new17h737202e083c9bfbcE([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
; call std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
  %0 = call { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h6ed3165b5f2415c4E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  %_4.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %0, 0
  %_4.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2.0 = bitcast %"std::ffi::os_str::OsStr"* %_4.0 to %"std::path::Path"*
  %1 = insertvalue { %"std::path::Path"*, i64 } undef, %"std::path::Path"* %_2.0, 0
  %2 = insertvalue { %"std::path::Path"*, i64 } %1, i64 %_4.1, 1
  ret { %"std::path::Path"*, i64 } %2
}

; std::path::<impl core::convert::AsRef<std::path::Path> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::path::Path"*, i64 } @"_ZN3std4path77_$LT$impl$u20$core..convert..AsRef$LT$std..path..Path$GT$$u20$for$u20$str$GT$6as_ref17h979cf03aca93174cE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call std::path::Path::new
  %0 = call { %"std::path::Path"*, i64 } @_ZN3std4path4Path3new17h737202e083c9bfbcE([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %1 = extractvalue { %"std::path::Path"*, i64 } %0, 0
  %2 = extractvalue { %"std::path::Path"*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { %"std::path::Path"*, i64 } undef, %"std::path::Path"* %1, 0
  %4 = insertvalue { %"std::path::Path"*, i64 } %3, i64 %2, 1
  ret { %"std::path::Path"*, i64 } %4
}

; std::sync::mutex::guard_lock
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(8) i64** @_ZN3std4sync5mutex10guard_lock17hc8e071d2dc1ae69cE({ i64*, i8 }* align 8 dereferenceable(16) %guard) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %guard to %"std::sync::mutex::Mutex<i32>"**
  %1 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %0, align 8, !nonnull !3
  %2 = bitcast %"std::sync::mutex::Mutex<i32>"* %1 to i64**
  ret i64** %2
}

; std::sync::mutex::guard_lock
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(8) i64** @_ZN3std4sync5mutex10guard_lock17hd008107fcac947e4E({ i64*, i8 }* align 8 dereferenceable(16) %guard) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %guard to %"std::sync::mutex::Mutex<()>"**
  %1 = load %"std::sync::mutex::Mutex<()>"*, %"std::sync::mutex::Mutex<()>"** %0, align 8, !nonnull !3
  %2 = bitcast %"std::sync::mutex::Mutex<()>"* %1 to i64**
  ret i64** %2
}

; std::sync::mutex::guard_poison
; Function Attrs: nonlazybind uwtable
define align 1 dereferenceable(1) %"std::sync::poison::Flag"* @_ZN3std4sync5mutex12guard_poison17h2e69530a735f9983E({ i64*, i8 }* align 8 dereferenceable(16) %guard) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %guard to %"std::sync::mutex::Mutex<i32>"**
  %1 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %0, align 8, !nonnull !3
  %2 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %1, i32 0, i32 1
  ret %"std::sync::poison::Flag"* %2
}

; std::sync::mutex::guard_poison
; Function Attrs: nonlazybind uwtable
define align 1 dereferenceable(1) %"std::sync::poison::Flag"* @_ZN3std4sync5mutex12guard_poison17h6502048b6b41fc9fE({ i64*, i8 }* align 8 dereferenceable(16) %guard) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %guard to %"std::sync::mutex::Mutex<()>"**
  %1 = load %"std::sync::mutex::Mutex<()>"*, %"std::sync::mutex::Mutex<()>"** %0, align 8, !nonnull !3
  %2 = getelementptr inbounds %"std::sync::mutex::Mutex<()>", %"std::sync::mutex::Mutex<()>"* %1, i32 0, i32 1
  ret %"std::sync::poison::Flag"* %2
}

; std::sync::mutex::Mutex<T>::new
; Function Attrs: nonlazybind uwtable
define i128 @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h32482af0c51d975fE"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca %"core::cell::UnsafeCell<()>", align 1
  %1 = alloca i8, align 1
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_3 = alloca %"std::sync::poison::Flag", align 1
  %_2 = alloca i64*, align 8
  %3 = alloca %"std::sync::mutex::Mutex<()>", align 8
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke std::sys_common::mutex::MovableMutex::new
  %4 = invoke noalias nonnull align 8 i64* @_ZN3std10sys_common5mutex12MovableMutex3new17h2bb8f0e9b979bf81E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %4, i64** %_2, align 8
; invoke std::sync::poison::Flag::new
  %5 = invoke i8 @_ZN3std4sync6poison4Flag3new17h47827b134c610a5eE()
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %6 = load i8, i8* %_6, align 1, !range !4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  store i8 %5, i8* %1, align 1
  %13 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %1, i64 1, i1 false)
  store i8 0, i8* %_6, align 1
  %14 = bitcast %"core::cell::UnsafeCell<()>"* %0 to {}*
  br label %bb3

bb4:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h46e122904241ac1cE"(i64** %_2) #19
  br label %bb7

cleanup1:                                         ; preds = %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %20 = bitcast %"std::sync::mutex::Mutex<()>"* %3 to i64**
  %21 = load i64*, i64** %_2, align 8, !nonnull !3
  store i64* %21, i64** %20, align 8
  %22 = getelementptr inbounds %"std::sync::mutex::Mutex<()>", %"std::sync::mutex::Mutex<()>"* %3, i32 0, i32 1
  %23 = bitcast %"std::sync::poison::Flag"* %22 to i8*
  %24 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 1 %24, i64 1, i1 false)
  %25 = getelementptr inbounds %"std::sync::mutex::Mutex<()>", %"std::sync::mutex::Mutex<()>"* %3, i32 0, i32 2
  %26 = bitcast %"std::sync::mutex::Mutex<()>"* %3 to i128*
  %27 = load i128, i128* %26, align 8
  ret i128 %27

bb5:                                              ; preds = %bb6, %bb7
  %28 = bitcast { i8*, i32 }* %2 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

bb6:                                              ; preds = %bb7
  br label %bb5
}

; std::sync::mutex::Mutex<T>::new
; Function Attrs: nonlazybind uwtable
define i128 @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h41c993713127bdb7E"(i32 %t) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i32, align 4
  %1 = alloca i8, align 1
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_3 = alloca %"std::sync::poison::Flag", align 1
  %_2 = alloca i64*, align 8
  %3 = alloca %"std::sync::mutex::Mutex<i32>", align 8
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke std::sys_common::mutex::MovableMutex::new
  %4 = invoke noalias nonnull align 8 i64* @_ZN3std10sys_common5mutex12MovableMutex3new17h2bb8f0e9b979bf81E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %4, i64** %_2, align 8
; invoke std::sync::poison::Flag::new
  %5 = invoke i8 @_ZN3std4sync6poison4Flag3new17h47827b134c610a5eE()
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %6 = load i8, i8* %_6, align 1, !range !4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  store i8 %5, i8* %1, align 1
  %13 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %1, i64 1, i1 false)
  store i8 0, i8* %_6, align 1
  store i32 %t, i32* %0, align 4
  %14 = load i32, i32* %0, align 4
  br label %bb3

bb4:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h46e122904241ac1cE"(i64** %_2) #19
  br label %bb7

cleanup1:                                         ; preds = %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %20 = bitcast %"std::sync::mutex::Mutex<i32>"* %3 to i64**
  %21 = load i64*, i64** %_2, align 8, !nonnull !3
  store i64* %21, i64** %20, align 8
  %22 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %3, i32 0, i32 1
  %23 = bitcast %"std::sync::poison::Flag"* %22 to i8*
  %24 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 1 %24, i64 1, i1 false)
  %25 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %3, i32 0, i32 3
  store i32 %14, i32* %25, align 4
  %26 = bitcast %"std::sync::mutex::Mutex<i32>"* %3 to i128*
  %27 = load i128, i128* %26, align 8
  ret i128 %27

bb5:                                              ; preds = %bb6, %bb7
  %28 = bitcast { i8*, i32 }* %2 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

bb6:                                              ; preds = %bb7
  br label %bb5
}

; std::sync::mutex::Mutex<T>::new
; Function Attrs: nonlazybind uwtable
define i128 @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h59d989b87025e1e2E"(i32 %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i32, align 4
  %2 = alloca i8, align 1
  %3 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_3 = alloca %"std::sync::poison::Flag", align 1
  %_2 = alloca i64*, align 8
  %4 = alloca %"std::sync::mutex::Mutex<std::fs::File>", align 8
  %t = alloca i32, align 4
  store i32 %0, i32* %t, align 4
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke std::sys_common::mutex::MovableMutex::new
  %5 = invoke noalias nonnull align 8 i64* @_ZN3std10sys_common5mutex12MovableMutex3new17h2bb8f0e9b979bf81E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %5, i64** %_2, align 8
; invoke std::sync::poison::Flag::new
  %6 = invoke i8 @_ZN3std4sync6poison4Flag3new17h47827b134c610a5eE()
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %7 = load i8, i8* %_6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  store i8 %6, i8* %2, align 1
  %14 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %2, i64 1, i1 false)
  store i8 0, i8* %_6, align 1
  %_5 = load i32, i32* %t, align 4, !range !8
  store i32 %_5, i32* %1, align 4
  %15 = load i32, i32* %1, align 4, !range !8
  br label %bb3

bb4:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h46e122904241ac1cE"(i64** %_2) #19
  br label %bb7

cleanup1:                                         ; preds = %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %21 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %4 to i64**
  %22 = load i64*, i64** %_2, align 8, !nonnull !3
  store i64* %22, i64** %21, align 8
  %23 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %4, i32 0, i32 1
  %24 = bitcast %"std::sync::poison::Flag"* %23 to i8*
  %25 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 1 %25, i64 1, i1 false)
  %26 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %4, i32 0, i32 3
  store i32 %15, i32* %26, align 4
  %27 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %4 to i128*
  %28 = load i128, i128* %27, align 8
  ret i128 %28

bb5:                                              ; preds = %bb6, %bb7
  %29 = bitcast { i8*, i32 }* %3 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17he584526ff1bb905aE"(i32* %t) #19
  br label %bb5
}

; std::sync::mutex::Mutex<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17hc898baebc73826dbE"(%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* noalias nocapture sret(%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>") dereferenceable(48) %0, %"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture dereferenceable(32) %t) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %_2.i = alloca %"alloc::collections::vec_deque::VecDeque<i32>", align 8
  %1 = alloca i8, align 1
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_5 = alloca %"alloc::collections::vec_deque::VecDeque<i32>", align 8
  %_4 = alloca %"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>", align 8
  %_3 = alloca %"std::sync::poison::Flag", align 1
  %_2 = alloca i64*, align 8
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke std::sys_common::mutex::MovableMutex::new
  %3 = invoke noalias nonnull align 8 i64* @_ZN3std10sys_common5mutex12MovableMutex3new17h2bb8f0e9b979bf81E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %3, i64** %_2, align 8
; invoke std::sync::poison::Flag::new
  %4 = invoke i8 @_ZN3std4sync6poison4Flag3new17h47827b134c610a5eE()
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %5 = load i8, i8* %_6, align 1, !range !4
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  store i8 %4, i8* %1, align 1
  %12 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %1, i64 1, i1 false)
  store i8 0, i8* %_6, align 1
  %13 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %_5 to i8*
  %14 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 32, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !9)
  call void @llvm.experimental.noalias.scope.decl(metadata !12)
  %15 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %_2.i to i8*
  %16 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 32, i1 false), !noalias !9
  %17 = bitcast %"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %_4 to %"alloc::collections::vec_deque::VecDeque<i32>"*
  %18 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %17 to i8*
  %19 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 32, i1 false), !noalias !12
  br label %bb3

bb4:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h46e122904241ac1cE"(i64** %_2) #19
  br label %bb7

cleanup1:                                         ; preds = %bb1
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  %22 = extractvalue { i8*, i32 } %20, 1
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %25 = bitcast %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %0 to i64**
  %26 = load i64*, i64** %_2, align 8, !nonnull !3
  store i64* %26, i64** %25, align 8
  %27 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %0, i32 0, i32 1
  %28 = bitcast %"std::sync::poison::Flag"* %27 to i8*
  %29 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 1 %29, i64 1, i1 false)
  %30 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %0, i32 0, i32 3
  %31 = bitcast %"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %30 to i8*
  %32 = bitcast %"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 32, i1 false)
  ret void

bb5:                                              ; preds = %bb6, %bb7
  %33 = bitcast { i8*, i32 }* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::collections::vec_deque::VecDeque<i32>>
  call void @"_ZN4core3ptr71drop_in_place$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$17had6f692e017e6505E"(%"alloc::collections::vec_deque::VecDeque<i32>"* %t) #19
  br label %bb5
}

; std::sync::mutex::Mutex<T>::lock
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h03604a269a5c308fE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_3 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %self to i64**
; call std::sys_common::mutex::MovableMutex::raw_lock
  call void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17haed4bb903318d43eE(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::mutex::MutexGuard<T>::new
  call void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17hc817a89b1402bcebE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::Mutex<T>::lock
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h44d131e16132f29dE"(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<()>"* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_3 = bitcast %"std::sync::mutex::Mutex<()>"* %self to i64**
; call std::sys_common::mutex::MovableMutex::raw_lock
  call void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17haed4bb903318d43eE(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::mutex::MutexGuard<T>::new
  call void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h7e63f469c586f95bE"(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<()>"* align 8 dereferenceable(16) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::Mutex<T>::lock
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17hbc5b1a197ae6de16E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* align 8 dereferenceable(48) %self) unnamed_addr #1 {
start:
  %_3 = bitcast %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %self to i64**
; call std::sys_common::mutex::MovableMutex::raw_lock
  call void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17haed4bb903318d43eE(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::mutex::MutexGuard<T>::new
  call void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17hee777091c103a199E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* align 8 dereferenceable(48) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::Mutex<T>::lock
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17he0d5db2fe08d859aE"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<i32>"* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_3 = bitcast %"std::sync::mutex::Mutex<i32>"* %self to i64**
; call std::sys_common::mutex::MovableMutex::raw_lock
  call void @_ZN3std10sys_common5mutex12MovableMutex8raw_lock17haed4bb903318d43eE(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::mutex::MutexGuard<T>::new
  call void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h6fee6ec9f9b120b3E"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<i32>"* align 8 dereferenceable(16) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h6fee6ec9f9b120b3E"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<i32>"* align 8 dereferenceable(16) %1) unnamed_addr #1 {
start:
  %_4 = alloca i64*, align 8
  %lock = alloca %"std::sync::mutex::Mutex<i32>"*, align 8
  store %"std::sync::mutex::Mutex<i32>"* %1, %"std::sync::mutex::Mutex<i32>"** %lock, align 8
  %2 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %lock, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %2, i32 0, i32 1
; call std::sync::poison::Flag::borrow
  %3 = call { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17h12283709f1dd750cE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3)
  %4 = extractvalue { i8, i8 } %3, 0
  %_2.0 = trunc i8 %4 to i1
  %_2.1 = extractvalue { i8, i8 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast i64** %_4 to %"std::sync::mutex::Mutex<i32>"***
  store %"std::sync::mutex::Mutex<i32>"** %lock, %"std::sync::mutex::Mutex<i32>"*** %5, align 8
  %6 = load i64*, i64** %_4, align 8, !nonnull !3
; call std::sync::poison::map_result
  call void @_ZN3std4sync6poison10map_result17h865b3ca950f5fbeaE(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %0, i1 zeroext %_2.0, i8 %_2.1, i64* align 8 dereferenceable(8) %6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17h7e63f469c586f95bE"(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<()>"* align 8 dereferenceable(16) %1) unnamed_addr #1 {
start:
  %_4 = alloca i64*, align 8
  %lock = alloca %"std::sync::mutex::Mutex<()>"*, align 8
  store %"std::sync::mutex::Mutex<()>"* %1, %"std::sync::mutex::Mutex<()>"** %lock, align 8
  %2 = load %"std::sync::mutex::Mutex<()>"*, %"std::sync::mutex::Mutex<()>"** %lock, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<()>", %"std::sync::mutex::Mutex<()>"* %2, i32 0, i32 1
; call std::sync::poison::Flag::borrow
  %3 = call { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17h12283709f1dd750cE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3)
  %4 = extractvalue { i8, i8 } %3, 0
  %_2.0 = trunc i8 %4 to i1
  %_2.1 = extractvalue { i8, i8 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast i64** %_4 to %"std::sync::mutex::Mutex<()>"***
  store %"std::sync::mutex::Mutex<()>"** %lock, %"std::sync::mutex::Mutex<()>"*** %5, align 8
  %6 = load i64*, i64** %_4, align 8, !nonnull !3
; call std::sync::poison::map_result
  call void @_ZN3std4sync6poison10map_result17h72b4b8124aaa6988E(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %0, i1 zeroext %_2.0, i8 %_2.1, i64* align 8 dereferenceable(8) %6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17hc817a89b1402bcebE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %1) unnamed_addr #1 {
start:
  %_4 = alloca i64*, align 8
  %lock = alloca %"std::sync::mutex::Mutex<std::fs::File>"*, align 8
  store %"std::sync::mutex::Mutex<std::fs::File>"* %1, %"std::sync::mutex::Mutex<std::fs::File>"** %lock, align 8
  %2 = load %"std::sync::mutex::Mutex<std::fs::File>"*, %"std::sync::mutex::Mutex<std::fs::File>"** %lock, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %2, i32 0, i32 1
; call std::sync::poison::Flag::borrow
  %3 = call { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17h12283709f1dd750cE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3)
  %4 = extractvalue { i8, i8 } %3, 0
  %_2.0 = trunc i8 %4 to i1
  %_2.1 = extractvalue { i8, i8 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast i64** %_4 to %"std::sync::mutex::Mutex<std::fs::File>"***
  store %"std::sync::mutex::Mutex<std::fs::File>"** %lock, %"std::sync::mutex::Mutex<std::fs::File>"*** %5, align 8
  %6 = load i64*, i64** %_4, align 8, !nonnull !3
; call std::sync::poison::map_result
  call void @_ZN3std4sync6poison10map_result17h7451af50b52b67aeE(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %0, i1 zeroext %_2.0, i8 %_2.1, i64* align 8 dereferenceable(8) %6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new17hee777091c103a199E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>") dereferenceable(24) %0, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* align 8 dereferenceable(48) %1) unnamed_addr #1 {
start:
  %_4 = alloca i64*, align 8
  %lock = alloca %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*, align 8
  store %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %1, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %lock, align 8
  %2 = load %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %lock, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %2, i32 0, i32 1
; call std::sync::poison::Flag::borrow
  %3 = call { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17h12283709f1dd750cE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3)
  %4 = extractvalue { i8, i8 } %3, 0
  %_2.0 = trunc i8 %4 to i1
  %_2.1 = extractvalue { i8, i8 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast i64** %_4 to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"***
  store %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %lock, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*** %5, align 8
  %6 = load i64*, i64** %_4, align 8, !nonnull !3
; call std::sync::poison::map_result
  call void @_ZN3std4sync6poison10map_result17h69ad40ebceba847dE(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>") dereferenceable(24) %0, i1 zeroext %_2.0, i8 %_2.1, i64* align 8 dereferenceable(8) %6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::mutex::MutexGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h1ece8a7072dd8a9fE"(i64* align 8 dereferenceable(8) %_1, i1 zeroext %guard) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"**
  %2 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"**
  %_3 = load %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %2, align 8, !nonnull !3
  %3 = bitcast { i64*, i8 }* %0 to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"**
  store %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %_3, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %3, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %5 = zext i1 %guard to i8
  store i8 %5, i8* %4, align 8
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i8
  %12 = insertvalue { i64*, i8 } undef, i64* %7, 0
  %13 = insertvalue { i64*, i8 } %12, i8 %11, 1
  ret { i64*, i8 } %13
}

; std::sync::mutex::MutexGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h2c5f902e72a59164E"(i64* align 8 dereferenceable(8) %_1, i1 zeroext %guard) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<()>"**
  %2 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<()>"**
  %_3 = load %"std::sync::mutex::Mutex<()>"*, %"std::sync::mutex::Mutex<()>"** %2, align 8, !nonnull !3
  %3 = bitcast { i64*, i8 }* %0 to %"std::sync::mutex::Mutex<()>"**
  store %"std::sync::mutex::Mutex<()>"* %_3, %"std::sync::mutex::Mutex<()>"** %3, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %5 = zext i1 %guard to i8
  store i8 %5, i8* %4, align 8
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i8
  %12 = insertvalue { i64*, i8 } undef, i64* %7, 0
  %13 = insertvalue { i64*, i8 } %12, i8 %11, 1
  ret { i64*, i8 } %13
}

; std::sync::mutex::MutexGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h8965ed20834b12e9E"(i64* align 8 dereferenceable(8) %_1, i1 zeroext %guard) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<i32>"**
  %2 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<i32>"**
  %_3 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %2, align 8, !nonnull !3
  %3 = bitcast { i64*, i8 }* %0 to %"std::sync::mutex::Mutex<i32>"**
  store %"std::sync::mutex::Mutex<i32>"* %_3, %"std::sync::mutex::Mutex<i32>"** %3, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %5 = zext i1 %guard to i8
  store i8 %5, i8* %4, align 8
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i8
  %12 = insertvalue { i64*, i8 } undef, i64* %7, 0
  %13 = insertvalue { i64*, i8 } %12, i8 %11, 1
  ret { i64*, i8 } %13
}

; std::sync::mutex::MutexGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17hd15676a3c29a3293E"(i64* align 8 dereferenceable(8) %_1, i1 zeroext %guard) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<std::fs::File>"**
  %2 = bitcast i64* %_1 to %"std::sync::mutex::Mutex<std::fs::File>"**
  %_3 = load %"std::sync::mutex::Mutex<std::fs::File>"*, %"std::sync::mutex::Mutex<std::fs::File>"** %2, align 8, !nonnull !3
  %3 = bitcast { i64*, i8 }* %0 to %"std::sync::mutex::Mutex<std::fs::File>"**
  store %"std::sync::mutex::Mutex<std::fs::File>"* %_3, %"std::sync::mutex::Mutex<std::fs::File>"** %3, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %5 = zext i1 %guard to i8
  store i8 %5, i8* %4, align 8
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i8
  %12 = insertvalue { i64*, i8 } undef, i64* %7, 0
  %13 = insertvalue { i64*, i8 } %12, i8 %11, 1
  ret { i64*, i8 } %13
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync6poison10map_result17h327270415520af09E(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>") dereferenceable(24) %0, i1 zeroext %1, i8 %2, i64* align 8 dereferenceable(8) %f) unnamed_addr #1 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %2, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %9, i32 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !4
  %t = trunc i8 %11 to i1
  %12 = zext i1 %t to i8
  store i8 %12, i8* %_7, align 1
  %13 = load i8, i8* %_7, align 1, !range !4
  %14 = trunc i8 %13 to i1
; call std::sync::rwlock::RwLockWriteGuard<T>::new::{{closure}}
  %15 = call { i64*, i8 } @"_ZN3std4sync6rwlock25RwLockWriteGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17hb4d34cb72109277fE"(i64* align 8 dereferenceable(8) %f, i1 zeroext %14)
  %_5.0 = extractvalue { i64*, i8 } %15, 0
  %16 = extractvalue { i64*, i8 } %15, 1
  %_5.1 = trunc i8 %16 to i1
  br label %bb4

bb1:                                              ; preds = %start
  %17 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %17, i32 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %guard = trunc i8 %19 to i1
  %20 = zext i1 %guard to i8
  store i8 %20, i8* %_13, align 1
  %21 = load i8, i8* %_13, align 1, !range !4
  %22 = trunc i8 %21 to i1
; call std::sync::rwlock::RwLockWriteGuard<T>::new::{{closure}}
  %23 = call { i64*, i8 } @"_ZN3std4sync6rwlock25RwLockWriteGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17hb4d34cb72109277fE"(i64* align 8 dereferenceable(8) %f, i1 zeroext %22)
  %_11.0 = extractvalue { i64*, i8 } %23, 0
  %24 = extractvalue { i64*, i8 } %23, 1
  %_11.1 = trunc i8 %24 to i1
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %25 = call { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h6b406028e1f1c563E"(i64* align 8 dereferenceable(16) %_11.0, i1 zeroext %_11.1)
  %_10.0 = extractvalue { i64*, i8 } %25, 0
  %26 = extractvalue { i64*, i8 } %25, 1
  %_10.1 = trunc i8 %26 to i1
  br label %bb6

bb6:                                              ; preds = %bb5
  %27 = bitcast %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* %0 to %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Err", %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Err"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 0
  store i64* %_10.0, i64** %29, align 8
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 1
  %31 = zext i1 %_10.1 to i8
  store i8 %31, i8* %30, align 8
  %32 = bitcast %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* %0 to i64*
  store i64 1, i64* %32, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  %33 = bitcast { i8, i8 }* %result to i8*
  %34 = load i8, i8* %33, align 1, !range !4
  %35 = trunc i8 %34 to i1
  %_15 = zext i1 %35 to i64
  %36 = icmp eq i64 %_15, 0
  br i1 %36, label %bb8, label %bb9

bb4:                                              ; preds = %bb3
  %37 = bitcast %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* %0 to %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Ok"*
  %38 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Ok", %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Ok"* %37, i32 0, i32 1
  %39 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 0
  store i64* %_5.0, i64** %39, align 8
  %40 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 1
  %41 = zext i1 %_5.1 to i8
  store i8 %41, i8* %40, align 8
  %42 = bitcast %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* %0 to i64*
  store i64 0, i64* %42, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  ret void

bb9:                                              ; preds = %bb7
  br label %bb8
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync6poison10map_result17h69ad40ebceba847dE(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>") dereferenceable(24) %0, i1 zeroext %1, i8 %2, i64* align 8 dereferenceable(8) %f) unnamed_addr #1 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %2, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %9, i32 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !4
  %t = trunc i8 %11 to i1
  %12 = zext i1 %t to i8
  store i8 %12, i8* %_7, align 1
  %13 = load i8, i8* %_7, align 1, !range !4
  %14 = trunc i8 %13 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %15 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h1ece8a7072dd8a9fE"(i64* align 8 dereferenceable(8) %f, i1 zeroext %14)
  %_5.0 = extractvalue { i64*, i8 } %15, 0
  %16 = extractvalue { i64*, i8 } %15, 1
  %_5.1 = trunc i8 %16 to i1
  br label %bb4

bb1:                                              ; preds = %start
  %17 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %17, i32 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %guard = trunc i8 %19 to i1
  %20 = zext i1 %guard to i8
  store i8 %20, i8* %_13, align 1
  %21 = load i8, i8* %_13, align 1, !range !4
  %22 = trunc i8 %21 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %23 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h1ece8a7072dd8a9fE"(i64* align 8 dereferenceable(8) %f, i1 zeroext %22)
  %_11.0 = extractvalue { i64*, i8 } %23, 0
  %24 = extractvalue { i64*, i8 } %23, 1
  %_11.1 = trunc i8 %24 to i1
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %25 = call { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17hc09da25156d7a26bE"(i64* align 8 dereferenceable(48) %_11.0, i1 zeroext %_11.1)
  %_10.0 = extractvalue { i64*, i8 } %25, 0
  %26 = extractvalue { i64*, i8 } %25, 1
  %_10.1 = trunc i8 %26 to i1
  br label %bb6

bb6:                                              ; preds = %bb5
  %27 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Err"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 0
  store i64* %_10.0, i64** %29, align 8
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 1
  %31 = zext i1 %_10.1 to i8
  store i8 %31, i8* %30, align 8
  %32 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* %0 to i64*
  store i64 1, i64* %32, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  %33 = bitcast { i8, i8 }* %result to i8*
  %34 = load i8, i8* %33, align 1, !range !4
  %35 = trunc i8 %34 to i1
  %_15 = zext i1 %35 to i64
  %36 = icmp eq i64 %_15, 0
  br i1 %36, label %bb8, label %bb9

bb4:                                              ; preds = %bb3
  %37 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Ok"*
  %38 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Ok"* %37, i32 0, i32 1
  %39 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 0
  store i64* %_5.0, i64** %39, align 8
  %40 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 1
  %41 = zext i1 %_5.1 to i8
  store i8 %41, i8* %40, align 8
  %42 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* %0 to i64*
  store i64 0, i64* %42, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  ret void

bb9:                                              ; preds = %bb7
  br label %bb8
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync6poison10map_result17h72b4b8124aaa6988E(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %0, i1 zeroext %1, i8 %2, i64* align 8 dereferenceable(8) %f) unnamed_addr #1 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %2, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %9, i32 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !4
  %t = trunc i8 %11 to i1
  %12 = zext i1 %t to i8
  store i8 %12, i8* %_7, align 1
  %13 = load i8, i8* %_7, align 1, !range !4
  %14 = trunc i8 %13 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %15 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h2c5f902e72a59164E"(i64* align 8 dereferenceable(8) %f, i1 zeroext %14)
  %_5.0 = extractvalue { i64*, i8 } %15, 0
  %16 = extractvalue { i64*, i8 } %15, 1
  %_5.1 = trunc i8 %16 to i1
  br label %bb4

bb1:                                              ; preds = %start
  %17 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %17, i32 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %guard = trunc i8 %19 to i1
  %20 = zext i1 %guard to i8
  store i8 %20, i8* %_13, align 1
  %21 = load i8, i8* %_13, align 1, !range !4
  %22 = trunc i8 %21 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %23 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h2c5f902e72a59164E"(i64* align 8 dereferenceable(8) %f, i1 zeroext %22)
  %_11.0 = extractvalue { i64*, i8 } %23, 0
  %24 = extractvalue { i64*, i8 } %23, 1
  %_11.1 = trunc i8 %24 to i1
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %25 = call { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h5c3299c8b6adec89E"(i64* align 8 dereferenceable(16) %_11.0, i1 zeroext %_11.1)
  %_10.0 = extractvalue { i64*, i8 } %25, 0
  %26 = extractvalue { i64*, i8 } %25, 1
  %_10.1 = trunc i8 %26 to i1
  br label %bb6

bb6:                                              ; preds = %bb5
  %27 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 0
  store i64* %_10.0, i64** %29, align 8
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 1
  %31 = zext i1 %_10.1 to i8
  store i8 %31, i8* %30, align 8
  %32 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to i64*
  store i64 1, i64* %32, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  %33 = bitcast { i8, i8 }* %result to i8*
  %34 = load i8, i8* %33, align 1, !range !4
  %35 = trunc i8 %34 to i1
  %_15 = zext i1 %35 to i64
  %36 = icmp eq i64 %_15, 0
  br i1 %36, label %bb8, label %bb9

bb4:                                              ; preds = %bb3
  %37 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok"*
  %38 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok"* %37, i32 0, i32 1
  %39 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 0
  store i64* %_5.0, i64** %39, align 8
  %40 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 1
  %41 = zext i1 %_5.1 to i8
  store i8 %41, i8* %40, align 8
  %42 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to i64*
  store i64 0, i64* %42, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  ret void

bb9:                                              ; preds = %bb7
  br label %bb8
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync6poison10map_result17h7451af50b52b67aeE(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %0, i1 zeroext %1, i8 %2, i64* align 8 dereferenceable(8) %f) unnamed_addr #1 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %2, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %9, i32 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !4
  %t = trunc i8 %11 to i1
  %12 = zext i1 %t to i8
  store i8 %12, i8* %_7, align 1
  %13 = load i8, i8* %_7, align 1, !range !4
  %14 = trunc i8 %13 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %15 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17hd15676a3c29a3293E"(i64* align 8 dereferenceable(8) %f, i1 zeroext %14)
  %_5.0 = extractvalue { i64*, i8 } %15, 0
  %16 = extractvalue { i64*, i8 } %15, 1
  %_5.1 = trunc i8 %16 to i1
  br label %bb4

bb1:                                              ; preds = %start
  %17 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %17, i32 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %guard = trunc i8 %19 to i1
  %20 = zext i1 %guard to i8
  store i8 %20, i8* %_13, align 1
  %21 = load i8, i8* %_13, align 1, !range !4
  %22 = trunc i8 %21 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %23 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17hd15676a3c29a3293E"(i64* align 8 dereferenceable(8) %f, i1 zeroext %22)
  %_11.0 = extractvalue { i64*, i8 } %23, 0
  %24 = extractvalue { i64*, i8 } %23, 1
  %_11.1 = trunc i8 %24 to i1
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %25 = call { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h09e37f27cc9d3501E"(i64* align 8 dereferenceable(16) %_11.0, i1 zeroext %_11.1)
  %_10.0 = extractvalue { i64*, i8 } %25, 0
  %26 = extractvalue { i64*, i8 } %25, 1
  %_10.1 = trunc i8 %26 to i1
  br label %bb6

bb6:                                              ; preds = %bb5
  %27 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 0
  store i64* %_10.0, i64** %29, align 8
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 1
  %31 = zext i1 %_10.1 to i8
  store i8 %31, i8* %30, align 8
  %32 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %0 to i64*
  store i64 1, i64* %32, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  %33 = bitcast { i8, i8 }* %result to i8*
  %34 = load i8, i8* %33, align 1, !range !4
  %35 = trunc i8 %34 to i1
  %_15 = zext i1 %35 to i64
  %36 = icmp eq i64 %_15, 0
  br i1 %36, label %bb8, label %bb9

bb4:                                              ; preds = %bb3
  %37 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok"*
  %38 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok"* %37, i32 0, i32 1
  %39 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 0
  store i64* %_5.0, i64** %39, align 8
  %40 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 1
  %41 = zext i1 %_5.1 to i8
  store i8 %41, i8* %40, align 8
  %42 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %0 to i64*
  store i64 0, i64* %42, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  ret void

bb9:                                              ; preds = %bb7
  br label %bb8
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync6poison10map_result17h865b3ca950f5fbeaE(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %0, i1 zeroext %1, i8 %2, i64* align 8 dereferenceable(8) %f) unnamed_addr #1 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %2, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %9, i32 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !4
  %t = trunc i8 %11 to i1
  %12 = zext i1 %t to i8
  store i8 %12, i8* %_7, align 1
  %13 = load i8, i8* %_7, align 1, !range !4
  %14 = trunc i8 %13 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %15 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h8965ed20834b12e9E"(i64* align 8 dereferenceable(8) %f, i1 zeroext %14)
  %_5.0 = extractvalue { i64*, i8 } %15, 0
  %16 = extractvalue { i64*, i8 } %15, 1
  %_5.1 = trunc i8 %16 to i1
  br label %bb4

bb1:                                              ; preds = %start
  %17 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %17, i32 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %guard = trunc i8 %19 to i1
  %20 = zext i1 %guard to i8
  store i8 %20, i8* %_13, align 1
  %21 = load i8, i8* %_13, align 1, !range !4
  %22 = trunc i8 %21 to i1
; call std::sync::mutex::MutexGuard<T>::new::{{closure}}
  %23 = call { i64*, i8 } @"_ZN3std4sync5mutex19MutexGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h8965ed20834b12e9E"(i64* align 8 dereferenceable(8) %f, i1 zeroext %22)
  %_11.0 = extractvalue { i64*, i8 } %23, 0
  %24 = extractvalue { i64*, i8 } %23, 1
  %_11.1 = trunc i8 %24 to i1
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %25 = call { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h91b0a4d3697678c6E"(i64* align 8 dereferenceable(16) %_11.0, i1 zeroext %_11.1)
  %_10.0 = extractvalue { i64*, i8 } %25, 0
  %26 = extractvalue { i64*, i8 } %25, 1
  %_10.1 = trunc i8 %26 to i1
  br label %bb6

bb6:                                              ; preds = %bb5
  %27 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 0
  store i64* %_10.0, i64** %29, align 8
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %28, i32 0, i32 1
  %31 = zext i1 %_10.1 to i8
  store i8 %31, i8* %30, align 8
  %32 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to i64*
  store i64 1, i64* %32, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  %33 = bitcast { i8, i8 }* %result to i8*
  %34 = load i8, i8* %33, align 1, !range !4
  %35 = trunc i8 %34 to i1
  %_15 = zext i1 %35 to i64
  %36 = icmp eq i64 %_15, 0
  br i1 %36, label %bb8, label %bb9

bb4:                                              ; preds = %bb3
  %37 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"*
  %38 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"* %37, i32 0, i32 1
  %39 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 0
  store i64* %_5.0, i64** %39, align 8
  %40 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %38, i32 0, i32 1
  %41 = zext i1 %_5.1 to i8
  store i8 %41, i8* %40, align 8
  %42 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to i64*
  store i64 0, i64* %42, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  ret void

bb9:                                              ; preds = %bb7
  br label %bb8
}

; std::sync::poison::map_result
; Function Attrs: nonlazybind uwtable
define { i64, i8* } @_ZN3std4sync6poison10map_result17h939ffce124f4274bE(i1 zeroext %0, i8 %1, i64* align 8 dereferenceable(8) %f) unnamed_addr #1 {
start:
  %_13 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %2 = alloca { i64, i8* }, align 8
  %result = alloca { i8, i8 }, align 1
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 0
  %4 = zext i1 %0 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %result, i32 0, i32 1
  store i8 %1, i8* %5, align 1
  %6 = bitcast { i8, i8 }* %result to i8*
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = trunc i8 %7 to i1
  %_3 = zext i1 %8 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %9, i32 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !4
  %t = trunc i8 %11 to i1
  %12 = zext i1 %t to i8
  store i8 %12, i8* %_7, align 1
  %13 = load i8, i8* %_7, align 1, !range !4
  %14 = trunc i8 %13 to i1
; call std::sync::rwlock::RwLockReadGuard<T>::new::{{closure}}
  %_5 = call align 8 dereferenceable(16) i64* @"_ZN3std4sync6rwlock24RwLockReadGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h99a4065038f9ff53E"(i64* align 8 dereferenceable(8) %f, i1 zeroext %14)
  br label %bb4

bb1:                                              ; preds = %start
  %15 = bitcast { i8, i8 }* %result to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %16 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %15, i32 0, i32 1
  %17 = load i8, i8* %16, align 1, !range !4
  %guard = trunc i8 %17 to i1
  %18 = zext i1 %guard to i8
  store i8 %18, i8* %_13, align 1
  %19 = load i8, i8* %_13, align 1, !range !4
  %20 = trunc i8 %19 to i1
; call std::sync::rwlock::RwLockReadGuard<T>::new::{{closure}}
  %_11 = call align 8 dereferenceable(16) i64* @"_ZN3std4sync6rwlock24RwLockReadGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h99a4065038f9ff53E"(i64* align 8 dereferenceable(8) %f, i1 zeroext %20)
  br label %bb5

bb5:                                              ; preds = %bb1
; call std::sync::poison::PoisonError<T>::new
  %_10 = call align 8 dereferenceable(16) i64* @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h278a751c53630a64E"(i64* align 8 dereferenceable(16) %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %21 = bitcast { i64, i8* }* %2 to %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Err"*
  %22 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Err", %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Err"* %21, i32 0, i32 1
  store i64* %_10, i64** %22, align 8
  %23 = bitcast { i64, i8* }* %2 to i64*
  store i64 1, i64* %23, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb6
  %24 = bitcast { i8, i8 }* %result to i8*
  %25 = load i8, i8* %24, align 1, !range !4
  %26 = trunc i8 %25 to i1
  %_15 = zext i1 %26 to i64
  %27 = icmp eq i64 %_15, 0
  br i1 %27, label %bb8, label %bb9

bb4:                                              ; preds = %bb3
  %28 = bitcast { i64, i8* }* %2 to %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Ok"*
  %29 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Ok", %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Ok"* %28, i32 0, i32 1
  store i64* %_5, i64** %29, align 8
  %30 = bitcast { i64, i8* }* %2 to i64*
  store i64 0, i64* %30, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  %31 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %2, i32 0, i32 0
  %32 = load i64, i64* %31, align 8, !range !2
  %33 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %2, i32 0, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = insertvalue { i64, i8* } undef, i64 %32, 0
  %36 = insertvalue { i64, i8* } %35, i8* %34, 1
  ret { i64, i8* } %36

bb9:                                              ; preds = %bb7
  br label %bb8
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h09e37f27cc9d3501E"(i64* align 8 dereferenceable(16) %guard.0, i1 zeroext %guard.1) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  store i64* %guard.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard.1 to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i64*, i8 } undef, i64* %5, 0
  %11 = insertvalue { i64*, i8 } %10, i8 %9, 1
  ret { i64*, i8 } %11
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h158ec0550faecf35E"(i1 zeroext %guard) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %1 = zext i1 %guard to i8
  store i8 %1, i8* %0, align 1
  %2 = load i8, i8* %0, align 1, !range !4
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(16) i64* @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h278a751c53630a64E"(i64* align 8 dereferenceable(16) %guard) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  store i64* %guard, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %1
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h5c3299c8b6adec89E"(i64* align 8 dereferenceable(16) %guard.0, i1 zeroext %guard.1) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  store i64* %guard.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard.1 to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i64*, i8 } undef, i64* %5, 0
  %11 = insertvalue { i64*, i8 } %10, i8 %9, 1
  ret { i64*, i8 } %11
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h6b406028e1f1c563E"(i64* align 8 dereferenceable(16) %guard.0, i1 zeroext %guard.1) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  store i64* %guard.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard.1 to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i64*, i8 } undef, i64* %5, 0
  %11 = insertvalue { i64*, i8 } %10, i8 %9, 1
  ret { i64*, i8 } %11
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h91b0a4d3697678c6E"(i64* align 8 dereferenceable(16) %guard.0, i1 zeroext %guard.1) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  store i64* %guard.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard.1 to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i64*, i8 } undef, i64* %5, 0
  %11 = insertvalue { i64*, i8 } %10, i8 %9, 1
  ret { i64*, i8 } %11
}

; std::sync::poison::PoisonError<T>::new
; Function Attrs: nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17hc09da25156d7a26bE"(i64* align 8 dereferenceable(48) %guard.0, i1 zeroext %guard.1) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  store i64* %guard.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %3 = zext i1 %guard.1 to i8
  store i8 %3, i8* %2, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = trunc i8 %7 to i1
  %9 = zext i1 %8 to i8
  %10 = insertvalue { i64*, i8 } undef, i64* %5, 0
  %11 = insertvalue { i64*, i8 } %10, i8 %9, 1
  ret { i64*, i8 } %11
}

; std::sync::poison::Flag::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std4sync6poison4Flag3get17h1712943dfed5b5f3E(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %self) unnamed_addr #0 {
start:
  %_3 = alloca i8, align 1
  %_2 = bitcast %"std::sync::poison::Flag"* %self to %"core::sync::atomic::AtomicBool"*
  store i8 0, i8* %_3, align 1
  %0 = load i8, i8* %_3, align 1, !range !7
; call core::sync::atomic::AtomicBool::load
  %1 = call zeroext i1 @_ZN4core4sync6atomic10AtomicBool4load17hef72b0c66f84a9b2E(%"core::sync::atomic::AtomicBool"* align 1 dereferenceable(1) %_2, i8 %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; std::sync::poison::Flag::done
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std4sync6poison4Flag4done17h390590567c805f85E(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %self, i8* align 1 dereferenceable(1) %guard) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %0 = load i8, i8* %guard, align 1, !range !4
  %_5 = trunc i8 %0 to i1
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_3, align 1
  br label %bb3

bb2:                                              ; preds = %start
; call std::thread::panicking
  %_6 = call zeroext i1 @_ZN3std6thread9panicking17h9dc174d6c8d4c8b1E()
  br label %bb4

bb4:                                              ; preds = %bb2
  %1 = zext i1 %_6 to i8
  store i8 %1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb4
  %2 = load i8, i8* %_3, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb3
  %_8 = bitcast %"std::sync::poison::Flag"* %self to %"core::sync::atomic::AtomicBool"*
  store i8 0, i8* %_9, align 1
  %4 = load i8, i8* %_9, align 1, !range !7
; call core::sync::atomic::AtomicBool::store
  call void @_ZN4core4sync6atomic10AtomicBool5store17h4fb1378df6e2f80eE(%"core::sync::atomic::AtomicBool"* align 1 dereferenceable(1) %_8, i1 zeroext true, i8 %4)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; std::sync::poison::Flag::borrow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17h12283709f1dd750cE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %self) unnamed_addr #0 {
start:
  %ret = alloca i8, align 1
  %0 = alloca { i8, i8 }, align 1
; call std::thread::panicking
  %_3 = call zeroext i1 @_ZN3std6thread9panicking17h9dc174d6c8d4c8b1E()
  br label %bb1

bb1:                                              ; preds = %start
  %1 = zext i1 %_3 to i8
  store i8 %1, i8* %ret, align 1
; call std::sync::poison::Flag::get
  %_4 = call zeroext i1 @_ZN3std4sync6poison4Flag3get17h1712943dfed5b5f3E(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_4, label %bb3, label %bb5

bb5:                                              ; preds = %bb2
  %2 = load i8, i8* %ret, align 1, !range !4
  %_8 = trunc i8 %2 to i1
  %3 = bitcast { i8, i8 }* %0 to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Ok"* %3, i32 0, i32 1
  %5 = zext i1 %_8 to i8
  store i8 %5, i8* %4, align 1
  %6 = bitcast { i8, i8 }* %0 to i8*
  store i8 0, i8* %6, align 1
  br label %bb6

bb3:                                              ; preds = %bb2
  %7 = load i8, i8* %ret, align 1, !range !4
  %_7 = trunc i8 %7 to i1
; call std::sync::poison::PoisonError<T>::new
  %_6 = call zeroext i1 @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h158ec0550faecf35E"(i1 zeroext %_7)
  br label %bb4

bb4:                                              ; preds = %bb3
  %8 = bitcast { i8, i8 }* %0 to %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err", %"core::result::Result<std::sync::poison::Guard, std::sync::poison::PoisonError<std::sync::poison::Guard>>::Err"* %8, i32 0, i32 1
  %10 = zext i1 %_6 to i8
  store i8 %10, i8* %9, align 1
  %11 = bitcast { i8, i8 }* %0 to i8*
  store i8 1, i8* %11, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %12 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 0
  %13 = load i8, i8* %12, align 1, !range !4
  %14 = trunc i8 %13 to i1
  %15 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %0, i32 0, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i1 %14 to i8
  %18 = insertvalue { i8, i8 } undef, i8 %17, 0
  %19 = insertvalue { i8, i8 } %18, i8 %16, 1
  ret { i8, i8 } %19
}

; std::sync::rwlock::RwLock<T>::new
; Function Attrs: nonlazybind uwtable
define i128 @"_ZN3std4sync6rwlock15RwLock$LT$T$GT$3new17h0b92b36e9fe511abE"(i32 %t) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i32, align 4
  %1 = alloca i8, align 1
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_3 = alloca %"std::sync::poison::Flag", align 1
  %_2 = alloca i64*, align 8
  %3 = alloca %"std::sync::rwlock::RwLock<i32>", align 8
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_6, align 1
; invoke std::sys_common::rwlock::MovableRWLock::new
  %4 = invoke noalias nonnull align 8 i64* @_ZN3std10sys_common6rwlock13MovableRWLock3new17h8cb6241447c11387E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %4, i64** %_2, align 8
; invoke std::sync::poison::Flag::new
  %5 = invoke i8 @_ZN3std4sync6poison4Flag3new17h47827b134c610a5eE()
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %6 = load i8, i8* %_6, align 1, !range !4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  store i8 %5, i8* %1, align 1
  %13 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %1, i64 1, i1 false)
  store i8 0, i8* %_6, align 1
  store i32 %t, i32* %0, align 4
  %14 = load i32, i32* %0, align 4
  br label %bb3

bb4:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<std::sys_common::rwlock::MovableRWLock>
  call void @"_ZN4core3ptr59drop_in_place$LT$std..sys_common..rwlock..MovableRWLock$GT$17he9205f735635f60bE"(i64** %_2) #19
  br label %bb7

cleanup1:                                         ; preds = %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %20 = bitcast %"std::sync::rwlock::RwLock<i32>"* %3 to i64**
  %21 = load i64*, i64** %_2, align 8, !nonnull !3
  store i64* %21, i64** %20, align 8
  %22 = getelementptr inbounds %"std::sync::rwlock::RwLock<i32>", %"std::sync::rwlock::RwLock<i32>"* %3, i32 0, i32 1
  %23 = bitcast %"std::sync::poison::Flag"* %22 to i8*
  %24 = bitcast %"std::sync::poison::Flag"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 1 %24, i64 1, i1 false)
  %25 = getelementptr inbounds %"std::sync::rwlock::RwLock<i32>", %"std::sync::rwlock::RwLock<i32>"* %3, i32 0, i32 3
  store i32 %14, i32* %25, align 4
  %26 = bitcast %"std::sync::rwlock::RwLock<i32>"* %3 to i128*
  %27 = load i128, i128* %26, align 8
  ret i128 %27

bb5:                                              ; preds = %bb6, %bb7
  %28 = bitcast { i8*, i32 }* %2 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33

bb6:                                              ; preds = %bb7
  br label %bb5
}

; std::sync::rwlock::RwLock<T>::read
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i8* } @"_ZN3std4sync6rwlock15RwLock$LT$T$GT$4read17haac171831d9796b7E"(%"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"std::sync::rwlock::RwLock<i32>"* %self to i64**
; call std::sys_common::rwlock::MovableRWLock::read
  call void @_ZN3std10sys_common6rwlock13MovableRWLock4read17h6928ca4ab194e2caE(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::rwlock::RwLockReadGuard<T>::new
  %0 = call { i64, i8* } @"_ZN3std4sync6rwlock24RwLockReadGuard$LT$T$GT$3new17hbc6841da7f630296E"(%"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i8* } %0, 0
  %2 = extractvalue { i64, i8* } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { i64, i8* } undef, i64 %1, 0
  %4 = insertvalue { i64, i8* } %3, i8* %2, 1
  ret { i64, i8* } %4
}

; std::sync::rwlock::RwLock<T>::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std4sync6rwlock15RwLock$LT$T$GT$5write17h904bc5bc3784f5faE"(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>") dereferenceable(24) %0, %"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"std::sync::rwlock::RwLock<i32>"* %self to i64**
; call std::sys_common::rwlock::MovableRWLock::write
  call void @_ZN3std10sys_common6rwlock13MovableRWLock5write17h33ae9d0e4116b354E(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call std::sync::rwlock::RwLockWriteGuard<T>::new
  call void @"_ZN3std4sync6rwlock25RwLockWriteGuard$LT$T$GT$3new17h31e8b22f6aad2492E"(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>") dereferenceable(24) %0, %"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::rwlock::RwLockReadGuard<T>::new
; Function Attrs: nonlazybind uwtable
define { i64, i8* } @"_ZN3std4sync6rwlock24RwLockReadGuard$LT$T$GT$3new17hbc6841da7f630296E"(%"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %0) unnamed_addr #1 {
start:
  %_4 = alloca i64*, align 8
  %lock = alloca %"std::sync::rwlock::RwLock<i32>"*, align 8
  store %"std::sync::rwlock::RwLock<i32>"* %0, %"std::sync::rwlock::RwLock<i32>"** %lock, align 8
  %1 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %lock, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::rwlock::RwLock<i32>", %"std::sync::rwlock::RwLock<i32>"* %1, i32 0, i32 1
; call std::sync::poison::Flag::borrow
  %2 = call { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17h12283709f1dd750cE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3)
  %3 = extractvalue { i8, i8 } %2, 0
  %_2.0 = trunc i8 %3 to i1
  %_2.1 = extractvalue { i8, i8 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64** %_4 to %"std::sync::rwlock::RwLock<i32>"***
  store %"std::sync::rwlock::RwLock<i32>"** %lock, %"std::sync::rwlock::RwLock<i32>"*** %4, align 8
  %5 = load i64*, i64** %_4, align 8, !nonnull !3
; call std::sync::poison::map_result
  %6 = call { i64, i8* } @_ZN3std4sync6poison10map_result17h939ffce124f4274bE(i1 zeroext %_2.0, i8 %_2.1, i64* align 8 dereferenceable(8) %5)
  %7 = extractvalue { i64, i8* } %6, 0
  %8 = extractvalue { i64, i8* } %6, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = insertvalue { i64, i8* } undef, i64 %7, 0
  %10 = insertvalue { i64, i8* } %9, i8* %8, 1
  ret { i64, i8* } %10
}

; std::sync::rwlock::RwLockReadGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(16) i64* @"_ZN3std4sync6rwlock24RwLockReadGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17h99a4065038f9ff53E"(i64* align 8 dereferenceable(8) %_1, i1 zeroext %_2) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64* %_1 to %"std::sync::rwlock::RwLock<i32>"**
  %2 = bitcast i64* %_1 to %"std::sync::rwlock::RwLock<i32>"**
  %_3 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %2, align 8, !nonnull !3
  %3 = bitcast i64** %0 to %"std::sync::rwlock::RwLock<i32>"**
  store %"std::sync::rwlock::RwLock<i32>"* %_3, %"std::sync::rwlock::RwLock<i32>"** %3, align 8
  %4 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %4
}

; std::sync::rwlock::RwLockWriteGuard<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std4sync6rwlock25RwLockWriteGuard$LT$T$GT$3new17h31e8b22f6aad2492E"(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>") dereferenceable(24) %0, %"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %1) unnamed_addr #1 {
start:
  %_4 = alloca i64*, align 8
  %lock = alloca %"std::sync::rwlock::RwLock<i32>"*, align 8
  store %"std::sync::rwlock::RwLock<i32>"* %1, %"std::sync::rwlock::RwLock<i32>"** %lock, align 8
  %2 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %lock, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::rwlock::RwLock<i32>", %"std::sync::rwlock::RwLock<i32>"* %2, i32 0, i32 1
; call std::sync::poison::Flag::borrow
  %3 = call { i8, i8 } @_ZN3std4sync6poison4Flag6borrow17h12283709f1dd750cE(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3)
  %4 = extractvalue { i8, i8 } %3, 0
  %_2.0 = trunc i8 %4 to i1
  %_2.1 = extractvalue { i8, i8 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast i64** %_4 to %"std::sync::rwlock::RwLock<i32>"***
  store %"std::sync::rwlock::RwLock<i32>"** %lock, %"std::sync::rwlock::RwLock<i32>"*** %5, align 8
  %6 = load i64*, i64** %_4, align 8, !nonnull !3
; call std::sync::poison::map_result
  call void @_ZN3std4sync6poison10map_result17h327270415520af09E(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>") dereferenceable(24) %0, i1 zeroext %_2.0, i8 %_2.1, i64* align 8 dereferenceable(8) %6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::sync::rwlock::RwLockWriteGuard<T>::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN3std4sync6rwlock25RwLockWriteGuard$LT$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$17hb4d34cb72109277fE"(i64* align 8 dereferenceable(8) %_1, i1 zeroext %guard) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = bitcast i64* %_1 to %"std::sync::rwlock::RwLock<i32>"**
  %2 = bitcast i64* %_1 to %"std::sync::rwlock::RwLock<i32>"**
  %_3 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %2, align 8, !nonnull !3
  %3 = bitcast { i64*, i8 }* %0 to %"std::sync::rwlock::RwLock<i32>"**
  store %"std::sync::rwlock::RwLock<i32>"* %_3, %"std::sync::rwlock::RwLock<i32>"** %3, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %5 = zext i1 %guard to i8
  store i8 %5, i8* %4, align 8
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %11 = zext i1 %10 to i8
  %12 = insertvalue { i64*, i8 } undef, i64* %7, 0
  %13 = insertvalue { i64*, i8 } %12, i8 %11, 1
  ret { i64*, i8 } %13
}

; std::sync::condvar::Condvar::wait
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync7condvar7Condvar4wait17h72966bba405ba3dfE(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %0, %"std::sync::condvar::Condvar"* align 8 dereferenceable(16) %self, i64* align 8 dereferenceable(16) %1, i1 zeroext %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %guard = alloca { i64*, i8 }, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  store i64* %1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %6 = zext i1 %2 to i8
  store i8 %6, i8* %5, align 8
  store i8 0, i8* %_18, align 1
  store i8 1, i8* %_18, align 1
; invoke std::sync::mutex::guard_lock
  %lock = invoke align 8 dereferenceable(8) i64** @_ZN3std4sync5mutex10guard_lock17hd008107fcac947e4E({ i64*, i8 }* align 8 dereferenceable(16) %guard)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_8 = bitcast %"std::sync::condvar::Condvar"* %self to %"std::sys_common::condvar::Condvar"*
; invoke std::sys_common::condvar::Condvar::wait
  invoke void @_ZN3std10sys_common7condvar7Condvar4wait17h987ab69f5866cb43E(%"std::sys_common::condvar::Condvar"* align 8 dereferenceable(16) %_8, i64** align 8 dereferenceable(8) %lock)
          to label %bb2 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %7 = load i8, i8* %_18, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb10, label %bb9

cleanup:                                          ; preds = %bb5, %bb3, %bb2, %bb1, %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb11

bb2:                                              ; preds = %bb1
; invoke std::sync::mutex::guard_poison
  %_11 = invoke align 1 dereferenceable(1) %"std::sync::poison::Flag"* @_ZN3std4sync5mutex12guard_poison17h6502048b6b41fc9fE({ i64*, i8 }* align 8 dereferenceable(16) %guard)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke std::sync::poison::Flag::get
  %poisoned = invoke zeroext i1 @_ZN3std4sync6poison4Flag3get17h1712943dfed5b5f3E(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_11)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  br i1 %poisoned, label %bb5, label %bb7

bb7:                                              ; preds = %bb4
  store i8 0, i8* %_18, align 1
  %14 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  %_17.0 = load i64*, i64** %14, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %_17.1 = trunc i8 %16 to i1
  %17 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %18, i32 0, i32 0
  store i64* %_17.0, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %18, i32 0, i32 1
  %21 = zext i1 %_17.1 to i8
  store i8 %21, i8* %20, align 8
  %22 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to i64*
  store i64 0, i64* %22, align 8
  br label %bb8

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_18, align 1
  %23 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  %_16.0 = load i64*, i64** %23, align 8, !nonnull !3
  %24 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !4
  %_16.1 = trunc i8 %25 to i1
; invoke std::sync::poison::PoisonError<T>::new
  %26 = invoke { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h5c3299c8b6adec89E"(i64* align 8 dereferenceable(16) %_16.0, i1 zeroext %_16.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_15.0 = extractvalue { i64*, i8 } %26, 0
  %27 = extractvalue { i64*, i8 } %26, 1
  %_15.1 = trunc i8 %27 to i1
  %28 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err"*
  %29 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err"* %28, i32 0, i32 1
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %29, i32 0, i32 0
  store i64* %_15.0, i64** %30, align 8
  %31 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %29, i32 0, i32 1
  %32 = zext i1 %_15.1 to i8
  store i8 %32, i8* %31, align 8
  %33 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %0 to i64*
  store i64 1, i64* %33, align 8
  br label %bb8

bb9:                                              ; preds = %bb10, %bb11
  %34 = bitcast { i8*, i32 }* %3 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

bb10:                                             ; preds = %bb11
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<()>>
  call void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$17h92307b27fd4ec372E"({ i64*, i8 }* %guard) #19
  br label %bb9

bb8:                                              ; preds = %bb7, %bb6
  ret void
}

; std::sync::condvar::Condvar::wait
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4sync7condvar7Condvar4wait17he4a5205ef24a0775E(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %0, %"std::sync::condvar::Condvar"* align 8 dereferenceable(16) %self, i64* align 8 dereferenceable(16) %1, i1 zeroext %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %guard = alloca { i64*, i8 }, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  store i64* %1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %6 = zext i1 %2 to i8
  store i8 %6, i8* %5, align 8
  store i8 0, i8* %_18, align 1
  store i8 1, i8* %_18, align 1
; invoke std::sync::mutex::guard_lock
  %lock = invoke align 8 dereferenceable(8) i64** @_ZN3std4sync5mutex10guard_lock17hc8e071d2dc1ae69cE({ i64*, i8 }* align 8 dereferenceable(16) %guard)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_8 = bitcast %"std::sync::condvar::Condvar"* %self to %"std::sys_common::condvar::Condvar"*
; invoke std::sys_common::condvar::Condvar::wait
  invoke void @_ZN3std10sys_common7condvar7Condvar4wait17h987ab69f5866cb43E(%"std::sys_common::condvar::Condvar"* align 8 dereferenceable(16) %_8, i64** align 8 dereferenceable(8) %lock)
          to label %bb2 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %7 = load i8, i8* %_18, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb10, label %bb9

cleanup:                                          ; preds = %bb5, %bb3, %bb2, %bb1, %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb11

bb2:                                              ; preds = %bb1
; invoke std::sync::mutex::guard_poison
  %_11 = invoke align 1 dereferenceable(1) %"std::sync::poison::Flag"* @_ZN3std4sync5mutex12guard_poison17h2e69530a735f9983E({ i64*, i8 }* align 8 dereferenceable(16) %guard)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke std::sync::poison::Flag::get
  %poisoned = invoke zeroext i1 @_ZN3std4sync6poison4Flag3get17h1712943dfed5b5f3E(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_11)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  br i1 %poisoned, label %bb5, label %bb7

bb7:                                              ; preds = %bb4
  store i8 0, i8* %_18, align 1
  %14 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  %_17.0 = load i64*, i64** %14, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %_17.1 = trunc i8 %16 to i1
  %17 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"*
  %18 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %18, i32 0, i32 0
  store i64* %_17.0, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %18, i32 0, i32 1
  %21 = zext i1 %_17.1 to i8
  store i8 %21, i8* %20, align 8
  %22 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to i64*
  store i64 0, i64* %22, align 8
  br label %bb8

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_18, align 1
  %23 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  %_16.0 = load i64*, i64** %23, align 8, !nonnull !3
  %24 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !4
  %_16.1 = trunc i8 %25 to i1
; invoke std::sync::poison::PoisonError<T>::new
  %26 = invoke { i64*, i8 } @"_ZN3std4sync6poison20PoisonError$LT$T$GT$3new17h91b0a4d3697678c6E"(i64* align 8 dereferenceable(16) %_16.0, i1 zeroext %_16.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_15.0 = extractvalue { i64*, i8 } %26, 0
  %27 = extractvalue { i64*, i8 } %26, 1
  %_15.1 = trunc i8 %27 to i1
  %28 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"*
  %29 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"* %28, i32 0, i32 1
  %30 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %29, i32 0, i32 0
  store i64* %_15.0, i64** %30, align 8
  %31 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %29, i32 0, i32 1
  %32 = zext i1 %_15.1 to i8
  store i8 %32, i8* %31, align 8
  %33 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %0 to i64*
  store i64 1, i64* %33, align 8
  br label %bb8

bb9:                                              ; preds = %bb10, %bb11
  %34 = bitcast { i8*, i32 }* %3 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

bb10:                                             ; preds = %bb11
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h90d0415356584575E"({ i64*, i8 }* %guard) #19
  br label %bb9

bb8:                                              ; preds = %bb7, %bb6
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h32dc4fc06e837fa1E"(i64** align 8 dereferenceable(8) %self, i32* align 4 dereferenceable(4) %f.0, i32* align 4 dereferenceable(4) %f.1) unnamed_addr #1 {
start:
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17he97ec5c7b3a42b28E"(i64** align 8 dereferenceable(8) %self, i32* align 4 dereferenceable(4) %f.0, i32* align 4 dereferenceable(4) %f.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h84cc4fb5f6f22818E"(i1 zeroext %_3, [0 x i8]* nonnull align 1 bitcast (<{ [70 x i8] }>* @alloc463 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc458 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h4c3ef89de05ebf41E"(i64** align 8 dereferenceable(8) %self, %"[closure@./probe/probe_tle.rs:116:27: 126:14]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #1 {
start:
  %_5 = alloca %"[closure@./probe/probe_tle.rs:116:27: 126:14]", align 8
  %0 = bitcast %"[closure@./probe/probe_tle.rs:116:27: 126:14]"* %_5 to i8*
  %1 = bitcast %"[closure@./probe/probe_tle.rs:116:27: 126:14]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h713d9c4dbb36e435E"(i64** align 8 dereferenceable(8) %self, %"[closure@./probe/probe_tle.rs:116:27: 126:14]"* noalias nocapture dereferenceable(24) %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h84cc4fb5f6f22818E"(i1 zeroext %_3, [0 x i8]* nonnull align 1 bitcast (<{ [70 x i8] }>* @alloc463 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc458 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h648cd73b1cea555dE"(i64** align 8 dereferenceable(8) %self, i32* align 4 dereferenceable(4) %f.0, i32* align 4 dereferenceable(4) %f.1) unnamed_addr #1 {
start:
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h422a4174f4cb6c61E"(i64** align 8 dereferenceable(8) %self, i32* align 4 dereferenceable(4) %f.0, i32* align 4 dereferenceable(4) %f.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h84cc4fb5f6f22818E"(i1 zeroext %_3, [0 x i8]* nonnull align 1 bitcast (<{ [70 x i8] }>* @alloc463 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc458 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h9f42a5eca004c250E"(i64** align 8 dereferenceable(8) %self, %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* noalias nocapture dereferenceable(32) %f) unnamed_addr #1 {
start:
  %_5 = alloca %"[closure@./probe/probe_tle.rs:76:18: 84:10]", align 8
  %0 = bitcast %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* %_5 to i8*
  %1 = bitcast %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 32, i1 false)
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17hc3386376a5e861c2E"(i64** align 8 dereferenceable(8) %self, %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* noalias nocapture dereferenceable(32) %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h84cc4fb5f6f22818E"(i1 zeroext %_3, [0 x i8]* nonnull align 1 bitcast (<{ [70 x i8] }>* @alloc463 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc458 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17hce31c40a5801a758E"(i64** align 8 dereferenceable(8) %self, %"[closure@./probe/probe_tle.rs:94:18: 102:10]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #1 {
start:
  %_5 = alloca %"[closure@./probe/probe_tle.rs:94:18: 102:10]", align 8
  %0 = bitcast %"[closure@./probe/probe_tle.rs:94:18: 102:10]"* %_5 to i8*
  %1 = bitcast %"[closure@./probe/probe_tle.rs:94:18: 102:10]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h7e403ede039e1650E"(i64** align 8 dereferenceable(8) %self, %"[closure@./probe/probe_tle.rs:94:18: 102:10]"* noalias nocapture dereferenceable(24) %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h84cc4fb5f6f22818E"(i1 zeroext %_3, [0 x i8]* nonnull align 1 bitcast (<{ [70 x i8] }>* @alloc463 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc458 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::with
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17hd7d3ee00335bb9cfE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
; call std::thread::local::LocalKey<T>::try_with
  %_3 = call zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h3d77a01d5f5fc07dE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h84cc4fb5f6f22818E"(i1 zeroext %_3, [0 x i8]* nonnull align 1 bitcast (<{ [70 x i8] }>* @alloc463 to [0 x i8]*), i64 70, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc458 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h3d77a01d5f5fc07dE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  %_15 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
  %2 = bitcast i64** %self to i64* ()**
  %_7 = load i64* ()*, i64* ()** %2, align 8, !nonnull !3
  %_6 = invoke align 8 dereferenceable_or_null(32) i64* %_7()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 dereferenceable_or_null(32) i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h528f83b5c5e93e3bE"(i64* align 8 dereferenceable_or_null(32) %_6)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %3 = load i8, i8* %_17, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %10 = invoke align 8 dereferenceable_or_null(32) i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a5764eecfd95febE"(i64* align 8 dereferenceable_or_null(32) %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %10, i64** %_4, align 8
  %11 = bitcast i64** %_4 to {}**
  %12 = load {}*, {}** %11, align 8
  %13 = icmp eq {}* %12, null
  %_9 = select i1 %13, i64 1, i64 0
  switch i64 %_9, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %14 = bitcast i64** %_4 to %"core::cell::RefCell<alloc::string::String>"**
  %val = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %14, align 8, !nonnull !3
  store i8 0, i8* %_17, align 1
  %15 = bitcast i64** %_15 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %val, %"core::cell::RefCell<alloc::string::String>"** %15, align 8
  %16 = load i64*, i64** %_15, align 8, !nonnull !3
  %17 = bitcast i64* %16 to %"core::cell::RefCell<alloc::string::String>"*
; invoke probe_tle::_init_::{{closure}}
  invoke void @"_ZN9probe_tle6_init_28_$u7b$$u7b$closure$u7d$$u7d$17h6e85b5629b43ffd1E"(%"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %17)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %18 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h658e2f5616f46916E"()
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %20 = load i8, i8* %1, align 1, !range !4
  %21 = trunc i8 %20 to i1
  ret i1 %21

bb8:                                              ; preds = %bb4
  %22 = bitcast i8* %1 to %"core::result::Result<(), std::thread::local::AccessError>::Ok"*
  %23 = getelementptr inbounds %"core::result::Result<(), std::thread::local::AccessError>::Ok", %"core::result::Result<(), std::thread::local::AccessError>::Ok"* %22, i32 0, i32 1
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %24 = bitcast { i8*, i32 }* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h422a4174f4cb6c61E"(i64** align 8 dereferenceable(8) %self, i32* align 4 dereferenceable(4) %f.0, i32* align 4 dereferenceable(4) %f.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  %_15 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
  %2 = bitcast i64** %self to i64* ()**
  %_7 = load i64* ()*, i64* ()** %2, align 8, !nonnull !3
  %_6 = invoke align 8 dereferenceable_or_null(32) i64* %_7()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 dereferenceable_or_null(32) i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h528f83b5c5e93e3bE"(i64* align 8 dereferenceable_or_null(32) %_6)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %3 = load i8, i8* %_17, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %10 = invoke align 8 dereferenceable_or_null(32) i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a5764eecfd95febE"(i64* align 8 dereferenceable_or_null(32) %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %10, i64** %_4, align 8
  %11 = bitcast i64** %_4 to {}**
  %12 = load {}*, {}** %11, align 8
  %13 = icmp eq {}* %12, null
  %_9 = select i1 %13, i64 1, i64 0
  switch i64 %_9, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %14 = bitcast i64** %_4 to %"core::cell::RefCell<alloc::string::String>"**
  %val = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %14, align 8, !nonnull !3
  store i8 0, i8* %_17, align 1
  %15 = bitcast i64** %_15 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %val, %"core::cell::RefCell<alloc::string::String>"** %15, align 8
  %16 = load i64*, i64** %_15, align 8, !nonnull !3
  %17 = bitcast i64* %16 to %"core::cell::RefCell<alloc::string::String>"*
; invoke probe_tle::_probe_spawning_::{{closure}}
  invoke void @"_ZN9probe_tle16_probe_spawning_28_$u7b$$u7b$closure$u7d$$u7d$17h39a4fcacb5f6c2f3E"(i32* align 4 dereferenceable(4) %f.0, i32* align 4 dereferenceable(4) %f.1, %"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %17)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %18 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h658e2f5616f46916E"()
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %20 = load i8, i8* %1, align 1, !range !4
  %21 = trunc i8 %20 to i1
  ret i1 %21

bb8:                                              ; preds = %bb4
  %22 = bitcast i8* %1 to %"core::result::Result<(), std::thread::local::AccessError>::Ok"*
  %23 = getelementptr inbounds %"core::result::Result<(), std::thread::local::AccessError>::Ok", %"core::result::Result<(), std::thread::local::AccessError>::Ok"* %22, i32 0, i32 1
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %24 = bitcast { i8*, i32 }* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h713d9c4dbb36e435E"(i64** align 8 dereferenceable(8) %self, %"[closure@./probe/probe_tle.rs:116:27: 126:14]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  %_15 = alloca i64*, align 8
  %_14 = alloca %"[closure@./probe/probe_tle.rs:116:27: 126:14]", align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
  %2 = bitcast i64** %self to i64* ()**
  %_7 = load i64* ()*, i64* ()** %2, align 8, !nonnull !3
  %_6 = invoke align 8 dereferenceable_or_null(16) i64* %_7()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 dereferenceable_or_null(16) i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17hf22f0b8b43780835E"(i64* align 8 dereferenceable_or_null(16) %_6)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %3 = load i8, i8* %_17, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %10 = invoke align 8 dereferenceable_or_null(16) i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd88ec5e60864a008E"(i64* align 8 dereferenceable_or_null(16) %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %10, i64** %_4, align 8
  %11 = bitcast i64** %_4 to {}**
  %12 = load {}*, {}** %11, align 8
  %13 = icmp eq {}* %12, null
  %_9 = select i1 %13, i64 1, i64 0
  switch i64 %_9, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %14 = bitcast i64** %_4 to { i64, i32 }**
  %val = load { i64, i32 }*, { i64, i32 }** %14, align 8, !nonnull !3
  store i8 0, i8* %_17, align 1
  %15 = bitcast %"[closure@./probe/probe_tle.rs:116:27: 126:14]"* %_14 to i8*
  %16 = bitcast %"[closure@./probe/probe_tle.rs:116:27: 126:14]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  %17 = bitcast i64** %_15 to { i64, i32 }**
  store { i64, i32 }* %val, { i64, i32 }** %17, align 8
  %18 = load i64*, i64** %_15, align 8, !nonnull !3
  %19 = bitcast i64* %18 to { i64, i32 }*
; invoke probe_tle::_probe_spawning_::{{closure}}::{{closure}}
  invoke void @"_ZN9probe_tle16_probe_spawning_28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17he0f35ab8dbfe97ffE"(%"[closure@./probe/probe_tle.rs:116:27: 126:14]"* noalias nocapture dereferenceable(24) %_14, { i64, i32 }* align 8 dereferenceable(16) %19)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h658e2f5616f46916E"()
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %22 = load i8, i8* %1, align 1, !range !4
  %23 = trunc i8 %22 to i1
  ret i1 %23

bb8:                                              ; preds = %bb4
  %24 = bitcast i8* %1 to %"core::result::Result<(), std::thread::local::AccessError>::Ok"*
  %25 = getelementptr inbounds %"core::result::Result<(), std::thread::local::AccessError>::Ok", %"core::result::Result<(), std::thread::local::AccessError>::Ok"* %24, i32 0, i32 1
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h7e403ede039e1650E"(i64** align 8 dereferenceable(8) %self, %"[closure@./probe/probe_tle.rs:94:18: 102:10]"* noalias nocapture dereferenceable(24) %f) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  %_15 = alloca i64*, align 8
  %_14 = alloca %"[closure@./probe/probe_tle.rs:94:18: 102:10]", align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
  %2 = bitcast i64** %self to i64* ()**
  %_7 = load i64* ()*, i64* ()** %2, align 8, !nonnull !3
  %_6 = invoke align 8 dereferenceable_or_null(32) i64* %_7()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 dereferenceable_or_null(32) i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h528f83b5c5e93e3bE"(i64* align 8 dereferenceable_or_null(32) %_6)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %3 = load i8, i8* %_17, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %10 = invoke align 8 dereferenceable_or_null(32) i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a5764eecfd95febE"(i64* align 8 dereferenceable_or_null(32) %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %10, i64** %_4, align 8
  %11 = bitcast i64** %_4 to {}**
  %12 = load {}*, {}** %11, align 8
  %13 = icmp eq {}* %12, null
  %_9 = select i1 %13, i64 1, i64 0
  switch i64 %_9, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %14 = bitcast i64** %_4 to %"core::cell::RefCell<alloc::string::String>"**
  %val = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %14, align 8, !nonnull !3
  store i8 0, i8* %_17, align 1
  %15 = bitcast %"[closure@./probe/probe_tle.rs:94:18: 102:10]"* %_14 to i8*
  %16 = bitcast %"[closure@./probe/probe_tle.rs:94:18: 102:10]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  %17 = bitcast i64** %_15 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %val, %"core::cell::RefCell<alloc::string::String>"** %17, align 8
  %18 = load i64*, i64** %_15, align 8, !nonnull !3
  %19 = bitcast i64* %18 to %"core::cell::RefCell<alloc::string::String>"*
; invoke probe_tle::_probe_func_::{{closure}}
  invoke void @"_ZN9probe_tle12_probe_func_28_$u7b$$u7b$closure$u7d$$u7d$17h37097dba05f7752aE"(%"[closure@./probe/probe_tle.rs:94:18: 102:10]"* noalias nocapture dereferenceable(24) %_14, %"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %19)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h658e2f5616f46916E"()
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %22 = load i8, i8* %1, align 1, !range !4
  %23 = trunc i8 %22 to i1
  ret i1 %23

bb8:                                              ; preds = %bb4
  %24 = bitcast i8* %1 to %"core::result::Result<(), std::thread::local::AccessError>::Ok"*
  %25 = getelementptr inbounds %"core::result::Result<(), std::thread::local::AccessError>::Ok", %"core::result::Result<(), std::thread::local::AccessError>::Ok"* %24, i32 0, i32 1
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17hc3386376a5e861c2E"(i64** align 8 dereferenceable(8) %self, %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* noalias nocapture dereferenceable(32) %f) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  %_15 = alloca i64*, align 8
  %_14 = alloca %"[closure@./probe/probe_tle.rs:76:18: 84:10]", align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
  %2 = bitcast i64** %self to i64* ()**
  %_7 = load i64* ()*, i64* ()** %2, align 8, !nonnull !3
  %_6 = invoke align 8 dereferenceable_or_null(32) i64* %_7()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 dereferenceable_or_null(32) i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h528f83b5c5e93e3bE"(i64* align 8 dereferenceable_or_null(32) %_6)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %3 = load i8, i8* %_17, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %10 = invoke align 8 dereferenceable_or_null(32) i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a5764eecfd95febE"(i64* align 8 dereferenceable_or_null(32) %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %10, i64** %_4, align 8
  %11 = bitcast i64** %_4 to {}**
  %12 = load {}*, {}** %11, align 8
  %13 = icmp eq {}* %12, null
  %_9 = select i1 %13, i64 1, i64 0
  switch i64 %_9, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %14 = bitcast i64** %_4 to %"core::cell::RefCell<alloc::string::String>"**
  %val = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %14, align 8, !nonnull !3
  store i8 0, i8* %_17, align 1
  %15 = bitcast %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* %_14 to i8*
  %16 = bitcast %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 32, i1 false)
  %17 = bitcast i64** %_15 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %val, %"core::cell::RefCell<alloc::string::String>"** %17, align 8
  %18 = load i64*, i64** %_15, align 8, !nonnull !3
  %19 = bitcast i64* %18 to %"core::cell::RefCell<alloc::string::String>"*
; invoke probe_tle::_probe_mutex_::{{closure}}
  invoke void @"_ZN9probe_tle13_probe_mutex_28_$u7b$$u7b$closure$u7d$$u7d$17h63810e51f28bfb3eE"(%"[closure@./probe/probe_tle.rs:76:18: 84:10]"* noalias nocapture dereferenceable(32) %_14, %"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %19)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h658e2f5616f46916E"()
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %22 = load i8, i8* %1, align 1, !range !4
  %23 = trunc i8 %22 to i1
  ret i1 %23

bb8:                                              ; preds = %bb4
  %24 = bitcast i8* %1 to %"core::result::Result<(), std::thread::local::AccessError>::Ok"*
  %25 = getelementptr inbounds %"core::result::Result<(), std::thread::local::AccessError>::Ok", %"core::result::Result<(), std::thread::local::AccessError>::Ok"* %24, i32 0, i32 1
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %26 = bitcast { i8*, i32 }* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17he97ec5c7b3a42b28E"(i64** align 8 dereferenceable(8) %self, i32* align 4 dereferenceable(4) %f.0, i32* align 4 dereferenceable(4) %f.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  %_15 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %1 = alloca i8, align 1
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
  %2 = bitcast i64** %self to i64* ()**
  %_7 = load i64* ()*, i64* ()** %2, align 8, !nonnull !3
  %_6 = invoke align 8 dereferenceable_or_null(32) i64* %_7()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke core::option::Option<T>::ok_or
  %_5 = invoke align 8 dereferenceable_or_null(32) i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h528f83b5c5e93e3bE"(i64* align 8 dereferenceable_or_null(32) %_6)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  %3 = load i8, i8* %_17, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb11, label %bb10

cleanup:                                          ; preds = %bb4, %bb6, %bb2, %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %10 = invoke align 8 dereferenceable_or_null(32) i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a5764eecfd95febE"(i64* align 8 dereferenceable_or_null(32) %_5)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %10, i64** %_4, align 8
  %11 = bitcast i64** %_4 to {}**
  %12 = load {}*, {}** %11, align 8
  %13 = icmp eq {}* %12, null
  %_9 = select i1 %13, i64 1, i64 0
  switch i64 %_9, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %14 = bitcast i64** %_4 to %"core::cell::RefCell<alloc::string::String>"**
  %val = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %14, align 8, !nonnull !3
  store i8 0, i8* %_17, align 1
  %15 = bitcast i64** %_15 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %val, %"core::cell::RefCell<alloc::string::String>"** %15, align 8
  %16 = load i64*, i64** %_15, align 8, !nonnull !3
  %17 = bitcast i64* %16 to %"core::cell::RefCell<alloc::string::String>"*
; invoke probe_tle::_probe_spawned_::{{closure}}
  invoke void @"_ZN9probe_tle15_probe_spawned_28_$u7b$$u7b$closure$u7d$$u7d$17h4e4fba2cfc0ff85dE"(i32* align 4 dereferenceable(4) %f.0, i32* align 4 dereferenceable(4) %f.1, %"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %17)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb3
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %18 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h658e2f5616f46916E"()
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %1, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %20 = load i8, i8* %1, align 1, !range !4
  %21 = trunc i8 %20 to i1
  ret i1 %21

bb8:                                              ; preds = %bb4
  %22 = bitcast i8* %1 to %"core::result::Result<(), std::thread::local::AccessError>::Ok"*
  %23 = getelementptr inbounds %"core::result::Result<(), std::thread::local::AccessError>::Ok", %"core::result::Result<(), std::thread::local::AccessError>::Ok"* %22, i32 0, i32 1
  store i8 0, i8* %1, align 1
  br label %bb9

bb10:                                             ; preds = %bb11, %bb12
  %24 = bitcast { i8*, i32 }* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb11:                                             ; preds = %bb12
  br label %bb10
}

; std::thread::local::fast::Key<T>::try_initialize
; Function Attrs: noinline nonlazybind uwtable
define align 8 dereferenceable_or_null(32) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h0492328d3e133d11E"(%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(48) %self) unnamed_addr #3 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_12 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %1 = alloca i64*, align 8
  store i8 0, i8* %_12, align 1
  store i8 1, i8* %_12, align 1
; invoke core::mem::needs_drop
  %_5 = invoke zeroext i1 @_ZN4core3mem10needs_drop17h30ceb27ffc53623bE()
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb1, label %bb2

bb14:                                             ; preds = %cleanup
  %2 = load i8, i8* %_12, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb13, label %bb11

cleanup:                                          ; preds = %bb6, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb14

bb2:                                              ; preds = %bb4
; invoke std::thread::local::fast::Key<T>::try_register_dtor
  %_6 = invoke zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17h8eae8ee07e375b12E"(%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(48) %self)
          to label %bb5 unwind label %cleanup

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb5, %bb1
  %9 = load i8, i8* %_3, align 1, !range !4
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb8

bb5:                                              ; preds = %bb2
  %11 = zext i1 %_6 to i8
  store i8 %11, i8* %_3, align 1
  br label %bb3

bb8:                                              ; preds = %bb3
  %12 = bitcast i64** %1 to {}**
  store {}* null, {}** %12, align 8
  br label %bb9

bb6:                                              ; preds = %bb3
  %_10 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %self to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"*
  store i8 0, i8* %_12, align 1
; invoke std::thread::local::lazy::LazyKeyInner<T>::initialize
  %_9 = invoke align 8 dereferenceable(32) %"core::cell::RefCell<alloc::string::String>"* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17h847843e841d8dbe8E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(40) %_10)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %13 = bitcast i64** %1 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %_9, %"core::cell::RefCell<alloc::string::String>"** %13, align 8
  br label %bb9

bb11:                                             ; preds = %bb13, %bb14
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb13:                                             ; preds = %bb14
  br label %bb11

bb9:                                              ; preds = %bb8, %bb7
  %20 = load i8, i8* %_12, align 1, !range !4
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb12, label %bb10

bb10:                                             ; preds = %bb12, %bb9
  %22 = load i64*, i64** %1, align 8
  ret i64* %22

bb12:                                             ; preds = %bb9
  br label %bb10
}

; std::thread::local::fast::Key<T>::try_initialize
; Function Attrs: noinline nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hcff53b26af3a44cfE"(%"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* align 8 dereferenceable(32) %self) unnamed_addr #3 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_12 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %1 = alloca i64*, align 8
  store i8 0, i8* %_12, align 1
  store i8 1, i8* %_12, align 1
; invoke core::mem::needs_drop
  %_5 = invoke zeroext i1 @_ZN4core3mem10needs_drop17h3e111691aedc9757E()
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb1, label %bb2

bb14:                                             ; preds = %cleanup
  %2 = load i8, i8* %_12, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb13, label %bb11

cleanup:                                          ; preds = %bb6, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb14

bb2:                                              ; preds = %bb4
; invoke std::thread::local::fast::Key<T>::try_register_dtor
  %_6 = invoke zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17hdd26abf47c4f7568E"(%"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* align 8 dereferenceable(32) %self)
          to label %bb5 unwind label %cleanup

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb5, %bb1
  %9 = load i8, i8* %_3, align 1, !range !4
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb8

bb5:                                              ; preds = %bb2
  %11 = zext i1 %_6 to i8
  store i8 %11, i8* %_3, align 1
  br label %bb3

bb8:                                              ; preds = %bb3
  %12 = bitcast i64** %1 to {}**
  store {}* null, {}** %12, align 8
  br label %bb9

bb6:                                              ; preds = %bb3
  %_10 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* %self to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"*
  store i8 0, i8* %_12, align 1
; invoke std::thread::local::lazy::LazyKeyInner<T>::initialize
  %_9 = invoke align 8 dereferenceable(16) { i64, i32 }* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17hefd6c7a5eb049f0aE"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* align 8 dereferenceable(24) %_10)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %13 = bitcast i64** %1 to { i64, i32 }**
  store { i64, i32 }* %_9, { i64, i32 }** %13, align 8
  br label %bb9

bb11:                                             ; preds = %bb13, %bb14
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb13:                                             ; preds = %bb14
  br label %bb11

bb9:                                              ; preds = %bb8, %bb7
  %20 = load i8, i8* %_12, align 1, !range !4
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb12, label %bb10

bb10:                                             ; preds = %bb12, %bb9
  %22 = load i64*, i64** %1, align 8
  ret i64* %22

bb12:                                             ; preds = %bb9
  br label %bb10
}

; std::thread::local::fast::Key<T>::try_register_dtor
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17h8eae8ee07e375b12E"(%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(48) %self) unnamed_addr #1 {
start:
  %_12 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_3 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>", %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %self, i32 0, i32 1
; call core::cell::Cell<T>::get
  %1 = call i8 @"_ZN4core4cell13Cell$LT$T$GT$3get17h9a6e3e113f111043E"(i8* align 1 dereferenceable(1) %_3), !range !14
  store i8 %1, i8* %_2, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load i8, i8* %_2, align 1, !range !14
  %_4 = zext i8 %2 to i64
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb7
    i64 2, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %_6 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %self to i8*
; call std::sys::unix::thread_local_dtor::register_dtor
  call void @_ZN3std3sys4unix17thread_local_dtor13register_dtor17h23209ede0e49f302E(i8* %_6, void (i8*)* nonnull @_ZN3std6thread5local4fast13destroy_value17h9d2fe1d914802646E)
  br label %bb5

bb7:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb8

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7, %bb2
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  %_11 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>", %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %self, i32 0, i32 1
  store i8 1, i8* %_12, align 1
  %5 = load i8, i8* %_12, align 1, !range !14
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h984eb67921d1e01fE"(i8* align 1 dereferenceable(1) %_11, i8 %5)
  br label %bb6

bb6:                                              ; preds = %bb5
  store i8 1, i8* %0, align 1
  br label %bb8
}

; std::thread::local::fast::Key<T>::try_register_dtor
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN3std6thread5local4fast12Key$LT$T$GT$17try_register_dtor17hdd26abf47c4f7568E"(%"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_12 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  %_3 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::RefCell<i32>>", %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* %self, i32 0, i32 1
; call core::cell::Cell<T>::get
  %1 = call i8 @"_ZN4core4cell13Cell$LT$T$GT$3get17h9a6e3e113f111043E"(i8* align 1 dereferenceable(1) %_3), !range !14
  store i8 %1, i8* %_2, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load i8, i8* %_2, align 1, !range !14
  %_4 = zext i8 %2 to i64
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb7
    i64 2, label %bb2
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1
  %_6 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* %self to i8*
; call std::sys::unix::thread_local_dtor::register_dtor
  call void @_ZN3std3sys4unix17thread_local_dtor13register_dtor17h23209ede0e49f302E(i8* %_6, void (i8*)* nonnull @_ZN3std6thread5local4fast13destroy_value17h9a293e7925aadc6aE)
  br label %bb5

bb7:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb8

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7, %bb2
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  %_11 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::RefCell<i32>>", %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* %self, i32 0, i32 1
  store i8 1, i8* %_12, align 1
  %5 = load i8, i8* %_12, align 1, !range !14
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h984eb67921d1e01fE"(i8* align 1 dereferenceable(1) %_11, i8 %5)
  br label %bb6

bb6:                                              ; preds = %bb5
  store i8 1, i8* %0, align 1
  br label %bb8
}

; std::thread::local::fast::Key<T>::get
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable_or_null(32) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17h250588ad93abae78E"(%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(48) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_3 = alloca i64*, align 8
  %1 = alloca i64*, align 8
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %_4 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %self to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"*
; invoke std::thread::local::lazy::LazyKeyInner<T>::get
  %2 = invoke align 8 dereferenceable_or_null(32) i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17hc0bb964f38f8ef85E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(40) %_4)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %2, i64** %_3, align 8
  %3 = bitcast i64** %_3 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb11:                                             ; preds = %cleanup
  %6 = load i8, i8* %_10, align 1, !range !4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb10, label %bb8

cleanup:                                          ; preds = %bb2, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb11

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_10, align 1
; invoke std::thread::local::fast::Key<T>::try_initialize
  %13 = invoke align 8 dereferenceable_or_null(32) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17h0492328d3e133d11E"(%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(48) %self)
          to label %bb5 unwind label %cleanup

bb4:                                              ; preds = %bb1
  %14 = bitcast i64** %_3 to %"core::cell::RefCell<alloc::string::String>"**
  %val = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %14, align 8, !nonnull !3
  %15 = bitcast i64** %1 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %val, %"core::cell::RefCell<alloc::string::String>"** %15, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %16 = load i8, i8* %_10, align 1, !range !4
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb9, label %bb7

bb5:                                              ; preds = %bb2
  store i64* %13, i64** %1, align 8
  br label %bb6

bb8:                                              ; preds = %bb10, %bb11
  %18 = bitcast { i8*, i32 }* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23

bb10:                                             ; preds = %bb11
  br label %bb8

bb7:                                              ; preds = %bb9, %bb6
  %24 = load i64*, i64** %1, align 8
  ret i64* %24

bb9:                                              ; preds = %bb6
  br label %bb7
}

; std::thread::local::fast::Key<T>::get
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17h4e627cf503dca90fE"(%"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* align 8 dereferenceable(32) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_3 = alloca i64*, align 8
  %1 = alloca i64*, align 8
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %_4 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* %self to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"*
; invoke std::thread::local::lazy::LazyKeyInner<T>::get
  %2 = invoke align 8 dereferenceable_or_null(16) i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17h0899ef8c2ad29260E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* align 8 dereferenceable(24) %_4)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64* %2, i64** %_3, align 8
  %3 = bitcast i64** %_3 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb11:                                             ; preds = %cleanup
  %6 = load i8, i8* %_10, align 1, !range !4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb10, label %bb8

cleanup:                                          ; preds = %bb2, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb11

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_10, align 1
; invoke std::thread::local::fast::Key<T>::try_initialize
  %13 = invoke align 8 dereferenceable_or_null(16) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17hcff53b26af3a44cfE"(%"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* align 8 dereferenceable(32) %self)
          to label %bb5 unwind label %cleanup

bb4:                                              ; preds = %bb1
  %14 = bitcast i64** %_3 to { i64, i32 }**
  %val = load { i64, i32 }*, { i64, i32 }** %14, align 8, !nonnull !3
  %15 = bitcast i64** %1 to { i64, i32 }**
  store { i64, i32 }* %val, { i64, i32 }** %15, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %16 = load i8, i8* %_10, align 1, !range !4
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb9, label %bb7

bb5:                                              ; preds = %bb2
  store i64* %13, i64** %1, align 8
  br label %bb6

bb8:                                              ; preds = %bb10, %bb11
  %18 = bitcast { i8*, i32 }* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23

bb10:                                             ; preds = %bb11
  br label %bb8

bb7:                                              ; preds = %bb9, %bb6
  %24 = load i64*, i64** %1, align 8
  ret i64* %24

bb9:                                              ; preds = %bb6
  br label %bb7
}

; std::thread::local::fast::destroy_value
; Function Attrs: nonlazybind uwtable
define void @_ZN3std6thread5local4fast13destroy_value17h9a293e7925aadc6aE(i8* %ptr) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca %"core::option::Option<core::cell::RefCell<i32>>", align 8
  %_8 = alloca i8, align 1
  %value = alloca %"core::option::Option<core::cell::RefCell<i32>>", align 8
  %ptr1 = bitcast i8* %ptr to %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"*
  %_5 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* %ptr1 to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"*
; invoke std::thread::local::lazy::LazyKeyInner<T>::take
  invoke void @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17h5ef3b8f480fcf8bcE"(%"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<i32>>") dereferenceable(24) %value, %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* align 8 dereferenceable(24) %_5)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_7 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::RefCell<i32>>", %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* %ptr1, i32 0, i32 1
  store i8 2, i8* %_8, align 1
  %1 = load i8, i8* %_8, align 1, !range !14
; invoke core::cell::Cell<T>::set
  invoke void @"_ZN4core4cell13Cell$LT$T$GT$3set17h984eb67921d1e01fE"(i8* align 1 dereferenceable(1) %_7, i8 %1)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  call void @llvm.trap()
  unreachable

cleanup:                                          ; preds = %bb2, %bb1, %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  %7 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_10 to i8*
  %8 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
; invoke core::mem::drop
  invoke void @_ZN4core3mem4drop17hcdf9a86280ff26f1E(%"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture dereferenceable(24) %_10)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  ret void
}

; std::thread::local::fast::destroy_value
; Function Attrs: nonlazybind uwtable
define void @_ZN3std6thread5local4fast13destroy_value17h9d2fe1d914802646E(i8* %ptr) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca %"core::option::Option<core::cell::RefCell<alloc::string::String>>", align 8
  %_8 = alloca i8, align 1
  %value = alloca %"core::option::Option<core::cell::RefCell<alloc::string::String>>", align 8
  %ptr1 = bitcast i8* %ptr to %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"*
  %_5 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %ptr1 to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"*
; invoke std::thread::local::lazy::LazyKeyInner<T>::take
  invoke void @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17hbe9c216ef8145739E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") dereferenceable(40) %value, %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(40) %_5)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_7 = getelementptr inbounds %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>", %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %ptr1, i32 0, i32 1
  store i8 2, i8* %_8, align 1
  %1 = load i8, i8* %_8, align 1, !range !14
; invoke core::cell::Cell<T>::set
  invoke void @"_ZN4core4cell13Cell$LT$T$GT$3set17h984eb67921d1e01fE"(i8* align 1 dereferenceable(1) %_7, i8 %1)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  call void @llvm.trap()
  unreachable

cleanup:                                          ; preds = %bb2, %bb1, %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  %7 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_10 to i8*
  %8 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 40, i1 false)
; invoke core::mem::drop
  invoke void @_ZN4core3mem4drop17he8c5737352e924b9E(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture dereferenceable(40) %_10)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  ret void
}

; std::thread::local::lazy::LazyKeyInner<T>::initialize
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(32) %"core::cell::RefCell<alloc::string::String>"* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17h847843e841d8dbe8E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(40) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_12 = alloca %"core::cell::RefCell<alloc::string::String>", align 8
  %_11 = alloca %"core::option::Option<core::cell::RefCell<alloc::string::String>>", align 8
  %_8 = alloca %"core::option::Option<core::cell::RefCell<alloc::string::String>>", align 8
  %value = alloca %"core::cell::RefCell<alloc::string::String>", align 8
  store i8 0, i8* %_14, align 1
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17h16d9773e2f66363cE(%"core::cell::RefCell<alloc::string::String>"* noalias nocapture sret(%"core::cell::RefCell<alloc::string::String>") dereferenceable(32) %value)
  br label %bb1

bb1:                                              ; preds = %start
  store i8 1, i8* %_14, align 1
  %_7 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_7 to %"core::option::Option<core::cell::RefCell<alloc::string::String>>"*
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_14, align 1
  %1 = bitcast %"core::cell::RefCell<alloc::string::String>"* %_12 to i8*
  %2 = bitcast %"core::cell::RefCell<alloc::string::String>"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
  %3 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_11 to %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"*
  %4 = getelementptr inbounds %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some", %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"* %3, i32 0, i32 1
  %5 = bitcast %"core::cell::RefCell<alloc::string::String>"* %4 to i8*
  %6 = bitcast %"core::cell::RefCell<alloc::string::String>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 32, i1 false)
  %7 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_11 to i64*
  store i64 1, i64* %7, align 8
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17h8f748652bc0dd5aeE(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") dereferenceable(40) %_8, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(40) %_2.i, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture dereferenceable(40) %_11)
          to label %bb3 unwind label %cleanup

bb10:                                             ; preds = %cleanup
  %8 = load i8, i8* %_14, align 1, !range !4
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb9, label %bb8

cleanup:                                          ; preds = %bb5, %bb3, %bb2
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb10

bb3:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::option::Option<core::cell::RefCell<alloc::string::String>>>
  invoke void @"_ZN4core3ptr97drop_in_place$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17hfb3b481d2103c132E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_8)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %15 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_2.i to i64*
  %_13 = load i64, i64* %15, align 8, !range !2
  switch i64 %_13, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
; invoke core::hint::unreachable_unchecked
  invoke void @_ZN4core4hint21unreachable_unchecked17h40039129d75f1d39E() #18
          to label %unreachable unwind label %cleanup

bb7:                                              ; preds = %bb4
  %16 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_2.i to %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"*
  %x = getelementptr inbounds %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some", %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"* %16, i32 0, i32 1
  store i8 0, i8* %_14, align 1
  ret %"core::cell::RefCell<alloc::string::String>"* %x

unreachable:                                      ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb9, %bb10
  %17 = bitcast { i8*, i32 }* %0 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<core::cell::RefCell<alloc::string::String>>
  call void @"_ZN4core3ptr69drop_in_place$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$17h3cf264abe5624e4aE"(%"core::cell::RefCell<alloc::string::String>"* %value) #19
  br label %bb8
}

; std::thread::local::lazy::LazyKeyInner<T>::initialize
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(16) { i64, i32 }* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17hefd6c7a5eb049f0aE"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* align 8 dereferenceable(24) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_11 = alloca %"core::option::Option<core::cell::RefCell<i32>>", align 8
  %_8 = alloca %"core::option::Option<core::cell::RefCell<i32>>", align 8
  store i8 0, i8* %_14, align 1
; call core::ops::function::FnOnce::call_once
  %1 = call { i64, i32 } @_ZN4core3ops8function6FnOnce9call_once17h51fa0ec274d37642E()
  %value.0 = extractvalue { i64, i32 } %1, 0
  %value.1 = extractvalue { i64, i32 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  store i8 1, i8* %_14, align 1
  %_7 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>"* %_7 to %"core::option::Option<core::cell::RefCell<i32>>"*
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_14, align 1
  %2 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_11 to %"core::option::Option<core::cell::RefCell<i32>>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<core::cell::RefCell<i32>>::Some", %"core::option::Option<core::cell::RefCell<i32>>::Some"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %3, i32 0, i32 0
  store i64 %value.0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %3, i32 0, i32 1
  store i32 %value.1, i32* %5, align 8
  %6 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_11 to i64*
  store i64 1, i64* %6, align 8
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17hf7dab2abeb3618bcE(%"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<i32>>") dereferenceable(24) %_8, %"core::option::Option<core::cell::RefCell<i32>>"* align 8 dereferenceable(24) %_2.i, %"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture dereferenceable(24) %_11)
          to label %bb3 unwind label %cleanup

bb10:                                             ; preds = %cleanup
  %7 = load i8, i8* %_14, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb8

cleanup:                                          ; preds = %bb5, %bb2
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb10

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %14 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_2.i to i64*
  %_13 = load i64, i64* %14, align 8, !range !2
  switch i64 %_13, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
; invoke core::hint::unreachable_unchecked
  invoke void @_ZN4core4hint21unreachable_unchecked17h40039129d75f1d39E() #18
          to label %unreachable unwind label %cleanup

bb7:                                              ; preds = %bb4
  %15 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_2.i to %"core::option::Option<core::cell::RefCell<i32>>::Some"*
  %x = getelementptr inbounds %"core::option::Option<core::cell::RefCell<i32>>::Some", %"core::option::Option<core::cell::RefCell<i32>>::Some"* %15, i32 0, i32 1
  store i8 0, i8* %_14, align 1
  ret { i64, i32 }* %x

unreachable:                                      ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb9, %bb10
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb9:                                              ; preds = %bb10
  br label %bb8
}

; std::thread::local::lazy::LazyKeyInner<T>::get
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17h0899ef8c2ad29260E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_4 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>"* %_4 to %"core::option::Option<core::cell::RefCell<i32>>"*
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::as_ref
  %0 = call align 8 dereferenceable_or_null(16) i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h2cbbc89e153ac895E"(%"core::option::Option<core::cell::RefCell<i32>>"* align 8 dereferenceable(24) %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; std::thread::local::lazy::LazyKeyInner<T>::get
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable_or_null(32) i64* @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$3get17hc0bb964f38f8ef85E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_4 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_4 to %"core::option::Option<core::cell::RefCell<alloc::string::String>>"*
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::as_ref
  %0 = call align 8 dereferenceable_or_null(32) i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17hd2cbaaf92996feefE"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(40) %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; std::thread::local::lazy::LazyKeyInner<T>::take
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17h5ef3b8f480fcf8bcE"(%"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<i32>>") dereferenceable(24) %0, %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_4 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<i32>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<i32>>>"* %_4 to %"core::option::Option<core::cell::RefCell<i32>>"*
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::take
  call void @"_ZN4core6option15Option$LT$T$GT$4take17h2a0dc5c871d5db3cE"(%"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<i32>>") dereferenceable(24) %0, %"core::option::Option<core::cell::RefCell<i32>>"* align 8 dereferenceable(24) %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::local::lazy::LazyKeyInner<T>::take
; Function Attrs: nonlazybind uwtable
define void @"_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$4take17hbe9c216ef8145739E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") dereferenceable(40) %0, %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(40) %self) unnamed_addr #1 {
start:
  %_4 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* %self to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"*
  %_2.i = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_4 to %"core::option::Option<core::cell::RefCell<alloc::string::String>>"*
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::take
  call void @"_ZN4core6option15Option$LT$T$GT$4take17h83e469881a095444E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") dereferenceable(40) %0, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(40) %_2.i)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; std::thread::panicking
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std6thread9panicking17h9dc174d6c8d4c8b1E() unnamed_addr #0 {
start:
; call std::panicking::panicking
  %0 = call zeroext i1 @_ZN3std9panicking9panicking17hfd24149d21158867E()
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; std::panicking::begin_panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
define void @_ZN3std9panicking11begin_panic17h87a6b8f3b352b2c2E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #4 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_4 = alloca i8, align 1
  %_3 = alloca %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", align 8
  store i8 0, i8* %_4, align 1
  store i8 1, i8* %_4, align 1
; invoke core::panic::location::Location::caller
  %loc = invoke align 8 dereferenceable(24) %"core::panic::location::Location"* @_ZN4core5panic8location8Location6caller17h5348652b54841341E(%"core::panic::location::Location"* align 8 dereferenceable(24) %0)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_4, align 1
  %2 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_3 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %msg.1, i64* %4, align 8
  %5 = getelementptr inbounds %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_3, i32 0, i32 1
  store %"core::panic::location::Location"* %loc, %"core::panic::location::Location"** %5, align 8
; invoke std::sys_common::backtrace::__rust_end_short_backtrace
  invoke void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17h0760564b8a8a04c7E(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_3) #18
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %6 = load i8, i8* %_4, align 1, !range !4
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb3, label %bb2

cleanup:                                          ; preds = %bb1, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb3, %bb4
  %13 = bitcast { i8*, i32 }* %1 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb3:                                              ; preds = %bb4
  br label %bb2
}

; std::panicking::begin_panic::PanicPayload<A>::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64 } @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17h2334d48238b15033E"([0 x i8]* nonnull align 1 %inner.0, i64 %inner.1) unnamed_addr #1 {
start:
  %_2 = alloca { i8*, i64 }, align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %inner.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %inner.1, i64* %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  store i8* %5, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { i8*, i64 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i64 } %14, i64 %13, 1
  ret { i8*, i64 } %15
}

; std::panicking::begin_panic::{{closure}}
; Function Attrs: inlinehint noreturn nonlazybind uwtable
define void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17he7bb4826521dec23E"(%"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* noalias nocapture dereferenceable(24) %_1) unnamed_addr #5 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i64*, align 8
  %_5 = alloca { i8*, i64 }, align 8
  %1 = bitcast %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !nonnull !3
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %_6.1 = load i64, i64* %3, align 8
; call std::panicking::begin_panic::PanicPayload<A>::new
  %4 = call { i8*, i64 } @"_ZN3std9panicking11begin_panic21PanicPayload$LT$A$GT$3new17h2334d48238b15033E"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1)
  store { i8*, i64 } %4, { i8*, i64 }* %_5, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_2.0 = bitcast { i8*, i64 }* %_5 to {}*
  %5 = bitcast i64** %_7 to {}**
  store {}* null, {}** %5, align 8
  %6 = getelementptr inbounds %"[closure@std::panicking::begin_panic<&str>::{closure#0}]", %"[closure@std::panicking::begin_panic<&str>::{closure#0}]"* %_1, i32 0, i32 1
  %_8 = load %"core::panic::location::Location"*, %"core::panic::location::Location"** %6, align 8, !nonnull !3
  %7 = load i64*, i64** %_7, align 8
; invoke std::panicking::rust_panic_with_hook
  invoke void @_ZN3std9panicking20rust_panic_with_hook17h00e530dc19739cc5E({}* nonnull align 1 %_2.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, [0 x i8] }>* @vtable.1 to [3 x i64]*), i64* align 8 dereferenceable_or_null(48) %7, %"core::panic::location::Location"* align 8 dereferenceable(24) %_8) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18
}

; std::panicking::panic_count::count_is_zero
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std9panicking11panic_count13count_is_zero17hc57c4087598f7a17E() unnamed_addr #0 {
start:
  %_5 = alloca i8, align 1
  %0 = alloca i8, align 1
  store i8 0, i8* %_5, align 1
  %1 = load i8, i8* %_5, align 1, !range !7
; call core::sync::atomic::AtomicUsize::load
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize4load17h3bd2c95b5cfe9b6eE(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) @_ZN3std9panicking11panic_count18GLOBAL_PANIC_COUNT17h9f4123c916e0c58dE, i8 %1)
  br label %bb1

bb1:                                              ; preds = %start
  %_1 = and i64 %_2, 9223372036854775807
  %2 = icmp eq i64 %_1, 0
  br i1 %2, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb4

bb3:                                              ; preds = %bb1
; call std::panicking::panic_count::is_zero_slow_path
  %3 = call zeroext i1 @_ZN3std9panicking11panic_count17is_zero_slow_path17h88139735fad522c1E()
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %5 = load i8, i8* %0, align 1, !range !4
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; std::panicking::panicking
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std9panicking9panicking17hfd24149d21158867E() unnamed_addr #0 {
start:
; call std::panicking::panic_count::count_is_zero
  %_1 = call zeroext i1 @_ZN3std9panicking11panic_count13count_is_zero17hc57c4087598f7a17E()
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_1, true
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h1423a36f1dfab93bE"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load i64*, i64** %self, align 8, !nonnull !3
; call core::fmt::num::<impl core::fmt::Debug for usize>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h37d2854d53f25f32E"(i64* align 8 dereferenceable(8) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he3c8612b608bf411E"({ i64, i64 }** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load { i64, i64 }*, { i64, i64 }** %self, align 8, !nonnull !3
; call <core::option::Option<T> as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h27b059712fb59d5eE"({ i64, i64 }* align 8 dereferenceable(16) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h2289649d21cc25e6E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_4.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !3
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_4.1 = load i64, i64* %1, align 8
; call <str as core::fmt::Display>::fmt
  %2 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hc7fdfa9efeb52994E"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hb61db68ab11457ecE"({ i64*, i64* }** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load { i64*, i64* }*, { i64*, i64* }** %self, align 8, !nonnull !3
; call <core::cell::Ref<T> as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN63_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17h74f58bc28733e89cE"({ i64*, i64* }* align 8 dereferenceable(16) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <T as alloc::borrow::ToOwned>::to_owned
; Function Attrs: nonlazybind uwtable
define void @"_ZN44_$LT$T$u20$as$u20$alloc..borrow..ToOwned$GT$8to_owned17hb25848f06c0b0de3E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, %"alloc::string::String"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call <alloc::string::String as core::clone::Clone>::clone
  call void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17ha8dd3d668ab621c8E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, %"alloc::string::String"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <F as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hcb26193c95f74209E"(%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* noalias nocapture sret(%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %_4 = alloca %"core::str::pattern::MultiCharEqPattern<core::str::IsWhitespace>", align 1
  %_3 = alloca %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>", align 8
  %1 = bitcast %"core::str::pattern::MultiCharEqPattern<core::str::IsWhitespace>"* %_4 to %"core::str::IsWhitespace"*
; call <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h563155f1eb72d44fE"(%"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* noalias nocapture sret(%"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>") dereferenceable(40) %_3, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* %0 to %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"*
  %3 = bitcast %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %2 to i8*
  %4 = bitcast %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  ret void
}

; core::intrinsics::write_bytes
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics11write_bytes17hd08688e525dfa01eE({ [0 x i8]*, i64 }* %dst, i8 %val, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 16, %count
  %1 = bitcast { [0 x i8]*, i64 }* %dst to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 %val, i64 %0, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::write_bytes
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics11write_bytes17hf72df9e0640e22e8E(i8* %dst, i8 %val, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 1, %count
  call void @llvm.memset.p0i8.i64(i8* align 1 %dst, i8 %val, i64 %0, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics19copy_nonoverlapping17h6c98f3015a494da7E(i32* %src, i32* %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 %count, 4
  %1 = bitcast i32* %dst to i8*
  %2 = bitcast i32* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 %0, i1 false)
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core10intrinsics19copy_nonoverlapping17hd460be041eef39e1E(i8* %src, i8* %dst, i64 %count) unnamed_addr #0 {
start:
  %0 = mul i64 %count, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %0, i1 false)
  ret void
}

; core::any::TypeId::of
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core3any6TypeId2of17h1a13facda8af68cfE() unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 9147559743429524724, i64* %0, align 8
  %_1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %_1, i64* %1, align 8
  %2 = load i64, i64* %1, align 8
  ret i64 %2
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3Ord3max17hff07128da23f073cE(i64 %self, i64 %other) unnamed_addr #0 {
start:
; call core::cmp::max_by
  %0 = call i64 @_ZN4core3cmp6max_by17h9ded58915158303aE(i64 %self, i64 %other)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::max
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp3max17h90283085d0421460E(i64 %v1, i64 %v2) unnamed_addr #0 {
start:
; call core::cmp::Ord::max
  %0 = call i64 @_ZN4core3cmp3Ord3max17hff07128da23f073cE(i64 %v1, i64 %v2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h2ecf05501b37c558E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %_4 = load i64, i64* %self, align 8
  %_5 = load i64, i64* %other, align 8
  %_3 = icmp ult i64 %_4, %_5
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8
  %_8 = load i64, i64* %other, align 8
  %_6 = icmp eq i64 %_7, %_8
  br i1 %_6, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !range !15
  ret i8 %1

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6
}

; core::cmp::impls::<impl core::cmp::PartialEq for usize>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2eq17h3f3d289d4f283874E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %_3 = load i64, i64* %self, align 8
  %_4 = load i64, i64* %other, align 8
  %0 = icmp eq i64 %_3, %_4
  ret i1 %0
}

; core::cmp::max_by
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp6max_by17h9ded58915158303aE(i64 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %3 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  store i8 0, i8* %_13, align 1
  store i8 0, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  store i8 1, i8* %_12, align 1
  %4 = bitcast { i64*, i64* }* %_6 to i64**
  store i64* %v1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  store i64* %v2, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8, !nonnull !3
; invoke core::ops::function::FnOnce::call_once
  %10 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17h7ac0ccb1f206ec63E(i64* align 8 dereferenceable(8) %7, i64* align 8 dereferenceable(8) %9)
          to label %bb1 unwind label %cleanup, !range !15

bb1:                                              ; preds = %start
  store i8 %10, i8* %_4, align 1
  %_11 = load i8, i8* %_4, align 1, !range !15
  switch i8 %_11, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ]

bb8:                                              ; preds = %cleanup
  br label %bb13

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb8

bb13:                                             ; preds = %bb8
  %16 = load i8, i8* %_13, align 1, !range !4
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb12, label %bb9

bb3:                                              ; preds = %bb1
  unreachable

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_12, align 1
  %18 = load i64, i64* %v2, align 8
  store i64 %18, i64* %3, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_13, align 1
  %19 = load i64, i64* %v1, align 8
  store i64 %19, i64* %3, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %20 = load i8, i8* %_12, align 1, !range !4
  %21 = trunc i8 %20 to i1
  br i1 %21, label %bb10, label %bb6

bb6:                                              ; preds = %bb10, %bb5
  %22 = load i8, i8* %_13, align 1, !range !4
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb11, label %bb7

bb10:                                             ; preds = %bb5
  br label %bb6

bb9:                                              ; preds = %bb12, %bb13
  %24 = bitcast { i8*, i32 }* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = insertvalue { i8*, i32 } undef, i8* %25, 0
  %29 = insertvalue { i8*, i32 } %28, i32 %27, 1
  resume { i8*, i32 } %29

bb12:                                             ; preds = %bb13
  br label %bb9

bb7:                                              ; preds = %bb11, %bb6
  %30 = load i64, i64* %3, align 8
  ret i64 %30

bb11:                                             ; preds = %bb6
  br label %bb7
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h0df7b51e292440feE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %x, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { [0 x i8]*, i64 }* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h4fe1b5202260740cE({ i32*, i64* }* align 8 dereferenceable(16) %x, i1 ({ i32*, i64* }*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 ({ i32*, i64* }*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { i32*, i64* }* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %x, i1 (i32*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i32*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i32* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h69b17fd875c0c542E(i64* align 8 dereferenceable(8) %x, i1 (i64*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i64*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h70d1b78777a19203E({ i64*, i64* }** align 8 dereferenceable(8) %x, i1 ({ i64*, i64* }**, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 ({ i64*, i64* }**, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { i64*, i64* }** %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h98cac4b4d23e3924E(i32* align 4 dereferenceable(4) %x, i1 (i32*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i32*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i32* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17ha3ecc8983dece7deE(i64** align 8 dereferenceable(8) %x, i1 (i64**, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i64**, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64** %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hbd2683e22c9f341fE(i64** align 8 dereferenceable(8) %x, i1 (i64**, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 (i64**, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast i64** %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::ArgumentV1::new
; Function Attrs: nonlazybind uwtable
define { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hf8aeb570c436443aE({ i64*, i64* }* align 8 dereferenceable(16) %x, i1 ({ i64*, i64* }*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i64* }, align 8
  %3 = bitcast i1 ({ i64*, i64* }*, %"core::fmt::Formatter"*)* %f to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8
  %_3 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !3
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { i64*, i64* }* %x to %"core::fmt::Opaque"*
  store %"core::fmt::Opaque"* %4, %"core::fmt::Opaque"** %0, align 8
  %_5 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !nonnull !3
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**
  store %"core::fmt::Opaque"* %_5, %"core::fmt::Opaque"** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %7 = bitcast i64** %6 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_3, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %7, align 8
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8, !nonnull !3
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  %12 = insertvalue { i8*, i64* } undef, i8* %9, 0
  %13 = insertvalue { i8*, i64* } %12, i64* %11, 1
  ret { i8*, i64* } %13
}

; core::fmt::num::<impl core::fmt::Debug for usize>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h37d2854d53f25f32E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h0354e4a24413a363E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h964ee865e084bf23E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17hd38ace2d8b112396E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hea1df36702709463E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb9

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17hec07c72f4ac49b15E"(i64* align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10
}

; core::fmt::Write::write_char
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3fmt5Write10write_char17hf7c3841d55cdd675E(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* align 8 dereferenceable(24) %self, i32 %c) unnamed_addr #1 {
start:
  %_10 = alloca [4 x i8], align 1
  %0 = getelementptr inbounds [4 x i8], [4 x i8]* %_10, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 4, i1 false)
  %_7.0 = bitcast [4 x i8]* %_10 to [0 x i8]*
; call core::char::methods::<impl char>::encode_utf8
  %1 = call { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817he3e243a1f32de294E"(i32 %c, [0 x i8]* nonnull align 1 %_7.0, i64 4)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str
  %2 = call zeroext i1 @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hcb811b3ebb30a9ceE"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %_5.0, i64 %_5.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %2
}

; core::fmt::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3fmt5Write9write_fmt17h0d5f236765de11f9E(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* align 8 dereferenceable(24) %0, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %args) unnamed_addr #1 {
start:
  %_6 = alloca %"core::fmt::Arguments", align 8
  %self = alloca %"std::io::Write::write_fmt::Adapter<std::fs::File>"*, align 8
  store %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %0, %"std::io::Write::write_fmt::Adapter<std::fs::File>"** %self, align 8
  %_3.0 = bitcast %"std::io::Write::write_fmt::Adapter<std::fs::File>"** %self to {}*
  %1 = bitcast %"core::fmt::Arguments"* %_6 to i8*
  %2 = bitcast %"core::fmt::Arguments"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 48, i1 false)
; call core::fmt::write
  %3 = call zeroext i1 @_ZN4core3fmt5write17h182b3dab33fa727dE({}* nonnull align 1 %_3.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, i8*, i8*, [0 x i8] }>* @vtable.2 to [3 x i64]*), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_6)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %3
}

; core::fmt::Arguments::new_v1_formatted
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments16new_v1_formatted17hb31be9bfa45775c8E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %0, [0 x { [0 x i8]*, i64 }]* nonnull align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* nonnull align 8 %args.0, i64 %args.1, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 %fmt.0, i64 %fmt.1) unnamed_addr #0 {
start:
  %_6 = alloca { i64*, i64 }, align 8
  %1 = bitcast { i64*, i64 }* %_6 to { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }*
  %2 = getelementptr inbounds { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }, { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }* %1, i32 0, i32 0
  store [0 x %"core::fmt::rt::v1::Argument"]* %fmt.0, [0 x %"core::fmt::rt::v1::Argument"]** %2, align 8
  %3 = getelementptr inbounds { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }, { [0 x %"core::fmt::rt::v1::Argument"]*, i64 }* %1, i32 0, i32 1
  store i64 %fmt.1, i64* %3, align 8
  %4 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %5 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %4, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %5, align 8
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %4, i32 0, i32 1
  store i64 %pieces.1, i64* %6, align 8
  %7 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %7, i32 0, i32 0
  store i64* %9, i64** %12, align 8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %7, i32 0, i32 1
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2
  %15 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %14, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %15, align 8
  %16 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %14, i32 0, i32 1
  store i64 %args.1, i64* %16, align 8
  ret void
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117h2945c196adeacc55E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %0, [0 x { [0 x i8]*, i64 }]* nonnull align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* nonnull align 8 %args.0, i64 %args.1) unnamed_addr #0 {
start:
  %_16 = alloca { i64*, i64 }, align 8
  %_3 = alloca i8, align 1
  %_4 = icmp ult i64 %pieces.1, %args.1
  br i1 %_4, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1
  %_9 = icmp ugt i64 %pieces.1, %_12
  %1 = zext i1 %_9 to i8
  store i8 %1, i8* %_3, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i8, i8* %_3, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %4 = bitcast { i64*, i64 }* %_16 to {}**
  store {}* null, {}** %4, align 8
  %5 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %5, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %6, align 8
  %7 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %5, i32 0, i32 1
  store i64 %pieces.1, i64* %7, align 8
  %8 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1
  %9 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_16, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_16, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %8, i32 0, i32 0
  store i64* %10, i64** %13, align 8
  %14 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %8, i32 0, i32 1
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2
  %16 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %15, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %16, align 8
  %17 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %15, i32 0, i32 1
  store i64 %args.1, i64* %17, align 8
  ret void

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [12 x i8] }>* @alloc473 to [0 x i8]*), i64 12, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc475 to %"core::panic::location::Location"*)) #18
  unreachable
}

; core::mem::needs_drop
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3mem10needs_drop17h30ceb27ffc53623bE() unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  store i8 1, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; core::mem::needs_drop
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core3mem10needs_drop17h3e111691aedc9757E() unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  store i8 0, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; core::mem::maybe_uninit::MaybeUninit<T>::zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6zeroed17h90f18cb591a9721fE"() unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %u = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  store { i8*, i64 } %7, { i8*, i64 }* %u, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %u to { [0 x i8]*, i64 }*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::write_bytes
  call void @_ZN4core10intrinsics11write_bytes17hd08688e525dfa01eE({ [0 x i8]*, i64 }* %8, i8 0, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %u, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %u, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = insertvalue { i8*, i64 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i64 } %13, i64 %12, 1
  ret { i8*, i64 } %14
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem15size_of_val_raw17h81db5fceedfba67dE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %val) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 32, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem15size_of_val_raw17h970962238a9e3fecE(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %val) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 48, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem15size_of_val_raw17he17ad24110cbcbd8E(%"alloc::sync::ArcInner<_ShuffledOrder>"* %val) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 112, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem16align_of_val_raw17h0adc26c32c5246ddE(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %val) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem16align_of_val_raw17h963beffd65cae222E(%"alloc::sync::ArcInner<_ShuffledOrder>"* %val) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem16align_of_val_raw17had84c7bb50425581E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %val) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17h0524c6c5955922beE(i64* nonnull %0) unnamed_addr #0 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<alloc::sync::Weak<probe_tle::_ProbeSemaphore>>
  call void @"_ZN4core3ptr72drop_in_place$LT$alloc..sync..Weak$LT$probe_tle.._ProbeSemaphore$GT$$GT$17h0e3d690808475495E"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17h2f93a6e9290204bbE(i8 %_x) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17haad1700f687a8b2cE(i64* nonnull %0) unnamed_addr #0 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<std::fs::File>>>
  call void @"_ZN4core3ptr90drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$17h1feefbae06c48d78E"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17hb4a1e960f1f0f322E(i64* align 8 dereferenceable(16) %0) unnamed_addr #0 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<std::sync::rwlock::RwLockReadGuard<i32>>
  call void @"_ZN4core3ptr66drop_in_place$LT$std..sync..rwlock..RwLockReadGuard$LT$i32$GT$$GT$17h3c24917e9592e87aE"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17hcdf9a86280ff26f1E(%"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture dereferenceable(24) %_x) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17he8c5737352e924b9E(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture dereferenceable(40) %_x) unnamed_addr #0 {
start:
; call core::ptr::drop_in_place<core::option::Option<core::cell::RefCell<alloc::string::String>>>
  call void @"_ZN4core3ptr97drop_in_place$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17hfb3b481d2103c132E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17hf5beb99d8eeabefeE(i64 %_x) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem4drop17hfa26271965ded1a3E(i64* nonnull %0) unnamed_addr #0 {
start:
  %_x = alloca i64*, align 8
  store i64* %0, i64** %_x, align 8
; call core::ptr::drop_in_place<alloc::sync::Weak<probe_tle::_ShuffledOrder>>
  call void @"_ZN4core3ptr71drop_in_place$LT$alloc..sync..Weak$LT$probe_tle.._ShuffledOrder$GT$$GT$17h7e53edf2ae989a0dE"(i64** %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem7replace17h3874b3d1eba3d24aE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %result, %"alloc::string::String"* align 8 dereferenceable(24) %dest, %"alloc::string::String"* noalias nocapture dereferenceable(24) %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca %"alloc::string::String", align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17h3d469fd8d748f615E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %result, %"alloc::string::String"* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %1 = bitcast %"alloc::string::String"* %_6 to i8*
  %2 = bitcast %"alloc::string::String"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h325b6141519822e0E(%"alloc::string::String"* %dest, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_6)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %3 = load i8, i8* %_7, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h8d8b0bae1660ceedE"(%"alloc::string::String"* %result) #19
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %15 = bitcast { i8*, i32 }* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb5:                                              ; preds = %bb6
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h8d8b0bae1660ceedE"(%"alloc::string::String"* %src) #19
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @_ZN4core3mem7replace17h459f7dcf7f18dd3cE({ i8*, i64 }* align 8 dereferenceable(16) %dest, i8* align 1 %src.0, i64 %src.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %1 = invoke { i8*, i64 } @_ZN4core3ptr4read17h109c0288a15d12b1E({ i8*, i64 }* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %result.0 = extractvalue { i8*, i64 } %1, 0
  %result.1 = extractvalue { i8*, i64 } %1, 1
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h31f22d804b7afe74E({ i8*, i64 }* %dest, i8* align 1 %src.0, i64 %src.1)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %2 = load i8, i8* %_7, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %9 = insertvalue { i8*, i64 } undef, i8* %result.0, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %result.1, 1
  ret { i8*, i64 } %10

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3mem7replace17h56f255a15ba1605fE(i64* align 8 dereferenceable(8) %dest, i64 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i64 @_ZN4core3ptr4read17hf9932e8023d7353fE(i64* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hf0d4613d672510c9E(i64* %dest, i64 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i64 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @_ZN4core3mem7replace17h726b094e186905f0E(i8* align 1 dereferenceable(1) %dest, i8 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  %result = invoke i8 @_ZN4core3ptr4read17heb59ba9f2b6b1a06E(i8* %dest)
          to label %bb1 unwind label %cleanup, !range !14

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h472d38a6bf1be855E(i8* %dest, i8 %src)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %1 = load i8, i8* %_7, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret i8 %result

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem7replace17h8f748652bc0dd5aeE(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") dereferenceable(40) %result, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(40) %dest, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture dereferenceable(40) %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca %"core::option::Option<core::cell::RefCell<alloc::string::String>>", align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17hf80374539f0ab034E(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") dereferenceable(40) %result, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %1 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_6 to i8*
  %2 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hbb9d5664f1e0df93E(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %dest, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture dereferenceable(40) %_6)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %3 = load i8, i8* %_7, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<core::option::Option<core::cell::RefCell<alloc::string::String>>>
  call void @"_ZN4core3ptr97drop_in_place$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17hfb3b481d2103c132E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %result) #19
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %15 = bitcast { i8*, i32 }* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb5:                                              ; preds = %bb6
; call core::ptr::drop_in_place<core::option::Option<core::cell::RefCell<alloc::string::String>>>
  call void @"_ZN4core3ptr97drop_in_place$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17hfb3b481d2103c132E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %src) #19
  br label %bb4
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3mem7replace17hf7dab2abeb3618bcE(%"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<i32>>") dereferenceable(24) %result, %"core::option::Option<core::cell::RefCell<i32>>"* align 8 dereferenceable(24) %dest, %"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture dereferenceable(24) %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca %"core::option::Option<core::cell::RefCell<i32>>", align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17hcf8b4a7f6e23e0ceE(%"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<i32>>") dereferenceable(24) %result, %"core::option::Option<core::cell::RefCell<i32>>"* %dest)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %1 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_6 to i8*
  %2 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h628b14131a79146dE(%"core::option::Option<core::cell::RefCell<i32>>"* %dest, %"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture dereferenceable(24) %_6)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %bb3, %cleanup
  %3 = load i8, i8* %_7, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb5, label %bb4

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3

bb4:                                              ; preds = %bb5, %bb6
  %15 = bitcast { i8*, i32 }* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h42104c7a00ec9152E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !4
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !4
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !4
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<usize>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !2
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h584337ecdb7f49b8E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs)
  %5 = extractvalue { i64, i1 } %4, 0
  %6 = extractvalue { i64, i1 } %4, 1
  %7 = zext i1 %6 to i8
  %8 = bitcast { i64, i8 }* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %_5.0.i = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !4
  %_5.1.i = trunc i8 %12 to i1
  %13 = bitcast { i64, i8 }* %1 to i64*
  store i64 %_5.0.i, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %15 = zext i1 %_5.1.i to i8
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !4
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i8
  %22 = insertvalue { i64, i8 } undef, i64 %17, 0
  %23 = insertvalue { i64, i8 } %22, i8 %21, 1
  %_5.0 = extractvalue { i64, i8 } %23, 0
  %24 = extractvalue { i64, i8 } %23, 1
  %_5.1 = trunc i8 %24 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %25 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false)
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %2, align 1
  %27 = load i8, i8* %2, align 1, !range !4
  %_8 = trunc i8 %27 to i1
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %3 to %"core::option::Option<usize>::Some"*
  %29 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %28, i32 0, i32 1
  store i64 %_5.0, i64* %29, align 8
  %30 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %30, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  %31 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %31, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !range !2
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = insertvalue { i64, i64 } undef, i64 %33, 0
  %37 = insertvalue { i64, i64 } %36, i64 %35, 1
  ret { i64, i64 } %37
}

; core::num::<impl usize>::next_power_of_two
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h5d4579a3c2af4c5dE"(i64 %self) unnamed_addr #0 {
start:
; call core::num::<impl usize>::one_less_than_next_power_of_two
  %_2 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h4097736c1de9961dE"(i64 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_2, i64 1)
  %_4.0 = extractvalue { i64, i1 } %0, 0
  %_4.1 = extractvalue { i64, i1 } %0, 1
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false)
  br i1 %1, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %_4.0

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.4 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc477 to %"core::panic::location::Location"*)) #18
  unreachable
}

; core::num::<impl usize>::one_less_than_next_power_of_two
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$31one_less_than_next_power_of_two17h4097736c1de9961dE"(i64 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %_2 = icmp ule i64 %self, 1
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %p = sub i64 %self, 1
  %2 = call i64 @llvm.ctlz.i64(i64 %p, i1 true)
  store i64 %2, i64* %0, align 8
  %z = load i64, i64* %0, align 8
  br label %bb3

bb1:                                              ; preds = %start
  store i64 0, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %3 = load i64, i64* %1, align 8
  ret i64 %3

bb3:                                              ; preds = %bb2
  %4 = and i64 %z, 63
  %5 = lshr i64 -1, %4
  store i64 %5, i64* %1, align 8
  br label %bb4
}

; core::num::nonzero::NonZeroUsize::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h96b19ba77570b373E(i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 %n, i64* %0, align 8
  %1 = load i64, i64* %0, align 8, !range !16
  ret i64 %1
}

; core::num::nonzero::NonZeroUsize::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize3get17had60ff6594c168abE(i64 %self) unnamed_addr #0 {
start:
  ret i64 %self
}

; core::ops::control_flow::ControlFlow<B,C>::break_value
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h9058374bf9501e0fE"(i8* align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_2 = select i1 %7, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %8, align 8
  br label %bb6

bb1:                                              ; preds = %start
  %9 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %x.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !nonnull !3
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %x.1 = load i64, i64* %11, align 8
  %12 = bitcast { i8*, i64 }* %2 to { [0 x i8]*, i64 }*
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0
  store [0 x i8]* %x.0, [0 x i8]** %13, align 8
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1
  store i64 %x.1, i64* %14, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb1
  %15 = bitcast { i8*, i64 }* %self to {}**
  %16 = load {}*, {}** %15, align 8
  %17 = icmp eq {}* %16, null
  %_5 = select i1 %17, i64 0, i64 1
  %18 = icmp eq i64 %_5, 1
  br i1 %18, label %bb4, label %bb5

bb4:                                              ; preds = %bb5, %bb6
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = insertvalue { i8*, i64 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i64 } %23, i64 %22, 1
  ret { i8*, i64 } %24

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17ha8d1a49591353166E"(%"core::str::IsNotEmpty"** align 8 dereferenceable(8) %self, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %0) unnamed_addr #1 {
start:
  %args = alloca i64*, align 8
  %1 = bitcast i64** %args to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %0, { [0 x i8]*, i64 }** %1, align 8
  %_3 = load %"core::str::IsNotEmpty"*, %"core::str::IsNotEmpty"** %self, align 8, !nonnull !3
  %_4 = load i64*, i64** %args, align 8, !nonnull !3
  %2 = bitcast i64* %_4 to { [0 x i8]*, i64 }*
; call <core::str::IsNotEmpty as core::ops::function::FnMut<(&&str,)>>::call_mut
  %3 = call zeroext i1 @"_ZN98_$LT$core..str..IsNotEmpty$u20$as$u20$core..ops..function..FnMut$LT$$LP$$RF$$RF$str$C$$RP$$GT$$GT$8call_mut17h5a56d9083e3e12a9E"(%"core::str::IsNotEmpty"* nonnull align 1 %_3, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %3
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h16d9773e2f66363cE(%"core::cell::RefCell<alloc::string::String>"* noalias nocapture sret(%"core::cell::RefCell<alloc::string::String>") dereferenceable(32) %0) unnamed_addr #0 {
start:
  %_2 = alloca {}, align 1
; call probe_tle::TID::__init
  call void @_ZN9probe_tle3TID6__init17hd4b1a1fdbda31a2bE(%"core::cell::RefCell<alloc::string::String>"* noalias nocapture sret(%"core::cell::RefCell<alloc::string::String>") dereferenceable(32) %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @_ZN4core3ops8function6FnOnce9call_once17h51fa0ec274d37642E() unnamed_addr #0 {
start:
  %_2 = alloca {}, align 1
; call probe_tle::CHILD_ID::__init
  %0 = call { i64, i32 } @_ZN9probe_tle8CHILD_ID6__init17h0ef85434b239925cE()
  %1 = extractvalue { i64, i32 } %0, 0
  %2 = extractvalue { i64, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i32 } undef, i64 %1, 0
  %4 = insertvalue { i64, i32 } %3, i32 %2, 1
  ret { i64, i32 } %4
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17h7ac0ccb1f206ec63E(i64* align 8 dereferenceable(8) %0, i64* align 8 dereferenceable(8) %1) unnamed_addr #0 {
start:
  %_2 = alloca { i64*, i64* }, align 8
  %2 = bitcast { i64*, i64* }* %_2 to i64**
  store i64* %0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  store i64* %1, i64** %3, align 8
  %4 = bitcast { i64*, i64* }* %_2 to i64**
  %5 = load i64*, i64** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !3
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %8 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h2ecf05501b37c558E"(i64* align 8 dereferenceable(8) %5, i64* align 8 dereferenceable(8) %7), !range !15
  br label %bb1

bb1:                                              ; preds = %start
  ret i8 %8
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr101drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h90ab9aa3e01811f9E"(%"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %_1 to %"alloc::collections::vec_deque::VecDeque<i32>"*
; call core::ptr::drop_in_place<alloc::collections::vec_deque::VecDeque<i32>>
  call void @"_ZN4core3ptr71drop_in_place$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$17had6f692e017e6505E"(%"alloc::collections::vec_deque::VecDeque<i32>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr102drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h06b200a280fcf0bfE"(%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = bitcast %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %_1 to i64**
; invoke core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  invoke void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h46e122904241ac1cE"(i64** %1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %2 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>>
  call void @"_ZN4core3ptr101drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h90ab9aa3e01811f9E"(%"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %2)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %3 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>>
  call void @"_ZN4core3ptr101drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h90ab9aa3e01811f9E"(%"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %3) #19
  br label %bb1

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr103drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$$GT$17h9dabfa2b54ef84d2E"({ i64*, i8 }* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<()>>
  call void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$17h92307b27fd4ec372E"({ i64*, i8 }* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr104drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..rwlock..RwLockReadGuard$LT$i32$GT$$GT$$GT$17hc00c6a3dbc8306b5E"(i64** %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sync::rwlock::RwLockReadGuard<i32>>
  call void @"_ZN4core3ptr66drop_in_place$LT$std..sync..rwlock..RwLockReadGuard$LT$i32$GT$$GT$17h3c24917e9592e87aE"(i64** %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr105drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..rwlock..RwLockWriteGuard$LT$i32$GT$$GT$$GT$17hcd4e14d7be50d595E"({ i64*, i8 }* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sync::rwlock::RwLockWriteGuard<i32>>
  call void @"_ZN4core3ptr67drop_in_place$LT$std..sync..rwlock..RwLockWriteGuard$LT$i32$GT$$GT$17ha3125b4ee7dc5ef5E"({ i64*, i8 }* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr106drop_in_place$LT$std..thread..local..fast..Key$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17h266fa0b7f8687786E"(%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* %_1 to %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"*
; call core::ptr::drop_in_place<std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>>
  call void @"_ZN4core3ptr115drop_in_place$LT$std..thread..local..lazy..LazyKeyInner$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17h981c0130759be154E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr107drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17hb7a2e132aac5020bE"({ i64*, i8 }* %_1) unnamed_addr #1 {
start:
; call <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2252461a279c8179E"({ i64*, i8 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr108drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$$GT$17hef8b788b9abac303E"({ i64*, i8 }* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h0291b9d70805d303E"({ i64*, i8 }* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr115drop_in_place$LT$std..thread..local..lazy..LazyKeyInner$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17h981c0130759be154E"(%"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::thread::local::lazy::LazyKeyInner<core::cell::RefCell<alloc::string::String>>"* %_1 to %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"*
; call core::ptr::drop_in_place<core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>>
  call void @"_ZN4core3ptr127drop_in_place$LT$core..cell..UnsafeCell$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$$GT$17hf1220039e4503c2eE"(%"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Sync+core::marker::Send>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$17hdce3a620641542d9E"({ {}*, [3 x i64]* }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 0
  %2 = load {}*, {}** %1, align 8, !nonnull !3
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 1
  %4 = load [3 x i64]*, [3 x i64]** %3, align 8, !nonnull !3
  %5 = bitcast [3 x i64]* %4 to void ({}*)**
  %6 = getelementptr inbounds void ({}*)*, void ({}*)** %5, i64 0
  %7 = load void ({}*)*, void ({}*)** %6, align 8, !invariant.load !3, !nonnull !3
  invoke void %7({}* %2)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %start
  %8 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !nonnull !3
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17ha4f0c53ea7e5a982E(i8* nonnull %10, i64* align 8 dereferenceable(24) %12)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %13 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8, !nonnull !3
  %16 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 1
  %17 = load i64*, i64** %16, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17ha4f0c53ea7e5a982E(i8* nonnull %15, i64* align 8 dereferenceable(24) %17) #19
  br label %bb2

cleanup:                                          ; preds = %start
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb4

bb2:                                              ; preds = %bb4
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<std::fs::File>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr117drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$$GT$17h297541187a3186aaE"(i64** %_1) unnamed_addr #1 {
start:
  %0 = bitcast i64** %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<std::fs::File>>>
  call void @"_ZN4core3ptr89drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$17h117b4e4a0c1cbecdE"(i64** %_1)
  br label %bb1
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr127drop_in_place$LT$core..cell..UnsafeCell$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$$GT$17hf1220039e4503c2eE"(%"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::cell::UnsafeCell<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_1 to %"core::option::Option<core::cell::RefCell<alloc::string::String>>"*
; call core::ptr::drop_in_place<core::option::Option<core::cell::RefCell<alloc::string::String>>>
  call void @"_ZN4core3ptr97drop_in_place$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17hfb3b481d2103c132E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::Dropper<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr140drop_in_place$LT$$LT$alloc..collections..vec_deque..VecDeque$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..Dropper$LT$i32$GT$$GT$17h5468cc7b8704df52E"({ i32*, i64 }* %_1) unnamed_addr #1 {
start:
; call <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::Dropper<T> as core::ops::drop::Drop>::drop
  call void @"_ZN159_$LT$$LT$alloc..collections..vec_deque..VecDeque$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..Dropper$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3fba8f92c1fa0847E"({ i32*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr145drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$$GT$17hc8311b3a2fb80a78E"({ i64*, i8 }* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>
  call void @"_ZN4core3ptr107drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17hb7a2e132aac5020bE"({ i64*, i8 }* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<&str,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr161drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$$RF$str$C$alloc..alloc..Global$GT$$GT$17h60d180ff612b993eE"(i64** %_1) unnamed_addr #1 {
start:
; call <<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN157_$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hddb594ec32be0f49E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h0ad27f302787a75bE(i8* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h7a31a5e930e7ae77E"(i8* %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hed7cd3a9a3d454b6E({}* %_3, i64 %len)
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hadb1fd8ce09fb23bE(i32* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast i32* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x i32]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h7d3b137d211b18deE({}* %0, i64 %len)
  %2 = extractvalue { [0 x i32]*, i64 } %1, 0
  %3 = extractvalue { [0 x i32]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %2, 0
  %5 = insertvalue { [0 x i32]*, i64 } %4, i64 %3, 1
  ret { [0 x i32]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hbc205848bd75c776E({ [0 x i8]*, i64 }* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast { [0 x i8]*, i64 }* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hce2423d93fdfff58E({}* %0, i64 %len)
  %2 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %1, 0
  %3 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } undef, [0 x { [0 x i8]*, i64 }]* %2, 0
  %5 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %4, i64 %3, 1
  ret { [0 x { [0 x i8]*, i64 }]*, i64 } %5
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17he9459e820dc6fd6fE(i8* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = bitcast i8* %data to {}*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h6ce8c0f83838c9adE({}* %0, i64 %len)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::ptr::drop_in_place<&str>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h9fbf1424ed5c113aE"({ [0 x i8]*, i64 }* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&usize>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h19237c4617f9bc32E"(i64** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<std::fs::File>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17he584526ff1bb905aE"(i32* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sys::unix::fs::File>
  call void @"_ZN4core3ptr45drop_in_place$LT$std..sys..unix..fs..File$GT$17h3f0d34116cfa61d0E"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::io::error::Repr>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr41drop_in_place$LT$std..io..error..Repr$GT$17hdb3afea668a3e36dE"(%"std::io::error::Repr"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::io::error::Repr"* %_1 to i8*
  %1 = load i8, i8* %0, align 8, !range !6
  %_2 = zext i8 %1 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb1
    i64 2, label %bb1
  ]

bb2:                                              ; preds = %start
  %2 = bitcast %"std::io::error::Repr"* %_1 to %"std::io::error::Repr::Custom"*
  %3 = getelementptr inbounds %"std::io::error::Repr::Custom", %"std::io::error::Repr::Custom"* %2, i32 0, i32 1
; call core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
  call void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17hdceda1b95d51e13aE"(%"std::io::error::Custom"** %3)
  br label %bb1

bb1:                                              ; preds = %bb2, %start, %start, %start
  ret void
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h8d8b0bae1660ceedE"(%"alloc::string::String"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"alloc::string::String"* %_1 to %"alloc::vec::Vec<u8>"*
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h4d06811121b53ea3E"(%"alloc::vec::Vec<u8>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::BorrowRef>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$core..cell..BorrowRef$GT$17hd28efc35f987cd04E"(i64** %_1) unnamed_addr #1 {
start:
; call <core::cell::BorrowRef as core::ops::drop::Drop>::drop
  call void @"_ZN63_$LT$core..cell..BorrowRef$u20$as$u20$core..ops..drop..Drop$GT$4drop17h95c3c09c340a4ce6E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::io::error::Error>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hda7771387f347390E"(%"std::io::error::Error"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::io::error::Error"* %_1 to %"std::io::error::Repr"*
; call core::ptr::drop_in_place<std::io::error::Repr>
  call void @"_ZN4core3ptr41drop_in_place$LT$std..io..error..Repr$GT$17hdb3afea668a3e36dE"(%"std::io::error::Repr"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::io::error::Custom>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h426d51d47f9abce8E"(%"std::io::error::Custom"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::io::error::Custom"* %_1 to { {}*, [3 x i64]* }*
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Sync+core::marker::Send>>
  call void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$17hdce3a620641542d9E"({ {}*, [3 x i64]* }* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::BorrowError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr44drop_in_place$LT$core..cell..BorrowError$GT$17h4eb9cf3fe3320816E"(%"core::cell::BorrowError"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<core::cell::BorrowRefMut>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr45drop_in_place$LT$core..cell..BorrowRefMut$GT$17h8025dcdd46521184E"(i64** %_1) unnamed_addr #1 {
start:
; call <core::cell::BorrowRefMut as core::ops::drop::Drop>::drop
  call void @"_ZN66_$LT$core..cell..BorrowRefMut$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc7346467d4e7bd3bE"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sys::unix::fs::File>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr45drop_in_place$LT$std..sys..unix..fs..File$GT$17h3f0d34116cfa61d0E"(i32* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sys::unix::fd::FileDesc>
  call void @"_ZN4core3ptr49drop_in_place$LT$std..sys..unix..fd..FileDesc$GT$17hec21d141bb74c9adE"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h4d06811121b53ea3E"(%"alloc::vec::Vec<u8>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0b5abc20312eff4eE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17he622c3a8e376ed10E"({ i8*, i64 }* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17he622c3a8e376ed10E"({ i8*, i64 }* %2) #19
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<probe_tle::_ShuffledOrder>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr46drop_in_place$LT$probe_tle.._ShuffledOrder$GT$17h04c9573153951160E"(%_ShuffledOrder* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = bitcast %_ShuffledOrder* %_1 to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*
; invoke core::ptr::drop_in_place<std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>>
  invoke void @"_ZN4core3ptr102drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h06b200a280fcf0bfE"(%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %start
  %2 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<std::sync::rwlock::RwLock<i32>>
  invoke void @"_ZN4core3ptr57drop_in_place$LT$std..sync..rwlock..RwLock$LT$i32$GT$$GT$17h3c1301b4aa4bf45eE"(%"std::sync::rwlock::RwLock<i32>"* %2)
          to label %bb7 unwind label %cleanup1

bb5:                                              ; preds = %cleanup
  %3 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<std::sync::rwlock::RwLock<i32>>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sync..rwlock..RwLock$LT$i32$GT$$GT$17h3c1301b4aa4bf45eE"(%"std::sync::rwlock::RwLock<i32>"* %3) #19
  br label %bb4

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb4:                                              ; preds = %cleanup1, %bb5
  %9 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %_1, i32 0, i32 2
; call core::ptr::drop_in_place<std::sync::condvar::Condvar>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..sync..condvar..Condvar$GT$17hc0b8fe413a6763f7E"(%"std::sync::condvar::Condvar"* %9) #19
  br label %bb3

bb7:                                              ; preds = %bb8
  %10 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %_1, i32 0, i32 2
; invoke core::ptr::drop_in_place<std::sync::condvar::Condvar>
  invoke void @"_ZN4core3ptr48drop_in_place$LT$std..sync..condvar..Condvar$GT$17hc0b8fe413a6763f7E"(%"std::sync::condvar::Condvar"* %10)
          to label %bb6 unwind label %cleanup2

cleanup1:                                         ; preds = %bb8
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb4

bb3:                                              ; preds = %cleanup2, %bb4
  %16 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<()>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..Mutex$LT$$LP$$RP$$GT$$GT$17hf69e0c79f3ab28d2E"(%"std::sync::mutex::Mutex<()>"* %16) #19
  br label %bb1

bb6:                                              ; preds = %bb7
  %17 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<()>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..Mutex$LT$$LP$$RP$$GT$$GT$17hf69e0c79f3ab28d2E"(%"std::sync::mutex::Mutex<()>"* %17)
  br label %bb2

cleanup2:                                         ; preds = %bb7
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb2:                                              ; preds = %bb6
  ret void
}

; core::ptr::drop_in_place<core::cell::BorrowMutError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr47drop_in_place$LT$core..cell..BorrowMutError$GT$17he4fe56a2cffc7169E"(%"core::cell::BorrowMutError"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<probe_tle::_ProbeSemaphore>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr47drop_in_place$LT$probe_tle.._ProbeSemaphore$GT$17hcff30237c3850caaE"(%_ProbeSemaphore* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = bitcast %_ProbeSemaphore* %_1 to %"std::sync::mutex::Mutex<i32>"*
; invoke core::ptr::drop_in_place<std::sync::mutex::Mutex<i32>>
  invoke void @"_ZN4core3ptr55drop_in_place$LT$std..sync..mutex..Mutex$LT$i32$GT$$GT$17hf5df23ad8160777eE"(%"std::sync::mutex::Mutex<i32>"* %1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %2 = getelementptr inbounds %_ProbeSemaphore, %_ProbeSemaphore* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<std::sync::condvar::Condvar>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..sync..condvar..Condvar$GT$17hc0b8fe413a6763f7E"(%"std::sync::condvar::Condvar"* %2)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %3 = getelementptr inbounds %_ProbeSemaphore, %_ProbeSemaphore* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<std::sync::condvar::Condvar>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..sync..condvar..Condvar$GT$17hc0b8fe413a6763f7E"(%"std::sync::condvar::Condvar"* %3) #19
  br label %bb1

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<core::str::error::Utf8Error>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h8791befe6fd7b788E"(%"core::str::error::Utf8Error"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<std::os::fd::owned::OwnedFd>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17h514c37b745eeb09eE"(i32* %_1) unnamed_addr #1 {
start:
; call <std::os::fd::owned::OwnedFd as core::ops::drop::Drop>::drop
  call void @"_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2f5c0ac9a53f483cE"(i32* align 4 dereferenceable(4) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::condvar::Condvar>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr48drop_in_place$LT$std..sync..condvar..Condvar$GT$17hc0b8fe413a6763f7E"(%"std::sync::condvar::Condvar"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::sync::condvar::Condvar"* %_1 to %"std::sys_common::condvar::Condvar"*
; call core::ptr::drop_in_place<std::sys_common::condvar::Condvar>
  call void @"_ZN4core3ptr54drop_in_place$LT$std..sys_common..condvar..Condvar$GT$17h22fe1b83130372ebE"(%"std::sys_common::condvar::Condvar"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sys::unix::fd::FileDesc>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr49drop_in_place$LT$std..sys..unix..fd..FileDesc$GT$17hec21d141bb74c9adE"(i32* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::os::fd::owned::OwnedFd>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17h514c37b745eeb09eE"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @_ZN4core3ptr4read17h109c0288a15d12b1E({ i8*, i64 }* %src) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %tmp = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  store { i8*, i64 } %7, { i8*, i64 }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast { i8*, i64 }* %tmp to i8*
  %9 = bitcast { i8*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 0
  %_6.0 = load i8*, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 1
  %_6.1 = load i64, i64* %11, align 8
  %12 = insertvalue { i8*, i64 } undef, i8* %_6.0, 0
  %13 = insertvalue { i8*, i64 } %12, i64 %_6.1, 1
  %14 = insertvalue { i8*, i64 } undef, i8* %_6.0, 0
  %15 = insertvalue { i8*, i64 } %14, i64 %_6.1, 1
  %16 = extractvalue { i8*, i64 } %15, 0
  %17 = extractvalue { i8*, i64 } %15, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %18 = insertvalue { i8*, i64 } undef, i8* %16, 0
  %19 = insertvalue { i8*, i64 } %18, i64 %17, 1
  ret { i8*, i64 } %19
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17h3d469fd8d748f615E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, %"alloc::string::String"* %src) unnamed_addr #0 {
start:
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>", align 8
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>", align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !17)
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %tmp to %"alloc::string::String"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"alloc::string::String"* %2 to i8*
  %4 = bitcast %"alloc::string::String"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %_6 to i8*
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !20)
  call void @llvm.experimental.noalias.scope.decl(metadata !23)
  %7 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %_6 to %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"* %_3.i to i8*
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !noalias !20
  call void @llvm.experimental.noalias.scope.decl(metadata !25)
  call void @llvm.experimental.noalias.scope.decl(metadata !28)
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"* %_3.i to %"alloc::string::String"*
  %11 = bitcast %"alloc::string::String"* %0 to i8*
  %12 = bitcast %"alloc::string::String"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false), !alias.scope !30, !noalias !23
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @_ZN4core3ptr4read17h573c718a6fba7280E(i32* %src) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %1 = bitcast i32* %0 to {}*
  %2 = load i32, i32* %0, align 4
  store i32 %2, i32* %tmp, align 4
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i32* %tmp to i8*
  %4 = bitcast i32* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false)
  %_6 = load i32, i32* %tmp, align 4
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i32 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr4read17h7c06b2d66da0217bE({ [0 x i8]*, i64 }* %src) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %tmp = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  store { i8*, i64 } %7, { i8*, i64 }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %tmp to { [0 x i8]*, i64 }*
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = bitcast { [0 x i8]*, i64 }* %8 to i8*
  %10 = bitcast { [0 x i8]*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 0
  %_6.0 = load i8*, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 1
  %_6.1 = load i64, i64* %12, align 8
  %13 = bitcast i8* %_6.0 to [0 x i8]*
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %_6.1, 1
  %16 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %13, 0
  %17 = insertvalue { [0 x i8]*, i64 } %16, i64 %_6.1, 1
  %18 = extractvalue { [0 x i8]*, i64 } %17, 0
  %19 = extractvalue { [0 x i8]*, i64 } %17, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %20 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %18, 0
  %21 = insertvalue { [0 x i8]*, i64 } %20, i64 %19, 1
  ret { [0 x i8]*, i64 } %21
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17h964699b2b6f1dea9E(%"alloc::alloc::Global"* %src) unnamed_addr #0 {
start:
  %0 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %0 to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp to %"alloc::alloc::Global"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"alloc::alloc::Global"* %2 to i8*
  %4 = bitcast %"alloc::alloc::Global"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 0, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17hcf8b4a7f6e23e0ceE(%"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<i32>>") dereferenceable(24) %0, %"core::option::Option<core::cell::RefCell<i32>>"* %src) unnamed_addr #0 {
start:
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<i32>>>", align 8
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>", align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !31)
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>"* %tmp to %"core::option::Option<core::cell::RefCell<i32>>"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %2 to i8*
  %4 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>"* %_6 to i8*
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !34)
  call void @llvm.experimental.noalias.scope.decl(metadata !37)
  %7 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<i32>>>"* %_6 to %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<i32>>>"*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<i32>>>"* %_3.i to i8*
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<i32>>>"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !noalias !34
  call void @llvm.experimental.noalias.scope.decl(metadata !39)
  call void @llvm.experimental.noalias.scope.decl(metadata !42)
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<i32>>>"* %_3.i to %"core::option::Option<core::cell::RefCell<i32>>"*
  %11 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %0 to i8*
  %12 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false), !alias.scope !44, !noalias !37
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @_ZN4core3ptr4read17heb59ba9f2b6b1a06E(i8* %src) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %tmp = alloca i8, align 1
  %1 = bitcast i8* %0 to {}*
  %2 = load i8, i8* %0, align 1
  store i8 %2, i8* %tmp, align 1
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %tmp, i8* align 1 %src, i64 1, i1 false)
  %_6 = load i8, i8* %tmp, align 1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8 %_6
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr4read17hf80374539f0ab034E(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") dereferenceable(40) %0, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %src) unnamed_addr #0 {
start:
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<alloc::string::String>>>", align 8
  %_6 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>", align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !45)
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %tmp to %"core::option::Option<core::cell::RefCell<alloc::string::String>>"*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %2 to i8*
  %4 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_6 to i8*
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 40, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !48)
  call void @llvm.experimental.noalias.scope.decl(metadata !51)
  %7 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_6 to %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<alloc::string::String>>>"*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_3.i to i8*
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 40, i1 false), !noalias !48
  call void @llvm.experimental.noalias.scope.decl(metadata !53)
  call void @llvm.experimental.noalias.scope.decl(metadata !56)
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::cell::RefCell<alloc::string::String>>>"* %_3.i to %"core::option::Option<core::cell::RefCell<alloc::string::String>>"*
  %11 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %0 to i8*
  %12 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 40, i1 false), !alias.scope !58, !noalias !51
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr4read17hf9932e8023d7353fE(i64* %src) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %1 = bitcast i64* %0 to {}*
  %2 = load i64, i64* %0, align 8
  store i64 %2, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast i64* %tmp to i8*
  %4 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %_6 = load i64, i64* %tmp, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %_6
}

; core::ptr::drop_in_place<core::cell::RefMut<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr50drop_in_place$LT$core..cell..RefMut$LT$i32$GT$$GT$17h08c85482eb858f55E"({ i32*, i64* }* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::cell::BorrowRefMut>
  call void @"_ZN4core3ptr45drop_in_place$LT$core..cell..BorrowRefMut$GT$17h8025dcdd46521184E"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<&str>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17hddd125c81345c4d3E"(%"alloc::vec::Vec<&str>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfd4713facc8a1e54E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast %"alloc::vec::Vec<&str>"* %_1 to { i64*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h545104aaffa70c4fE"({ i64*, i64 }* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast %"alloc::vec::Vec<&str>"* %_1 to { i64*, i64 }*
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h545104aaffa70c4fE"({ i64*, i64 }* %2) #19
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<core::num::error::ParseIntError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr52drop_in_place$LT$core..num..error..ParseIntError$GT$17hb0b2760884451146E"(i8* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<std::thread::local::AccessError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr52drop_in_place$LT$std..thread..local..AccessError$GT$17h4a435bf059f9a35cE"(%"std::thread::local::AccessError"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17he622c3a8e376ed10E"({ i8*, i64 }* %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8b9444435332016cE"({ i8*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::alloc::layout::LayoutError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17h84f351adb5c81ce7E"(%"core::alloc::layout::LayoutError"* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17h4818d6b9c21a08bfE"({ i32*, i64 }* %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h68315a8a9dde9455E"({ i32*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sys_common::condvar::Condvar>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr54drop_in_place$LT$std..sys_common..condvar..Condvar$GT$17h22fe1b83130372ebE"(%"std::sys_common::condvar::Condvar"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <std::sys_common::condvar::Condvar as core::ops::drop::Drop>::drop
  invoke void @"_ZN75_$LT$std..sys_common..condvar..Condvar$u20$as$u20$core..ops..drop..Drop$GT$4drop17h83b8ba3d0c35aabaE"(%"std::sys_common::condvar::Condvar"* align 8 dereferenceable(16) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast %"std::sys_common::condvar::Condvar"* %_1 to %"std::sys::unix::condvar::Condvar"**
; call core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::condvar::Condvar>>
  call void @"_ZN4core3ptr78drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..condvar..Condvar$GT$$GT$17h8c304a516084646aE"(%"std::sys::unix::condvar::Condvar"** %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast %"std::sys_common::condvar::Condvar"* %_1 to %"std::sys::unix::condvar::Condvar"**
; call core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::condvar::Condvar>>
  call void @"_ZN4core3ptr78drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..condvar..Condvar$GT$$GT$17h8c304a516084646aE"(%"std::sys::unix::condvar::Condvar"** %2) #19
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::Mutex<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr55drop_in_place$LT$std..sync..mutex..Mutex$LT$i32$GT$$GT$17hf5df23ad8160777eE"(%"std::sync::mutex::Mutex<i32>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::sync::mutex::Mutex<i32>"* %_1 to i64**
; call core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h46e122904241ac1cE"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::rwlock::RwLock<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr57drop_in_place$LT$std..sync..rwlock..RwLock$LT$i32$GT$$GT$17h3c1301b4aa4bf45eE"(%"std::sync::rwlock::RwLock<i32>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::sync::rwlock::RwLock<i32>"* %_1 to i64**
; call core::ptr::drop_in_place<std::sys_common::rwlock::MovableRWLock>
  call void @"_ZN4core3ptr59drop_in_place$LT$std..sys_common..rwlock..MovableRWLock$GT$17he9205f735635f60bE"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h46e122904241ac1cE"(i64** %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <std::sys_common::mutex::MovableMutex as core::ops::drop::Drop>::drop
  invoke void @"_ZN78_$LT$std..sys_common..mutex..MovableMutex$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha55fce36199af4d5E"(i64** align 8 dereferenceable(8) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast i64** %_1 to %"std::sys::unix::mutex::Mutex"**
; call core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::mutex::Mutex>>
  call void @"_ZN4core3ptr74drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..mutex..Mutex$GT$$GT$17hbd19c05995fd5f96E"(%"std::sys::unix::mutex::Mutex"** %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast i64** %_1 to %"std::sys::unix::mutex::Mutex"**
; call core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::mutex::Mutex>>
  call void @"_ZN4core3ptr74drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..mutex..Mutex$GT$$GT$17hbd19c05995fd5f96E"(%"std::sys::unix::mutex::Mutex"** %2) #19
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<&core::option::Option<usize>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr58drop_in_place$LT$$RF$core..option..Option$LT$usize$GT$$GT$17hefabcf07edef6565E"({ i64, i64 }** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h545104aaffa70c4fE"({ i64*, i64 }* %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he265eab8ca477497E"({ i64*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sys_common::rwlock::MovableRWLock>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr59drop_in_place$LT$std..sys_common..rwlock..MovableRWLock$GT$17he9205f735635f60bE"(i64** %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <std::sys_common::rwlock::MovableRWLock as core::ops::drop::Drop>::drop
  invoke void @"_ZN80_$LT$std..sys_common..rwlock..MovableRWLock$u20$as$u20$core..ops..drop..Drop$GT$4drop17haffd3c1b234564a3E"(i64** align 8 dereferenceable(8) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = bitcast i64** %_1 to %"std::sys::unix::rwlock::RWLock"**
; call core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::rwlock::RWLock>>
  call void @"_ZN4core3ptr76drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..rwlock..RWLock$GT$$GT$17habd59a69e0c39d75E"(%"std::sys::unix::rwlock::RWLock"** %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = bitcast i64** %_1 to %"std::sys::unix::rwlock::RWLock"**
; call core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::rwlock::RWLock>>
  call void @"_ZN4core3ptr76drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..rwlock..RWLock$GT$$GT$17habd59a69e0c39d75E"(%"std::sys::unix::rwlock::RWLock"** %2) #19
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h31f22d804b7afe74E({ i8*, i64 }* %dst, i8* align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %src = alloca { i8*, i64 }, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 0
  store i8* %0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %src, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = bitcast { i8*, i64 }* %dst to i8*
  %5 = bitcast { i8*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h325b6141519822e0E(%"alloc::string::String"* %dst, %"alloc::string::String"* noalias nocapture dereferenceable(24) %src) unnamed_addr #0 {
start:
  %0 = bitcast %"alloc::string::String"* %dst to i8*
  %1 = bitcast %"alloc::string::String"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h472d38a6bf1be855E(i8* %dst, i8 %0) unnamed_addr #0 {
start:
  %src = alloca i8, align 1
  store i8 %0, i8* %src, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 1, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17h628b14131a79146dE(%"core::option::Option<core::cell::RefCell<i32>>"* %dst, %"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture dereferenceable(24) %src) unnamed_addr #0 {
start:
  %0 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %dst to i8*
  %1 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hbb9d5664f1e0df93E(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %dst, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture dereferenceable(40) %src) unnamed_addr #0 {
start:
  %0 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %dst to i8*
  %1 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 40, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hcd3f32d9859e1eaeE({ [0 x i8]*, i64 }* %dst, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %src = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = bitcast { [0 x i8]*, i64 }* %dst to i8*
  %5 = bitcast { [0 x i8]*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hf0d4613d672510c9E(i64* %dst, i64 %0) unnamed_addr #0 {
start:
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
  %1 = bitcast i64* %dst to i8*
  %2 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr5write17hf26d395e85ae3bf6E(i32* %dst, i32 %0) unnamed_addr #0 {
start:
  %src = alloca i32, align 4
  store i32 %0, i32* %src, align 4
  %1 = bitcast i32* %dst to i8*
  %2 = bitcast i32* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 4, i1 false)
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::Mutex<()>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..Mutex$LT$$LP$$RP$$GT$$GT$17hf69e0c79f3ab28d2E"(%"std::sync::mutex::Mutex<()>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"std::sync::mutex::Mutex<()>"* %_1 to i64**
; call core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h46e122904241ac1cE"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h90d0415356584575E"({ i64*, i8 }* %_1) unnamed_addr #1 {
start:
; call <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6caafeeba4da876eE"({ i64*, i8 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<std::fs::File>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr64drop_in_place$LT$core..cell..UnsafeCell$LT$std..fs..File$GT$$GT$17h3d334bea1a09a3ddE"(i32* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17he584526ff1bb905aE"(i32* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17hf5df39aff9f85eacE"({ i64*, i64* }* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::cell::BorrowRef>
  call void @"_ZN4core3ptr42drop_in_place$LT$core..cell..BorrowRef$GT$17hd28efc35f987cd04E"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::Mutex<std::fs::File>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$17h296b5459b53cab5aE"(%"std::sync::mutex::Mutex<std::fs::File>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %_1 to i64**
; invoke core::ptr::drop_in_place<std::sys_common::mutex::MovableMutex>
  invoke void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..mutex..MovableMutex$GT$17h46e122904241ac1cE"(i64** %1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %2 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<core::cell::UnsafeCell<std::fs::File>>
  call void @"_ZN4core3ptr64drop_in_place$LT$core..cell..UnsafeCell$LT$std..fs..File$GT$$GT$17h3d334bea1a09a3ddE"(i32* %2)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %3 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %_1, i32 0, i32 3
; call core::ptr::drop_in_place<core::cell::UnsafeCell<std::fs::File>>
  call void @"_ZN4core3ptr64drop_in_place$LT$core..cell..UnsafeCell$LT$std..fs..File$GT$$GT$17h3d334bea1a09a3ddE"(i32* %3) #19
  br label %bb1

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<std::sync::mutex::MutexGuard<()>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$17h92307b27fd4ec372E"({ i64*, i8 }* %_1) unnamed_addr #1 {
start:
; call <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h645a6d29d72703c9E"({ i64*, i8 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<dyn core::any::Any+core::marker::Send>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr66drop_in_place$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$17h5874aac10dc2b8d8E"({}* %_1.0, [3 x i64]* align 8 dereferenceable(24) %_1.1) unnamed_addr #1 {
start:
  %0 = bitcast [3 x i64]* %_1.1 to void ({}*)**
  %1 = getelementptr inbounds void ({}*)*, void ({}*)** %0, i64 0
  %2 = load void ({}*)*, void ({}*)** %1, align 8, !invariant.load !3, !nonnull !3
  call void %2({}* %_1.0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::rwlock::RwLockReadGuard<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr66drop_in_place$LT$std..sync..rwlock..RwLockReadGuard$LT$i32$GT$$GT$17h3c24917e9592e87aE"(i64** %_1) unnamed_addr #1 {
start:
; call <std::sync::rwlock::RwLockReadGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN85_$LT$std..sync..rwlock..RwLockReadGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc5b32094cb6cd609E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<&str>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr67drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$17h42474c82907b293bE"(%"alloc::vec::into_iter::IntoIter<&str>"* %_1) unnamed_addr #1 {
start:
; call <alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN86_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hac10e419b93bbb6fE"(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::sync::rwlock::RwLockWriteGuard<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr67drop_in_place$LT$std..sync..rwlock..RwLockWriteGuard$LT$i32$GT$$GT$17ha3125b4ee7dc5ef5E"({ i64*, i8 }* %_1) unnamed_addr #1 {
start:
; call <std::sync::rwlock::RwLockWriteGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN86_$LT$std..sync..rwlock..RwLockWriteGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hd31fdb25b5bba9a5E"({ i64*, i8 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17hdceda1b95d51e13aE"(%"std::io::error::Custom"** %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %_1, align 8, !nonnull !3
; invoke core::ptr::drop_in_place<std::io::error::Custom>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h426d51d47f9abce8E"(%"std::io::error::Custom"* %1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %start
  %2 = bitcast %"std::io::error::Custom"** %_1 to i64**
  %3 = load i64*, i64** %2, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hda558501e931f439E(i64* nonnull %3)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %4 = bitcast %"std::io::error::Custom"** %_1 to i64**
  %5 = load i64*, i64** %4, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hda558501e931f439E(i64* nonnull %5) #19
  br label %bb2

cleanup:                                          ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb2:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<core::cell::RefMut<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr68drop_in_place$LT$core..cell..RefMut$LT$alloc..string..String$GT$$GT$17hb6fbc029dd5608cdE"({ i64*, i64* }* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::cell::BorrowRefMut>
  call void @"_ZN4core3ptr45drop_in_place$LT$core..cell..BorrowRefMut$GT$17h8025dcdd46521184E"(i64** %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::RefCell<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr69drop_in_place$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$17h3cf264abe5624e4aE"(%"core::cell::RefCell<alloc::string::String>"* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"core::cell::RefCell<alloc::string::String>", %"core::cell::RefCell<alloc::string::String>"* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::string::String>>
  call void @"_ZN4core3ptr72drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..string..String$GT$$GT$17h41860f96862bca72E"(%"core::cell::UnsafeCell<alloc::string::String>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h0b6d58c8da5d34f5E"({ [0 x i8]*, i64 }* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h14141d54acc76cf6E"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !3
  ret i8* %1
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h9fd0d0eb14c2febdE"(i32* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  store i32* %ptr, i32** %0, align 8
  %1 = load i32*, i32** %0, align 8, !nonnull !3
  ret i32* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h07c27844cc2da907E"(i8* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hd1bf3f18bda5738cE"(i8* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h14141d54acc76cf6E"(i8* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h36c362a0c36893f7E"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9144171730188fcbE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h14141d54acc76cf6E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h461c50e7d4f5fdf3E"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf2f9b39a6e5b24f3E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h14141d54acc76cf6E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h530a825a68e73d09E"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"std::sys::unix::condvar::Condvar"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hc2dcfefeb53394dcE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"std::sys::unix::condvar::Condvar"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h14141d54acc76cf6E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h6aa664771dcb9ebdE"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"std::sys::unix::rwlock::RWLock"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6ac2b106f9786f3fE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"std::sys::unix::rwlock::RWLock"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h14141d54acc76cf6E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hbe1a3d1cb55dfdadE"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17he56c48ed1b01d5cdE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h14141d54acc76cf6E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hc7cd02f96642ff3fE"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call { [0 x i8]*, i64 }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf8309d8a6c532defE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast { [0 x i8]*, i64 }* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h14141d54acc76cf6E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hcae05c3aef3c2ae7E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h247581c0eb0f6c78E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1)
  %_3.0 = extractvalue { {}*, [3 x i64]* } %0, 0
  %_3.1 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast {}* %_3.0 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h14141d54acc76cf6E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hccc1992ad00b38a5E"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcf2bedf6c93ffa9eE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"std::io::error::Custom"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h14141d54acc76cf6E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17he67a5c190dc9d0c9E"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"std::sys::unix::mutex::Mutex"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8e2a1a2ca37985adE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"std::sys::unix::mutex::Mutex"* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h14141d54acc76cf6E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hee97f3999816e914E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hbd82e16055ee2893E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1)
  %_3.0 = extractvalue { {}*, [3 x i64]* } %0, 0
  %_3.1 = extractvalue { {}*, [3 x i64]* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast {}* %_3.0 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h14141d54acc76cf6E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hf1091e759aa5ac7bE"(i32* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h78ad59412605dfbcE"(i32* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast i32* %_3 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h14141d54acc76cf6E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h247581c0eb0f6c78E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to {}*
  %_2.1 = bitcast i64* %self.1 to [3 x i64]*
  %0 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %1 = insertvalue { {}*, [3 x i64]* } %0, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"std::sys::unix::rwlock::RWLock"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6ac2b106f9786f3fE"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"std::sys::unix::rwlock::RWLock"*
  ret %"std::sys::unix::rwlock::RWLock"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h78ad59412605dfbcE"(i32* nonnull %self) unnamed_addr #0 {
start:
  ret i32* %self
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"std::sys::unix::mutex::Mutex"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8e2a1a2ca37985adE"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"std::sys::unix::mutex::Mutex"*
  ret %"std::sys::unix::mutex::Mutex"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9144171730188fcbE"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<_ProbeSemaphore>"*
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hbd82e16055ee2893E"(i8* nonnull %self.0, i64* align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to {}*
  %_2.1 = bitcast i64* %self.1 to [3 x i64]*
  %0 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %1 = insertvalue { {}*, [3 x i64]* } %0, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"std::sys::unix::condvar::Condvar"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hc2dcfefeb53394dcE"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"std::sys::unix::condvar::Condvar"*
  ret %"std::sys::unix::condvar::Condvar"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcf2bedf6c93ffa9eE"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"std::io::error::Custom"*
  ret %"std::io::error::Custom"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hd1bf3f18bda5738cE"(i8* nonnull %self) unnamed_addr #0 {
start:
  ret i8* %self
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17he56c48ed1b01d5cdE"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<_ShuffledOrder>"*
  ret %"alloc::sync::ArcInner<_ShuffledOrder>"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf2f9b39a6e5b24f3E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"*
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf8309d8a6c532defE"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to { [0 x i8]*, i64 }*
  ret { [0 x i8]*, i64 }* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h17040e993a452cbaE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf2f9b39a6e5b24f3E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h5b17b3139e498638E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9144171730188fcbE"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(40) %"std::sys::unix::mutex::Mutex"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h5e1ad95c6c32ffa5E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"std::sys::unix::mutex::Mutex"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8e2a1a2ca37985adE"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::sys::unix::mutex::Mutex"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(24) %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h68942397c15289aaE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcf2bedf6c93ffa9eE"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::io::error::Custom"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(72) %"std::sys::unix::rwlock::RWLock"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h962d8dd07e799c88E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"std::sys::unix::rwlock::RWLock"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6ac2b106f9786f3fE"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::sys::unix::rwlock::RWLock"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17ha9339692bd44b2dfE"({ i8*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !3
  %1 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 1
  %_3.1 = load i64*, i64** %1, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hbd82e16055ee2893E"(i8* nonnull %_3.0, i64* align 8 dereferenceable(24) %_3.1)
  %_2.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_2.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(48) %"std::sys::unix::condvar::Condvar"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hcc957c8c3b5b7ceeE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"std::sys::unix::condvar::Condvar"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hc2dcfefeb53394dcE"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"std::sys::unix::condvar::Condvar"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hd725e069ed9dbbeeE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17he56c48ed1b01d5cdE"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<_ShuffledOrder>"* %_2
}

; core::ptr::unique::Unique<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hf7fb9a6c6696fa3aE"({ i8*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 0
  %_3.0 = load i8*, i8** %0, align 8, !nonnull !3
  %1 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self, i32 0, i32 1
  %_3.1 = load i64*, i64** %1, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h247581c0eb0f6c78E"(i8* nonnull %_3.0, i64* align 8 dereferenceable(24) %_3.1)
  %_2.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_2.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %4
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h43970cc98598dd46E"() unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_1 = inttoptr i64 1 to i8*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h14141d54acc76cf6E"(i8* %_1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h8a6cacc6e13cd50aE"() unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_1 = inttoptr i64 8 to { [0 x i8]*, i64 }*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h0b6d58c8da5d34f5E"({ [0 x i8]*, i64 }* %_1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %0
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17hf238264579afa98eE"() unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_1 = inttoptr i64 4 to i32*
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h9fd0d0eb14c2febdE"(i32* %_1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32* %0
}

; core::ptr::drop_in_place<alloc::sync::Arc<probe_tle::_ShuffledOrder>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr70drop_in_place$LT$alloc..sync..Arc$LT$probe_tle.._ShuffledOrder$GT$$GT$17h969137d5d4758673E"(i64** %_1) unnamed_addr #1 {
start:
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9bfb935f41721050E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h9e27ae23e1c38f30E"(%"core::option::Option<alloc::string::String>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::option::Option<alloc::string::String>"* %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<alloc::string::String>"* %_1 to %"core::option::Option<alloc::string::String>::Some"*
  %5 = bitcast %"core::option::Option<alloc::string::String>::Some"* %4 to %"alloc::string::String"*
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h8d8b0bae1660ceedE"(%"alloc::string::String"* %5)
  br label %bb1
}

; core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h0291b9d70805d303E"({ i64*, i8 }* %_1) unnamed_addr #1 {
start:
; call <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h309304adc51e7f55E"({ i64*, i8 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::collections::vec_deque::VecDeque<i32>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr71drop_in_place$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$17had6f692e017e6505E"(%"alloc::collections::vec_deque::VecDeque<i32>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
; invoke <alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN94_$LT$alloc..collections..vec_deque..VecDeque$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h93b9c87117a2149bE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %_1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %start
  %1 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %_1, i32 0, i32 2
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<i32>>
  call void @"_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17h4818d6b9c21a08bfE"({ i32*, i64 }* %1)
  br label %bb2

bb3:                                              ; preds = %cleanup
  %2 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %_1, i32 0, i32 2
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<i32>>
  call void @"_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17h4818d6b9c21a08bfE"({ i32*, i64 }* %2) #19
  br label %bb1

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %bb4
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Arc<probe_tle::_ProbeSemaphore>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr71drop_in_place$LT$alloc..sync..Arc$LT$probe_tle.._ProbeSemaphore$GT$$GT$17h408f925d18b6a5e6E"(i64** %_1) unnamed_addr #1 {
start:
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h39796468c56d8342E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Weak<probe_tle::_ShuffledOrder>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr71drop_in_place$LT$alloc..sync..Weak$LT$probe_tle.._ShuffledOrder$GT$$GT$17h7e53edf2ae989a0dE"(i64** %_1) unnamed_addr #1 {
start:
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf08e8723aff4a3f1E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Weak<probe_tle::_ProbeSemaphore>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr72drop_in_place$LT$alloc..sync..Weak$LT$probe_tle.._ProbeSemaphore$GT$$GT$17h0e3d690808475495E"(i64** %_1) unnamed_addr #1 {
start:
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8ded2662cd3dfa78E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr72drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..string..String$GT$$GT$17h41860f96862bca72E"(%"core::cell::UnsafeCell<alloc::string::String>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::cell::UnsafeCell<alloc::string::String>"* %_1 to %"alloc::string::String"*
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h8d8b0bae1660ceedE"(%"alloc::string::String"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::mutex::Mutex>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr74drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..mutex..Mutex$GT$$GT$17hbd19c05995fd5f96E"(%"std::sys::unix::mutex::Mutex"** %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  br label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast %"std::sys::unix::mutex::Mutex"** %_1 to i64**
  %2 = load i64*, i64** %1, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hbd17048977d1bbeaE(i64* nonnull %2)
  br label %bb1

bb4:                                              ; No predecessors!
  %3 = bitcast %"std::sys::unix::mutex::Mutex"** %_1 to i64**
  %4 = load i64*, i64** %3, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hbd17048977d1bbeaE(i64* nonnull %4) #19
  br label %bb2

bb2:                                              ; preds = %bb4
  %5 = bitcast { i8*, i32 }* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::rwlock::RWLock>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr76drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..rwlock..RWLock$GT$$GT$17habd59a69e0c39d75E"(%"std::sys::unix::rwlock::RWLock"** %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  br label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast %"std::sys::unix::rwlock::RWLock"** %_1 to i64**
  %2 = load i64*, i64** %1, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h4b7533ca5d923cebE(i64* nonnull %2)
  br label %bb1

bb4:                                              ; No predecessors!
  %3 = bitcast %"std::sys::unix::rwlock::RWLock"** %_1 to i64**
  %4 = load i64*, i64** %3, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h4b7533ca5d923cebE(i64* nonnull %4) #19
  br label %bb2

bb2:                                              ; preds = %bb4
  %5 = bitcast { i8*, i32 }* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<std::io::Write::write_fmt::Adapter<std::fs::File>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr76drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..fs..File$GT$$GT$17h0c0b82882c1b1196E"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  call void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17ha3b6bcf921980c34E"(%"core::result::Result<(), std::io::error::Error>"* %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<std::panicking::begin_panic::PanicPayload<&str>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr77drop_in_place$LT$std..panicking..begin_panic..PanicPayload$LT$$RF$str$GT$$GT$17h049568cd6d74d4e5E"({ i8*, i64 }* %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::sys::unix::condvar::Condvar>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr78drop_in_place$LT$alloc..boxed..Box$LT$std..sys..unix..condvar..Condvar$GT$$GT$17h8c304a516084646aE"(%"std::sys::unix::condvar::Condvar"** %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  br label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast %"std::sys::unix::condvar::Condvar"** %_1 to i64**
  %2 = load i64*, i64** %1, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hc3491c43f1e9c5a4E(i64* nonnull %2)
  br label %bb1

bb4:                                              ; No predecessors!
  %3 = bitcast %"std::sys::unix::condvar::Condvar"** %_1 to i64**
  %4 = load i64*, i64** %3, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hc3491c43f1e9c5a4E(i64* nonnull %4) #19
  br label %bb2

bb2:                                              ; preds = %bb4
  %5 = bitcast { i8*, i32 }* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h347febaf6dea3475E"(i8* %self, i8* %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1362abababb2d267E"(i8* %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h347febaf6dea3475E"(i8* %self, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h3c64d9258c1abc53E"({ [0 x i8]*, i64 }* %self) unnamed_addr #0 {
start:
  %_2 = bitcast { [0 x i8]*, i64 }* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h347febaf6dea3475E"(i8* %_2, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17ha3b6bcf921980c34E"(%"core::result::Result<(), std::io::error::Error>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_1 to i8*
  %1 = load i8, i8* %0, align 8, !range !7
  %2 = sub i8 %1, 4
  %3 = icmp eq i8 %2, 0
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_1 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %6 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %5 to %"std::io::error::Error"*
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hda7771387f347390E"(%"std::io::error::Error"* %6)
  br label %bb1
}

; core::ptr::drop_in_place<core::result::Result<std::fs::File,std::io::error::Error>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr86drop_in_place$LT$core..result..Result$LT$std..fs..File$C$std..io..error..Error$GT$$GT$17h07a1d354b41e10e3E"(%"core::result::Result<std::fs::File, std::io::error::Error>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %_1 to i32*
  %1 = load i32, i32* %0, align 8, !range !59
  %_2 = zext i32 %1 to i64
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %_1 to %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Ok", %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"* %3, i32 0, i32 1
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17he584526ff1bb905aE"(i32* %4)
  br label %bb1

bb3:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %_1 to %"core::result::Result<std::fs::File, std::io::error::Error>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Err", %"core::result::Result<std::fs::File, std::io::error::Error>::Err"* %5, i32 0, i32 1
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hda7771387f347390E"(%"std::io::error::Error"* %6)
  br label %bb1

bb1:                                              ; preds = %bb2, %bb3
  ret void
}

; core::ptr::drop_in_place<&mut std::io::Write::write_fmt::Adapter<std::fs::File>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr88drop_in_place$LT$$RF$mut$u20$std..io..Write..write_fmt..Adapter$LT$std..fs..File$GT$$GT$17h346c51ad5f5c1e8dE"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"** %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<std::fs::File>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr89drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$17h117b4e4a0c1cbecdE"(i64** %_1) unnamed_addr #1 {
start:
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h4cbedf01b5e72a45E"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17hed7cd3a9a3d454b6E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h6ce8c0f83838c9adE({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h7d3b137d211b18deE({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[i32]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[i32]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[i32]>"* %_3 to { [0 x i32]*, i64 }*
  %10 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i32]*, [0 x i32]** %10, align 8
  %12 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %11, 0
  %15 = insertvalue { [0 x i32]*, i64 } %14, i64 %13, 1
  ret { [0 x i32]*, i64 } %15
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hce2423d93fdfff58E({}* %data_address, i64 %metadata) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[&str]>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to {}**
  store {}* %data_address, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %metadata, i64* %1, align 8
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[&str]>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[&str]>"* %_3 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %10 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %10, align 8
  %12 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } undef, [0 x { [0 x i8]*, i64 }]* %11, 0
  %15 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %14, i64 %13, 1
  ret { [0 x { [0 x i8]*, i64 }]*, i64 } %15
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3ptr8metadata8metadata17h2610c8183614e290E([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %ptr.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h38226dd9fa6b47bfE"([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %ptr.1, i64* %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5b6b3d5a2839c1bfE"(i32* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  store i32* %ptr, i32** %0, align 8
  %1 = load i32*, i32** %0, align 8, !nonnull !3
  ret i32* %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hef9352d5479952efE"({ [0 x i8]*, i64 }* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf8d7b6265503ad0eE"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !3
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h30f1529eb9ed4c76E"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1362abababb2d267E"(i8* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true
  br i1 %_2, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  %1 = bitcast i8** %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_5 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf8d7b6265503ad0eE"(i8* %ptr)
  br label %bb3

bb3:                                              ; preds = %bb2
  store i8* %_5, i8** %0, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %2 = load i8*, i8** %0, align 8
  ret i8* %2
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h4910389e1823df71E"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7468b852db168a0cE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf8d7b6265503ad0eE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h521017ac18423f77E"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h1170ef527c1cc399E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf8d7b6265503ad0eE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h91806f3c2ab9d5e3E"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd3203147f8535e97E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"* %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf8d7b6265503ad0eE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h9fdd4ff43aa93ed8E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h1391aa0266d8919eE"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf8d7b6265503ad0eE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hd3e12aeddbe249a0E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h1391aa0266d8919eE"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to { [0 x i8]*, i64 }*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hef9352d5479952efE"({ [0 x i8]*, i64 }* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hedda47d35c7b0bf9E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h1391aa0266d8919eE"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to i32*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h5b6b3d5a2839c1bfE"(i32* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32* %1
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h1170ef527c1cc399E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<_ProbeSemaphore>"*
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h1391aa0266d8919eE"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to [0 x i8]*
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %self.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2ea6501852262917E"(i32* nonnull %self) unnamed_addr #0 {
start:
  ret i32* %self
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %self) unnamed_addr #0 {
start:
  ret i8* %self
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7468b852db168a0cE"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"*
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7ab75b1de90bb502E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to { [0 x i8]*, i64 }*
  ret { [0 x i8]*, i64 }* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd3203147f8535e97E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::sync::ArcInner<_ShuffledOrder>"*
  ret %"alloc::sync::ArcInner<_ShuffledOrder>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h12427e728e58c0cfE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd3203147f8535e97E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<_ShuffledOrder>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h2c7933c68e249c1eE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7468b852db168a0cE"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17he3e2cec1c3f6dd77E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h1170ef527c1cc399E"(i64* nonnull %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_2
}

; core::ptr::non_null::NonNull<[T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h609f5117399314e1E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %_2 = call nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h5f5312d2c1bc508aE"(i8* nonnull %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h5f5312d2c1bc508aE"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h1391aa0266d8919eE"(i8* nonnull %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast [0 x i8]* %_3.0 to i8*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %2 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf8d7b6265503ad0eE"(i8* %1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %2
}

; core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h5eac8875bbded299E"(i8* nonnull %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %data)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17he9459e820dc6fd6fE(i8* %_4, i64 %len)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h38226dd9fa6b47bfE"([0 x i8]* %_3.0, i64 %_3.1)
  %2 = extractvalue { i8*, i64 } %1, 0
  %3 = extractvalue { i8*, i64 } %1, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { i8*, i64 } undef, i8* %2, 0
  %5 = insertvalue { i8*, i64 } %4, i64 %3, 1
  ret { i8*, i64 } %5
}

; core::ptr::non_null::NonNull<[T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h455bbc3466407ff9E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h1391aa0266d8919eE"(i8* nonnull %self.0, i64 %self.1)
  %_2.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_2.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::metadata::metadata
  %1 = call i64 @_ZN4core3ptr8metadata8metadata17h2610c8183614e290E([0 x i8]* %_2.0, i64 %_2.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %1
}

; core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<std::fs::File>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr90drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$17h1feefbae06c48d78E"(i64** %_1) unnamed_addr #1 {
start:
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h352a8c9c3699f7dcE"(i64** align 8 dereferenceable(8) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17hf0cfbf2089aa9713E"({ {}*, [3 x i64]* }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 0
  %2 = load {}*, {}** %1, align 8, !nonnull !3
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1, i32 0, i32 1
  %4 = load [3 x i64]*, [3 x i64]** %3, align 8, !nonnull !3
  %5 = bitcast [3 x i64]* %4 to void ({}*)**
  %6 = getelementptr inbounds void ({}*)*, void ({}*)** %5, i64 0
  %7 = load void ({}*)*, void ({}*)** %6, align 8, !invariant.load !3, !nonnull !3
  invoke void %7({}* %2)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %start
  %8 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8, !nonnull !3
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h21d95f0d36d3e979E(i8* nonnull %10, i64* align 8 dereferenceable(24) %12)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %13 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8, !nonnull !3
  %16 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %13, i32 0, i32 1
  %17 = load i64*, i64** %16, align 8, !nonnull !3
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h21d95f0d36d3e979E(i8* nonnull %15, i64* align 8 dereferenceable(24) %17) #19
  br label %bb2

cleanup:                                          ; preds = %start
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb4

bb2:                                              ; preds = %bb4
  %23 = bitcast { i8*, i32 }* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1
  resume { i8*, i32 } %28

bb1:                                              ; preds = %bb3
  ret void
}

; core::ptr::drop_in_place<dyn std::error::Error+core::marker::Sync+core::marker::Send>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr92drop_in_place$LT$dyn$u20$std..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$17hcb85073cc39cc919E"({}* %_1.0, [3 x i64]* align 8 dereferenceable(24) %_1.1) unnamed_addr #1 {
start:
  %0 = bitcast [3 x i64]* %_1.1 to void ({}*)**
  %1 = getelementptr inbounds void ({}*)*, void ({}*)** %0, i64 0
  %2 = load void ({}*)*, void ({}*)** %1, align 8, !invariant.load !3, !nonnull !3
  call void %2({}* %_1.0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::option::Option<core::cell::RefCell<alloc::string::String>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr97drop_in_place$LT$core..option..Option$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$$GT$17hfb3b481d2103c132E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_1) unnamed_addr #1 {
start:
  %0 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_1 to i64*
  %_2 = load i64, i64* %0, align 8, !range !2
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %2 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_1 to %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"*
  %3 = getelementptr inbounds %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some", %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"* %2, i32 0, i32 1
; call core::ptr::drop_in_place<core::cell::RefCell<alloc::string::String>>
  call void @"_ZN4core3ptr69drop_in_place$LT$core..cell..RefCell$LT$alloc..string..String$GT$$GT$17h3cf264abe5624e4aE"(%"core::cell::RefCell<alloc::string::String>"* %3)
  br label %bb1
}

; core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<probe_tle::_ShuffledOrder>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr98drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$probe_tle.._ShuffledOrder$GT$$GT$$GT$17hbc3ebba299cd690dE"(i64** %_1) unnamed_addr #1 {
start:
  %0 = bitcast i64** %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::sync::Arc<probe_tle::_ShuffledOrder>>
  call void @"_ZN4core3ptr70drop_in_place$LT$alloc..sync..Arc$LT$probe_tle.._ShuffledOrder$GT$$GT$17h969137d5d4758673E"(i64** %_1)
  br label %bb1
}

; core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr98drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$$GT$17hdf6e55af722f77ccE"({ i64*, i8 }* %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h90d0415356584575E"({ i64*, i8 }* %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<probe_tle::_ProbeSemaphore>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr99drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$probe_tle.._ProbeSemaphore$GT$$GT$$GT$17h32685b09e78ea13dE"(i64** %_1) unnamed_addr #1 {
start:
  %0 = bitcast i64** %_1 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::sync::Arc<probe_tle::_ProbeSemaphore>>
  call void @"_ZN4core3ptr71drop_in_place$LT$alloc..sync..Arc$LT$probe_tle.._ProbeSemaphore$GT$$GT$17h408f925d18b6a5e6E"(i64** %_1)
  br label %bb1
}

; core::ptr::const_ptr::<impl *const T>::offset_from
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$11offset_from17hc698d6e1696f1f87E"({ [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }* %origin) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_5 = alloca i8, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %_6 = icmp ult i64 0, 16
  br i1 %_6, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_5, align 1
  br label %bb4

bb3:                                              ; preds = %bb1
  %_8 = icmp ule i64 16, 9223372036854775807
  %1 = zext i1 %_8 to i8
  store i8 %1, i8* %_5, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %2 = load i8, i8* %_5, align 1, !range !4
  %3 = trunc i8 %2 to i1
  %_4 = xor i1 %3, true
  br i1 %_4, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  %4 = ptrtoint { [0 x i8]*, i64 }* %self to i64
  %5 = ptrtoint { [0 x i8]*, i64 }* %origin to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 16
  store i64 %7, i64* %0, align 8
  %8 = load i64, i64* %0, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [73 x i8] }>* @alloc480 to [0 x i8]*), i64 73, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc482 to %"core::panic::location::Location"*)) #18
  unreachable

bb7:                                              ; preds = %bb6
  ret i64 %8
}

; core::ptr::const_ptr::<impl *const T>::guaranteed_eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hf20d0cfe2912c3beE"(i8* %self, i8* %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i8* %self, %other
  %2 = zext i1 %1 to i8
  store i8 %2, i8* %0, align 1
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %4
}

; core::ptr::const_ptr::<impl *const T>::copy_to_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17h118cc82129f5c324E"(i8* %self, i8* %dest, i64 %count) unnamed_addr #0 {
start:
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hd460be041eef39e1E(i8* %self, i8* %dest, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nonlazybind uwtable
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h7a31a5e930e7ae77E"(i8* %self) unnamed_addr #0 {
start:
  %0 = bitcast i8* %self to {}*
  ret {}* %0
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h24cd8ac15c16344cE"(i8* %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hf20d0cfe2912c3beE"(i8* %self, i8* null)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h3289d9651df5d157E"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::ptr::metadata::metadata
  %0 = call i64 @_ZN4core3ptr8metadata8metadata17h2610c8183614e290E([0 x i8]* %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hb143949bde6f761eE"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::str::validations::unwrap_or_0
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core3str11validations11unwrap_or_017h20ce89fbb64be843E(i8* align 1 dereferenceable_or_null(1) %0) unnamed_addr #0 {
start:
  %1 = alloca i8, align 1
  %opt = alloca i8*, align 8
  store i8* %0, i8** %opt, align 8
  %2 = bitcast i8** %opt to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %start
  %5 = load i8*, i8** %opt, align 8, !nonnull !3
  %byte = load i8, i8* %5, align 1
  store i8 %byte, i8* %1, align 1
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i8, i8* %1, align 1
  ret i8 %6
}

; core::str::validations::next_code_point
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @_ZN4core3str11validations15next_code_point17h7188f8891517b481E({ i8*, i8* }* align 8 dereferenceable(16) %bytes) unnamed_addr #0 {
start:
  %ch = alloca i32, align 4
  %_4 = alloca i8*, align 8
  %0 = alloca { i32, i32 }, align 4
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_5 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8395a01dd4a06a5eE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %1 = call align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd7a9131bd0df5653E"(i8* align 1 dereferenceable_or_null(1) %_5)
  store i8* %1, i8** %_4, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast i8** %_4 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_7 = select i1 %4, i64 1, i64 0
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %val = load i8*, i8** %_4, align 8, !nonnull !3
  %x = load i8, i8* %val, align 1
  %_11 = icmp ult i8 %x, -128
  br i1 %_11, label %bb7, label %bb8

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %5 = call { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h14b6eb1a46dd9affE"()
  store { i32, i32 } %5, { i32, i32 }* %0, align 4
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb23

bb23:                                             ; preds = %bb7, %bb6
  br label %bb24

bb8:                                              ; preds = %bb3
; call core::str::validations::utf8_first_byte
  %init = call i32 @_ZN4core3str11validations15utf8_first_byte17hefa9ccb9fa247d44E(i8 %x, i32 2)
  br label %bb9

bb7:                                              ; preds = %bb3
  %_13 = zext i8 %x to i32
  %6 = bitcast { i32, i32 }* %0 to %"core::option::Option<u32>::Some"*
  %7 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %6, i32 0, i32 1
  store i32 %_13, i32* %7, align 4
  %8 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %8, align 4
  br label %bb23

bb24:                                             ; preds = %bb22, %bb23
  %9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4, !range !59
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = insertvalue { i32, i32 } undef, i32 %10, 0
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1
  ret { i32, i32 } %14

bb9:                                              ; preds = %bb8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_18 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8395a01dd4a06a5eE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::str::validations::unwrap_or_0
  %y = call i8 @_ZN4core3str11validations11unwrap_or_017h20ce89fbb64be843E(i8* align 1 dereferenceable_or_null(1) %_18)
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::str::validations::utf8_acc_cont_byte
  %15 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h447c4febf508a354E(i32 %init, i8 %y)
  store i32 %15, i32* %ch, align 4
  br label %bb12

bb12:                                             ; preds = %bb11
  %_23 = icmp uge i8 %x, -32
  br i1 %_23, label %bb13, label %bb22

bb22:                                             ; preds = %bb21, %bb12
  %_47 = load i32, i32* %ch, align 4
  %16 = bitcast { i32, i32 }* %0 to %"core::option::Option<u32>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %16, i32 0, i32 1
  store i32 %_47, i32* %17, align 4
  %18 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %18, align 4
  br label %bb24

bb13:                                             ; preds = %bb12
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_26 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8395a01dd4a06a5eE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::str::validations::unwrap_or_0
  %z = call i8 @_ZN4core3str11validations11unwrap_or_017h20ce89fbb64be843E(i8* align 1 dereferenceable_or_null(1) %_26)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_30 = and i8 %y, 63
  %_29 = zext i8 %_30 to i32
; call core::str::validations::utf8_acc_cont_byte
  %y_z = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h447c4febf508a354E(i32 %_29, i8 %z)
  br label %bb16

bb16:                                             ; preds = %bb15
  %_33 = shl i32 %init, 12
  %19 = or i32 %_33, %y_z
  store i32 %19, i32* %ch, align 4
  %_36 = icmp uge i8 %x, -16
  br i1 %_36, label %bb17, label %bb21

bb21:                                             ; preds = %bb20, %bb16
  br label %bb22

bb17:                                             ; preds = %bb16
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_39 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8395a01dd4a06a5eE"({ i8*, i8* }* align 8 dereferenceable(16) %bytes)
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::str::validations::unwrap_or_0
  %w = call i8 @_ZN4core3str11validations11unwrap_or_017h20ce89fbb64be843E(i8* align 1 dereferenceable_or_null(1) %_39)
  br label %bb19

bb19:                                             ; preds = %bb18
  %_42 = and i32 %init, 7
  %_41 = shl i32 %_42, 18
; call core::str::validations::utf8_acc_cont_byte
  %_44 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h447c4febf508a354E(i32 %y_z, i8 %w)
  br label %bb20

bb20:                                             ; preds = %bb19
  %20 = or i32 %_41, %_44
  store i32 %20, i32* %ch, align 4
  br label %bb21
}

; core::str::validations::utf8_first_byte
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3str11validations15utf8_first_byte17hefa9ccb9fa247d44E(i8 %byte, i32 %width) unnamed_addr #0 {
start:
  %0 = trunc i32 %width to i8
  %1 = and i8 %0, 7
  %_5 = lshr i8 127, %1
  %_3 = and i8 %byte, %_5
  %2 = zext i8 %_3 to i32
  ret i32 %2
}

; core::str::validations::utf8_acc_cont_byte
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h447c4febf508a354E(i32 %ch, i8 %byte) unnamed_addr #0 {
start:
  %_3 = shl i32 %ch, 6
  %_6 = and i8 %byte, 63
  %_5 = zext i8 %_6 to i32
  %0 = or i32 %_3, %_5
  ret i32 %0
}

; core::str::<impl str>::char_indices
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hd65a8a6b5330d83fE"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::str::<impl str>::chars
  %1 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17he24b7cc13b56aa21E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %_2.0 = extractvalue { i8*, i8* } %1, 0
  %_2.1 = extractvalue { i8*, i8* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::str::iter::CharIndices"* %0 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %0, i32 0, i32 1
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 0
  store i8* %_2.0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1
  store i8* %_2.1, i8** %5, align 8
  ret void
}

; core::str::<impl str>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17ha89b84ef7cf9203fE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %i.0, i64 %i.1) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %0 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h422705a26b789b55E"(i64 %i.0, i64 %i.1, [0 x i8]* %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::str::<impl str>::split_whitespace
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$16split_whitespace17h4eaa305c8a9dd22dE"(%"core::str::iter::SplitWhitespace"* noalias nocapture sret(%"core::str::iter::SplitWhitespace") dereferenceable(64) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_3 = alloca %"core::str::iter::Split<core::str::IsWhitespace>", align 8
  %_2 = alloca %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>", align 8
; call core::str::<impl str>::split
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h24407f51bf679852E"(%"core::str::iter::Split<core::str::IsWhitespace>"* noalias nocapture sret(%"core::str::iter::Split<core::str::IsWhitespace>") dereferenceable(64) %_3, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::filter
  call void @_ZN4core4iter6traits8iterator8Iterator6filter17h2e634c6d515e6dfdE(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* noalias nocapture sret(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>") dereferenceable(64) %_2, %"core::str::iter::Split<core::str::IsWhitespace>"* noalias nocapture dereferenceable(64) %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::str::iter::SplitWhitespace"* %0 to %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"*
  %2 = bitcast %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* %1 to i8*
  %3 = bitcast %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 64, i1 false)
  ret void
}

; core::str::<impl str>::len
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h70bbff4f443f1111E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !3
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  %_3.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %_3.1
}

; core::str::<impl str>::chars
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17he24b7cc13b56aa21E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %10 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17ha0e0729189ad5001E"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  %_2.0 = extractvalue { i8*, i8* } %10, 0
  %_2.1 = extractvalue { i8*, i8* } %10, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  store i8* %_2.0, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  store i8* %_2.1, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = insertvalue { i8*, i8* } undef, i8* %14, 0
  %18 = insertvalue { i8*, i8* } %17, i8* %16, 1
  ret { i8*, i8* } %18
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17hc8f0d47e75633e47E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca %"core::result::Result<i32, core::num::error::ParseIntError>", align 4
; call core::num::<impl core::str::traits::FromStr for i32>::from_str
  %2 = call i64 @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$i32$GT$8from_str17h501abcb150b3d434E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  store i64 %2, i64* %0, align 8
  %3 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %1 to i8*
  %4 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %1 to i64*
  %6 = load i64, i64* %5, align 4
  ret i64 %6
}

; core::str::<impl str>::split
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h24407f51bf679852E"(%"core::str::iter::Split<core::str::IsWhitespace>"* noalias nocapture sret(%"core::str::iter::Split<core::str::IsWhitespace>") dereferenceable(64) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_6 = alloca %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>", align 8
  %_3 = alloca %"core::str::iter::SplitInternal<core::str::IsWhitespace>", align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
; invoke core::str::<impl str>::len
  %_4 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h70bbff4f443f1111E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; invoke <F as core::str::pattern::Pattern>::into_searcher
  invoke void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hcb26193c95f74209E"(%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* noalias nocapture sret(%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>") dereferenceable(40) %_6, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_9, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  %9 = bitcast %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %_3 to i64*
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %_3, i32 0, i32 1
  store i64 %_4, i64* %10, align 8
  %11 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %_3, i32 0, i32 2
  %12 = bitcast %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* %11 to i8*
  %13 = bitcast %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %_3, i32 0, i32 3
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %_3, i32 0, i32 4
  store i8 0, i8* %15, align 1
  %16 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %0 to %"core::str::iter::SplitInternal<core::str::IsWhitespace>"*
  %17 = bitcast %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %16 to i8*
  %18 = bitcast %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 64, i1 false)
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %19 = bitcast { i8*, i32 }* %1 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::str::<impl str>::is_empty
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h62ccfe9c93fbd4b9E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::str::<impl str>::len
  %_2 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h70bbff4f443f1111E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i64 %_2, 0
  ret i1 %0
}

; core::str::iter::SplitInternal<P>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h877de53c5fb79cedE"(%"core::str::iter::SplitInternal<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self) unnamed_addr #0 {
start:
  %_12 = alloca { i64, i64 }, align 8
  %_5 = alloca %"core::option::Option<(usize, usize)>", align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 4
  %2 = load i8, i8* %1, align 1, !range !4
  %_2 = trunc i8 %2 to i1
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_4 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 2
; call <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::haystack
  %3 = call { [0 x i8]*, i64 } @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17ha6f79bbb1c6aa861E"(%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %_4)
  %haystack.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %haystack.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb1:                                              ; preds = %start
  %4 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %4, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb1
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10

bb3:                                              ; preds = %bb2
  %_6 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 2
; call <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_match
  call void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17hc14f0645150d72f3E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %_5, %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %_6)
  br label %bb4

bb4:                                              ; preds = %bb3
  %11 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to i64*
  %_7 = load i64, i64* %11, align 8, !range !2
  switch i64 %_7, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb6:                                              ; preds = %bb4
  unreachable

bb5:                                              ; preds = %bb4
; call core::str::iter::SplitInternal<P>::get_end
  %12 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17h0c3af6715853d35dE"(%"core::str::iter::SplitInternal<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self)
  store { i8*, i64 } %12, { i8*, i64 }* %0, align 8
  br label %bb9

bb7:                                              ; preds = %bb4
  %13 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %13, i32 0, i32 1
  %15 = bitcast { i64, i64 }* %14 to i64*
  %a = load i64, i64* %15, align 8
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %16, i32 0, i32 1
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  %b = load i64, i64* %18, align 8
  %19 = bitcast %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self to i64*
  %_13 = load i64, i64* %19, align 8
  %20 = bitcast { i64, i64 }* %_12 to i64*
  store i64 %_13, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1
  store i64 %a, i64* %21, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
; call core::str::<impl str>::get_unchecked
  %26 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17ha89b84ef7cf9203fE"([0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1, i64 %23, i64 %25)
  %elt.0 = extractvalue { [0 x i8]*, i64 } %26, 0
  %elt.1 = extractvalue { [0 x i8]*, i64 } %26, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %27 = bitcast %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self to i64*
  store i64 %b, i64* %27, align 8
  %28 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0
  store [0 x i8]* %elt.0, [0 x i8]** %29, align 8
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1
  store i64 %elt.1, i64* %30, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  br label %bb11

bb9:                                              ; preds = %bb5
  br label %bb10
}

; core::str::iter::SplitInternal<P>::get_end
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17h0c3af6715853d35dE"(%"core::str::iter::SplitInternal<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self) unnamed_addr #0 {
start:
  %_15 = alloca { i64, i64 }, align 8
  %_5 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 4
  %2 = load i8, i8* %1, align 1, !range !4
  %_4 = trunc i8 %2 to i1
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !4
  %_6 = trunc i8 %4 to i1
  br i1 %_6, label %bb4, label %bb5

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %5, align 8
  %6 = bitcast %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self to i64*
  %_10 = load i64, i64* %6, align 8
  %_8 = sub i64 %_9, %_10
  %_7 = icmp ugt i64 %_8, 0
  %7 = zext i1 %_7 to i8
  store i8 %7, i8* %_5, align 1
  br label %bb6

bb4:                                              ; preds = %bb2
  store i8 1, i8* %_5, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %8 = load i8, i8* %_5, align 1, !range !4
  %9 = trunc i8 %8 to i1
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb6
  %11 = load i8, i8* %_2, align 1, !range !4
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb7, label %bb10

bb10:                                             ; preds = %bb3
  %13 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %13, align 8
  br label %bb11

bb7:                                              ; preds = %bb3
  %14 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 4
  store i8 1, i8* %14, align 1
  %_14 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 2
; call <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::haystack
  %15 = call { [0 x i8]*, i64 } @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17ha6f79bbb1c6aa861E"(%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %_14)
  %_13.0 = extractvalue { [0 x i8]*, i64 } %15, 0
  %_13.1 = extractvalue { [0 x i8]*, i64 } %15, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %16 = bitcast %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self to i64*
  %_16 = load i64, i64* %16, align 8
  %17 = getelementptr inbounds %"core::str::iter::SplitInternal<core::str::IsWhitespace>", %"core::str::iter::SplitInternal<core::str::IsWhitespace>"* %self, i32 0, i32 1
  %_17 = load i64, i64* %17, align 8
  %18 = bitcast { i64, i64 }* %_15 to i64*
  store i64 %_16, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1
  store i64 %_17, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
; call core::str::<impl str>::get_unchecked
  %24 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17ha89b84ef7cf9203fE"([0 x i8]* nonnull align 1 %_13.0, i64 %_13.1, i64 %21, i64 %23)
  %string.0 = extractvalue { [0 x i8]*, i64 } %24, 0
  %string.1 = extractvalue { [0 x i8]*, i64 } %24, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %25 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %25, i32 0, i32 0
  store [0 x i8]* %string.0, [0 x i8]** %26, align 8
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %25, i32 0, i32 1
  store i64 %string.1, i64* %27, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = insertvalue { i8*, i64 } undef, i8* %29, 0
  %33 = insertvalue { i8*, i64 } %32, i64 %31, 1
  ret { i8*, i64 } %33
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h422705a26b789b55E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hb143949bde6f761eE"([0 x i8]* %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, i8* %_6, i64 %self.0
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %len = sub i64 %self.1, %self.0
; call core::ptr::slice_from_raw_parts
  %3 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h0ad27f302787a75bE(i8* %2, i64 %len)
  %_12.0 = extractvalue { [0 x i8]*, i64 } %3, 0
  %_12.1 = extractvalue { [0 x i8]*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_12.0, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_12.1, 1
  ret { [0 x i8]*, i64 } %5
}

; core::str::pattern::Searcher::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern8Searcher10next_match17hdaa04cf9e91b3fbdE(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_7 = alloca { i64, i64 }, align 8
  %_2 = alloca %"core::str::pattern::SearchStep", align 8
  br label %bb1

bb1:                                              ; preds = %bb5, %start
; call <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
  call void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h4cd81ee6d695c712E"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %_2, %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::str::pattern::SearchStep"* %_2 to i64*
  %_4 = load i64, i64* %1, align 8, !range !60
  switch i64 %_4, label %bb5 [
    i64 0, label %bb3
    i64 2, label %bb4
  ]

bb5:                                              ; preds = %bb2
  br label %bb1

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Match"*
  %3 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %2, i32 0, i32 1
  %a = load i64, i64* %3, align 8
  %4 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Match"*
  %5 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %4, i32 0, i32 2
  %b = load i64, i64* %5, align 8
  %6 = bitcast { i64, i64 }* %_7 to i64*
  store i64 %a, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  store i64 %b, i64* %7, align 8
  %8 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*
  %9 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %11, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %13, i64* %15, align 8
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 1, i64* %16, align 8
  br label %bb6

bb4:                                              ; preds = %bb2
  %17 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*
  store i64 0, i64* %17, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb4
  ret void
}

; core::str::converts::from_utf8_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h1f56c332b9f5c0ddE([0 x i8]* nonnull align 1 %v.0, i64 %v.1) unnamed_addr #0 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %v.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %v.1, i64* %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %4 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !3
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  ret { [0 x i8]*, i64 } %8
}

; core::str::converts::from_utf8_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17hc0c0e1d67f1caf41E([0 x i8]* nonnull align 1 %v.0, i64 %v.1) unnamed_addr #0 {
start:
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %v.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %v.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::cell::BorrowRefMut::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 dereferenceable_or_null(8) i64* @_ZN4core4cell12BorrowRefMut3new17h2e28b3c6ede2ae22E(i64* align 8 dereferenceable(8) %borrow) unnamed_addr #0 {
start:
  %_7 = alloca i64*, align 8
  %0 = alloca i64*, align 8
; call core::cell::Cell<T>::get
  %_2 = call i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17hbb23a753519bba80E"(i64* align 8 dereferenceable(8) %borrow)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h56da9c400d014d4dE"(i64* align 8 dereferenceable(8) %borrow, i64 -1)
  br label %bb4

bb2:                                              ; preds = %bb1
  %2 = bitcast i64** %0 to {}**
  store {}* null, {}** %2, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %3 = load i64*, i64** %0, align 8
  ret i64* %3

bb4:                                              ; preds = %bb3
  store i64* %borrow, i64** %_7, align 8
  %4 = load i64*, i64** %_7, align 8, !nonnull !3
  store i64* %4, i64** %0, align 8
  br label %bb5
}

; core::cell::Cell<T>::get
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @"_ZN4core4cell13Cell$LT$T$GT$3get17h9a6e3e113f111043E"(i8* align 1 dereferenceable(1) %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %0 = load i8, i8* %self, align 1, !range !14
  ret i8 %0
}

; core::cell::Cell<T>::get
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17hbb23a753519bba80E"(i64* align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %0 = load i64, i64* %self, align 8
  ret i64 %0
}

; core::cell::Cell<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core4cell13Cell$LT$T$GT$3new17h6eb529bd38bcbf79E"(i64 %value) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  store i64 %value, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %2, i64* %1, align 8
  %3 = load i64, i64* %1, align 8
  ret i64 %3
}

; core::cell::Cell<T>::set
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4cell13Cell$LT$T$GT$3set17h56da9c400d014d4dE"(i64* align 8 dereferenceable(8) %self, i64 %val) unnamed_addr #0 {
start:
; call core::cell::Cell<T>::replace
  %old = call i64 @"_ZN4core4cell13Cell$LT$T$GT$7replace17hc2fcf7ddb15868c5E"(i64* align 8 dereferenceable(8) %self, i64 %val)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::drop
  call void @_ZN4core3mem4drop17hf5beb99d8eeabefeE(i64 %old)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::cell::Cell<T>::set
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4cell13Cell$LT$T$GT$3set17h984eb67921d1e01fE"(i8* align 1 dereferenceable(1) %self, i8 %val) unnamed_addr #0 {
start:
; call core::cell::Cell<T>::replace
  %old = call i8 @"_ZN4core4cell13Cell$LT$T$GT$7replace17h6177f195918fa343E"(i8* align 1 dereferenceable(1) %self, i8 %val), !range !14
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::drop
  call void @_ZN4core3mem4drop17h2f93a6e9290204bbE(i8 %old)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::cell::Cell<T>::replace
; Function Attrs: nonlazybind uwtable
define i8 @"_ZN4core4cell13Cell$LT$T$GT$7replace17h6177f195918fa343E"(i8* align 1 dereferenceable(1) %self, i8 %val) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; invoke core::mem::replace
  %1 = invoke i8 @_ZN4core3mem7replace17h726b094e186905f0E(i8* align 1 dereferenceable(1) %self, i8 %val)
          to label %bb2 unwind label %cleanup, !range !14

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_9, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  ret i8 %1

bb3:                                              ; preds = %bb4, %bb5
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::cell::Cell<T>::replace
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN4core4cell13Cell$LT$T$GT$7replace17hc2fcf7ddb15868c5E"(i64* align 8 dereferenceable(8) %self, i64 %val) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  br label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; invoke core::mem::replace
  %1 = invoke i64 @_ZN4core3mem7replace17h56f255a15ba1605fE(i64* align 8 dereferenceable(8) %self, i64 %val)
          to label %bb2 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, i8* %_9, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  ret i64 %1

bb3:                                              ; preds = %bb4, %bb5
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::cell::RefCell<T>::borrow_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$10borrow_mut17h7f21589f427a3984E"(%"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call core::cell::RefCell<T>::try_borrow_mut
  %1 = call { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$14try_borrow_mut17h9b4465948dbe65c0E"(%"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %self)
  %_2.0 = extractvalue { i64*, i8* } %1, 0
  %_2.1 = extractvalue { i64*, i8* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  %2 = call { i64*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h283e886dc8e4195bE"(i64* align 8 dereferenceable_or_null(24) %_2.0, i8* %_2.1, [0 x i8]* nonnull align 1 bitcast (<{ [16 x i8] }>* @alloc484 to [0 x i8]*), i64 16, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %3 = extractvalue { i64*, i64* } %2, 0
  %4 = extractvalue { i64*, i64* } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i64*, i64* } undef, i64* %3, 0
  %6 = insertvalue { i64*, i64* } %5, i64* %4, 1
  ret { i64*, i64* } %6
}

; core::cell::RefCell<T>::borrow_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$10borrow_mut17hcff6c69a8458b103E"({ i64, i32 }* align 8 dereferenceable(16) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call core::cell::RefCell<T>::try_borrow_mut
  %1 = call { i32*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$14try_borrow_mut17h32a7a88559323ac1E"({ i64, i32 }* align 8 dereferenceable(16) %self)
  %_2.0 = extractvalue { i32*, i8* } %1, 0
  %_2.1 = extractvalue { i32*, i8* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  %2 = call { i32*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h8ee5521ca4143566E"(i32* align 4 dereferenceable_or_null(4) %_2.0, i8* %_2.1, [0 x i8]* nonnull align 1 bitcast (<{ [16 x i8] }>* @alloc484 to [0 x i8]*), i64 16, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %3 = extractvalue { i32*, i64* } %2, 0
  %4 = extractvalue { i32*, i64* } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i32*, i64* } undef, i32* %3, 0
  %6 = insertvalue { i32*, i64* } %5, i64* %4, 1
  ret { i32*, i64* } %6
}

; core::cell::RefCell<T>::try_borrow
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$10try_borrow17h7757a8d020a67936E"(%"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca { i64*, i64* }, align 8
  %b = alloca i64*, align 8
  %_2 = alloca i64*, align 8
  %1 = alloca { i64*, i8* }, align 8
  %_4 = bitcast %"core::cell::RefCell<alloc::string::String>"* %self to i64*
; call core::cell::BorrowRef::new
  %2 = call align 8 dereferenceable_or_null(8) i64* @_ZN4core4cell9BorrowRef3new17hc0ee319000b27ebaE(i64* align 8 dereferenceable(8) %_4)
  store i64* %2, i64** %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_2 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %6 = bitcast { i64*, i8* }* %1 to {}**
  store {}* null, {}** %6, align 8
  br label %bb7

bb4:                                              ; preds = %bb1
  %7 = load i64*, i64** %_2, align 8, !nonnull !3
  store i64* %7, i64** %b, align 8
  %_11 = getelementptr inbounds %"core::cell::RefCell<alloc::string::String>", %"core::cell::RefCell<alloc::string::String>"* %self, i32 0, i32 1
  %_2.i = bitcast %"core::cell::UnsafeCell<alloc::string::String>"* %_11 to %"alloc::string::String"*
  br label %bb5

bb5:                                              ; preds = %bb4
  %_12 = load i64*, i64** %b, align 8, !nonnull !3
  %8 = bitcast { i64*, i64* }* %_7 to %"alloc::string::String"**
  store %"alloc::string::String"* %_2.i, %"alloc::string::String"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_7, i32 0, i32 1
  store i64* %_12, i64** %9, align 8
  %10 = bitcast { i64*, i8* }* %1 to { i64*, i64* }*
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_7, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8, !nonnull !3
  %13 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_7, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %10, i32 0, i32 0
  store i64* %12, i64** %15, align 8
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %10, i32 0, i32 1
  store i64* %14, i64** %16, align 8
  br label %bb7

bb6:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<core::cell::BorrowRef>
  call void @"_ZN4core3ptr42drop_in_place$LT$core..cell..BorrowRef$GT$17hd28efc35f987cd04E"(i64** %b) #19
  br label %bb8

cleanup:                                          ; No predecessors!
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb6

bb8:                                              ; preds = %bb6
  %22 = bitcast { i8*, i32 }* %0 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27

bb7:                                              ; preds = %bb2, %bb5
  %28 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = insertvalue { i64*, i8* } undef, i64* %29, 0
  %33 = insertvalue { i64*, i8* } %32, i8* %31, 1
  ret { i64*, i8* } %33
}

; core::cell::RefCell<T>::try_borrow_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$14try_borrow_mut17h32a7a88559323ac1E"({ i64, i32 }* align 8 dereferenceable(16) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca { i32*, i64* }, align 8
  %b = alloca i64*, align 8
  %_2 = alloca i64*, align 8
  %1 = alloca { i32*, i8* }, align 8
  %_4 = bitcast { i64, i32 }* %self to i64*
; call core::cell::BorrowRefMut::new
  %2 = call align 8 dereferenceable_or_null(8) i64* @_ZN4core4cell12BorrowRefMut3new17h2e28b3c6ede2ae22E(i64* align 8 dereferenceable(8) %_4)
  store i64* %2, i64** %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_2 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %6 = bitcast { i32*, i8* }* %1 to {}**
  store {}* null, {}** %6, align 8
  br label %bb7

bb4:                                              ; preds = %bb1
  %7 = load i64*, i64** %_2, align 8, !nonnull !3
  store i64* %7, i64** %b, align 8
  %_12 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %_13 = load i64*, i64** %b, align 8, !nonnull !3
  %8 = bitcast { i32*, i64* }* %_7 to i32**
  store i32* %_12, i32** %8, align 8
  %9 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %_7, i32 0, i32 1
  store i64* %_13, i64** %9, align 8
  %10 = bitcast { i32*, i8* }* %1 to { i32*, i64* }*
  %11 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %_7, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8, !nonnull !3
  %13 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %_7, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %10, i32 0, i32 0
  store i32* %12, i32** %15, align 8
  %16 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %10, i32 0, i32 1
  store i64* %14, i64** %16, align 8
  br label %bb7

bb6:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<core::cell::BorrowRefMut>
  call void @"_ZN4core3ptr45drop_in_place$LT$core..cell..BorrowRefMut$GT$17h8025dcdd46521184E"(i64** %b) #19
  br label %bb8

cleanup:                                          ; No predecessors!
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb6

bb8:                                              ; preds = %bb6
  %22 = bitcast { i8*, i32 }* %0 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27

bb7:                                              ; preds = %bb2, %bb5
  %28 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %1, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %1, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = insertvalue { i32*, i8* } undef, i32* %29, 0
  %33 = insertvalue { i32*, i8* } %32, i8* %31, 1
  ret { i32*, i8* } %33
}

; core::cell::RefCell<T>::try_borrow_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$14try_borrow_mut17h9b4465948dbe65c0E"(%"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_7 = alloca { i64*, i64* }, align 8
  %b = alloca i64*, align 8
  %_2 = alloca i64*, align 8
  %1 = alloca { i64*, i8* }, align 8
  %_4 = bitcast %"core::cell::RefCell<alloc::string::String>"* %self to i64*
; call core::cell::BorrowRefMut::new
  %2 = call align 8 dereferenceable_or_null(8) i64* @_ZN4core4cell12BorrowRefMut3new17h2e28b3c6ede2ae22E(i64* align 8 dereferenceable(8) %_4)
  store i64* %2, i64** %_2, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_2 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_5 = select i1 %5, i64 0, i64 1
  switch i64 %_5, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
  %6 = bitcast { i64*, i8* }* %1 to {}**
  store {}* null, {}** %6, align 8
  br label %bb7

bb4:                                              ; preds = %bb1
  %7 = load i64*, i64** %_2, align 8, !nonnull !3
  store i64* %7, i64** %b, align 8
  %_12 = getelementptr inbounds %"core::cell::RefCell<alloc::string::String>", %"core::cell::RefCell<alloc::string::String>"* %self, i32 0, i32 1
  %_2.i = bitcast %"core::cell::UnsafeCell<alloc::string::String>"* %_12 to %"alloc::string::String"*
  br label %bb5

bb5:                                              ; preds = %bb4
  %_13 = load i64*, i64** %b, align 8, !nonnull !3
  %8 = bitcast { i64*, i64* }* %_7 to %"alloc::string::String"**
  store %"alloc::string::String"* %_2.i, %"alloc::string::String"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_7, i32 0, i32 1
  store i64* %_13, i64** %9, align 8
  %10 = bitcast { i64*, i8* }* %1 to { i64*, i64* }*
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_7, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8, !nonnull !3
  %13 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_7, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %10, i32 0, i32 0
  store i64* %12, i64** %15, align 8
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %10, i32 0, i32 1
  store i64* %14, i64** %16, align 8
  br label %bb7

bb6:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<core::cell::BorrowRefMut>
  call void @"_ZN4core3ptr45drop_in_place$LT$core..cell..BorrowRefMut$GT$17h8025dcdd46521184E"(i64** %b) #19
  br label %bb8

cleanup:                                          ; No predecessors!
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb6

bb8:                                              ; preds = %bb6
  %22 = bitcast { i8*, i32 }* %0 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27

bb7:                                              ; preds = %bb2, %bb5
  %28 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %1, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = insertvalue { i64*, i8* } undef, i64* %29, 0
  %33 = insertvalue { i64*, i8* } %32, i8* %31, 1
  ret { i64*, i8* } %33
}

; core::cell::RefCell<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4cell16RefCell$LT$T$GT$3new17h09c9b511a9f670c3E"(%"core::cell::RefCell<alloc::string::String>"* noalias nocapture sret(%"core::cell::RefCell<alloc::string::String>") dereferenceable(32) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %_2.i = alloca %"alloc::string::String", align 8
  %1 = alloca { i8*, i32 }, align 8
  %_3 = alloca %"alloc::string::String", align 8
  %_2 = alloca %"core::cell::UnsafeCell<alloc::string::String>", align 8
  %2 = bitcast %"alloc::string::String"* %_3 to i8*
  %3 = bitcast %"alloc::string::String"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !61)
  call void @llvm.experimental.noalias.scope.decl(metadata !64)
  %4 = bitcast %"alloc::string::String"* %_2.i to i8*
  %5 = bitcast %"alloc::string::String"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !noalias !61
  %6 = bitcast %"core::cell::UnsafeCell<alloc::string::String>"* %_2 to %"alloc::string::String"*
  %7 = bitcast %"alloc::string::String"* %6 to i8*
  %8 = bitcast %"alloc::string::String"* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !noalias !64
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::cell::Cell<T>::new
  %_4 = invoke i64 @"_ZN4core4cell13Cell$LT$T$GT$3new17h6eb529bd38bcbf79E"(i64 0)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %9 = bitcast %"core::cell::RefCell<alloc::string::String>"* %0 to i64*
  store i64 %_4, i64* %9, align 8
  %10 = getelementptr inbounds %"core::cell::RefCell<alloc::string::String>", %"core::cell::RefCell<alloc::string::String>"* %0, i32 0, i32 1
  %11 = bitcast %"core::cell::UnsafeCell<alloc::string::String>"* %10 to i8*
  %12 = bitcast %"core::cell::UnsafeCell<alloc::string::String>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  ret void

bb3:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::string::String>>
  call void @"_ZN4core3ptr72drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..string..String$GT$$GT$17h41860f96862bca72E"(%"core::cell::UnsafeCell<alloc::string::String>"* %_2) #19
  br label %bb4

cleanup:                                          ; preds = %bb1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %18 = bitcast { i8*, i32 }* %1 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23
}

; core::cell::RefCell<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i32 } @"_ZN4core4cell16RefCell$LT$T$GT$3new17h26e9e17cf25421d0E"(i32 %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i32, align 4
  %1 = alloca { i8*, i32 }, align 8
  %2 = alloca { i64, i32 }, align 8
  store i32 %value, i32* %0, align 4
  %3 = load i32, i32* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::cell::Cell<T>::new
  %_4 = invoke i64 @"_ZN4core4cell13Cell$LT$T$GT$3new17h6eb529bd38bcbf79E"(i64 0)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %4 = bitcast { i64, i32 }* %2 to i64*
  store i64 %_4, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  %6 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i64, i32 } undef, i64 %7, 0
  %11 = insertvalue { i64, i32 } %10, i32 %9, 1
  ret { i64, i32 } %11

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %17 = bitcast { i8*, i32 }* %1 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; core::cell::RefCell<T>::borrow
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17hfb541208f9bc4248E"(%"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call core::cell::RefCell<T>::try_borrow
  %1 = call { i64*, i8* } @"_ZN4core4cell16RefCell$LT$T$GT$10try_borrow17h7757a8d020a67936E"(%"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %self)
  %_2.0 = extractvalue { i64*, i8* } %1, 0
  %_2.1 = extractvalue { i64*, i8* } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  %2 = call { i64*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf32867376c16fec8E"(i64* align 8 dereferenceable_or_null(24) %_2.0, i8* %_2.1, [0 x i8]* nonnull align 1 bitcast (<{ [24 x i8] }>* @alloc485 to [0 x i8]*), i64 24, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %3 = extractvalue { i64*, i64* } %2, 0
  %4 = extractvalue { i64*, i64* } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i64*, i64* } undef, i64* %3, 0
  %6 = insertvalue { i64*, i64* } %5, i64* %4, 1
  ret { i64*, i64* } %6
}

; core::cell::RefCell<T>::replace
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4cell16RefCell$LT$T$GT$7replace17h33ac3e24844c96c9E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, %"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %self, %"alloc::string::String"* noalias nocapture dereferenceable(24) %t, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca %"alloc::string::String", align 8
  %_7 = alloca { i64*, i64* }, align 8
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
; invoke core::cell::RefCell<T>::borrow_mut
  %3 = invoke { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$10borrow_mut17h7f21589f427a3984E"(%"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store { i64*, i64* } %3, { i64*, i64* }* %_7, align 8
; invoke <core::cell::RefMut<T> as core::ops::deref::DerefMut>::deref_mut
  %_5 = invoke align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN74_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hab6f0bd264b10e77E"({ i64*, i64* }* align 8 dereferenceable(16) %_7)
          to label %bb2 unwind label %cleanup1

bb8:                                              ; preds = %bb5, %cleanup
  %4 = load i8, i8* %_10, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb7, label %bb6

cleanup:                                          ; preds = %bb3, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb8

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_10, align 1
  %11 = bitcast %"alloc::string::String"* %_9 to i8*
  %12 = bitcast %"alloc::string::String"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17h3874b3d1eba3d24aE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, %"alloc::string::String"* align 8 dereferenceable(24) %_5, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_9)
          to label %bb3 unwind label %cleanup1

bb5:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<core::cell::RefMut<alloc::string::String>>
  call void @"_ZN4core3ptr68drop_in_place$LT$core..cell..RefMut$LT$alloc..string..String$GT$$GT$17hb6fbc029dd5608cdE"({ i64*, i64* }* %_7) #19
  br label %bb8

cleanup1:                                         ; preds = %bb2, %bb1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::cell::RefMut<alloc::string::String>>
  invoke void @"_ZN4core3ptr68drop_in_place$LT$core..cell..RefMut$LT$alloc..string..String$GT$$GT$17hb6fbc029dd5608cdE"({ i64*, i64* }* %_7)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb6:                                              ; preds = %bb7, %bb8
  %18 = bitcast { i8*, i32 }* %2 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23

bb7:                                              ; preds = %bb8
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h8d8b0bae1660ceedE"(%"alloc::string::String"* %t) #19
  br label %bb6
}

; core::cell::BorrowRef::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 dereferenceable_or_null(8) i64* @_ZN4core4cell9BorrowRef3new17hc0ee319000b27ebaE(i64* align 8 dereferenceable(8) %borrow) unnamed_addr #0 {
start:
  %_11 = alloca i64*, align 8
  %0 = alloca i64*, align 8
; call core::cell::Cell<T>::get
  %_3 = call i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17hbb23a753519bba80E"(i64* align 8 dereferenceable(8) %borrow)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = add i64 %_3, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = icmp sgt i64 %1, 0
  br label %bb3

bb3:                                              ; preds = %bb2
  %_5 = xor i1 %2, true
  br i1 %_5, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h56da9c400d014d4dE"(i64* align 8 dereferenceable(8) %borrow, i64 %1)
  br label %bb6

bb4:                                              ; preds = %bb3
  %3 = bitcast i64** %0 to {}**
  store {}* null, {}** %3, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb4
  %4 = load i64*, i64** %0, align 8
  ret i64* %4

bb6:                                              ; preds = %bb5
  store i64* %borrow, i64** %_11, align 8
  %5 = load i64*, i64** %_11, align 8, !nonnull !3
  store i64* %5, i64** %0, align 8
  br label %bb7
}

; core::char::convert::from_u32_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core4char7convert18from_u32_unchecked17h6666b1f5df8b7220E(i32 %i) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  store i32 %i, i32* %0, align 4
  %1 = load i32, i32* %0, align 4, !range !66
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %1
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17ha28413a015b12c41E(i32 %0, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1) unnamed_addr #0 {
start:
  %_97 = alloca i64, align 8
  %_80 = alloca i64, align 8
  %_76 = alloca { i64*, i32*, i64* }, align 8
  %_75 = alloca [3 x { i8*, i64* }], align 8
  %_68 = alloca %"core::fmt::Arguments", align 8
  %_6 = alloca { i64, { [0 x i8]*, i64 } }, align 8
  %len = alloca i64, align 8
  %code = alloca i32, align 4
  store i32 %0, i32* %code, align 4
  %_5 = load i32, i32* %code, align 4
; call core::char::methods::len_utf8
  %1 = call i64 @_ZN4core4char7methods8len_utf817hf4bd7261992279e5E(i32 %_5)
  store i64 %1, i64* %len, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %len, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %2 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hbb18164140832e93E"([0 x i8]* nonnull align 1 %dst.0, i64 %dst.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc487 to %"core::panic::location::Location"*))
  %_9.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_9.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*
  store i64 %_7, i64* %3, align 8
  %4 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  store [0 x i8]* %_9.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  store i64 %_9.1, i64* %6, align 8
  %7 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*
  %8 = load i64, i64* %7, align 8
  switch i64 %8, label %bb4 [
    i64 1, label %bb3
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
  ]

bb4:                                              ; preds = %bb3, %bb5, %bb6, %bb7, %bb2
  store i64 %dst.1, i64* %_80, align 8
  %9 = bitcast { i64*, i32*, i64* }* %_76 to i64**
  store i64* %len, i64** %9, align 8
  %10 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_76, i32 0, i32 1
  store i32* %code, i32** %10, align 8
  %11 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_76, i32 0, i32 2
  store i64* %_80, i64** %11, align 8
  %12 = bitcast { i64*, i32*, i64* }* %_76 to i64**
  %arg0 = load i64*, i64** %12, align 8, !nonnull !3
  %13 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_76, i32 0, i32 1
  %arg1 = load i32*, i32** %13, align 8, !nonnull !3
  %14 = getelementptr inbounds { i64*, i32*, i64* }, { i64*, i32*, i64* }* %_76, i32 0, i32 2
  %arg2 = load i64*, i64** %14, align 8, !nonnull !3
; call core::fmt::ArgumentV1::new
  %15 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h69b17fd875c0c542E(i64* align 8 dereferenceable(8) %arg0, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hea1df36702709463E")
  %_85.0 = extractvalue { i8*, i64* } %15, 0
  %_85.1 = extractvalue { i8*, i64* } %15, 1
  br label %bb12

bb3:                                              ; preds = %bb2
  %16 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0
  %18 = load [0 x i8]*, [0 x i8]** %17, align 8, !nonnull !3
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1
  %_12 = load i64, i64* %19, align 8
  %_14 = icmp uge i64 %_12, 1
  br i1 %_14, label %bb8, label %bb4

bb5:                                              ; preds = %bb2
  %20 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0
  %22 = load [0 x i8]*, [0 x i8]** %21, align 8, !nonnull !3
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1
  %_15 = load i64, i64* %23, align 8
  %_17 = icmp uge i64 %_15, 2
  br i1 %_17, label %bb9, label %bb4

bb6:                                              ; preds = %bb2
  %24 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %24, i32 0, i32 0
  %26 = load [0 x i8]*, [0 x i8]** %25, align 8, !nonnull !3
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %24, i32 0, i32 1
  %_18 = load i64, i64* %27, align 8
  %_20 = icmp uge i64 %_18, 3
  br i1 %_20, label %bb10, label %bb4

bb7:                                              ; preds = %bb2
  %28 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0
  %30 = load [0 x i8]*, [0 x i8]** %29, align 8, !nonnull !3
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1
  %_21 = load i64, i64* %31, align 8
  %_23 = icmp uge i64 %_21, 4
  br i1 %_23, label %bb11, label %bb4

bb11:                                             ; preds = %bb7
  %32 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0
  %34 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !3
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %a = getelementptr inbounds [0 x i8], [0 x i8]* %34, i64 0, i64 0
  %37 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 0
  %39 = load [0 x i8]*, [0 x i8]** %38, align 8, !nonnull !3
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %b = getelementptr inbounds [0 x i8], [0 x i8]* %39, i64 0, i64 1
  %42 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 0
  %44 = load [0 x i8]*, [0 x i8]** %43, align 8, !nonnull !3
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %42, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %c = getelementptr inbounds [0 x i8], [0 x i8]* %44, i64 0, i64 2
  %47 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 0
  %49 = load [0 x i8]*, [0 x i8]** %48, align 8, !nonnull !3
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %47, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %d = getelementptr inbounds [0 x i8], [0 x i8]* %49, i64 0, i64 3
  %_56 = load i32, i32* %code, align 4
  %_55 = lshr i32 %_56, 18
  %_54 = and i32 %_55, 7
  %_53 = trunc i32 %_54 to i8
  %52 = or i8 %_53, -16
  store i8 %52, i8* %a, align 1
  %_60 = load i32, i32* %code, align 4
  %_59 = lshr i32 %_60, 12
  %_58 = and i32 %_59, 63
  %_57 = trunc i32 %_58 to i8
  %53 = or i8 %_57, -128
  store i8 %53, i8* %b, align 1
  %_64 = load i32, i32* %code, align 4
  %_63 = lshr i32 %_64, 6
  %_62 = and i32 %_63, 63
  %_61 = trunc i32 %_62 to i8
  %54 = or i8 %_61, -128
  store i8 %54, i8* %c, align 1
  %_67 = load i32, i32* %code, align 4
  %_66 = and i32 %_67, 63
  %_65 = trunc i32 %_66 to i8
  %55 = or i8 %_65, -128
  store i8 %55, i8* %d, align 1
  br label %bb16

bb16:                                             ; preds = %bb8, %bb9, %bb10, %bb11
  %_98 = load i64, i64* %len, align 8
  store i64 %_98, i64* %_97, align 8
  %56 = load i64, i64* %_97, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %57 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h54ce5cb1222b16b2E"([0 x i8]* nonnull align 1 %dst.0, i64 %dst.1, i64 %56, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc489 to %"core::panic::location::Location"*))
  %_95.0 = extractvalue { [0 x i8]*, i64 } %57, 0
  %_95.1 = extractvalue { [0 x i8]*, i64 } %57, 1
  br label %bb17

bb10:                                             ; preds = %bb6
  %58 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 0
  %60 = load [0 x i8]*, [0 x i8]** %59, align 8, !nonnull !3
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %a1 = getelementptr inbounds [0 x i8], [0 x i8]* %60, i64 0, i64 0
  %63 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %63, i32 0, i32 0
  %65 = load [0 x i8]*, [0 x i8]** %64, align 8, !nonnull !3
  %66 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %63, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %b2 = getelementptr inbounds [0 x i8], [0 x i8]* %65, i64 0, i64 1
  %68 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 0
  %70 = load [0 x i8]*, [0 x i8]** %69, align 8, !nonnull !3
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %c3 = getelementptr inbounds [0 x i8], [0 x i8]* %70, i64 0, i64 2
  %_41 = load i32, i32* %code, align 4
  %_40 = lshr i32 %_41, 12
  %_39 = and i32 %_40, 15
  %_38 = trunc i32 %_39 to i8
  %73 = or i8 %_38, -32
  store i8 %73, i8* %a1, align 1
  %_45 = load i32, i32* %code, align 4
  %_44 = lshr i32 %_45, 6
  %_43 = and i32 %_44, 63
  %_42 = trunc i32 %_43 to i8
  %74 = or i8 %_42, -128
  store i8 %74, i8* %b2, align 1
  %_48 = load i32, i32* %code, align 4
  %_47 = and i32 %_48, 63
  %_46 = trunc i32 %_47 to i8
  %75 = or i8 %_46, -128
  store i8 %75, i8* %c3, align 1
  br label %bb16

bb9:                                              ; preds = %bb5
  %76 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %77 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %76, i32 0, i32 0
  %78 = load [0 x i8]*, [0 x i8]** %77, align 8, !nonnull !3
  %79 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %76, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %a4 = getelementptr inbounds [0 x i8], [0 x i8]* %78, i64 0, i64 0
  %81 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %82 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %81, i32 0, i32 0
  %83 = load [0 x i8]*, [0 x i8]** %82, align 8, !nonnull !3
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %81, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %b5 = getelementptr inbounds [0 x i8], [0 x i8]* %83, i64 0, i64 1
  %_31 = load i32, i32* %code, align 4
  %_30 = lshr i32 %_31, 6
  %_29 = and i32 %_30, 31
  %_28 = trunc i32 %_29 to i8
  %86 = or i8 %_28, -64
  store i8 %86, i8* %a4, align 1
  %_34 = load i32, i32* %code, align 4
  %_33 = and i32 %_34, 63
  %_32 = trunc i32 %_33 to i8
  %87 = or i8 %_32, -128
  store i8 %87, i8* %b5, align 1
  br label %bb16

bb8:                                              ; preds = %bb3
  %88 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 0
  %90 = load [0 x i8]*, [0 x i8]** %89, align 8, !nonnull !3
  %91 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %a6 = getelementptr inbounds [0 x i8], [0 x i8]* %90, i64 0, i64 0
  %_25 = load i32, i32* %code, align 4
  %93 = trunc i32 %_25 to i8
  store i8 %93, i8* %a6, align 1
  br label %bb16

bb17:                                             ; preds = %bb16
  %94 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_95.0, 0
  %95 = insertvalue { [0 x i8]*, i64 } %94, i64 %_95.1, 1
  ret { [0 x i8]*, i64 } %95

bb12:                                             ; preds = %bb4
; call core::fmt::ArgumentV1::new
  %96 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h98cac4b4d23e3924E(i32* align 4 dereferenceable(4) %arg1, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h3993b2255ce6d89bE")
  %_88.0 = extractvalue { i8*, i64* } %96, 0
  %_88.1 = extractvalue { i8*, i64* } %96, 1
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::fmt::ArgumentV1::new
  %97 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h69b17fd875c0c542E(i64* align 8 dereferenceable(8) %arg2, i1 (i64*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hea1df36702709463E")
  %_91.0 = extractvalue { i8*, i64* } %97, 0
  %_91.1 = extractvalue { i8*, i64* } %97, 1
  br label %bb14

bb14:                                             ; preds = %bb13
  %98 = bitcast [3 x { i8*, i64* }]* %_75 to { i8*, i64* }*
  %99 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %98, i32 0, i32 0
  store i8* %_85.0, i8** %99, align 8
  %100 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %98, i32 0, i32 1
  store i64* %_85.1, i64** %100, align 8
  %101 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_75, i32 0, i32 1
  %102 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %101, i32 0, i32 0
  store i8* %_88.0, i8** %102, align 8
  %103 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %101, i32 0, i32 1
  store i64* %_88.1, i64** %103, align 8
  %104 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_75, i32 0, i32 2
  %105 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %104, i32 0, i32 0
  store i8* %_91.0, i8** %105, align 8
  %106 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %104, i32 0, i32 1
  store i64* %_91.1, i64** %106, align 8
  %_72.0 = bitcast [3 x { i8*, i64* }]* %_75 to [0 x { i8*, i64* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h2945c196adeacc55E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_68, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc148 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* nonnull align 8 %_72.0, i64 3)
  br label %bb15

bb15:                                             ; preds = %bb14
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hbfd18ed1d8ed03e1E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_68, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc491 to %"core::panic::location::Location"*)) #18
  unreachable
}

; core::char::methods::<impl char>::encode_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817he3e243a1f32de294E"(i32 %self, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1) unnamed_addr #0 {
start:
  %0 = icmp ule i32 %self, 1114111
  call void @llvm.assume(i1 %0)
; call core::char::methods::encode_utf8_raw
  %1 = call { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17ha28413a015b12c41E(i32 %self, [0 x i8]* nonnull align 1 %dst.0, i64 %dst.1)
  %_7.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_7.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked_mut
  %2 = call { [0 x i8]*, i64 } @_ZN4core3str8converts23from_utf8_unchecked_mut17hc0c0e1d67f1caf41E([0 x i8]* nonnull align 1 %_7.0, i64 %_7.1)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_5.0, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %_5.1, 1
  ret { [0 x i8]*, i64 } %4
}

; core::char::methods::<impl char>::is_whitespace
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17h98bec6c7e191daeaE"(i32 %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = icmp eq i32 %self, 32
  br i1 %1, label %bb4, label %bb1

bb4:                                              ; preds = %bb2, %start
  store i8 1, i8* %0, align 1
  br label %bb9

bb1:                                              ; preds = %start
  %_2 = icmp ule i32 9, %self
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %_5 = icmp ugt i32 %self, 127
  br i1 %_5, label %bb6, label %bb5

bb2:                                              ; preds = %bb1
  %_3 = icmp ule i32 %self, 13
  br i1 %_3, label %bb4, label %bb3

bb5:                                              ; preds = %bb3
  store i8 0, i8* %0, align 1
  br label %bb7

bb6:                                              ; preds = %bb3
; call core::unicode::unicode_data::white_space::lookup
  %_7 = call zeroext i1 @_ZN4core7unicode12unicode_data11white_space6lookup17hd6f8b9b07e22cd88E(i32 %self)
  br label %bb8

bb8:                                              ; preds = %bb6
  %2 = zext i1 %_7 to i8
  store i8 %2, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb5, %bb8
  br label %bb9

bb9:                                              ; preds = %bb4, %bb7
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4char7methods8len_utf817hf4bd7261992279e5E(i32 %code) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_2 = icmp ult i32 %code, 128
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_4 = icmp ult i32 %code, 2048
  br i1 %_4, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i64 1, i64* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb1
  %1 = load i64, i64* %0, align 8
  ret i64 %1

bb4:                                              ; preds = %bb2
  %_6 = icmp ult i32 %code, 65536
  br i1 %_6, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  store i64 2, i64* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb3
  br label %bb9

bb6:                                              ; preds = %bb4
  store i64 4, i64* %0, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
  store i64 3, i64* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  br label %bb8
}

; core::hint::unreachable_unchecked
; Function Attrs: inlinehint noreturn nonlazybind uwtable
define internal void @_ZN4core4hint21unreachable_unchecked17h40039129d75f1d39E() unnamed_addr #5 {
start:
  unreachable
}

; core::hint::black_box
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4hint9black_box17hf935e9ccbd4e1b58E() unnamed_addr #0 {
start:
  call void asm sideeffect "", "r,~{memory}"({}* undef), !srcloc !67
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::exact_size::ExactSizeIterator::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17hef99d653d470e83dE(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_22 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_8 = alloca { i64, i64 }, align 8
  %_5 = alloca { i64*, i64* }, align 8
  %_3 = alloca { i64, { i64, i64 } }, align 8
  %upper = alloca { i64, i64 }, align 8
; call <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hebf9b9aee7f87936E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_3, %"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast { i64, { i64, i64 } }* %_3 to i64*
  %lower = load i64, i64* %0, align 8
  %1 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %_3, i32 0, i32 1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8, !range !2
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %upper, i32 0, i32 0
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %upper, i32 0, i32 1
  store i64 %5, i64* %7, align 8
  %8 = bitcast { i64, i64 }* %_8 to %"core::option::Option<usize>::Some"*
  %9 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %8, i32 0, i32 1
  store i64 %lower, i64* %9, align 8
  %10 = bitcast { i64, i64 }* %_8 to i64*
  store i64 1, i64* %10, align 8
  %11 = bitcast { i64*, i64* }* %_5 to { i64, i64 }**
  store { i64, i64 }* %upper, { i64, i64 }** %11, align 8
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %13 = bitcast i64** %12 to { i64, i64 }**
  store { i64, i64 }* %_8, { i64, i64 }** %13, align 8
  %14 = bitcast { i64*, i64* }* %_5 to { i64, i64 }**
  %left_val = load { i64, i64 }*, { i64, i64 }** %14, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %16 = bitcast i64** %15 to { i64, i64 }**
  %right_val = load { i64, i64 }*, { i64, i64 }** %16, align 8, !nonnull !3
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_13 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2b371288d718f49aE"({ i64, i64 }* align 8 dereferenceable(16) %left_val, { i64, i64 }* align 8 dereferenceable(16) %right_val)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_12 = xor i1 %_13, true
  br i1 %_12, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  ret i64 %lower

bb3:                                              ; preds = %bb2
  store i8 0, i8* %kind, align 1
  %17 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_22 to {}**
  store {}* null, {}** %17, align 8
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h540f8ac8f5553fbfE(i8 0, { i64, i64 }* align 8 dereferenceable(16) %left_val, { i64, i64 }* align 8 dereferenceable(16) %right_val, %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48) %_22, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc493 to %"core::panic::location::Location"*)) #18
  unreachable
}

; core::iter::traits::iterator::Iterator::find
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @_ZN4core4iter6traits8iterator8Iterator4find17h1588069a85c7d88fE(%"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self, %"core::str::IsNotEmpty"* nonnull align 1 %predicate) unnamed_addr #0 {
start:
; call core::iter::traits::iterator::Iterator::find::check
  %_6 = call nonnull align 1 i8* @_ZN4core4iter6traits8iterator8Iterator4find5check17h4f79490224d4bd29E(%"core::str::IsNotEmpty"* nonnull align 1 %predicate)
  br label %bb1

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::try_fold
  %0 = call { i8*, i64 } @_ZN4core4iter6traits8iterator8Iterator8try_fold17h8216ef586f483bc7E(%"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self, i8* nonnull align 1 %_6)
  %_3.0 = extractvalue { i8*, i64 } %0, 0
  %_3.1 = extractvalue { i8*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ops::control_flow::ControlFlow<B,C>::break_value
  %1 = call { i8*, i64 } @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h9058374bf9501e0fE"(i8* align 1 %_3.0, i64 %_3.1)
  %2 = extractvalue { i8*, i64 } %1, 0
  %3 = extractvalue { i8*, i64 } %1, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { i8*, i64 } undef, i8* %2, 0
  %5 = insertvalue { i8*, i64 } %4, i64 %3, 1
  ret { i8*, i64 } %5
}

; core::iter::traits::iterator::Iterator::find::check
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull align 1 i8* @_ZN4core4iter6traits8iterator8Iterator4find5check17h4f79490224d4bd29E(%"core::str::IsNotEmpty"* nonnull align 1 %predicate) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = bitcast i8** %0 to %"core::str::IsNotEmpty"**
  store %"core::str::IsNotEmpty"* %predicate, %"core::str::IsNotEmpty"** %1, align 8
  %2 = load i8*, i8** %0, align 8, !nonnull !3
  ret i8* %2
}

; core::iter::traits::iterator::Iterator::find::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core4iter6traits8iterator8Iterator4find5check28_$u7b$$u7b$closure$u7d$$u7d$17h450a472c915742d1E"(i8** align 8 dereferenceable(8) %_1, [0 x i8]* nonnull align 1 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  %_6 = alloca i64*, align 8
  %3 = alloca { i8*, i64 }, align 8
  %x = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
  %_5 = bitcast i8** %_1 to %"core::str::IsNotEmpty"**
  %6 = bitcast i64** %_6 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %6, align 8
  %7 = load i64*, i64** %_6, align 8, !nonnull !3
  %8 = bitcast i64* %7 to { [0 x i8]*, i64 }*
; invoke core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_4 = invoke zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17ha8d1a49591353166E"(%"core::str::IsNotEmpty"** align 8 dereferenceable(8) %_5, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %8)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3

bb6:                                              ; preds = %cleanup
  br label %bb7

cleanup:                                          ; preds = %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb6

bb7:                                              ; preds = %bb6
  %14 = bitcast { i8*, i32 }* %2 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

bb3:                                              ; preds = %bb1
  %20 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 0), align 8
  %21 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 1), align 8
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  store i64 %21, i64* %23, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_10, align 1
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x, i32 0, i32 0
  %_9.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !nonnull !3
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x, i32 0, i32 1
  %_9.1 = load i64, i64* %25, align 8
  %26 = bitcast { i8*, i64 }* %3 to { [0 x i8]*, i64 }*
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0
  store [0 x i8]* %_9.0, [0 x i8]** %27, align 8
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1
  store i64 %_9.1, i64* %28, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %29 = load i8, i8* %_10, align 1, !range !4
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb8, label %bb5

bb5:                                              ; preds = %bb8, %bb4
  %31 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = insertvalue { i8*, i64 } undef, i8* %32, 0
  %36 = insertvalue { i8*, i64 } %35, i64 %34, 1
  ret { i8*, i64 } %36

bb8:                                              ; preds = %bb4
  br label %bb5
}

; core::iter::traits::iterator::Iterator::filter
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator6filter17h2e634c6d515e6dfdE(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* noalias nocapture sret(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>") dereferenceable(64) %0, %"core::str::iter::Split<core::str::IsWhitespace>"* noalias nocapture dereferenceable(64) %self) unnamed_addr #0 {
start:
  %_3 = alloca %"core::str::iter::Split<core::str::IsWhitespace>", align 8
  %1 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %_3 to i8*
  %2 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 64, i1 false)
; call core::iter::adapters::filter::Filter<I,P>::new
  call void @"_ZN4core4iter8adapters6filter19Filter$LT$I$C$P$GT$3new17hb7d68b2bf9d96e02E"(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* noalias nocapture sret(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>") dereferenceable(64) %0, %"core::str::iter::Split<core::str::IsWhitespace>"* noalias nocapture dereferenceable(64) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator7collect17h8cad5d27f2b1d403E(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %self) unnamed_addr #0 {
start:
  %_2 = alloca %"core::str::iter::SplitWhitespace", align 8
  %1 = bitcast %"core::str::iter::SplitWhitespace"* %_2 to i8*
  %2 = bitcast %"core::str::iter::SplitWhitespace"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 64, i1 false)
; call <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
  call void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17hbd3cd2a57db4b217E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @_ZN4core4iter6traits8iterator8Iterator8try_fold17h8216ef586f483bc7E(%"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self, i8* nonnull align 1 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca { i8*, i64 }, align 8
  %_10 = alloca { i8*, i64 }, align 8
  %_5 = alloca { i8*, i64 }, align 8
  %2 = alloca { i8*, i64 }, align 8
  %f = alloca i8*, align 8
  store i8* %0, i8** %f, align 8
  store i8 0, i8* %_21, align 1
  store i8 1, i8* %_21, align 1
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h46007f0e582a04e0E"(%"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store { i8*, i64 } %3, { i8*, i64 }* %_5, align 8
  %4 = bitcast { i8*, i64 }* %_5 to {}**
  %5 = load {}*, {}** %4, align 8
  %6 = icmp eq {}* %5, null
  %_7 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_7, 1
  br i1 %7, label %bb3, label %bb10

bb19:                                             ; preds = %bb17, %cleanup
  %8 = load i8, i8* %_21, align 1, !range !4
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb18, label %bb14

cleanup:                                          ; preds = %bb11, %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb19

bb3:                                              ; preds = %bb2
  %15 = bitcast { i8*, i64 }* %_5 to { [0 x i8]*, i64 }*
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 0
  %x.0 = load [0 x i8]*, [0 x i8]** %16, align 8, !nonnull !3
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 1
  %x.1 = load i64, i64* %17, align 8
  store i8 0, i8* %_21, align 1
  %18 = bitcast { i8*, i64 }* %_13 to {}*
  %19 = bitcast { i8*, i64 }* %_13 to { [0 x i8]*, i64 }*
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 0
  store [0 x i8]* %x.0, [0 x i8]** %20, align 8
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 1
  store i64 %x.1, i64* %21, align 8
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_13, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !nonnull !3
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_13, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = bitcast i8* %23 to [0 x i8]*
; invoke core::iter::traits::iterator::Iterator::find::check::{{closure}}
  %27 = invoke { i8*, i64 } @"_ZN4core4iter6traits8iterator8Iterator4find5check28_$u7b$$u7b$closure$u7d$$u7d$17h450a472c915742d1E"(i8** align 8 dereferenceable(8) %f, [0 x i8]* nonnull align 1 %26, i64 %25)
          to label %bb4 unwind label %cleanup1

bb10:                                             ; preds = %bb2
  br label %bb11

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_21, align 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %28 = invoke { i8*, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hcc6d83af71f2992eE"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  store { i8*, i64 } %28, { i8*, i64 }* %2, align 8
  store i8 0, i8* %_21, align 1
  br label %bb13

bb13:                                             ; preds = %bb9, %bb12
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = insertvalue { i8*, i64 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i64 } %33, i64 %32, 1
  ret { i8*, i64 } %34

bb4:                                              ; preds = %bb3
  %_11.0 = extractvalue { i8*, i64 } %27, 0
  %_11.1 = extractvalue { i8*, i64 } %27, 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %35 = invoke { i8*, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h264644c1c4319201E"(i8* align 1 %_11.0, i64 %_11.1)
          to label %bb5 unwind label %cleanup1

bb17:                                             ; preds = %bb16, %cleanup1
  br label %bb19

cleanup1:                                         ; preds = %bb4, %bb3
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  %38 = extractvalue { i8*, i32 } %36, 1
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %38, i32* %40, align 8
  br label %bb17

bb5:                                              ; preds = %bb4
  store { i8*, i64 } %35, { i8*, i64 }* %_10, align 8
  %41 = bitcast { i8*, i64 }* %_10 to {}**
  %42 = load {}*, {}** %41, align 8
  %43 = icmp eq {}* %42, null
  %_16 = select i1 %43, i64 0, i64 1
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb6:                                              ; preds = %bb5
  store i8 1, i8* %_21, align 1
  br label %bb1

bb8:                                              ; preds = %bb5
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_10, i32 0, i32 0
  %residual.0 = load i8*, i8** %44, align 8, !nonnull !3
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_10, i32 0, i32 1
  %residual.1 = load i64, i64* %45, align 8
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %46 = invoke { i8*, i64 } @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h36b3a97f8b378da0E"(i8* nonnull align 1 %residual.0, i64 %residual.1)
          to label %bb9 unwind label %cleanup2

bb9:                                              ; preds = %bb8
  store { i8*, i64 } %46, { i8*, i64 }* %2, align 8
  store i8 0, i8* %_21, align 1
  br label %bb13

bb16:                                             ; preds = %cleanup2
  br label %bb17

cleanup2:                                         ; preds = %bb8
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  %49 = extractvalue { i8*, i32 } %47, 1
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %49, i32* %51, align 8
  br label %bb16

bb14:                                             ; preds = %bb18, %bb19
  br label %bb15

bb18:                                             ; preds = %bb19
  br label %bb14

bb15:                                             ; preds = %bb14
  %52 = bitcast { i8*, i32 }* %1 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  resume { i8*, i32 } %57
}

; core::iter::traits::iterator::Iterator::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator9size_hint17hcb23d572a12c4f89E({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, %"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self) unnamed_addr #0 {
start:
  %_2 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %_2 to i64*
  store i64 0, i64* %1, align 8
  %2 = bitcast { i64, { i64, i64 } }* %0 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !range !2
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %7, i64* %9, align 8
  ret void
}

; core::iter::adapters::filter::Filter<I,P>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core4iter8adapters6filter19Filter$LT$I$C$P$GT$3new17hb7d68b2bf9d96e02E"(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* noalias nocapture sret(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>") dereferenceable(64) %0, %"core::str::iter::Split<core::str::IsWhitespace>"* noalias nocapture dereferenceable(64) %iter) unnamed_addr #1 {
start:
  %_3 = alloca %"core::str::iter::Split<core::str::IsWhitespace>", align 8
  %1 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %_3 to i8*
  %2 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 64, i1 false)
  %3 = bitcast %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* %0 to %"core::str::iter::Split<core::str::IsWhitespace>"*
  %4 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %3 to i8*
  %5 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 64, i1 false)
  %6 = bitcast %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* %0 to %"core::str::IsNotEmpty"*
  ret void
}

; core::sync::atomic::AtomicBool::load
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core4sync6atomic10AtomicBool4load17hef72b0c66f84a9b2E(%"core::sync::atomic::AtomicBool"* align 1 dereferenceable(1) %self, i8 %order) unnamed_addr #0 {
start:
  %_6 = bitcast %"core::sync::atomic::AtomicBool"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_load
  %_3 = call i8 @_ZN4core4sync6atomic11atomic_load17h5c3daf756d0c2c55E(i8* %_6, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = icmp ne i8 %_3, 0
  ret i1 %0
}

; core::sync::atomic::AtomicBool::store
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core4sync6atomic10AtomicBool5store17h4fb1378df6e2f80eE(%"core::sync::atomic::AtomicBool"* align 1 dereferenceable(1) %self, i1 zeroext %val, i8 %order) unnamed_addr #0 {
start:
  %_6 = bitcast %"core::sync::atomic::AtomicBool"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp ule i1 %val, true
  call void @llvm.assume(i1 %0)
  %_7 = zext i1 %val to i8
; call core::sync::atomic::atomic_store
  call void @_ZN4core4sync6atomic12atomic_store17h61e09e7e80003563E(i8* %_6, i8 %_7, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::sync::atomic::atomic_add
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4sync6atomic10atomic_add17hae3f6932962d313cE(i64* %dst, i64 %val, i8 %0) unnamed_addr #0 {
start:
  %1 = alloca i64, align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %2 = load i8, i8* %order, align 1, !range !7
  %_4 = zext i8 %2 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb9
    i64 1, label %bb5
    i64 2, label %bb3
    i64 3, label %bb7
    i64 4, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb9:                                              ; preds = %start
  %3 = atomicrmw add i64* %dst, i64 %val monotonic, align 8
  store i64 %3, i64* %1, align 8
  br label %bb10

bb5:                                              ; preds = %start
  %4 = atomicrmw add i64* %dst, i64 %val release, align 8
  store i64 %4, i64* %1, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %5 = atomicrmw add i64* %dst, i64 %val acquire, align 8
  store i64 %5, i64* %1, align 8
  br label %bb4

bb7:                                              ; preds = %start
  %6 = atomicrmw add i64* %dst, i64 %val acq_rel, align 8
  store i64 %6, i64* %1, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %7 = atomicrmw add i64* %dst, i64 %val seq_cst, align 8
  store i64 %7, i64* %1, align 8
  br label %bb11

bb11:                                             ; preds = %bb1
  br label %bb12

bb12:                                             ; preds = %bb10, %bb6, %bb4, %bb8, %bb11
  %8 = load i64, i64* %1, align 8
  ret i64 %8

bb8:                                              ; preds = %bb7
  br label %bb12

bb4:                                              ; preds = %bb3
  br label %bb12

bb6:                                              ; preds = %bb5
  br label %bb12

bb10:                                             ; preds = %bb9
  br label %bb12
}

; core::sync::atomic::atomic_sub
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4sync6atomic10atomic_sub17hc5c4f58b288d6e8bE(i64* %dst, i64 %val, i8 %0) unnamed_addr #0 {
start:
  %1 = alloca i64, align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %2 = load i8, i8* %order, align 1, !range !7
  %_4 = zext i8 %2 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb9
    i64 1, label %bb5
    i64 2, label %bb3
    i64 3, label %bb7
    i64 4, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb9:                                              ; preds = %start
  %3 = atomicrmw sub i64* %dst, i64 %val monotonic, align 8
  store i64 %3, i64* %1, align 8
  br label %bb10

bb5:                                              ; preds = %start
  %4 = atomicrmw sub i64* %dst, i64 %val release, align 8
  store i64 %4, i64* %1, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %5 = atomicrmw sub i64* %dst, i64 %val acquire, align 8
  store i64 %5, i64* %1, align 8
  br label %bb4

bb7:                                              ; preds = %start
  %6 = atomicrmw sub i64* %dst, i64 %val acq_rel, align 8
  store i64 %6, i64* %1, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %7 = atomicrmw sub i64* %dst, i64 %val seq_cst, align 8
  store i64 %7, i64* %1, align 8
  br label %bb11

bb11:                                             ; preds = %bb1
  br label %bb12

bb12:                                             ; preds = %bb10, %bb6, %bb4, %bb8, %bb11
  %8 = load i64, i64* %1, align 8
  ret i64 %8

bb8:                                              ; preds = %bb7
  br label %bb12

bb4:                                              ; preds = %bb3
  br label %bb12

bb6:                                              ; preds = %bb5
  br label %bb12

bb10:                                             ; preds = %bb9
  br label %bb12
}

; core::sync::atomic::AtomicUsize::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0bca32e2e3db70a3E(i64 %v) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca %"core::sync::atomic::AtomicUsize", align 8
  store i64 %v, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast %"core::sync::atomic::AtomicUsize"* %1 to i64*
  store i64 %2, i64* %3, align 8
  %4 = bitcast %"core::sync::atomic::AtomicUsize"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::sync::atomic::AtomicUsize::load
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic11AtomicUsize4load17h3bd2c95b5cfe9b6eE(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %self, i8 %order) unnamed_addr #0 {
start:
  %_5 = bitcast %"core::sync::atomic::AtomicUsize"* %self to i64*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_load
  %0 = call i64 @_ZN4core4sync6atomic11atomic_load17h537f11eb5eefba1aE(i64* %_5, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %0
}

; core::sync::atomic::AtomicUsize::fetch_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_add17h3955efa3ec429adbE(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %self, i64 %val, i8 %order) unnamed_addr #0 {
start:
  %_5 = bitcast %"core::sync::atomic::AtomicUsize"* %self to i64*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_add
  %0 = call i64 @_ZN4core4sync6atomic10atomic_add17hae3f6932962d313cE(i64* %_5, i64 %val, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %0
}

; core::sync::atomic::AtomicUsize::fetch_sub
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h4de5bdca29faa70cE(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %self, i64 %val, i8 %order) unnamed_addr #0 {
start:
  %_5 = bitcast %"core::sync::atomic::AtomicUsize"* %self to i64*
  br label %bb1

bb1:                                              ; preds = %start
; call core::sync::atomic::atomic_sub
  %0 = call i64 @_ZN4core4sync6atomic10atomic_sub17hc5c4f58b288d6e8bE(i64* %_5, i64 %val, i8 %order)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %0
}

; core::sync::atomic::atomic_load
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4sync6atomic11atomic_load17h537f11eb5eefba1aE(i64* %dst, i8 %0) unnamed_addr #0 {
start:
  %1 = alloca i64, align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %2 = load i8, i8* %order, align 1, !range !7
  %_3 = zext i8 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb9
    i64 2, label %bb3
    i64 3, label %bb1
    i64 4, label %bb7
  ]

bb2:                                              ; preds = %start
  unreachable

bb5:                                              ; preds = %start
  %3 = load atomic i64, i64* %dst monotonic, align 8
  store i64 %3, i64* %1, align 8
  br label %bb6

bb9:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc501 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc499 to %"core::panic::location::Location"*)) #18
  unreachable

bb3:                                              ; preds = %start
  %4 = load atomic i64, i64* %dst acquire, align 8
  store i64 %4, i64* %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [49 x i8] }>* @alloc500 to [0 x i8]*), i64 49, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc496 to %"core::panic::location::Location"*)) #18
  unreachable

bb7:                                              ; preds = %start
  %5 = load atomic i64, i64* %dst seq_cst, align 8
  store i64 %5, i64* %1, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb10:                                             ; preds = %bb6, %bb4, %bb8
  %6 = load i64, i64* %1, align 8
  ret i64 %6

bb4:                                              ; preds = %bb3
  br label %bb10

bb6:                                              ; preds = %bb5
  br label %bb10
}

; core::sync::atomic::atomic_load
; Function Attrs: inlinehint nonlazybind uwtable
define i8 @_ZN4core4sync6atomic11atomic_load17h5c3daf756d0c2c55E(i8* %dst, i8 %0) unnamed_addr #0 {
start:
  %1 = alloca i8, align 1
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %2 = load i8, i8* %order, align 1, !range !7
  %_3 = zext i8 %2 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb9
    i64 2, label %bb3
    i64 3, label %bb1
    i64 4, label %bb7
  ]

bb2:                                              ; preds = %start
  unreachable

bb5:                                              ; preds = %start
  %3 = load atomic i8, i8* %dst monotonic, align 1
  store i8 %3, i8* %1, align 1
  br label %bb6

bb9:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc501 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc499 to %"core::panic::location::Location"*)) #18
  unreachable

bb3:                                              ; preds = %start
  %4 = load atomic i8, i8* %dst acquire, align 1
  store i8 %4, i8* %1, align 1
  br label %bb4

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [49 x i8] }>* @alloc500 to [0 x i8]*), i64 49, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc496 to %"core::panic::location::Location"*)) #18
  unreachable

bb7:                                              ; preds = %start
  %5 = load atomic i8, i8* %dst seq_cst, align 1
  store i8 %5, i8* %1, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb10:                                             ; preds = %bb6, %bb4, %bb8
  %6 = load i8, i8* %1, align 1
  ret i8 %6

bb4:                                              ; preds = %bb3
  br label %bb10

bb6:                                              ; preds = %bb5
  br label %bb10
}

; core::sync::atomic::atomic_store
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4sync6atomic12atomic_store17h61e09e7e80003563E(i8* %dst, i8 %val, i8 %0) unnamed_addr #0 {
start:
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %1 = load i8, i8* %order, align 1, !range !7
  %_4 = zext i8 %1 to i64
  switch i64 %_4, label %bb2 [
    i64 0, label %bb5
    i64 1, label %bb3
    i64 2, label %bb9
    i64 3, label %bb1
    i64 4, label %bb7
  ]

bb2:                                              ; preds = %start
  unreachable

bb5:                                              ; preds = %start
  store atomic i8 %val, i8* %dst monotonic, align 1
  br label %bb6

bb3:                                              ; preds = %start
  store atomic i8 %val, i8* %dst release, align 1
  br label %bb4

bb9:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [42 x i8] }>* @alloc505 to [0 x i8]*), i64 42, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc507 to %"core::panic::location::Location"*)) #18
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [50 x i8] }>* @alloc502 to [0 x i8]*), i64 50, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc504 to %"core::panic::location::Location"*)) #18
  unreachable

bb7:                                              ; preds = %start
  store atomic i8 %val, i8* %dst seq_cst, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb10:                                             ; preds = %bb6, %bb4, %bb8
  ret void

bb4:                                              ; preds = %bb3
  br label %bb10

bb6:                                              ; preds = %bb5
  br label %bb10
}

; core::sync::atomic::fence
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core4sync6atomic5fence17h7f32d2536cc29a16E(i8 %0) unnamed_addr #0 {
start:
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  %1 = load i8, i8* %order, align 1, !range !7
  %_2 = zext i8 %1 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb4
    i64 2, label %bb3
    i64 3, label %bb5
    i64 4, label %bb6
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [41 x i8] }>* @alloc508 to [0 x i8]*), i64 41, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc510 to %"core::panic::location::Location"*)) #18
  unreachable

bb4:                                              ; preds = %start
  fence release
  br label %bb7

bb3:                                              ; preds = %start
  fence acquire
  br label %bb7

bb5:                                              ; preds = %start
  fence acq_rel
  br label %bb7

bb6:                                              ; preds = %start
  fence seq_cst
  br label %bb7

bb7:                                              ; preds = %bb4, %bb3, %bb5, %bb6
  ret void
}

; core::time::Duration::from_millis
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @_ZN4core4time8Duration11from_millis17h3a49901f766b5e46E(i64 %millis) unnamed_addr #0 {
start:
  %0 = alloca { i64, i32 }, align 8
  %_2 = udiv i64 %millis, 1000
  %_6 = urem i64 %millis, 1000
  %_5 = trunc i64 %_6 to i32
  %_4 = mul i32 %_5, 1000000
  %1 = bitcast { i64, i32 }* %0 to i64*
  store i64 %_2, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  store i32 %_4, i32* %2, align 8
  %3 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i64, i32 } undef, i64 %4, 0
  %8 = insertvalue { i64, i32 } %7, i32 %6, 1
  ret { i64, i32 } %8
}

; core::alloc::layout::size_align
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout10size_align17h8f5d7609c6ea72b7E() unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 16, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 8, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::size_align
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout10size_align17hc198e53af736fb39E() unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 4, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 4, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::size_align
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout10size_align17hc48724b7c5d7797fE() unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 1, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::pad_to_align
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17hc235137cfacf16cdE({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h542156459edaee7aE({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::padding_needed_for
  %pad = call i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17h9d33ea73217f7731E({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::alloc::layout::Layout::size
  %_7 = call i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb3

bb3:                                              ; preds = %bb2
  %new_size = add i64 %_7, %pad
; call core::alloc::layout::Layout::align
  %_12 = call i64 @_ZN4core5alloc6layout6Layout5align17h542156459edaee7aE({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::alloc::layout::Layout::from_size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout15from_size_align17h5ef0b8448b43f464E(i64 %new_size, i64 %_12)
  %_10.0 = extractvalue { i64, i64 } %0, 0
  %_10.1 = extractvalue { i64, i64 } %0, 1
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::result::Result<T,E>::unwrap
  %1 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h0ce1c2c3ff332005E"(i64 %_10.0, i64 %_10.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc512 to %"core::panic::location::Location"*))
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb6

bb6:                                              ; preds = %bb5
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h613e4eab990401e4E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %t) unnamed_addr #1 {
start:
  %_4 = alloca { i64, i64 }, align 8
; call core::mem::size_of_val_raw
  %_5 = call i64 @_ZN4core3mem15size_of_val_raw17h81db5fceedfba67dE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %t)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::align_of_val_raw
  %_7 = call i64 @_ZN4core3mem16align_of_val_raw17had84c7bb50425581E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %t)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = bitcast { i64, i64 }* %_4 to i64*
  store i64 %_5, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %_4 to i64*
  %size = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %align = load i64, i64* %3, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %4 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 %align)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h72a8280caa3d38efE(%"alloc::sync::ArcInner<_ShuffledOrder>"* %t) unnamed_addr #1 {
start:
  %_4 = alloca { i64, i64 }, align 8
; call core::mem::size_of_val_raw
  %_5 = call i64 @_ZN4core3mem15size_of_val_raw17he17ad24110cbcbd8E(%"alloc::sync::ArcInner<_ShuffledOrder>"* %t)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::align_of_val_raw
  %_7 = call i64 @_ZN4core3mem16align_of_val_raw17h963beffd65cae222E(%"alloc::sync::ArcInner<_ShuffledOrder>"* %t)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = bitcast { i64, i64 }* %_4 to i64*
  store i64 %_5, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %_4 to i64*
  %size = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %align = load i64, i64* %3, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %4 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 %align)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hcb37a1514473b9cfE(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %t) unnamed_addr #1 {
start:
  %_4 = alloca { i64, i64 }, align 8
; call core::mem::size_of_val_raw
  %_5 = call i64 @_ZN4core3mem15size_of_val_raw17h970962238a9e3fecE(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %t)
  br label %bb1

bb1:                                              ; preds = %start
; call core::mem::align_of_val_raw
  %_7 = call i64 @_ZN4core3mem16align_of_val_raw17h0adc26c32c5246ddE(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %t)
  br label %bb2

bb2:                                              ; preds = %bb1
  %0 = bitcast { i64, i64 }* %_4 to i64*
  store i64 %_5, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  %2 = bitcast { i64, i64 }* %_4 to i64*
  %size = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %align = load i64, i64* %3, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %4 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 %align)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::from_size_align
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout15from_size_align17h5ef0b8448b43f464E(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  %2 = call i64 @llvm.ctpop.i64(i64 %align)
  store i64 %2, i64* %0, align 8
  %_2.i.i = load i64, i64* %0, align 8
  %3 = trunc i64 %_2.i.i to i32
  %4 = icmp eq i32 %3, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = xor i1 %4, true
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %_9 = sub i64 %align, 1
  %_8 = sub i64 -1, %_9
  %_6 = icmp ugt i64 %size, %_8
  br i1 %_6, label %bb4, label %bb5

bb2:                                              ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %5, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb4, %bb2
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i64, i64 } undef, i64 %7, 0
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1
  ret { i64, i64 } %11

bb5:                                              ; preds = %bb3
; call core::alloc::layout::Layout::from_size_align_unchecked
  %12 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 %align)
  %_11.0 = extractvalue { i64, i64 } %12, 0
  %_11.1 = extractvalue { i64, i64 } %12, 1
  br label %bb6

bb4:                                              ; preds = %bb3
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %13, align 8
  br label %bb7

bb6:                                              ; preds = %bb5
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  store i64 %_11.0, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 %_11.1, i64* %15, align 8
  br label %bb7
}

; core::alloc::layout::Layout::padding_needed_for
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17h9d33ea73217f7731E({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %align) unnamed_addr #0 {
start:
; call core::alloc::layout::Layout::size
  %len = call i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = add i64 %len, %align
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = sub i64 %0, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = sub i64 %align, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = xor i64 %2, -1
  %len_rounded_up = and i64 %1, %_10
  %3 = sub i64 %len_rounded_up, %len
  br label %bb5

bb5:                                              ; preds = %bb4
  ret i64 %3
}

; core::alloc::layout::Layout::from_size_align_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
; call core::num::nonzero::NonZeroUsize::new_unchecked
  %_4 = call i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h96b19ba77570b373E(i64 %align), !range !16
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to i64*
  store i64 %size, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_4, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !range !16
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h010533563bac5415E() unnamed_addr #0 {
start:
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17hc198e53af736fb39E()
  %_3.0 = extractvalue { i64, i64 } %0, 0
  %_3.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %_3.0, i64 %_3.1)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h3c0783acc425340eE() unnamed_addr #0 {
start:
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17hc48724b7c5d7797fE()
  %_3.0 = extractvalue { i64, i64 } %0, 0
  %_3.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %_3.0, i64 %_3.1)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout3new17hdd3734918d7b7457E() unnamed_addr #0 {
start:
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17h8f5d7609c6ea72b7E()
  %_3.0 = extractvalue { i64, i64 } %0, 0
  %_3.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %_3.0, i64 %_3.1)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::alloc::layout::Layout::size
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64, i64 }* %self to i64*
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; core::alloc::layout::Layout::align
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core5alloc6layout6Layout5align17h542156459edaee7aE({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %_2 = load i64, i64* %0, align 8, !range !16
; call core::num::nonzero::NonZeroUsize::get
  %1 = call i64 @_ZN4core3num7nonzero12NonZeroUsize3get17had60ff6594c168abE(i64 %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h11bcafef21e2a1a1E(i64 %n) unnamed_addr #0 {
start:
  %val = alloca { { i64, i64 }, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_6 = alloca %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", align 8
  %_4 = alloca { { i64, i64 }, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
; call core::alloc::layout::Layout::new
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h010533563bac5415E()
  store { i64, i64 } %1, { i64, i64 }* %_8, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::repeat
  call void @_ZN4core5alloc6layout6Layout6repeat17hb36c8bda5daa7600E(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") dereferenceable(24) %_6, { i64, i64 }* align 8 dereferenceable(16) %_8, i64 %n)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hed40e7e5b0f97e5eE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>") dereferenceable(24) %_5, %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %_5, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  %_10 = select i1 %4, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %5 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"*
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"* %5 to { { i64, i64 }, i64 }*
  %7 = bitcast { { i64, i64 }, i64 }* %val to i8*
  %8 = bitcast { { i64, i64 }, i64 }* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = bitcast { { i64, i64 }, i64 }* %_4 to i8*
  %10 = bitcast { { i64, i64 }, i64 }* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = bitcast { { i64, i64 }, i64 }* %_4 to { i64, i64 }*
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !range !16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_4, i32 0, i32 1
  %offset = load i64, i64* %18, align 8
; call core::alloc::layout::Layout::pad_to_align
  %19 = call { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17hc235137cfacf16cdE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  %_17.0 = extractvalue { i64, i64 } %19, 0
  %_17.1 = extractvalue { i64, i64 } %19, 1
  br label %bb8

bb6:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h658e3eed332e3858E"()
  store { i64, i64 } %20, { i64, i64 }* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = insertvalue { i64, i64 } undef, i64 %22, 0
  %26 = insertvalue { i64, i64 } %25, i64 %24, 1
  ret { i64, i64 } %26

bb8:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_17.0, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_17.1, i64* %28, align 8
  br label %bb9
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h2fb2b163317cc07cE(i64 %n) unnamed_addr #0 {
start:
  %val = alloca { { i64, i64 }, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_6 = alloca %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", align 8
  %_4 = alloca { { i64, i64 }, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
; call core::alloc::layout::Layout::new
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h3c0783acc425340eE()
  store { i64, i64 } %1, { i64, i64 }* %_8, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::repeat
  call void @_ZN4core5alloc6layout6Layout6repeat17hb36c8bda5daa7600E(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") dereferenceable(24) %_6, { i64, i64 }* align 8 dereferenceable(16) %_8, i64 %n)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hed40e7e5b0f97e5eE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>") dereferenceable(24) %_5, %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %_5, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  %_10 = select i1 %4, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %5 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"*
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"* %5 to { { i64, i64 }, i64 }*
  %7 = bitcast { { i64, i64 }, i64 }* %val to i8*
  %8 = bitcast { { i64, i64 }, i64 }* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = bitcast { { i64, i64 }, i64 }* %_4 to i8*
  %10 = bitcast { { i64, i64 }, i64 }* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = bitcast { { i64, i64 }, i64 }* %_4 to { i64, i64 }*
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !range !16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_4, i32 0, i32 1
  %offset = load i64, i64* %18, align 8
; call core::alloc::layout::Layout::pad_to_align
  %19 = call { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17hc235137cfacf16cdE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  %_17.0 = extractvalue { i64, i64 } %19, 0
  %_17.1 = extractvalue { i64, i64 } %19, 1
  br label %bb8

bb6:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h658e3eed332e3858E"()
  store { i64, i64 } %20, { i64, i64 }* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = insertvalue { i64, i64 } undef, i64 %22, 0
  %26 = insertvalue { i64, i64 } %25, i64 %24, 1
  ret { i64, i64 } %26

bb8:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_17.0, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_17.1, i64* %28, align 8
  br label %bb9
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h37fe382dc91dad38E(i64 %n) unnamed_addr #0 {
start:
  %val = alloca { { i64, i64 }, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_6 = alloca %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", align 8
  %_4 = alloca { { i64, i64 }, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
; call core::alloc::layout::Layout::new
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17hdd3734918d7b7457E()
  store { i64, i64 } %1, { i64, i64 }* %_8, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::repeat
  call void @_ZN4core5alloc6layout6Layout6repeat17hb36c8bda5daa7600E(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") dereferenceable(24) %_6, { i64, i64 }* align 8 dereferenceable(16) %_8, i64 %n)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hed40e7e5b0f97e5eE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>") dereferenceable(24) %_5, %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  %2 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %_5, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  %_10 = select i1 %4, i64 1, i64 0
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
  unreachable

bb4:                                              ; preds = %bb3
  %5 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"*
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"* %5 to { { i64, i64 }, i64 }*
  %7 = bitcast { { i64, i64 }, i64 }* %val to i8*
  %8 = bitcast { { i64, i64 }, i64 }* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = bitcast { { i64, i64 }, i64 }* %_4 to i8*
  %10 = bitcast { { i64, i64 }, i64 }* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = bitcast { { i64, i64 }, i64 }* %_4 to { i64, i64 }*
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !range !16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_4, i32 0, i32 1
  %offset = load i64, i64* %18, align 8
; call core::alloc::layout::Layout::pad_to_align
  %19 = call { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17hc235137cfacf16cdE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  %_17.0 = extractvalue { i64, i64 } %19, 0
  %_17.1 = extractvalue { i64, i64 } %19, 1
  br label %bb8

bb6:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h658e3eed332e3858E"()
  store { i64, i64 } %20, { i64, i64 }* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = insertvalue { i64, i64 } undef, i64 %22, 0
  %26 = insertvalue { i64, i64 } %25, i64 %24, 1
  ret { i64, i64 } %26

bb8:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_17.0, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_17.1, i64* %28, align 8
  br label %bb9
}

; core::alloc::layout::Layout::repeat
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core5alloc6layout6Layout6repeat17hb36c8bda5daa7600E(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") dereferenceable(24) %0, { i64, i64 }* align 8 dereferenceable(16) %self, i64 %n) unnamed_addr #0 {
start:
  %_21 = alloca { { i64, i64 }, i64 }, align 8
  %_11 = alloca { i64, i64 }, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_8 = call i64 @_ZN4core5alloc6layout6Layout5align17h542156459edaee7aE({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::alloc::layout::Layout::padding_needed_for
  %_6 = call i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17h9d33ea73217f7731E({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %_8)
  br label %bb3

bb3:                                              ; preds = %bb2
  %padded_size = add i64 %_4, %_6
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h584337ecdb7f49b8E"(i64 %padded_size, i64 %n)
  %_13.0 = extractvalue { i64, i64 } %1, 0
  %_13.1 = extractvalue { i64, i64 } %1, 1
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::option::Option<T>::ok_or
  %2 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hd2ab19c3493f5895E"(i64 %_13.0, i64 %_13.1)
  %_12.0 = extractvalue { i64, i64 } %2, 0
  %_12.1 = extractvalue { i64, i64 } %2, 1
  br label %bb5

bb5:                                              ; preds = %bb4
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8a93c96a715b9b36E"(i64 %_12.0, i64 %_12.1)
  store { i64, i64 } %3, { i64, i64 }* %_11, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %4 = bitcast { i64, i64 }* %_11 to i64*
  %_17 = load i64, i64* %4, align 8, !range !2
  switch i64 %_17, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ]

bb8:                                              ; preds = %bb6
  unreachable

bb7:                                              ; preds = %bb6
  %5 = bitcast { i64, i64 }* %_11 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"*
  %6 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"* %5, i32 0, i32 1
  %val = load i64, i64* %6, align 8
; call core::alloc::layout::Layout::align
  %_24 = call i64 @_ZN4core5alloc6layout6Layout5align17h542156459edaee7aE({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb11

bb9:                                              ; preds = %bb6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8bf2ec286f265f70E"(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture sret(%"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>") dereferenceable(24) %0)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb13

bb13:                                             ; preds = %bb12, %bb10
  ret void

bb11:                                             ; preds = %bb7
; call core::alloc::layout::Layout::from_size_align_unchecked
  %7 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %val, i64 %_24)
  %_22.0 = extractvalue { i64, i64 } %7, 0
  %_22.1 = extractvalue { i64, i64 } %7, 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %8 = bitcast { { i64, i64 }, i64 }* %_21 to { i64, i64 }*
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0
  store i64 %_22.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1
  store i64 %_22.1, i64* %10, align 8
  %11 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_21, i32 0, i32 1
  store i64 %padded_size, i64* %11, align 8
  %12 = bitcast %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* %0 to %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Ok"*
  %13 = bitcast %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Ok"* %12 to { { i64, i64 }, i64 }*
  %14 = bitcast { { i64, i64 }, i64 }* %13 to i8*
  %15 = bitcast { { i64, i64 }, i64 }* %_21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
  br label %bb13
}

; core::alloc::layout::Layout::dangling
; Function Attrs: inlinehint nonlazybind uwtable
define internal nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17h227f18438374156dE({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::alloc::layout::Layout::align
  %_3 = call i64 @_ZN4core5alloc6layout6Layout5align17h542156459edaee7aE({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = inttoptr i64 %_3 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf8d7b6265503ad0eE"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::clone::Clone::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core5clone5Clone5clone17ha85f8b9815b09bffE({}* nonnull align 1 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hca8dd1145b0bc0b3E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i32]* %self.0 to i32*
  ret i32* %0
}

; core::slice::<impl [T]>::split_at_mut
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h86224e629dd161dbE"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, [0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 {
start:
  %_4 = icmp ule i64 %mid, %self.1
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::split_at_mut_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h2e018af49bc92036E"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, [0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %mid)
  br label %bb3

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [35 x i8] }>* @alloc513 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc515 to %"core::panic::location::Location"*)) #18
  unreachable

bb3:                                              ; preds = %bb2
  ret void
}

; core::slice::<impl [T]>::split_at_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h2e018af49bc92036E"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, [0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 {
start:
  %1 = alloca i32*, align 8
; call core::slice::<impl [T]>::as_mut_ptr
  %ptr = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hca8dd1145b0bc0b3E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::raw::from_raw_parts_mut
  %2 = call { [0 x i32]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hf09d69d9dd06b21fE(i32* %ptr, i64 %mid)
  %_8.0 = extractvalue { [0 x i32]*, i64 } %2, 0
  %_8.1 = extractvalue { [0 x i32]*, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = getelementptr inbounds i32, i32* %ptr, i64 %mid
  store i32* %3, i32** %1, align 8
  %_3.i.i = load i32*, i32** %1, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_16 = sub i64 %self.1, %mid
; call core::slice::raw::from_raw_parts_mut
  %4 = call { [0 x i32]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hf09d69d9dd06b21fE(i32* %_3.i.i, i64 %_16)
  %_12.0 = extractvalue { [0 x i32]*, i64 } %4, 0
  %_12.1 = extractvalue { [0 x i32]*, i64 } %4, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %5 = bitcast { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %0 to { [0 x i32]*, i64 }*
  %6 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %5, i32 0, i32 0
  store [0 x i32]* %_8.0, [0 x i32]** %6, align 8
  %7 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %5, i32 0, i32 1
  store i64 %_8.1, i64* %7, align 8
  %8 = getelementptr inbounds { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %0, i32 0, i32 1
  %9 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %8, i32 0, i32 0
  store [0 x i32]* %_12.0, [0 x i32]** %9, align 8
  %10 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %8, i32 0, i32 1
  store i64 %_12.1, i64* %10, align 8
  ret void
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17he9fe81ead4329830E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17ha0e0729189ad5001E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::slice::iter::Iter<T>::new
  %0 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h8b2142f188916237E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %1 = extractvalue { i8*, i8* } %0, 0
  %2 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1
  ret { i8*, i8* } %4
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h1ca28ded385af010E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h832a0757a2494090E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = icmp eq i64 %self.1, 0
  ret i1 %0
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17habd447da4082a8f9E(i8* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h0ad27f302787a75bE(i8* %data, i64 %len)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hf09d69d9dd06b21fE(i32* %data, i64 %len) unnamed_addr #0 {
start:
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i32]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hadb1fd8ce09fb23bE(i32* %data, i64 %len)
  %_6.0 = extractvalue { [0 x i32]*, i64 } %0, 0
  %_6.1 = extractvalue { [0 x i32]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %_6.0, 0
  %2 = insertvalue { [0 x i32]*, i64 } %1, i64 %_6.1, 1
  ret { [0 x i32]*, i64 } %2
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h8b2142f188916237E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %end = alloca i8*, align 8
  %2 = alloca { i8*, i8* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %ptr = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h1ca28ded385af010E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h24cd8ac15c16344cE"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = icmp eq i64 1, 0
  br i1 %3, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %4 = getelementptr i8, i8* %ptr, i64 %slice.1
  store i8* %4, i8** %1, align 8
  %5 = load i8*, i8** %1, align 8
  br label %bb6

bb7:                                              ; preds = %bb4
  %6 = getelementptr inbounds i8, i8* %ptr, i64 %slice.1
  store i8* %6, i8** %0, align 8
  %7 = load i8*, i8** %0, align 8
  store i8* %7, i8** %end, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf8d7b6265503ad0eE"(i8* %ptr)
  br label %bb10

bb6:                                              ; preds = %bb5
  store i8* %5, i8** %end, align 8
  br label %bb9

bb10:                                             ; preds = %bb9
  %_21 = load i8*, i8** %end, align 8
  %8 = bitcast { i8*, i8* }* %2 to i8**
  store i8* %_18, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  store i8* %_21, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8, !nonnull !3
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = insertvalue { i8*, i8* } undef, i8* %11, 0
  %15 = insertvalue { i8*, i8* } %14, i8* %13, 1
  ret { i8*, i8* } %15
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h88570b1ac1839af9E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %1 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h7f403350a4144d33E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h54ce5cb1222b16b2E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h9b78542be0462365E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hae36c26c6e30fb4bE"([0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i32]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h445c8b0cfcb8a89cE"(i64 %index.0, i64 %index.1, [0 x i32]* nonnull align 4 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i32]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i32]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %_4.0, 0
  %3 = insertvalue { [0 x i32]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i32]*, i64 } %3
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hbb18164140832e93E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
; call <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
  %1 = call { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h0666d91e8c12ee28E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_4.1, 1
  ret { [0 x i8]*, i64 } %3
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$3map17h37d95adf488148c2E"(i32 %0, i32 %1) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %5 = bitcast { i32, i32 }* %self to i32*
  %6 = load i32, i32* %5, align 4, !range !59
  %_3 = zext i32 %6 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4
  br label %bb7

bb3:                                              ; preds = %start
  %7 = bitcast { i32, i32 }* %self to %"core::option::Option<u32>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %7, i32 0, i32 1
  %x = load i32, i32* %8, align 4
  store i8 0, i8* %_9, align 1
  store i32 %x, i32* %_7, align 4
  %9 = load i32, i32* %_7, align 4
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
  %_5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h5a4f0a447f18845dE"(i32 %9), !range !66
  br label %bb4

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4
  br label %bb7

bb7:                                              ; preds = %bb1, %bb4
  %10 = load i8, i8* %_9, align 1, !range !4
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %12 = load i32, i32* %2, align 4, !range !68
  ret i32 %12

bb6:                                              ; preds = %bb7
  br label %bb5
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$4take17h2a0dc5c871d5db3cE"(%"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<i32>>") dereferenceable(24) %0, %"core::option::Option<core::cell::RefCell<i32>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_3 = alloca %"core::option::Option<core::cell::RefCell<i32>>", align 8
  %1 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %_3 to i64*
  store i64 0, i64* %1, align 8
; call core::mem::replace
  call void @_ZN4core3mem7replace17hf7dab2abeb3618bcE(%"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<i32>>") dereferenceable(24) %0, %"core::option::Option<core::cell::RefCell<i32>>"* align 8 dereferenceable(24) %self, %"core::option::Option<core::cell::RefCell<i32>>"* noalias nocapture dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$4take17h38ede7a002abf785E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_3 = alloca { i8*, i64 }, align 8
  %0 = bitcast { i8*, i64 }* %_3 to {}**
  store {}* null, {}** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 0
  %2 = load i8*, i8** %1, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_3, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
; call core::mem::replace
  %5 = call { i8*, i64 } @_ZN4core3mem7replace17h459f7dcf7f18dd3cE({ i8*, i64 }* align 8 dereferenceable(16) %self, i8* align 1 %2, i64 %4)
  %6 = extractvalue { i8*, i64 } %5, 0
  %7 = extractvalue { i8*, i64 } %5, 1
  br label %bb1

bb1:                                              ; preds = %start
  %8 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$4take17h83e469881a095444E"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") dereferenceable(40) %0, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_3 = alloca %"core::option::Option<core::cell::RefCell<alloc::string::String>>", align 8
  %1 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %_3 to i64*
  store i64 0, i64* %1, align 8
; call core::mem::replace
  call void @_ZN4core3mem7replace17h8f748652bc0dd5aeE(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture sret(%"core::option::Option<core::cell::RefCell<alloc::string::String>>") dereferenceable(40) %0, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(40) %self, %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* noalias nocapture dereferenceable(40) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h3990bfc2d1e34cecE"(i8* %0) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i8** %1 to %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err"*
  %6 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>::Err"* %5 to %"core::alloc::AllocError"*
  %7 = bitcast i8** %1 to {}**
  store {}* null, {}** %7, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !3
  store i8* %v, i8** %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %8 = load i8, i8* %_7, align 1, !range !4
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb4
  %10 = load i8*, i8** %1, align 8
  ret i8* %10

bb6:                                              ; preds = %bb4
  br label %bb5
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(32) i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h528f83b5c5e93e3bE"(i64* align 8 dereferenceable_or_null(32) %0) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i64** %1 to %"core::result::Result<&core::cell::RefCell<alloc::string::String>, std::thread::local::AccessError>::Err"*
  %6 = bitcast %"core::result::Result<&core::cell::RefCell<alloc::string::String>, std::thread::local::AccessError>::Err"* %5 to %"std::thread::local::AccessError"*
  %7 = bitcast i64** %1 to {}**
  store {}* null, {}** %7, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %8 = bitcast i64** %self to %"core::cell::RefCell<alloc::string::String>"**
  %v = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %8, align 8, !nonnull !3
  %9 = bitcast i64** %1 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %v, %"core::cell::RefCell<alloc::string::String>"** %9, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %10 = load i8, i8* %_7, align 1, !range !4
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb4
  %12 = load i64*, i64** %1, align 8
  ret i64* %12

bb6:                                              ; preds = %bb4
  br label %bb5
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h7c7813c53ef37b7eE"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %0, i64 %1, i64 %2, i64 %err.0, i64 %err.1) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %6 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0
  store i64 %err.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1
  store i64 %err.1, i64* %9, align 8
  %10 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 1, i64* %10, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %11 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %12 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %11, i32 0, i32 1
  %v = load i64, i64* %12, align 8
  %13 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*
  %14 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %13, i32 0, i32 1
  store i64 %v, i64* %14, align 8
  %15 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 0, i64* %15, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %16 = load i8, i8* %_7, align 1, !range !4
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb4
  ret void

bb6:                                              ; preds = %bb4
  br label %bb5
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hd2ab19c3493f5895E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %5 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %5, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %6 = bitcast { i64, i64 }* %2 to %"core::result::Result<usize, core::alloc::layout::LayoutError>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<usize, core::alloc::layout::LayoutError>::Err", %"core::result::Result<usize, core::alloc::layout::LayoutError>::Err"* %6, i32 0, i32 1
  %8 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %8, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %10 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %9, i32 0, i32 1
  %v = load i64, i64* %10, align 8
  %11 = bitcast { i64, i64 }* %2 to %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok", %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"* %11, i32 0, i32 1
  store i64 %v, i64* %12, align 8
  %13 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %13, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %14 = load i8, i8* %_7, align 1, !range !4
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb4
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8, !range !2
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1
  ret { i64, i64 } %21

bb6:                                              ; preds = %bb4
  br label %bb5
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17hf22f0b8b43780835E"(i64* align 8 dereferenceable_or_null(16) %0) unnamed_addr #0 {
start:
  %_7 = alloca i8, align 1
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %5 = bitcast i64** %1 to %"core::result::Result<&core::cell::RefCell<i32>, std::thread::local::AccessError>::Err"*
  %6 = bitcast %"core::result::Result<&core::cell::RefCell<i32>, std::thread::local::AccessError>::Err"* %5 to %"std::thread::local::AccessError"*
  %7 = bitcast i64** %1 to {}**
  store {}* null, {}** %7, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %8 = bitcast i64** %self to { i64, i32 }**
  %v = load { i64, i32 }*, { i64, i32 }** %8, align 8, !nonnull !3
  %9 = bitcast i64** %1 to { i64, i32 }**
  store { i64, i32 }* %v, { i64, i32 }** %9, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %10 = load i8, i8* %_7, align 1, !range !4
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb4
  %12 = load i64*, i64** %1, align 8
  ret i64* %12

bb6:                                              ; preds = %bb4
  br label %bb5
}

; core::option::Option<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17h2cbbc89e153ac895E"(%"core::option::Option<core::cell::RefCell<i32>>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %2 = bitcast i64** %0 to {}**
  store {}* null, {}** %2, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<core::cell::RefCell<i32>>"* %self to %"core::option::Option<core::cell::RefCell<i32>>::Some"*
  %x = getelementptr inbounds %"core::option::Option<core::cell::RefCell<i32>>::Some", %"core::option::Option<core::cell::RefCell<i32>>::Some"* %3, i32 0, i32 1
  %4 = bitcast i64** %0 to { i64, i32 }**
  store { i64, i32 }* %x, { i64, i32 }** %4, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %5 = load i64*, i64** %0, align 8
  ret i64* %5
}

; core::option::Option<T>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(32) i64* @"_ZN4core6option15Option$LT$T$GT$6as_ref17hd2cbaaf92996feefE"(%"core::option::Option<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %2 = bitcast i64** %0 to {}**
  store {}* null, {}** %2, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %3 = bitcast %"core::option::Option<core::cell::RefCell<alloc::string::String>>"* %self to %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"*
  %x = getelementptr inbounds %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some", %"core::option::Option<core::cell::RefCell<alloc::string::String>>::Some"* %3, i32 0, i32 1
  %4 = bitcast i64** %0 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %x, %"core::cell::RefCell<alloc::string::String>"** %4, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %5 = load i64*, i64** %0, align 8
  ret i64* %5
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hc7763a541bfd14ccE"(i32 %0, i32 %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 {
start:
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  %5 = bitcast { i32, i32 }* %self to i32*
  %6 = load i32, i32* %5, align 4, !range !59
  %_2 = zext i32 %6 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc516 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #18
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast { i32, i32 }* %self to %"core::option::Option<i32>::Some"*
  %8 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %7, i32 0, i32 1
  %val = load i32, i32* %8, align 4
  ret i32 %val
}

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17ha8134b17320a65bcE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::option::Option<T>::is_some
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17hb9970cb7aae4756eE"({ i64, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_2, true
  ret i1 %0
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17hb9970cb7aae4756eE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  %2 = icmp eq i64 %_2, 1
  br i1 %2, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hd041e27b8f3dfe0aE"(%"core::result::Result<(), std::io::error::Error>"* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = bitcast %"core::result::Result<(), std::io::error::Error>"* %self to i8*
  %2 = load i8, i8* %1, align 8, !range !7
  %3 = sub i8 %2, 4
  %4 = icmp eq i8 %3, 0
  %_2 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_2, 0
  br i1 %5, label %bb2, label %bb1

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %0, align 1, !range !4
  %7 = trunc i8 %6 to i1
  ret i1 %7
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h283e886dc8e4195bE"(i64* align 8 dereferenceable_or_null(24) %0, i8* %1, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::cell::BorrowMutError", align 1
  %self = alloca { i64*, i8* }, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %self, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %self, i32 0, i32 1
  store i8* %1, i8** %5, align 8
  %6 = bitcast { i64*, i8* }* %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_3 = select i1 %8, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i64*, i8* }* %self to { i64*, i64* }*
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %9, i32 0, i32 0
  %t.0 = load i64*, i64** %10, align 8, !nonnull !3
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %9, i32 0, i32 1
  %t.1 = load i64*, i64** %11, align 8, !nonnull !3
  %12 = insertvalue { i64*, i64* } undef, i64* %t.0, 0
  %13 = insertvalue { i64*, i64* } %12, i64* %t.1, 1
  ret { i64*, i64* } %13

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"core::cell::BorrowMutError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.5 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %3 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h84cc4fb5f6f22818E"(i1 zeroext %0, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca %"std::thread::local::AccessError", align 1
  %self = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %self, align 1
  %4 = load i8, i8* %self, align 1, !range !4
  %5 = trunc i8 %4 to i1
  %_3 = zext i1 %5 to i64
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  ret void

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"std::thread::local::AccessError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.6 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h8ee5521ca4143566E"(i32* align 4 dereferenceable_or_null(4) %0, i8* %1, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::cell::BorrowMutError", align 1
  %self = alloca { i32*, i8* }, align 8
  %4 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %self, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = getelementptr inbounds { i32*, i8* }, { i32*, i8* }* %self, i32 0, i32 1
  store i8* %1, i8** %5, align 8
  %6 = bitcast { i32*, i8* }* %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_3 = select i1 %8, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i32*, i8* }* %self to { i32*, i64* }*
  %10 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %9, i32 0, i32 0
  %t.0 = load i32*, i32** %10, align 8, !nonnull !3
  %11 = getelementptr inbounds { i32*, i64* }, { i32*, i64* }* %9, i32 0, i32 1
  %t.1 = load i64*, i64** %11, align 8, !nonnull !3
  %12 = insertvalue { i32*, i64* } undef, i32* %t.0, 0
  %13 = insertvalue { i32*, i64* } %12, i64* %t.1, 1
  ret { i32*, i64* } %13

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"core::cell::BorrowMutError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.5 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %3 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17he89abdf8e4a3b954E"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture dereferenceable(24) %self, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca %"std::io::error::Error", align 8
  %2 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %self to i64*
  %_3 = load i64, i64* %2, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %self to %"core::result::Result<usize, std::io::error::Error>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Ok", %"core::result::Result<usize, std::io::error::Error>::Ok"* %3, i32 0, i32 1
  %t = load i64, i64* %4, align 8
  ret i64 %t

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %self to %"core::result::Result<usize, std::io::error::Error>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %5, i32 0, i32 1
  %7 = bitcast %"std::io::error::Error"* %e to i8*
  %8 = bitcast %"std::io::error::Error"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  %_6.0 = bitcast %"std::io::error::Error"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.7 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hda7771387f347390E"(%"std::io::error::Error"* %e) #19
  br label %bb5

cleanup:                                          ; preds = %bb1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %14 = bitcast { i8*, i32 }* %1 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64* } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf32867376c16fec8E"(i64* align 8 dereferenceable_or_null(24) %0, i8* %1, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::cell::BorrowError", align 1
  %self = alloca { i64*, i8* }, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %self, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %self, i32 0, i32 1
  store i8* %1, i8** %5, align 8
  %6 = bitcast { i64*, i8* }* %self to {}**
  %7 = load {}*, {}** %6, align 8
  %8 = icmp eq {}* %7, null
  %_3 = select i1 %8, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast { i64*, i8* }* %self to { i64*, i64* }*
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %9, i32 0, i32 0
  %t.0 = load i64*, i64** %10, align 8, !nonnull !3
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %9, i32 0, i32 1
  %t.1 = load i64*, i64** %11, align 8, !nonnull !3
  %12 = insertvalue { i64*, i64* } undef, i64* %t.0, 0
  %13 = insertvalue { i64*, i64* } %12, i64* %t.1, 1
  ret { i64*, i64* } %13

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"core::cell::BorrowError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.8 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %3 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf85c3cc50a49daa3E"(i128 %0, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca %"std::io::error::Error", align 8
  %3 = alloca i128, align 8
  %self = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  store i128 %0, i128* %3, align 8
  %4 = bitcast %"core::result::Result<(), std::io::error::Error>"* %self to i8*
  %5 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = bitcast %"core::result::Result<(), std::io::error::Error>"* %self to i8*
  %7 = load i8, i8* %6, align 8, !range !7
  %8 = sub i8 %7, 4
  %9 = icmp eq i8 %8, 0
  %_3 = select i1 %9, i64 0, i64 1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  ret void

bb1:                                              ; preds = %start
  %10 = bitcast %"core::result::Result<(), std::io::error::Error>"* %self to %"core::result::Result<(), std::io::error::Error>::Err"*
  %11 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %10 to %"std::io::error::Error"*
  %12 = bitcast %"std::io::error::Error"* %e to i8*
  %13 = bitcast %"std::io::error::Error"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false)
  %_6.0 = bitcast %"std::io::error::Error"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.7 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hda7771387f347390E"(%"std::io::error::Error"* %e) #19
  br label %bb5

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %2 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; core::result::Result<T,E>::is_err
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h8f18556c2787f4eaE"(%"core::result::Result<(), std::io::error::Error>"* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::result::Result<T,E>::is_ok
  %_2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hd041e27b8f3dfe0aE"(%"core::result::Result<(), std::io::error::Error>"* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = xor i1 %_2, true
  ret i1 %0
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h0ce1c2c3ff332005E"(i64 %0, i64 %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::alloc::layout::LayoutError", align 1
  %self = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %_2 = select i1 %8, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %t.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %10, align 8, !range !16
  %11 = insertvalue { i64, i64 } undef, i64 %t.0, 0
  %12 = insertvalue { i64, i64 } %11, i64 %t.1, 1
  ret { i64, i64 } %12

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"core::alloc::layout::LayoutError"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc562 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.9 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %18 = bitcast { i8*, i32 }* %3 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h144d03eb13b5449dE"(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca %"std::io::error::Error", align 8
  %2 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %self to i32*
  %3 = load i32, i32* %2, align 8, !range !59
  %_2 = zext i32 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %self to %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"*
  %5 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Ok", %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"* %4, i32 0, i32 1
  %t = load i32, i32* %5, align 4, !range !8
  ret i32 %t

bb1:                                              ; preds = %start
  %6 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %self to %"core::result::Result<std::fs::File, std::io::error::Error>::Err"*
  %7 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Err", %"core::result::Result<std::fs::File, std::io::error::Error>::Err"* %6, i32 0, i32 1
  %8 = bitcast %"std::io::error::Error"* %e to i8*
  %9 = bitcast %"std::io::error::Error"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %_6.0 = bitcast %"std::io::error::Error"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc562 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.7 to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hda7771387f347390E"(%"std::io::error::Error"* %e) #19
  br label %bb5

cleanup:                                          ; preds = %bb1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %15 = bitcast { i8*, i32 }* %1 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h21ffdb16b140a576E"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i64*, i8 }, align 8
  %2 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 0
  %t.0 = load i64*, i64** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %t.1 = trunc i8 %7 to i1
  %8 = zext i1 %t.1 to i8
  %9 = insertvalue { i64*, i8 } undef, i64* %t.0, 0
  %10 = insertvalue { i64*, i8 } %9, i8 %8, 1
  ret { i64*, i8 } %10

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 0
  store i64* %14, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 1
  %20 = zext i1 %17 to i8
  store i8 %20, i8* %19, align 8
  %_6.0 = bitcast { i64*, i8 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc562 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.a to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>
  call void @"_ZN4core3ptr98drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$$GT$17hdf6e55af722f77ccE"({ i64*, i8 }* %e) #19
  br label %bb5

cleanup:                                          ; preds = %bb1
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %1 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3b2adceb7c9b3829E"(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i64*, i8 }, align 8
  %2 = bitcast %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* %self to %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Ok", %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 0
  %t.0 = load i64*, i64** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %t.1 = trunc i8 %7 to i1
  %8 = zext i1 %t.1 to i8
  %9 = insertvalue { i64*, i8 } undef, i64* %t.0, 0
  %10 = insertvalue { i64*, i8 } %9, i8 %8, 1
  ret { i64*, i8 } %10

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* %self to %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Err", %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 0
  store i64* %14, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 1
  %20 = zext i1 %17 to i8
  store i8 %20, i8* %19, align 8
  %_6.0 = bitcast { i64*, i8 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc562 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.b to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>
  call void @"_ZN4core3ptr105drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..rwlock..RwLockWriteGuard$LT$i32$GT$$GT$$GT$17hcd4e14d7be50d595E"({ i64*, i8 }* %e) #19
  br label %bb5

cleanup:                                          ; preds = %bb1
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %1 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h7795de4fdc9ed8d1E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i64*, i8 }, align 8
  %2 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 0
  %t.0 = load i64*, i64** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %t.1 = trunc i8 %7 to i1
  %8 = zext i1 %t.1 to i8
  %9 = insertvalue { i64*, i8 } undef, i64* %t.0, 0
  %10 = insertvalue { i64*, i8 } %9, i8 %8, 1
  ret { i64*, i8 } %10

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 0
  store i64* %14, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 1
  %20 = zext i1 %17 to i8
  store i8 %20, i8* %19, align 8
  %_6.0 = bitcast { i64*, i8 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc562 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.c to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>
  call void @"_ZN4core3ptr145drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$$GT$17hc8311b3a2fb80a78E"({ i64*, i8 }* %e) #19
  br label %bb5

cleanup:                                          ; preds = %bb1
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %1 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(16) i64* @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h84bd7da7c7251649E"(i64 %0, i8* %1, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %e = alloca i64*, align 8
  %self = alloca { i64, i8* }, align 8
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self, i32 0, i32 1
  store i8* %1, i8** %5, align 8
  %6 = bitcast { i64, i8* }* %self to i64*
  %_2 = load i64, i64* %6, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i8* }* %self to %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Ok"*
  %8 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Ok", %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Ok"* %7, i32 0, i32 1
  %t = load i64*, i64** %8, align 8, !nonnull !3
  ret i64* %t

bb1:                                              ; preds = %start
  %9 = bitcast { i64, i8* }* %self to %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Err", %"core::result::Result<std::sync::rwlock::RwLockReadGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>::Err"* %9, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8, !nonnull !3
  store i64* %11, i64** %e, align 8
  %_6.0 = bitcast i64** %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc562 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.d to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::rwlock::RwLockReadGuard<i32>>>
  call void @"_ZN4core3ptr104drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..rwlock..RwLockReadGuard$LT$i32$GT$$GT$$GT$17hc00c6a3dbc8306b5E"(i64** %e) #19
  br label %bb5

cleanup:                                          ; preds = %bb1
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %17 = bitcast { i8*, i32 }* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h895596befc405311E"(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i64*, i8 }, align 8
  %2 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 0
  %t.0 = load i64*, i64** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %t.1 = trunc i8 %7 to i1
  %8 = zext i1 %t.1 to i8
  %9 = insertvalue { i64*, i8 } undef, i64* %t.0, 0
  %10 = insertvalue { i64*, i8 } %9, i8 %8, 1
  ret { i64*, i8 } %10

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 0
  store i64* %14, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 1
  %20 = zext i1 %17 to i8
  store i8 %20, i8* %19, align 8
  %_6.0 = bitcast { i64*, i8 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc562 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.e to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>
  call void @"_ZN4core3ptr103drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$$GT$17h9dabfa2b54ef84d2E"({ i64*, i8 }* %e) #19
  br label %bb5

cleanup:                                          ; preds = %bb1
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %1 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbd51cebe08db4971E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca { i64*, i8 }, align 8
  %2 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok", %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 0
  %t.0 = load i64*, i64** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %4, i32 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !4
  %t.1 = trunc i8 %7 to i1
  %8 = zext i1 %t.1 to i8
  %9 = insertvalue { i64*, i8 } undef, i64* %t.0, 0
  %10 = insertvalue { i64*, i8 } %9, i8 %8, 1
  ret { i64*, i8 } %10

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* %self to %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err", %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8, !nonnull !3
  %15 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %12, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = trunc i8 %16 to i1
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 0
  store i64* %14, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %e, i32 0, i32 1
  %20 = zext i1 %17 to i8
  store i8 %20, i8* %19, align 8
  %_6.0 = bitcast { i64*, i8 }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc562 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.f to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>
  call void @"_ZN4core3ptr108drop_in_place$LT$std..sync..poison..PoisonError$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$$GT$17hef8b788b9abac303E"({ i64*, i8 }* %e) #19
  br label %bb5

cleanup:                                          ; preds = %bb1
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %1 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hef5715728bd23a33E"(i64 %0, %"core::panic::location::Location"* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca i8, align 1
  %3 = alloca i64, align 8
  %self = alloca %"core::result::Result<i32, core::num::error::ParseIntError>", align 4
  store i64 %0, i64* %3, align 8
  %4 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %self to i8*
  %5 = bitcast i64* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 8, i1 false)
  %6 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %self to i8*
  %7 = load i8, i8* %6, align 4, !range !4
  %8 = trunc i8 %7 to i1
  %_2 = zext i1 %8 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %self to %"core::result::Result<i32, core::num::error::ParseIntError>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<i32, core::num::error::ParseIntError>::Ok", %"core::result::Result<i32, core::num::error::ParseIntError>::Ok"* %9, i32 0, i32 1
  %t = load i32, i32* %10, align 4
  ret i32 %t

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %self to %"core::result::Result<i32, core::num::error::ParseIntError>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<i32, core::num::error::ParseIntError>::Err", %"core::result::Result<i32, core::num::error::ParseIntError>::Err"* %11, i32 0, i32 1
  %13 = load i8, i8* %12, align 1, !range !7
  store i8 %13, i8* %e, align 1
  %_6.0 = bitcast i8* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc562 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.g to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %1) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %2 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf01b14641ac73edeE"(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture dereferenceable(24) %self, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::str::error::Utf8Error", align 8
  %2 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to i64*
  %_2 = load i64, i64* %2, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to %"core::result::Result<&str, core::str::error::Utf8Error>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Ok", %"core::result::Result<&str, core::str::error::Utf8Error>::Ok"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  %t.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  %t.1 = load i64, i64* %6, align 8
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %t.0, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %t.1, 1
  ret { [0 x i8]*, i64 } %8

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to %"core::result::Result<&str, core::str::error::Utf8Error>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Err", %"core::result::Result<&str, core::str::error::Utf8Error>::Err"* %9, i32 0, i32 1
  %11 = bitcast %"core::str::error::Utf8Error"* %e to i8*
  %12 = bitcast %"core::str::error::Utf8Error"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  %_6.0 = bitcast %"core::str::error::Utf8Error"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc562 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.h to [3 x i64]*), %"core::panic::location::Location"* align 8 dereferenceable(24) %0) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb1
  unreachable

bb4:                                              ; preds = %cleanup
  br label %bb5

cleanup:                                          ; preds = %bb1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb4

bb5:                                              ; preds = %bb4
  %18 = bitcast { i8*, i32 }* %1 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h6f9506b36b97a85fE"(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>") dereferenceable(24) %0, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to i64*
  %_3 = load i64, i64* %1, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1
  %4 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 0, i64* %4, align 8
  br label %bb5

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %5, i32 0, i32 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0
  %e.0 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1
  %e.1 = load i64, i64* %8, align 8
  store i8 0, i8* %_11, align 1
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0
  store i64 %e.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  store i64 %e.1, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
; call alloc::raw_vec::handle_reserve::{{closure}}
  %15 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hde08c2857941fd93E"(i64 %12, i64 %14)
  %_7.0 = extractvalue { i64, i64 } %15, 0
  %_7.1 = extractvalue { i64, i64 } %15, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %16 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"*
  %17 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"* %16, i32 0, i32 1
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0
  store i64 %_7.0, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1
  store i64 %_7.1, i64* %19, align 8
  %20 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 1, i64* %20, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %21 = load i8, i8* %_11, align 1, !range !4
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb7, label %bb6

bb6:                                              ; preds = %bb7, %bb5
  ret void

bb7:                                              ; preds = %bb5
  br label %bb6
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbaa95431c8fffcc8E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i8* %1, i64 %2, i64* align 8 dereferenceable(16) %op) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_3 = select i1 %7, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  %t.0 = load i8*, i8** %8, align 8, !nonnull !3
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %9, align 8
  %10 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %11, i32 0, i32 0
  store i8* %t.0, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %11, i32 0, i32 1
  store i64 %t.1, i64* %13, align 8
  %14 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %14, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %15 = bitcast { %"core::alloc::AllocError" }* %_9 to %"core::alloc::AllocError"*
; call alloc::raw_vec::finish_grow::{{closure}}
  %16 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hb8ad3f4ee22a034eE"(i64* align 8 dereferenceable(16) %op)
  %_7.0 = extractvalue { i64, i64 } %16, 0
  %_7.1 = extractvalue { i64, i64 } %16, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %17 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %_7.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %_7.1, i64* %20, align 8
  %21 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %22 = load i8, i8* %_11, align 1, !range !4
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb7, label %bb6

bb6:                                              ; preds = %bb7, %bb5
  ret void

bb7:                                              ; preds = %bb5
  br label %bb6
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd3598f53fe974d3eE"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::layout::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_11, align 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %_3 = select i1 %7, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %t.0 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %9, align 8, !range !16
  %10 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*
  %11 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %t.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %t.1, i64* %13, align 8
  %14 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 0, i64* %14, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %15 = bitcast { %"core::alloc::layout::LayoutError" }* %_9 to %"core::alloc::layout::LayoutError"*
; call alloc::raw_vec::finish_grow::{{closure}}
  %16 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h733b5d7a05831bd7E"()
  %_7.0 = extractvalue { i64, i64 } %16, 0
  %_7.1 = extractvalue { i64, i64 } %16, 1
  br label %bb4

bb4:                                              ; preds = %bb1
  %17 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %_7.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %_7.1, i64* %20, align 8
  %21 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %22 = load i8, i8* %_11, align 1, !range !4
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb7, label %bb6

bb6:                                              ; preds = %bb7, %bb5
  ret void

bb7:                                              ; preds = %bb5
  br label %bb6
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define void @_ZN4core9panicking13assert_failed17h540f8ac8f5553fbfE(i8 %kind, { i64, i64 }* align 8 dereferenceable(16) %0, { i64, i64 }* align 8 dereferenceable(16) %1, %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48) %args, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) unnamed_addr #6 {
start:
  %_12 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca { i64, i64 }*, align 8
  %left = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %0, { i64, i64 }** %left, align 8
  store { i64, i64 }* %1, { i64, i64 }** %right, align 8
  %_6.0 = bitcast { i64, i64 }** %left to {}*
  %_9.0 = bitcast { i64, i64 }** %right to {}*
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_12 to i8*
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false)
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h53988bbf3ad10cb2E(i8 %kind, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.i to [3 x i64]*), {}* nonnull align 1 %_9.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.i to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48) %_12, %"core::panic::location::Location"* align 8 dereferenceable(24) %2) #18
  unreachable
}

; <*mut T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8b03d52d222fc716E"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
; call <*mut T as core::fmt::Pointer>::fmt
  %0 = call zeroext i1 @"_ZN52_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h4ab9852ff83a5ee8E"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&mut W as core::fmt::Write>::write_char
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hb07bc20f919e0ddcE"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"** align 8 dereferenceable(8) %self, i32 %c) unnamed_addr #1 {
start:
  %_3 = load %"std::io::Write::write_fmt::Adapter<std::fs::File>"*, %"std::io::Write::write_fmt::Adapter<std::fs::File>"** %self, align 8, !nonnull !3
; call core::fmt::Write::write_char
  %0 = call zeroext i1 @_ZN4core3fmt5Write10write_char17hf7c3841d55cdd675E(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* align 8 dereferenceable(24) %_3, i32 %c)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&mut W as core::fmt::Write>::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17hc5cc6c9b45d7c36fE"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"** align 8 dereferenceable(8) %self, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %args) unnamed_addr #1 {
start:
  %_4 = alloca %"core::fmt::Arguments", align 8
  %_3 = load %"std::io::Write::write_fmt::Adapter<std::fs::File>"*, %"std::io::Write::write_fmt::Adapter<std::fs::File>"** %self, align 8, !nonnull !3
  %0 = bitcast %"core::fmt::Arguments"* %_4 to i8*
  %1 = bitcast %"core::fmt::Arguments"* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 48, i1 false)
; call core::fmt::Write::write_fmt
  %2 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17h0d5f236765de11f9E(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* align 8 dereferenceable(24) %_3, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <&mut W as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hf5770310a8c2424bE"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"** align 8 dereferenceable(8) %self, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
  %_3 = load %"std::io::Write::write_fmt::Adapter<std::fs::File>"*, %"std::io::Write::write_fmt::Adapter<std::fs::File>"** %self, align 8, !nonnull !3
; call <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str
  %0 = call zeroext i1 @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hcb811b3ebb30a9ceE"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* align 8 dereferenceable(24) %_3, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h6b1f13a124eb5313E"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hbde3f54f004e1b55E"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hdf6cf1c952f216eeE"(i64 %t.0, i64 %t.1) unnamed_addr #1 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %t.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %t.1, 1
  ret { i64, i64 } %1
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hee7bceaf5dbddff7E"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h60812824c0c9a196E"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* align 8 dereferenceable(48) %self) unnamed_addr #1 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %0 = call nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h2f95771579ed6b00E"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* align 8 dereferenceable(48) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h7af4120dd2071178E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %0 = call nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h76783586d0d3d08eE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h98d187152c750d06E"(%"alloc::sync::ArcInner<_ShuffledOrder>"* align 8 dereferenceable(112) %self) unnamed_addr #1 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %0 = call nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17he1820319b02c653cE"(%"alloc::sync::ArcInner<_ShuffledOrder>"* align 8 dereferenceable(112) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf2aa3128d0badb28E"(i64 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %0 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hb23a4b01080d49d6E"(i64 %self.0, i64 %self.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf65c34c6cc0330e7E"(i8* nonnull %self) unnamed_addr #1 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h66cb4df4a0e28509E"(i8* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; <*const T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN52_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc566a47af9f007f1E"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
; call <*const T as core::fmt::Pointer>::fmt
  %0 = call zeroext i1 @"_ZN54_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h20742d1294bd9e9dE"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <*mut T as core::fmt::Pointer>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN52_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h4ab9852ff83a5ee8E"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_5 = alloca i64*, align 8
  %_6 = load i64*, i64** %self, align 8
  store i64* %_6, i64** %_5, align 8
; call <*const T as core::fmt::Pointer>::fmt
  %0 = call zeroext i1 @"_ZN54_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h20742d1294bd9e9dE"(i64** align 8 dereferenceable(8) %_5, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <&mut T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN52_$LT$$RF$mut$u20$T$u20$as$u20$core..fmt..Display$GT$3fmt17hc9b9347d61ea99caE"(i32** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_4 = load i32*, i32** %self, align 8, !nonnull !3
; call core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E"(i32* align 4 dereferenceable(4) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <T as alloc::slice::hack::ConvertVec>::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h741c4731344ea092E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %v, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  store i8 0, i8* %_17, align 1
  store i8 1, i8* %_17, align 1
; invoke core::slice::<impl [T]>::len
  %_3 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17he9fe81ead4329830E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_17, align 1
; invoke alloc::vec::Vec<T,A>::with_capacity_in
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hc902963f50796354E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %v, i64 %_3)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %bb9, %cleanup
  %1 = load i8, i8* %_17, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb11, label %bb10

cleanup:                                          ; preds = %bb1, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
; invoke core::slice::<impl [T]>::as_ptr
  %_7 = invoke i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h1ca28ded385af010E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_9 = invoke i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h006e32af3d00997fE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %v)
          to label %bb4 unwind label %cleanup1

bb9:                                              ; preds = %cleanup1
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h4d06811121b53ea3E"(%"alloc::vec::Vec<u8>"* %v) #19
  br label %bb12

cleanup1:                                         ; preds = %bb7, %bb6, %bb5, %bb4, %bb3, %bb2
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
; invoke core::slice::<impl [T]>::len
  %_11 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17he9fe81ead4329830E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
          to label %bb5 unwind label %cleanup1

bb5:                                              ; preds = %bb4
; invoke core::ptr::const_ptr::<impl *const T>::copy_to_nonoverlapping
  invoke void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17h118cc82129f5c324E"(i8* %_7, i8* %_9, i64 %_11)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5
; invoke core::slice::<impl [T]>::len
  %_15 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17he9fe81ead4329830E"([0 x i8]* nonnull align 1 %s.0, i64 %s.1)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
; invoke alloc::vec::Vec<T,A>::set_len
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hb03f9ded2d570133E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %v, i64 %_15)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
  ret void

bb10:                                             ; preds = %bb11, %bb12
  %13 = bitcast { i8*, i32 }* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1
  resume { i8*, i32 } %18

bb11:                                             ; preds = %bb12
  br label %bb10
}

; <F as core::str::pattern::MultiCharEq>::matches
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hb1fac914609f6a13E"(%"core::str::IsWhitespace"* nonnull align 1 %self, i32 %c) unnamed_addr #0 {
start:
  %_4 = alloca i32, align 4
  store i32 %c, i32* %_4, align 4
  %0 = load i32, i32* %_4, align 4, !range !66
; call <core::str::IsWhitespace as core::ops::function::FnMut<(char,)>>::call_mut
  %1 = call zeroext i1 @"_ZN93_$LT$core..str..IsWhitespace$u20$as$u20$core..ops..function..FnMut$LT$$LP$char$C$$RP$$GT$$GT$8call_mut17h28cfdc45a1a07662E"(%"core::str::IsWhitespace"* nonnull align 1 %self, i32 %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; <*const T as core::fmt::Pointer>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN54_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Pointer$GT$3fmt17h20742d1294bd9e9dE"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_14 = alloca i64, align 8
  %_10 = alloca { i64, i64 }, align 8
  %0 = bitcast %"core::fmt::Formatter"* %f to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %old_width.0 = load i64, i64* %1, align 8, !range !2
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %old_width.1 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds %"core::fmt::Formatter", %"core::fmt::Formatter"* %f, i32 0, i32 3
  %old_flags = load i32, i32* %3, align 8
; call core::fmt::Formatter::alternate
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter9alternate17h38ef9de37e051e79E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_5, label %bb2, label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %4 = getelementptr inbounds %"core::fmt::Formatter", %"core::fmt::Formatter"* %f, i32 0, i32 3
  %5 = getelementptr inbounds %"core::fmt::Formatter", %"core::fmt::Formatter"* %f, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = or i32 %6, 4
  store i32 %7, i32* %4, align 8
  %_16 = load i64*, i64** %self, align 8
  %_15 = bitcast i64* %_16 to {}*
  %8 = ptrtoint {}* %_15 to i64
  store i64 %8, i64* %_14, align 8
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %ret = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17hd38ace2d8b112396E"(i64* align 8 dereferenceable(8) %_14, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb7

bb2:                                              ; preds = %bb1
  %9 = getelementptr inbounds %"core::fmt::Formatter", %"core::fmt::Formatter"* %f, i32 0, i32 3
  %10 = getelementptr inbounds %"core::fmt::Formatter", %"core::fmt::Formatter"* %f, i32 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = or i32 %11, 8
  store i32 %12, i32* %9, align 8
  %_9 = bitcast %"core::fmt::Formatter"* %f to { i64, i64 }*
; call core::option::Option<T>::is_none
  %_8 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17ha8134b17320a65bcE"({ i64, i64 }* align 8 dereferenceable(16) %_9)
  br label %bb3

bb3:                                              ; preds = %bb2
  br i1 %_8, label %bb4, label %bb5

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6

bb4:                                              ; preds = %bb3
  %13 = bitcast { i64, i64 }* %_10 to %"core::option::Option<usize>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %13, i32 0, i32 1
  store i64 18, i64* %14, align 8
  %15 = bitcast { i64, i64 }* %_10 to i64*
  store i64 1, i64* %15, align 8
  %16 = bitcast %"core::fmt::Formatter"* %f to { i64, i64 }*
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0
  %18 = load i64, i64* %17, align 8, !range !2
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0
  store i64 %18, i64* %21, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1
  store i64 %20, i64* %22, align 8
  br label %bb5

bb7:                                              ; preds = %bb6
  %23 = bitcast %"core::fmt::Formatter"* %f to { i64, i64 }*
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i32 0, i32 0
  store i64 %old_width.0, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i32 0, i32 1
  store i64 %old_width.1, i64* %25, align 8
  %26 = getelementptr inbounds %"core::fmt::Formatter", %"core::fmt::Formatter"* %f, i32 0, i32 3
  store i32 %old_flags, i32* %26, align 8
  ret i1 %ret
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: nonlazybind uwtable
define { %"std::path::Path"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h0484ca0dc3439f02E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_2.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !3
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_2.1 = load i64, i64* %1, align 8
; call std::path::<impl core::convert::AsRef<std::path::Path> for str>::as_ref
  %2 = call { %"std::path::Path"*, i64 } @"_ZN3std4path77_$LT$impl$u20$core..convert..AsRef$LT$std..path..Path$GT$$u20$for$u20$str$GT$6as_ref17h979cf03aca93174cE"([0 x i8]* nonnull align 1 %_2.0, i64 %_2.1)
  %3 = extractvalue { %"std::path::Path"*, i64 } %2, 0
  %4 = extractvalue { %"std::path::Path"*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { %"std::path::Path"*, i64 } undef, %"std::path::Path"* %3, 0
  %6 = insertvalue { %"std::path::Path"*, i64 } %5, i64 %4, 1
  ret { %"std::path::Path"*, i64 } %6
}

; alloc::collections::TryReserveError::kind
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h85a689afd05215c8E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
  %0 = call { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17hb24392e5b3d846d4E"({ i64, i64 }* align 8 dereferenceable(16) %self)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; alloc::collections::vec_deque::wrap_index
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN5alloc11collections9vec_deque10wrap_index17hc880ff7585c3289fE(i64 %index, i64 %size) unnamed_addr #0 {
start:
  %_4 = sub i64 %size, 1
  %0 = and i64 %index, %_4
  ret i64 %0
}

; alloc::collections::vec_deque::ring_slices::RingSlices::ring_slices
; Function Attrs: nonlazybind uwtable
define void @_ZN5alloc11collections9vec_deque11ring_slices10RingSlices11ring_slices17h57019e888bb188abE({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, [0 x i32]* nonnull align 4 %buf.0, i64 %buf.1, i64 %head, i64 %tail) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_29 = alloca i8, align 1
  %_28 = alloca i8, align 1
  %_23 = alloca { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, align 8
  %_19 = alloca { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, align 8
  %_10 = alloca { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, align 8
  store i8 0, i8* %_28, align 1
  store i8 0, i8* %_29, align 1
  %contiguous = icmp ule i64 %tail, %head
  br i1 %contiguous, label %bb1, label %bb4

bb4:                                              ; preds = %start
; call <&mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices>::split_at
  call void @"_ZN98_$LT$$RF$mut$u20$$u5b$T$u5d$$u20$as$u20$alloc..collections..vec_deque..ring_slices..RingSlices$GT$8split_at17hdadc5456d2672023E"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %_19, [0 x i32]* nonnull align 4 %buf.0, i64 %buf.1, i64 %tail)
  br label %bb5

bb1:                                              ; preds = %start
; call <&mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices>::split_at
  call void @"_ZN98_$LT$$RF$mut$u20$$u5b$T$u5d$$u20$as$u20$alloc..collections..vec_deque..ring_slices..RingSlices$GT$8split_at17hdadc5456d2672023E"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %_10, [0 x i32]* nonnull align 4 %buf.0, i64 %buf.1, i64 0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %_10 to { [0 x i32]*, i64 }*
  %3 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %2, i32 0, i32 0
  %empty.0 = load [0 x i32]*, [0 x i32]** %3, align 8, !nonnull !3
  %4 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %2, i32 0, i32 1
  %empty.1 = load i64, i64* %4, align 8
  store i8 1, i8* %_29, align 1
  %5 = getelementptr inbounds { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %_10, i32 0, i32 1
  %6 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %5, i32 0, i32 0
  %buf.01 = load [0 x i32]*, [0 x i32]** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %5, i32 0, i32 1
  %buf.12 = load i64, i64* %7, align 8
  store i8 0, i8* %_29, align 1
; invoke <&mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices>::slice
  %8 = invoke { [0 x i32]*, i64 } @"_ZN98_$LT$$RF$mut$u20$$u5b$T$u5d$$u20$as$u20$alloc..collections..vec_deque..ring_slices..RingSlices$GT$5slice17h07bc62204d762fa5E"([0 x i32]* nonnull align 4 %buf.01, i64 %buf.12, i64 %tail, i64 %head)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_12.0 = extractvalue { [0 x i32]*, i64 } %8, 0
  %_12.1 = extractvalue { [0 x i32]*, i64 } %8, 1
  %9 = bitcast { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %0 to { [0 x i32]*, i64 }*
  %10 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %9, i32 0, i32 0
  store [0 x i32]* %_12.0, [0 x i32]** %10, align 8
  %11 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %9, i32 0, i32 1
  store i64 %_12.1, i64* %11, align 8
  %12 = getelementptr inbounds { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %0, i32 0, i32 1
  %13 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %12, i32 0, i32 0
  store [0 x i32]* %empty.0, [0 x i32]** %13, align 8
  %14 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %12, i32 0, i32 1
  store i64 %empty.1, i64* %14, align 8
  store i8 0, i8* %_29, align 1
  br label %bb7

bb10:                                             ; preds = %cleanup
  %15 = load i8, i8* %_29, align 1, !range !4
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb16, label %bb11

cleanup:                                          ; preds = %bb2
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb10

bb11:                                             ; preds = %bb16, %bb10
  br label %bb12

bb16:                                             ; preds = %bb10
  br label %bb11

bb12:                                             ; preds = %bb14, %bb15, %bb11
  %22 = bitcast { i8*, i32 }* %1 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27

bb7:                                              ; preds = %bb13, %bb3
  ret void

bb5:                                              ; preds = %bb4
  store i8 1, i8* %_28, align 1
  %28 = bitcast { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %_19 to { [0 x i32]*, i64 }*
  %29 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %28, i32 0, i32 0
  %mid.0 = load [0 x i32]*, [0 x i32]** %29, align 8, !nonnull !3
  %30 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %28, i32 0, i32 1
  %mid.1 = load i64, i64* %30, align 8
  %31 = getelementptr inbounds { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %_19, i32 0, i32 1
  %32 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %31, i32 0, i32 0
  %right.0 = load [0 x i32]*, [0 x i32]** %32, align 8, !nonnull !3
  %33 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %31, i32 0, i32 1
  %right.1 = load i64, i64* %33, align 8
  store i8 0, i8* %_28, align 1
; invoke <&mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices>::split_at
  invoke void @"_ZN98_$LT$$RF$mut$u20$$u5b$T$u5d$$u20$as$u20$alloc..collections..vec_deque..ring_slices..RingSlices$GT$8split_at17hdadc5456d2672023E"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %_23, [0 x i32]* nonnull align 4 %mid.0, i64 %mid.1, i64 %head)
          to label %bb6 unwind label %cleanup3

bb6:                                              ; preds = %bb5
  %34 = bitcast { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %_23 to { [0 x i32]*, i64 }*
  %35 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %34, i32 0, i32 0
  %left.0 = load [0 x i32]*, [0 x i32]** %35, align 8, !nonnull !3
  %36 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %34, i32 0, i32 1
  %left.1 = load i64, i64* %36, align 8
  br label %bb13

bb9:                                              ; preds = %bb8, %cleanup3
  br label %bb15

cleanup3:                                         ; preds = %bb5
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  %39 = extractvalue { i8*, i32 } %37, 1
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %39, i32* %41, align 8
  br label %bb9

bb13:                                             ; preds = %bb6
  %42 = bitcast { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %0 to { [0 x i32]*, i64 }*
  %43 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %42, i32 0, i32 0
  store [0 x i32]* %right.0, [0 x i32]** %43, align 8
  %44 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %42, i32 0, i32 1
  store i64 %right.1, i64* %44, align 8
  %45 = getelementptr inbounds { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %0, i32 0, i32 1
  %46 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %45, i32 0, i32 0
  store [0 x i32]* %left.0, [0 x i32]** %46, align 8
  %47 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %45, i32 0, i32 1
  store i64 %left.1, i64* %47, align 8
  store i8 0, i8* %_28, align 1
  br label %bb7

bb8:                                              ; No predecessors!
  br label %bb9

bb15:                                             ; preds = %bb9
  %48 = load i8, i8* %_28, align 1, !range !4
  %49 = trunc i8 %48 to i1
  br i1 %49, label %bb14, label %bb12

bb14:                                             ; preds = %bb15
  br label %bb12
}

; alloc::collections::vec_deque::VecDeque<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque17VecDeque$LT$T$GT$3new17h2a6be328d582d828E"(%"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture sret(%"alloc::collections::vec_deque::VecDeque<i32>") dereferenceable(32) %0) unnamed_addr #0 {
start:
; call alloc::collections::vec_deque::VecDeque<T,A>::new_in
  call void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$6new_in17hc9e8e24bb457ecbfE"(%"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture sret(%"alloc::collections::vec_deque::VecDeque<i32>") dereferenceable(32) %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::collections::vec_deque::VecDeque<T,A>::buffer_read
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$11buffer_read17ha00a3f44097523a7E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %off) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::ptr
  %_5 = call i32* @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3ptr17h0de38600c9c4471bE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i32, i32* %_5, i64 %off
  store i32* %1, i32** %0, align 8
  %_3.i.i = load i32*, i32** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::read
  %2 = call i32 @_ZN4core3ptr4read17h573c718a6fba7280E(i32* %_3.i.i)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i32 %2
}

; alloc::collections::vec_deque::VecDeque<T,A>::buffer_write
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$12buffer_write17hef0027f825ff2b9bE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %off, i32 %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i32*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
; invoke alloc::collections::vec_deque::VecDeque<T,A>::ptr
  %_6 = invoke i32* @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3ptr17h0de38600c9c4471bE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i32, i32* %_6, i64 %off
  store i32* %2, i32** %0, align 8
  %_3.i.i = load i32*, i32** %0, align 8
  br label %bb2

bb6:                                              ; preds = %cleanup
  %3 = load i8, i8* %_10, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb5, label %bb4

cleanup:                                          ; preds = %bb2, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_10, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hf26d395e85ae3bf6E(i32* %_3.i.i, i32 %value)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  ret void

bb4:                                              ; preds = %bb5, %bb6
  %10 = bitcast { i8*, i32 }* %1 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb5:                                              ; preds = %bb6
  br label %bb4
}

; alloc::collections::vec_deque::VecDeque<T,A>::as_mut_slices
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$13as_mut_slices17h45d4a214c7e4daffE"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, %"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %1 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %head = load i64, i64* %1, align 8
  %2 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %tail = load i64, i64* %2, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::buffer_as_mut_slice
  %3 = call { [0 x i32]*, i64 } @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$19buffer_as_mut_slice17ha75d9da5ee92838dE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  %buf.0 = extractvalue { [0 x i32]*, i64 } %3, 0
  %buf.1 = extractvalue { [0 x i32]*, i64 } %3, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::vec_deque::ring_slices::RingSlices::ring_slices
  call void @_ZN5alloc11collections9vec_deque11ring_slices10RingSlices11ring_slices17h57019e888bb188abE({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, [0 x i32]* nonnull align 4 %buf.0, i64 %buf.1, i64 %head, i64 %tail)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::collections::vec_deque::VecDeque<T,A>::with_capacity_in
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$16with_capacity_in17h75da2efd79682312E"(%"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture sret(%"alloc::collections::vec_deque::VecDeque<i32>") dereferenceable(32) %0, i64 %capacity) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_15 = alloca i8, align 1
  store i8 0, i8* %_15, align 1
  store i8 1, i8* %_15, align 1
  %_5 = add i64 %capacity, 1
; invoke core::cmp::max
  %_4 = invoke i64 @_ZN4core3cmp3max17h90283085d0421460E(i64 %_5, i64 2)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke core::num::<impl usize>::next_power_of_two
  %cap = invoke i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$17next_power_of_two17h5d4579a3c2af4c5dE"(i64 %_4)
          to label %bb2 unwind label %cleanup

bb8:                                              ; preds = %cleanup
  %2 = load i8, i8* %_15, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb7, label %bb6

cleanup:                                          ; preds = %bb4, %bb3, %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb8

bb2:                                              ; preds = %bb1
  %_9 = icmp ugt i64 %cap, %capacity
  %_8 = xor i1 %_9, true
  br i1 %_8, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  store i8 0, i8* %_15, align 1
; invoke alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %9 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hc8d4155b9fc9618cE"(i64 %cap)
          to label %bb5 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [17 x i8] }>* @alloc569 to [0 x i8]*), i64 17, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc571 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb3
  unreachable

bb5:                                              ; preds = %bb4
  %_12.0 = extractvalue { i32*, i64 } %9, 0
  %_12.1 = extractvalue { i32*, i64 } %9, 1
  %10 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %0 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %0, i32 0, i32 1
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %0, i32 0, i32 2
  %13 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %12, i32 0, i32 0
  store i32* %_12.0, i32** %13, align 8
  %14 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %12, i32 0, i32 1
  store i64 %_12.1, i64* %14, align 8
  ret void

bb6:                                              ; preds = %bb7, %bb8
  %15 = bitcast { i8*, i32 }* %1 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1
  resume { i8*, i32 } %20

bb7:                                              ; preds = %bb8
  br label %bb6
}

; alloc::collections::vec_deque::VecDeque<T,A>::buffer_as_mut_slice
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$19buffer_as_mut_slice17ha75d9da5ee92838dE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
; call alloc::collections::vec_deque::VecDeque<T,A>::ptr
  %_5 = call i32* @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3ptr17h0de38600c9c4471bE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::vec_deque::VecDeque<T,A>::cap
  %_7 = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h1d186f537c1d17feE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::slice::raw::from_raw_parts_mut
  %0 = call { [0 x i32]*, i64 } @_ZN4core5slice3raw18from_raw_parts_mut17hf09d69d9dd06b21fE(i32* %_5, i64 %_7)
  %_4.0 = extractvalue { [0 x i32]*, i64 } %0, 0
  %_4.1 = extractvalue { [0 x i32]*, i64 } %0, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %1 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %_4.0, 0
  %2 = insertvalue { [0 x i32]*, i64 } %1, i64 %_4.1, 1
  ret { [0 x i32]*, i64 } %2
}

; alloc::collections::vec_deque::VecDeque<T,A>::copy_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$19copy_nonoverlapping17h6d550a82378e3814E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %dst, i64 %src, i64 %len) unnamed_addr #0 {
start:
  %0 = alloca i32*, align 8
  %1 = alloca i32*, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::ptr
  %_16 = call i32* @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3ptr17h0de38600c9c4471bE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i32, i32* %_16, i64 %src
  store i32* %2, i32** %1, align 8
  %_3.i.i = load i32*, i32** %1, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::collections::vec_deque::VecDeque<T,A>::ptr
  %_20 = call i32* @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3ptr17h0de38600c9c4471bE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = getelementptr inbounds i32, i32* %_20, i64 %dst
  store i32* %3, i32** %0, align 8
  %_3.i.i1 = load i32*, i32** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h6c98f3015a494da7E(i32* %_3.i.i, i32* %_3.i.i1, i64 %len)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret void
}

; alloc::collections::vec_deque::VecDeque<T,A>::handle_capacity_increase
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$24handle_capacity_increase17hd6f064aeaec20763E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %old_capacity) unnamed_addr #0 {
start:
; call alloc::collections::vec_deque::VecDeque<T,A>::cap
  %new_capacity = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h1d186f537c1d17feE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_6 = load i64, i64* %0, align 8
  %1 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %_7 = load i64, i64* %1, align 8
  %_5 = icmp ule i64 %_6, %_7
  br i1 %_5, label %bb8, label %bb2

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %_9 = load i64, i64* %2, align 8
  %3 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_12 = load i64, i64* %3, align 8
  %_10 = sub i64 %old_capacity, %_12
  %_8 = icmp ult i64 %_9, %_10
  br i1 %_8, label %bb3, label %bb5

bb8:                                              ; preds = %bb7, %bb1
  ret void

bb5:                                              ; preds = %bb2
  %4 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_22 = load i64, i64* %4, align 8
  %_20 = sub i64 %old_capacity, %_22
  %new_tail = sub i64 %new_capacity, %_20
  %5 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_26 = load i64, i64* %5, align 8
  %6 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_29 = load i64, i64* %6, align 8
  %_27 = sub i64 %old_capacity, %_29
; call alloc::collections::vec_deque::VecDeque<T,A>::copy_nonoverlapping
  call void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$19copy_nonoverlapping17h6d550a82378e3814E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %new_tail, i64 %_26, i64 %_27)
  br label %bb6

bb3:                                              ; preds = %bb2
  %7 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %_16 = load i64, i64* %7, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::copy_nonoverlapping
  call void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$19copy_nonoverlapping17h6d550a82378e3814E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %old_capacity, i64 0, i64 %_16)
  br label %bb4

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %9 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %old_capacity
  store i64 %11, i64* %8, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb4
  br label %bb8

bb6:                                              ; preds = %bb5
  %12 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  store i64 %new_tail, i64* %12, align 8
  br label %bb7
}

; alloc::collections::vec_deque::VecDeque<T,A>::cap
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h1d186f537c1d17feE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = icmp eq i64 4, 0
  br i1 %2, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i64 -9223372036854775808, i64* %1, align 8
  br label %bb5

bb3:                                              ; preds = %bb1
  %_3 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 2
  %3 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %_3, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  store i64 %4, i64* %0, align 8
  %5 = load i64, i64* %0, align 8
  store i64 %5, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4
  %6 = load i64, i64* %1, align 8
  ret i64 %6
}

; alloc::collections::vec_deque::VecDeque<T,A>::len
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3len17h58351b6c5f68fe95E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_2 = load i64, i64* %0, align 8
  %1 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %_3 = load i64, i64* %1, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::cap
  %_4 = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h1d186f537c1d17feE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::vec_deque::count
  %2 = call i64 @_ZN5alloc11collections9vec_deque5count17hf0f1459e115d9e28E(i64 %_2, i64 %_3, i64 %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64 %2
}

; alloc::collections::vec_deque::VecDeque<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3ptr17h0de38600c9c4471bE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
  %_2 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 2
; call alloc::raw_vec::RawVec<T,A>::ptr
  %0 = call i32* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h44c522aedff9cc16E"({ i32*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %0
}

; alloc::collections::vec_deque::VecDeque<T,A>::grow
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$4grow17h86747abb6c2d4e64E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #3 {
start:
; call alloc::collections::vec_deque::VecDeque<T,A>::is_full
  %_2 = call zeroext i1 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$7is_full17h9f49134519e07f6dE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb9

bb9:                                              ; preds = %bb8, %bb1
  ret void

bb2:                                              ; preds = %bb1
; call alloc::collections::vec_deque::VecDeque<T,A>::cap
  %old_cap = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h1d186f537c1d17feE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_7 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 2
; call alloc::raw_vec::RawVec<T,A>::reserve_exact
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13reserve_exact17hf8bebc19e8186ca6E"({ i32*, i64 }* align 8 dereferenceable(16) %_7, i64 %old_cap, i64 %old_cap)
  br label %bb4

bb4:                                              ; preds = %bb3
; call alloc::collections::vec_deque::VecDeque<T,A>::cap
  %_12 = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h1d186f537c1d17feE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_14 = mul i64 %old_cap, 2
  %_11 = icmp eq i64 %_12, %_14
  %_10 = xor i1 %_11, true
  br i1 %_10, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
; call alloc::collections::vec_deque::VecDeque<T,A>::handle_capacity_increase
  call void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$24handle_capacity_increase17hd6f064aeaec20763E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %old_cap)
  br label %bb8

bb6:                                              ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc572 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc574 to %"core::panic::location::Location"*)) #18
  unreachable

bb8:                                              ; preds = %bb7
  br label %bb9
}

; alloc::collections::vec_deque::VecDeque<T,A>::new_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$6new_in17hc9e8e24bb457ecbfE"(%"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture sret(%"alloc::collections::vec_deque::VecDeque<i32>") dereferenceable(32) %0) unnamed_addr #0 {
start:
; call alloc::collections::vec_deque::VecDeque<T,A>::with_capacity_in
  call void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$16with_capacity_in17h75da2efd79682312E"(%"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture sret(%"alloc::collections::vec_deque::VecDeque<i32>") dereferenceable(32) %0, i64 7)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::collections::vec_deque::VecDeque<T,A>::is_full
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$7is_full17h9f49134519e07f6dE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #0 {
start:
; call alloc::collections::vec_deque::VecDeque<T,A>::cap
  %_3 = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h1d186f537c1d17feE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::vec_deque::VecDeque<T,A>::len
  %_5 = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3len17h58351b6c5f68fe95E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_2 = sub i64 %_3, %_5
  %0 = icmp eq i64 %_2, 1
  ret i1 %0
}

; alloc::collections::vec_deque::VecDeque<T,A>::is_empty
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$8is_empty17h150bf6fb8b8d164aE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_2 = load i64, i64* %0, align 8
  %1 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %_3 = load i64, i64* %1, align 8
  %2 = icmp eq i64 %_2, %_3
  ret i1 %2
}

; alloc::collections::vec_deque::VecDeque<T,A>::wrap_add
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$8wrap_add17h92beeef7dbd4f6e6E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %idx, i64 %addend) unnamed_addr #0 {
start:
  %0 = add i64 %idx, %addend
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::vec_deque::VecDeque<T,A>::cap
  %_7 = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$3cap17h1d186f537c1d17feE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::collections::vec_deque::wrap_index
  %1 = call i64 @_ZN5alloc11collections9vec_deque10wrap_index17hc880ff7585c3289fE(i64 %0, i64 %_7)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %1
}

; alloc::collections::vec_deque::VecDeque<T,A>::pop_front
; Function Attrs: nonlazybind uwtable
define { i32, i32 } @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$9pop_front17h90b664cc9ac6ae9dE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #1 {
start:
  %0 = alloca { i32, i32 }, align 4
; call alloc::collections::vec_deque::VecDeque<T,A>::is_empty
  %_2 = call zeroext i1 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$8is_empty17h150bf6fb8b8d164aE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  %1 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %tail = load i64, i64* %1, align 8
  %2 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  %_7 = load i64, i64* %2, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::wrap_add
  %_5 = call i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$8wrap_add17h92beeef7dbd4f6e6E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %_7, i64 1)
  br label %bb4

bb2:                                              ; preds = %bb1
  %3 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %3, align 4
  br label %bb6

bb6:                                              ; preds = %bb5, %bb2
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4, !range !59
  %6 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = insertvalue { i32, i32 } undef, i32 %5, 0
  %9 = insertvalue { i32, i32 } %8, i32 %7, 1
  ret { i32, i32 } %9

bb4:                                              ; preds = %bb3
  %10 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %self to i64*
  store i64 %_5, i64* %10, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::buffer_read
  %_8 = call i32 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$11buffer_read17ha00a3f44097523a7E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %tail)
  br label %bb5

bb5:                                              ; preds = %bb4
  %11 = bitcast { i32, i32 }* %0 to %"core::option::Option<i32>::Some"*
  %12 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %11, i32 0, i32 1
  store i32 %_8, i32* %12, align 4
  %13 = bitcast { i32, i32 }* %0 to i32*
  store i32 1, i32* %13, align 4
  br label %bb6
}

; alloc::collections::vec_deque::VecDeque<T,A>::push_back
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$9push_back17h5bac4c1bed4c6ba1E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i32 %value) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
; invoke alloc::collections::vec_deque::VecDeque<T,A>::is_full
  %_3 = invoke zeroext i1 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$7is_full17h9f49134519e07f6dE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4

bb9:                                              ; preds = %cleanup
  %1 = load i8, i8* %_14, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb8, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb2, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb9

bb4:                                              ; preds = %bb3, %bb1
  %8 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %head = load i64, i64* %8, align 8
  %9 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  %_10 = load i64, i64* %9, align 8
; invoke alloc::collections::vec_deque::VecDeque<T,A>::wrap_add
  %_8 = invoke i64 @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$8wrap_add17h92beeef7dbd4f6e6E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %_10, i64 1)
          to label %bb5 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke alloc::collections::vec_deque::VecDeque<T,A>::grow
  invoke void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$4grow17h86747abb6c2d4e64E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br label %bb4

bb5:                                              ; preds = %bb4
  %10 = getelementptr inbounds %"alloc::collections::vec_deque::VecDeque<i32>", %"alloc::collections::vec_deque::VecDeque<i32>"* %self, i32 0, i32 1
  store i64 %_8, i64* %10, align 8
  store i8 0, i8* %_14, align 1
; invoke alloc::collections::vec_deque::VecDeque<T,A>::buffer_write
  invoke void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$12buffer_write17hef0027f825ff2b9bE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self, i64 %head, i32 %value)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  ret void

bb7:                                              ; preds = %bb8, %bb9
  %11 = bitcast { i8*, i32 }* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb8:                                              ; preds = %bb9
  br label %bb7
}

; alloc::collections::vec_deque::count
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN5alloc11collections9vec_deque5count17hf0f1459e115d9e28E(i64 %tail, i64 %head, i64 %size) unnamed_addr #0 {
start:
  %0 = sub i64 %head, %tail
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = sub i64 %size, 1
  %1 = and i64 %0, %_7
  ret i64 %1
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN5alloc2rc11is_dangling17h423b5baa64825be4E(%"alloc::sync::ArcInner<_ShuffledOrder>"* %ptr) unnamed_addr #1 {
start:
  %_3 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"* %ptr to {}*
  %address = ptrtoint {}* %_3 to i64
  %0 = icmp eq i64 %address, -1
  ret i1 %0
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN5alloc2rc11is_dangling17h6654a6404c894e58E(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %ptr) unnamed_addr #1 {
start:
  %_3 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %ptr to {}*
  %address = ptrtoint {}* %_3 to i64
  %0 = icmp eq i64 %address, -1
  ret i1 %0
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN5alloc2rc11is_dangling17h8f02a080c6dcb6e6E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %ptr) unnamed_addr #1 {
start:
  %_3 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %ptr to {}*
  %address = ptrtoint {}* %_3 to i64
  %0 = icmp eq i64 %address, -1
  ret i1 %0
}

; alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17ha8c6281c923862d3E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %_2 = alloca %"alloc::vec::Vec<u8>", align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  %5 = load [0 x i8]*, [0 x i8]** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1
  %_4.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
  call void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17h0caf8f225e7780beE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %_2, [0 x i8]* nonnull align 1 %_4.0, i64 %_4.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h1d56a043d8c5eb34E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, %"alloc::vec::Vec<u8>"* noalias nocapture dereferenceable(24) %_2)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::vec::Vec<T>::with_capacity
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hb6f6f8b3d20e5973E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, i64 %capacity) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::with_capacity_in
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hb39f4b386cb8b478E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, i64 %capacity)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h0bda1a8261c8fe23E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = bitcast %"alloc::vec::Vec<&str>"* %0 to { i64*, i64 }*
  %2 = load i64*, i64** getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i64*, i64 }*), i32 0, i32 0), align 8, !nonnull !3
  %3 = load i64, i64* getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @1 to { i64*, i64 }*), i32 0, i32 1), align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  store i64* %2, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h9a9e9b81c5fca722E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = bitcast %"alloc::vec::Vec<u8>"* %0 to { i8*, i64 }*
  %2 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @2 to { i8*, i64 }*), i32 0, i32 0), align 8, !nonnull !3
  %3 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @2 to { i8*, i64 }*), i32 0, i32 1), align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  ret void
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h006e32af3d00997fE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h418b3b8267410f0bE"({ i8*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1362abababb2d267E"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %ptr
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h56a927d1ddf002baE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call { [0 x i8]*, i64 }* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h7486d61b87b8eb82E"({ i64*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h3c64d9258c1abc53E"({ [0 x i8]*, i64 }* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true
  call void @llvm.assume(i1 %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret { [0 x i8]*, i64 }* %ptr
}

; alloc::vec::Vec<T,A>::extend_desugared
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17hfca0d40301388439E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %iterator) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_30 = alloca i8, align 1
  %_14 = alloca { i64, { i64, i64 } }, align 8
  %_3 = alloca { i8*, i64 }, align 8
  store i8 0, i8* %_30, align 1
  br label %bb1

bb1:                                              ; preds = %bb14, %start
; invoke <core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator>::next
  %3 = invoke { i8*, i64 } @"_ZN91_$LT$core..str..iter..SplitWhitespace$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hae7398579b2a0071E"(%"core::str::iter::SplitWhitespace"* align 8 dereferenceable(64) %iterator)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store { i8*, i64 } %3, { i8*, i64 }* %_3, align 8
  %4 = bitcast { i8*, i64 }* %_3 to {}**
  %5 = load {}*, {}** %4, align 8
  %6 = icmp eq {}* %5, null
  %_5 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_5, 1
  br i1 %7, label %bb3, label %bb15

bb19:                                             ; preds = %bb18, %cleanup
  br label %bb20

cleanup:                                          ; preds = %bb1
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb19

bb3:                                              ; preds = %bb2
  store i8 1, i8* %_30, align 1
  %13 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 0
  %element.0 = load [0 x i8]*, [0 x i8]** %14, align 8, !nonnull !3
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 1
  %element.1 = load i64, i64* %15, align 8
; invoke alloc::vec::Vec<T,A>::len
  %len = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hbf8f2423c405ca7eE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self)
          to label %bb4 unwind label %cleanup1

bb15:                                             ; preds = %bb2
  br label %bb16

bb16:                                             ; preds = %bb15
  br label %bb17

bb17:                                             ; preds = %bb16
  ret void

bb4:                                              ; preds = %bb3
; invoke alloc::vec::Vec<T,A>::capacity
  %_11 = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17h9e9dbb41dc8e4b27E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self)
          to label %bb5 unwind label %cleanup1

bb22:                                             ; preds = %cleanup1
  %16 = load i8, i8* %_30, align 1, !range !4
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb21, label %bb18

cleanup1:                                         ; preds = %bb13, %bb12, %bb10, %bb8, %bb6, %bb4, %bb3
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb22

bb5:                                              ; preds = %bb4
  %_9 = icmp eq i64 %len, %_11
  br i1 %_9, label %bb6, label %bb10

bb10:                                             ; preds = %bb9, %bb5
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %_22 = invoke { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h56a927d1ddf002baE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self)
          to label %bb11 unwind label %cleanup1

bb6:                                              ; preds = %bb5
; invoke <core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN91_$LT$core..str..iter..SplitWhitespace$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4b880ed25504de35E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_14, %"core::str::iter::SplitWhitespace"* align 8 dereferenceable(64) %iterator)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
  %23 = bitcast { i64, { i64, i64 } }* %_14 to i64*
  %lower = load i64, i64* %23, align 8
  %24 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1)
  store i64 %24, i64* %1, align 8
  %25 = load i64, i64* %1, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h6db31313ae371b63E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self, i64 %25)
          to label %bb9 unwind label %cleanup1

bb9:                                              ; preds = %bb8
  br label %bb10

bb11:                                             ; preds = %bb10
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_22, i64 %len
  store { [0 x i8]*, i64 }* %26, { [0 x i8]*, i64 }** %0, align 8
  %_3.i.i = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %0, align 8
  br label %bb12

bb12:                                             ; preds = %bb11
  store i8 0, i8* %_30, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hcd3f32d9859e1eaeE({ [0 x i8]*, i64 }* %_3.i.i, [0 x i8]* nonnull align 1 %element.0, i64 %element.1)
          to label %bb13 unwind label %cleanup1

bb13:                                             ; preds = %bb12
  %_28 = add i64 %len, 1
; invoke alloc::vec::Vec<T,A>::set_len
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17ha146557e890ec883E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self, i64 %_28)
          to label %bb14 unwind label %cleanup1

bb14:                                             ; preds = %bb13
  store i8 0, i8* %_30, align 1
  br label %bb1

bb18:                                             ; preds = %bb21, %bb22
  br label %bb19

bb21:                                             ; preds = %bb22
  br label %bb18

bb20:                                             ; preds = %bb19
  %27 = bitcast { i8*, i32 }* %2 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = insertvalue { i8*, i32 } undef, i8* %28, 0
  %32 = insertvalue { i8*, i32 } %31, i32 %30, 1
  resume { i8*, i32 } %32
}

; alloc::vec::Vec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hb39f4b386cb8b478E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, i64 %capacity) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %1 = call { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h5882d4cabb2bf3c7E"(i64 %capacity)
  %_3.0 = extractvalue { i64*, i64 } %1, 0
  %_3.1 = extractvalue { i64*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"alloc::vec::Vec<&str>"* %0 to { i64*, i64 }*
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  store i64* %_3.0, i64** %3, align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %_3.1, i64* %4, align 8
  %5 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  ret void
}

; alloc::vec::Vec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hc902963f50796354E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, i64 %capacity) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %1 = call { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hc04ae20e15bc3dd2E"(i64 %capacity)
  %_3.0 = extractvalue { i8*, i64 } %1, 0
  %_3.1 = extractvalue { i8*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"alloc::vec::Vec<u8>"* %0 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_3.0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_3.1, i64* %4, align 8
  %5 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  ret void
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hbf8f2423c405ca7eE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h96e1c2ce3c71371aE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_3 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h418b3b8267410f0bE"({ i8*, i64 }* align 8 dereferenceable(16) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1362abababb2d267E"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %ptr
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h6db31313ae371b63E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self, i64 %additional) unnamed_addr #1 {
start:
  %_4 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h4f23c5024e26ae88E"({ i64*, i64 }* align 8 dereferenceable(16) %_4, i64 %_5, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T,A>::set_len
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17ha146557e890ec883E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self, i64 %new_len) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1
  store i64 %new_len, i64* %0, align 8
  ret void
}

; alloc::vec::Vec<T,A>::set_len
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hb03f9ded2d570133E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i64 %new_len) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  store i64 %new_len, i64* %0, align 8
  ret void
}

; alloc::vec::Vec<T,A>::capacity
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17h9e9dbb41dc8e4b27E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_2 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_2, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %3
}

; alloc::vec::Vec<T,A>::allocator
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17hde123daed178d1c9E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::allocator
  %0 = call nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17h71b0c5b7439a0898E"({ i64*, i64 }* align 8 dereferenceable(16) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::alloc::Global"* %0
}

; alloc::vec::into_iter::IntoIter<T,A>::as_raw_mut_slice
; Function Attrs: nonlazybind uwtable
define { [0 x { [0 x i8]*, i64 }]*, i64 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$16as_raw_mut_slice17he820751bc6e90de4E"(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %0) unnamed_addr #1 {
start:
  %self = alloca %"alloc::vec::into_iter::IntoIter<&str>"*, align 8
  store %"alloc::vec::into_iter::IntoIter<&str>"* %0, %"alloc::vec::into_iter::IntoIter<&str>"** %self, align 8
  %1 = load %"alloc::vec::into_iter::IntoIter<&str>"*, %"alloc::vec::into_iter::IntoIter<&str>"** %self, align 8, !nonnull !3
  %2 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %1, i32 0, i32 4
  %_3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %2, align 8
; call <&mut I as core::iter::traits::exact_size::ExactSizeIterator>::len
  %_4 = call i64 @"_ZN83_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h37080ad508f27bdbE"(%"alloc::vec::into_iter::IntoIter<&str>"** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %3 = call { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hbc205848bd75c776E({ [0 x i8]*, i64 }* %_3, i64 %_4)
  %4 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %3, 0
  %5 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %3, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } undef, [0 x { [0 x i8]*, i64 }]* %4, 0
  %7 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %6, i64 %5, 1
  ret { [0 x { [0 x i8]*, i64 }]*, i64 } %7
}

; alloc::sync::Arc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h0a00499c928a6852E"(i64* nonnull %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %1
}

; alloc::sync::Arc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17hbbf15be3ce2db2f4E"(i64* nonnull %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %1
}

; alloc::sync::Arc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17hf52510fa5a2af69bE"(i64* nonnull %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %0, align 8
  %1 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %1
}

; alloc::sync::Arc<T>::get_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %_ProbeSemaphore* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h34fc0d4b61ec161aE"(i64** align 8 dereferenceable(8) %this) unnamed_addr #0 {
start:
  %_6 = load i64*, i64** %this, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h1170ef527c1cc399E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds %"alloc::sync::ArcInner<_ProbeSemaphore>", %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_5, i32 0, i32 2
  ret %_ProbeSemaphore* %_4
}

; alloc::sync::Arc<T>::get_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h6c170a05639210a5E"(i64** align 8 dereferenceable(8) %this) unnamed_addr #0 {
start:
  %_6 = load i64*, i64** %this, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7468b852db168a0cE"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_5, i32 0, i32 2
  ret %"std::sync::mutex::Mutex<std::fs::File>"* %_4
}

; alloc::sync::Arc<T>::get_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(96) %_ShuffledOrder* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h856b8191922948dcE"(i64** align 8 dereferenceable(8) %this) unnamed_addr #0 {
start:
  %_6 = load i64*, i64** %this, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd3203147f8535e97E"(i64* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %_4 = getelementptr inbounds %"alloc::sync::ArcInner<_ShuffledOrder>", %"alloc::sync::ArcInner<_ShuffledOrder>"* %_5, i32 0, i32 2
  ret %_ShuffledOrder* %_4
}

; alloc::sync::Arc<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h056029294754c5b9E"(%_ProbeSemaphore* noalias nocapture dereferenceable(32) %data) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_9 = alloca %_ProbeSemaphore, align 8
  %_8 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_7 = alloca %"core::sync::atomic::AtomicUsize", align 8
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
; invoke alloc::alloc::exchange_malloc
  %_5 = invoke i8* @_ZN5alloc5alloc15exchange_malloc17hdbe00db7e3d7029eE(i64 48, i64 8)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_6 = bitcast i8* %_5 to %"alloc::sync::ArcInner<_ProbeSemaphore>"*
; invoke core::sync::atomic::AtomicUsize::new
  %3 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0bca32e2e3db70a3E(i64 1)
          to label %bb2 unwind label %cleanup1

bb10:                                             ; preds = %bb8, %cleanup
  %4 = load i8, i8* %_14, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb9, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
  store i64 %3, i64* %1, align 8
  %11 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  %12 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false)
; invoke core::sync::atomic::AtomicUsize::new
  %13 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0bca32e2e3db70a3E(i64 1)
          to label %bb3 unwind label %cleanup1

bb8:                                              ; preds = %cleanup1
  %14 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_6 to i64*
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17ha074b342337a82c7E(i64* nonnull %14) #19
  br label %bb10

cleanup1:                                         ; preds = %bb2, %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb8

bb3:                                              ; preds = %bb2
  store i64 %13, i64* %0, align 8
  %20 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  %21 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 8, i1 false)
  store i8 0, i8* %_14, align 1
  %22 = bitcast %_ProbeSemaphore* %_9 to i8*
  %23 = bitcast %_ProbeSemaphore* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false)
  %24 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_6 to %"core::sync::atomic::AtomicUsize"*
  %25 = bitcast %"core::sync::atomic::AtomicUsize"* %24 to i8*
  %26 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 8, i1 false)
  %27 = getelementptr inbounds %"alloc::sync::ArcInner<_ProbeSemaphore>", %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_6, i32 0, i32 1
  %28 = bitcast %"core::sync::atomic::AtomicUsize"* %27 to i8*
  %29 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 8, i1 false)
  %30 = getelementptr inbounds %"alloc::sync::ArcInner<_ProbeSemaphore>", %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_6, i32 0, i32 2
  %31 = bitcast %_ProbeSemaphore* %30 to i8*
  %32 = bitcast %_ProbeSemaphore* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 32, i1 false)
; invoke alloc::boxed::Box<T,A>::leak
  %_12 = invoke align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h09f7f4bcaf3f05ecE"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* noalias nonnull align 8 %_6)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke <T as core::convert::Into<U>>::into
  %_10 = invoke nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h60812824c0c9a196E"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* align 8 dereferenceable(48) %_12)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke alloc::sync::Arc<T>::from_inner
  %33 = invoke nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h0a00499c928a6852E"(i64* nonnull %_10)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  ret i64* %33

bb7:                                              ; preds = %bb9, %bb10
  %34 = bitcast { i8*, i32 }* %2 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<probe_tle::_ProbeSemaphore>
  call void @"_ZN4core3ptr47drop_in_place$LT$probe_tle.._ProbeSemaphore$GT$17hcff30237c3850caaE"(%_ProbeSemaphore* %data) #19
  br label %bb7
}

; alloc::sync::Arc<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h334f748570a58d0dE"(%_ShuffledOrder* noalias nocapture dereferenceable(96) %data) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_9 = alloca %_ShuffledOrder, align 8
  %_8 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_7 = alloca %"core::sync::atomic::AtomicUsize", align 8
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
; invoke alloc::alloc::exchange_malloc
  %_5 = invoke i8* @_ZN5alloc5alloc15exchange_malloc17hdbe00db7e3d7029eE(i64 112, i64 8)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_6 = bitcast i8* %_5 to %"alloc::sync::ArcInner<_ShuffledOrder>"*
; invoke core::sync::atomic::AtomicUsize::new
  %3 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0bca32e2e3db70a3E(i64 1)
          to label %bb2 unwind label %cleanup1

bb10:                                             ; preds = %bb8, %cleanup
  %4 = load i8, i8* %_14, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb9, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
  store i64 %3, i64* %1, align 8
  %11 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  %12 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false)
; invoke core::sync::atomic::AtomicUsize::new
  %13 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0bca32e2e3db70a3E(i64 1)
          to label %bb3 unwind label %cleanup1

bb8:                                              ; preds = %cleanup1
  %14 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"* %_6 to i64*
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17heed1e7f4832d43faE(i64* nonnull %14) #19
  br label %bb10

cleanup1:                                         ; preds = %bb2, %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb8

bb3:                                              ; preds = %bb2
  store i64 %13, i64* %0, align 8
  %20 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  %21 = bitcast i64* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 8, i1 false)
  store i8 0, i8* %_14, align 1
  %22 = bitcast %_ShuffledOrder* %_9 to i8*
  %23 = bitcast %_ShuffledOrder* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 96, i1 false)
  %24 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"* %_6 to %"core::sync::atomic::AtomicUsize"*
  %25 = bitcast %"core::sync::atomic::AtomicUsize"* %24 to i8*
  %26 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 8, i1 false)
  %27 = getelementptr inbounds %"alloc::sync::ArcInner<_ShuffledOrder>", %"alloc::sync::ArcInner<_ShuffledOrder>"* %_6, i32 0, i32 1
  %28 = bitcast %"core::sync::atomic::AtomicUsize"* %27 to i8*
  %29 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 8, i1 false)
  %30 = getelementptr inbounds %"alloc::sync::ArcInner<_ShuffledOrder>", %"alloc::sync::ArcInner<_ShuffledOrder>"* %_6, i32 0, i32 2
  %31 = bitcast %_ShuffledOrder* %30 to i8*
  %32 = bitcast %_ShuffledOrder* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 96, i1 false)
; invoke alloc::boxed::Box<T,A>::leak
  %_12 = invoke align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h83e406cca9a113afE"(%"alloc::sync::ArcInner<_ShuffledOrder>"* noalias nonnull align 8 %_6)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke <T as core::convert::Into<U>>::into
  %_10 = invoke nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h98d187152c750d06E"(%"alloc::sync::ArcInner<_ShuffledOrder>"* align 8 dereferenceable(112) %_12)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke alloc::sync::Arc<T>::from_inner
  %33 = invoke nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17hf52510fa5a2af69bE"(i64* nonnull %_10)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  ret i64* %33

bb7:                                              ; preds = %bb9, %bb10
  %34 = bitcast { i8*, i32 }* %2 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = insertvalue { i8*, i32 } undef, i8* %35, 0
  %39 = insertvalue { i8*, i32 } %38, i32 %37, 1
  resume { i8*, i32 } %39

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<probe_tle::_ShuffledOrder>
  call void @"_ZN4core3ptr46drop_in_place$LT$probe_tle.._ShuffledOrder$GT$17h04c9573153951160E"(%_ShuffledOrder* %data) #19
  br label %bb7
}

; alloc::sync::Arc<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17hdf48e5b41278d4d0E"(i128 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_9 = alloca %"std::sync::mutex::Mutex<std::fs::File>", align 8
  %_8 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_7 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %4 = alloca i128, align 8
  %data = alloca %"std::sync::mutex::Mutex<std::fs::File>", align 8
  store i128 %0, i128* %4, align 8
  %5 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %data to i8*
  %6 = bitcast i128* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false)
  store i8 0, i8* %_14, align 1
  store i8 1, i8* %_14, align 1
; invoke alloc::alloc::exchange_malloc
  %_5 = invoke i8* @_ZN5alloc5alloc15exchange_malloc17hdbe00db7e3d7029eE(i64 32, i64 8)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_6 = bitcast i8* %_5 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"*
; invoke core::sync::atomic::AtomicUsize::new
  %7 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0bca32e2e3db70a3E(i64 1)
          to label %bb2 unwind label %cleanup1

bb10:                                             ; preds = %bb8, %cleanup
  %8 = load i8, i8* %_14, align 1, !range !4
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb9, label %bb7

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
  store i64 %7, i64* %2, align 8
  %15 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  %16 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 8, i1 false)
; invoke core::sync::atomic::AtomicUsize::new
  %17 = invoke i64 @_ZN4core4sync6atomic11AtomicUsize3new17h0bca32e2e3db70a3E(i64 1)
          to label %bb3 unwind label %cleanup1

bb8:                                              ; preds = %cleanup1
  %18 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_6 to i64*
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h6671d4cb01dcd97dE(i64* nonnull %18) #19
  br label %bb10

cleanup1:                                         ; preds = %bb2, %bb1
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %21, i32* %23, align 8
  br label %bb8

bb3:                                              ; preds = %bb2
  store i64 %17, i64* %1, align 8
  %24 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  %25 = bitcast i64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 8, i1 false)
  store i8 0, i8* %_14, align 1
  %26 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %_9 to i8*
  %27 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_6 to %"core::sync::atomic::AtomicUsize"*
  %29 = bitcast %"core::sync::atomic::AtomicUsize"* %28 to i8*
  %30 = bitcast %"core::sync::atomic::AtomicUsize"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 8, i1 false)
  %31 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_6, i32 0, i32 1
  %32 = bitcast %"core::sync::atomic::AtomicUsize"* %31 to i8*
  %33 = bitcast %"core::sync::atomic::AtomicUsize"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 8, i1 false)
  %34 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_6, i32 0, i32 2
  %35 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %34 to i8*
  %36 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false)
; invoke alloc::boxed::Box<T,A>::leak
  %_12 = invoke align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hb89931b5b97567ccE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* noalias nonnull align 8 %_6)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke <T as core::convert::Into<U>>::into
  %_10 = invoke nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h7af4120dd2071178E"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* align 8 dereferenceable(32) %_12)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke alloc::sync::Arc<T>::from_inner
  %37 = invoke nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17hbbf15be3ce2db2f4E"(i64* nonnull %_10)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  ret i64* %37

bb7:                                              ; preds = %bb9, %bb10
  %38 = bitcast { i8*, i32 }* %3 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = insertvalue { i8*, i32 } undef, i8* %39, 0
  %43 = insertvalue { i8*, i32 } %42, i32 %41, 1
  resume { i8*, i32 } %43

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<std::fs::File>>
  call void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$17h296b5459b53cab5aE"(%"std::sync::mutex::Mutex<std::fs::File>"* %data) #19
  br label %bb7
}

; alloc::sync::Arc<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h43cd35113520efbcE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17he3e2cec1c3f6dd77E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %0
}

; alloc::sync::Arc<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h4532a94eb71b0d37E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h12427e728e58c0cfE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<_ShuffledOrder>"* %0
}

; alloc::sync::Arc<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h4b409f80af9f6121E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ref
  %0 = call align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h2c7933c68e249c1eE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %0
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0f82a290ffa936feE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #3 {
start:
  %_7 = alloca i64*, align 8
; call alloc::sync::Arc<T>::get_mut_unchecked
  %_4 = call align 8 dereferenceable(96) %_ShuffledOrder* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h856b8191922948dcE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<probe_tle::_ShuffledOrder>
  call void @"_ZN4core3ptr46drop_in_place$LT$probe_tle.._ShuffledOrder$GT$17h04c9573153951160E"(%_ShuffledOrder* %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = load i64*, i64** %self, align 8, !nonnull !3
  store i64* %_8, i64** %_7, align 8
  %0 = load i64*, i64** %_7, align 8, !nonnull !3
; call core::mem::drop
  call void @_ZN4core3mem4drop17hfa26271965ded1a3E(i64* nonnull %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h6836ed5c846b014cE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #3 {
start:
  %_7 = alloca i64*, align 8
; call alloc::sync::Arc<T>::get_mut_unchecked
  %_4 = call align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h6c170a05639210a5E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<std::fs::File>>
  call void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$17h296b5459b53cab5aE"(%"std::sync::mutex::Mutex<std::fs::File>"* %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = load i64*, i64** %self, align 8, !nonnull !3
  store i64* %_8, i64** %_7, align 8
  %0 = load i64*, i64** %_7, align 8, !nonnull !3
; call core::mem::drop
  call void @_ZN4core3mem4drop17haad1700f687a8b2cE(i64* nonnull %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd4f567ca7d3cb9ddE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #3 {
start:
  %_7 = alloca i64*, align 8
; call alloc::sync::Arc<T>::get_mut_unchecked
  %_4 = call align 8 dereferenceable(32) %_ProbeSemaphore* @"_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h34fc0d4b61ec161aE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<probe_tle::_ProbeSemaphore>
  call void @"_ZN4core3ptr47drop_in_place$LT$probe_tle.._ProbeSemaphore$GT$17hcff30237c3850caaE"(%_ProbeSemaphore* %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_8 = load i64*, i64** %self, align 8, !nonnull !3
  store i64* %_8, i64** %_7, align 8
  %0 = load i64*, i64** %_7, align 8, !nonnull !3
; call core::mem::drop
  call void @_ZN4core3mem4drop17h0524c6c5955922beE(i64* nonnull %0)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h307a1c44b0802befE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  %_4 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd3203147f8535e97E"(i64* nonnull %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17h423b5baa64825be4E(%"alloc::sync::ArcInner<_ShuffledOrder>"* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_7 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %ptr = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd3203147f8535e97E"(i64* nonnull %_7)
  br label %bb5

bb3:                                              ; preds = %bb2
  %1 = bitcast { i64*, i8* }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %2 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64*, i8* } undef, i64* %3, 0
  %7 = insertvalue { i64*, i8* } %6, i8* %5, 1
  ret { i64*, i8* } %7

bb5:                                              ; preds = %bb4
  %_9 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"* %ptr to %"core::sync::atomic::AtomicUsize"*
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<_ShuffledOrder>", %"alloc::sync::ArcInner<_ShuffledOrder>"* %ptr, i32 0, i32 1
  %8 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %10 = bitcast i64** %9 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %10, align 8
  %11 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8, !nonnull !3
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 0
  store i64* %13, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 1
  store i64* %15, i64** %17, align 8
  br label %bb6
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17hdf21995fe7cbd13cE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  %_4 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h1170ef527c1cc399E"(i64* nonnull %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17h6654a6404c894e58E(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_7 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %ptr = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h1170ef527c1cc399E"(i64* nonnull %_7)
  br label %bb5

bb3:                                              ; preds = %bb2
  %1 = bitcast { i64*, i8* }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %2 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64*, i8* } undef, i64* %3, 0
  %7 = insertvalue { i64*, i8* } %6, i8* %5, 1
  ret { i64*, i8* } %7

bb5:                                              ; preds = %bb4
  %_9 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %ptr to %"core::sync::atomic::AtomicUsize"*
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<_ProbeSemaphore>", %"alloc::sync::ArcInner<_ProbeSemaphore>"* %ptr, i32 0, i32 1
  %8 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %10 = bitcast i64** %9 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %10, align 8
  %11 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8, !nonnull !3
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 0
  store i64* %13, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 1
  store i64* %15, i64** %17, align 8
  br label %bb6
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17he092fd029563d3acE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  %_4 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7468b852db168a0cE"(i64* nonnull %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17h8f02a080c6dcb6e6E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  br i1 %_2, label %bb3, label %bb4

bb4:                                              ; preds = %bb2
  %_7 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %ptr = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7468b852db168a0cE"(i64* nonnull %_7)
  br label %bb5

bb3:                                              ; preds = %bb2
  %1 = bitcast { i64*, i8* }* %0 to {}**
  store {}* null, {}** %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %2 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = insertvalue { i64*, i8* } undef, i64* %3, 0
  %7 = insertvalue { i64*, i8* } %6, i8* %5, 1
  ret { i64*, i8* } %7

bb5:                                              ; preds = %bb4
  %_9 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %ptr to %"core::sync::atomic::AtomicUsize"*
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %ptr, i32 0, i32 1
  %8 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %8, align 8
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %10 = bitcast i64** %9 to %"core::sync::atomic::AtomicUsize"**
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %10, align 8
  %11 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8, !nonnull !3
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8, !nonnull !3
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 0
  store i64* %13, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %11, i32 0, i32 1
  store i64* %15, i64** %17, align 8
  br label %bb6
}

; alloc::alloc::alloc_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc12alloc_zeroed17h766cc005f0026175E(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h542156459edaee7aE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc_zeroed(i64 %_2, i64 %_4) #20
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc15exchange_malloc17hdbe00db7e3d7029eE(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %_6 = alloca { i8*, i64 }, align 8
; call core::alloc::layout::Layout::from_size_align_unchecked
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 %align)
  %layout.0 = extractvalue { i64, i64 } %0, 0
  %layout.1 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %1 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h142008b8edc345e4E"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc269 to %"alloc::alloc::Global"*), i64 %layout.0, i64 %layout.1)
  store { i8*, i64 } %1, { i8*, i64 }* %_6, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast { i8*, i64 }* %_6 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_9 = select i1 %4, i64 1, i64 0
  switch i64 %_9, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0
  %ptr.0 = load i8*, i8** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1
  %ptr.1 = load i64, i64* %6, align 8
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %7 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h609f5117399314e1E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb6

bb3:                                              ; preds = %bb2
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h4346a7dd05d4a0b2E(i64 %layout.0, i64 %layout.1) #21
  unreachable

bb6:                                              ; preds = %bb5
  ret i8* %7
}

; alloc::alloc::alloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc5alloc17h212c225bbdbbc726E(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h542156459edaee7aE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc(i64 %_2, i64 %_4) #20
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hba4d1fd3618eae61E(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 {
start:
  %_15 = alloca i8*, align 8
  %raw_ptr = alloca i8*, align 8
  %2 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = icmp eq i64 %_4, 0
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
; call core::alloc::layout::Layout::dangling
  %_7 = call nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17h227f18438374156dE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb4

bb2:                                              ; preds = %bb1
  br i1 %zeroed, label %bb6, label %bb8

bb8:                                              ; preds = %bb2
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_13.0 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_13.1 = load i64, i64* %7, align 8, !range !16
; call alloc::alloc::alloc
  %8 = call i8* @_ZN5alloc5alloc5alloc17h212c225bbdbbc726E(i64 %_13.0, i64 %_13.1)
  store i8* %8, i8** %raw_ptr, align 8
  br label %bb9

bb6:                                              ; preds = %bb2
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_12.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_12.1 = load i64, i64* %10, align 8, !range !16
; call alloc::alloc::alloc_zeroed
  %11 = call i8* @_ZN5alloc5alloc12alloc_zeroed17h766cc005f0026175E(i64 %_12.0, i64 %_12.1)
  store i8* %11, i8** %raw_ptr, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  %_18 = load i8*, i8** %raw_ptr, align 8
; call core::ptr::non_null::NonNull<T>::new
  %_17 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h30f1529eb9ed4c76E"(i8* %_18)
  br label %bb11

bb9:                                              ; preds = %bb8
  br label %bb10

bb11:                                             ; preds = %bb10
; call core::option::Option<T>::ok_or
  %_16 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h3990bfc2d1e34cecE"(i8* %_17)
  br label %bb12

bb12:                                             ; preds = %bb11
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %12 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hdb90411bd3f54d2eE"(i8* %_16)
  store i8* %12, i8** %_15, align 8
  br label %bb13

bb13:                                             ; preds = %bb12
  %13 = bitcast i8** %_15 to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_20 = select i1 %15, i64 1, i64 0
  switch i64 %_20, label %bb15 [
    i64 0, label %bb14
    i64 1, label %bb16
  ]

bb15:                                             ; preds = %bb13
  unreachable

bb14:                                             ; preds = %bb13
  %val = load i8*, i8** %_15, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %16 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h5eac8875bbded299E"(i8* nonnull %val, i64 %_4)
  %_24.0 = extractvalue { i8*, i64 } %16, 0
  %_24.1 = extractvalue { i8*, i64 } %16, 1
  br label %bb18

bb16:                                             ; preds = %bb13
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %17 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6cc498ec0cdce594E"()
  store { i8*, i64 } %17, { i8*, i64 }* %2, align 8
  br label %bb17

bb17:                                             ; preds = %bb16
  br label %bb20

bb20:                                             ; preds = %bb19, %bb17
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = insertvalue { i8*, i64 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i64 } %22, i64 %21, 1
  ret { i8*, i64 } %23

bb18:                                             ; preds = %bb14
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_24.0, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_24.1, i64* %25, align 8
  br label %bb19

bb19:                                             ; preds = %bb5, %bb18
  br label %bb20

bb4:                                              ; preds = %bb3
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %26 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h5eac8875bbded299E"(i8* nonnull %_7, i64 0)
  %_6.0 = extractvalue { i8*, i64 } %26, 0
  %_6.1 = extractvalue { i8*, i64 } %26, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %_6.0, i8** %27, align 8
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_6.1, i64* %28, align 8
  br label %bb19
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17hb30fb1aa1dc737c0E(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 {
start:
  %4 = alloca i8*, align 8
  %_53 = alloca { i8*, i64 }, align 8
  %_31 = alloca i8*, align 8
  %_6 = alloca i64, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
; call core::alloc::layout::Layout::size
  %10 = call i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  store i64 %10, i64* %_6, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %11 = load i64, i64* %_6, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_9.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_9.1 = load i64, i64* %14, align 8, !range !16
; call alloc::alloc::Global::alloc_impl
  %15 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hba4d1fd3618eae61E(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %_9.0, i64 %_9.1, i1 zeroext %zeroed)
  store { i8*, i64 } %15, { i8*, i64 }* %5, align 8
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::alloc::layout::Layout::align
  %_14 = call i64 @_ZN4core5alloc6layout6Layout5align17h542156459edaee7aE({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::alloc::layout::Layout::align
  %_16 = call i64 @_ZN4core5alloc6layout6Layout5align17h542156459edaee7aE({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_13 = icmp eq i64 %_14, %_16
  br i1 %_13, label %bb7, label %bb8

bb8:                                              ; preds = %bb6
  %old_size1 = load i64, i64* %_6, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_56.0 = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_56.1 = load i64, i64* %17, align 8, !range !16
; call alloc::alloc::Global::alloc_impl
  %18 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hba4d1fd3618eae61E(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %_56.0, i64 %_56.1, i1 zeroext %zeroed)
  %_54.0 = extractvalue { i8*, i64 } %18, 0
  %_54.1 = extractvalue { i8*, i64 } %18, 1
  br label %bb26

bb7:                                              ; preds = %bb6
  %old_size = load i64, i64* %_6, align 8
; call core::alloc::layout::Layout::size
  %new_size = call i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb9

bb9:                                              ; preds = %bb7
; call core::alloc::layout::Layout::size
  %_23 = call i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  br label %bb10

bb10:                                             ; preds = %bb9
  %_21 = icmp uge i64 %new_size, %_23
  call void @llvm.assume(i1 %_21)
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %ptr)
  br label %bb12

bb12:                                             ; preds = %bb11
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  %_28.0 = load i64, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  %_28.1 = load i64, i64* %20, align 8, !range !16
; call alloc::alloc::realloc
  %raw_ptr = call i8* @_ZN5alloc5alloc7realloc17h00cdd3849e0e63b8E(i8* %_26, i64 %_28.0, i64 %_28.1, i64 %new_size)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::ptr::non_null::NonNull<T>::new
  %_33 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h30f1529eb9ed4c76E"(i8* %raw_ptr)
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::option::Option<T>::ok_or
  %_32 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h3990bfc2d1e34cecE"(i8* %_33)
  br label %bb15

bb15:                                             ; preds = %bb14
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %21 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hdb90411bd3f54d2eE"(i8* %_32)
  store i8* %21, i8** %_31, align 8
  br label %bb16

bb16:                                             ; preds = %bb15
  %22 = bitcast i8** %_31 to {}**
  %23 = load {}*, {}** %22, align 8
  %24 = icmp eq {}* %23, null
  %_36 = select i1 %24, i64 1, i64 0
  switch i64 %_36, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ]

bb18:                                             ; preds = %bb16
  unreachable

bb17:                                             ; preds = %bb16
  %val = load i8*, i8** %_31, align 8, !nonnull !3
  br i1 %zeroed, label %bb21, label %bb24

bb19:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %25 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6cc498ec0cdce594E"()
  store { i8*, i64 } %25, { i8*, i64 }* %5, align 8
  br label %bb20

bb20:                                             ; preds = %bb19
  br label %bb37

bb37:                                             ; preds = %bb31, %bb20
  br label %bb38

bb24:                                             ; preds = %bb23, %bb17
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %26 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h5eac8875bbded299E"(i8* nonnull %val, i64 %new_size)
  %_48.0 = extractvalue { i8*, i64 } %26, 0
  %_48.1 = extractvalue { i8*, i64 } %26, 1
  br label %bb25

bb21:                                             ; preds = %bb17
  %27 = getelementptr inbounds i8, i8* %raw_ptr, i64 %old_size
  store i8* %27, i8** %4, align 8
  %_3.i.i = load i8*, i8** %4, align 8
  br label %bb22

bb22:                                             ; preds = %bb21
  %_45 = sub i64 %new_size, %old_size
; call core::intrinsics::write_bytes
  call void @_ZN4core10intrinsics11write_bytes17hf72df9e0640e22e8E(i8* %_3.i.i, i8 0, i64 %_45)
  br label %bb23

bb23:                                             ; preds = %bb22
  br label %bb24

bb25:                                             ; preds = %bb24
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0
  store i8* %_48.0, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1
  store i64 %_48.1, i64* %29, align 8
  br label %bb36

bb36:                                             ; preds = %bb3, %bb35, %bb25
  br label %bb38

bb26:                                             ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %30 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h78ed606ce026490cE"(i8* %_54.0, i64 %_54.1)
  store { i8*, i64 } %30, { i8*, i64 }* %_53, align 8
  br label %bb27

bb27:                                             ; preds = %bb26
  %31 = bitcast { i8*, i64 }* %_53 to {}**
  %32 = load {}*, {}** %31, align 8
  %33 = icmp eq {}* %32, null
  %_58 = select i1 %33, i64 1, i64 0
  switch i64 %_58, label %bb29 [
    i64 0, label %bb28
    i64 1, label %bb30
  ]

bb29:                                             ; preds = %bb27
  unreachable

bb28:                                             ; preds = %bb27
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 0
  %val.0 = load i8*, i8** %34, align 8, !nonnull !3
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 1
  %val.1 = load i64, i64* %35, align 8
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_64 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %ptr)
  br label %bb32

bb30:                                             ; preds = %bb27
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %36 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6cc498ec0cdce594E"()
  store { i8*, i64 } %36, { i8*, i64 }* %5, align 8
  br label %bb31

bb31:                                             ; preds = %bb30
  br label %bb37

bb38:                                             ; preds = %bb36, %bb37
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = insertvalue { i8*, i64 } undef, i8* %38, 0
  %42 = insertvalue { i8*, i64 } %41, i64 %40, 1
  ret { i8*, i64 } %42

bb32:                                             ; preds = %bb28
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_66 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h609f5117399314e1E"(i8* nonnull %val.0, i64 %val.1)
  br label %bb33

bb33:                                             ; preds = %bb32
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hd460be041eef39e1E(i8* %_64, i8* %_66, i64 %old_size1)
  br label %bb34

bb34:                                             ; preds = %bb33
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  %_72.0 = load i64, i64* %43, align 8
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  %_72.1 = load i64, i64* %44, align 8, !range !16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %_72.0, i64 %_72.1)
  br label %bb35

bb35:                                             ; preds = %bb34
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0
  store i8* %val.0, i8** %45, align 8
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1
  store i64 %val.1, i64* %46, align 8
  br label %bb36

bb3:                                              ; preds = %bb2
  br label %bb36
}

; alloc::alloc::dealloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc7dealloc17hf34a059653073e6cE(i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_6 = call i64 @_ZN4core5alloc6layout6Layout5align17h542156459edaee7aE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  call void @__rust_dealloc(i8* %ptr, i64 %_4, i64 %_6) #20
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::alloc::realloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc7realloc17h00cdd3849e0e63b8E(i8* %ptr, i64 %0, i64 %1, i64 %new_size) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_5 = call i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_7 = call i64 @_ZN4core5alloc6layout6Layout5align17h542156459edaee7aE({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_realloc(i8* %ptr, i64 %_5, i64 %_7, i64 %new_size) #20
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %4
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h21d95f0d36d3e979E(i8* nonnull %0, i64* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17ha9339692bd44b2dfE"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { {}*, [3 x i64]* } %7, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %7, 1
  %8 = bitcast [3 x i64]* %_5.1 to i64*
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = load i64, i64* %9, align 8, !invariant.load !3
  %11 = bitcast [3 x i64]* %_5.1 to i64*
  %12 = getelementptr inbounds i64, i64* %11, i64 2
  %13 = load i64, i64* %12, align 8, !invariant.load !3
  store i64 %10, i64* %3, align 8
  %size = load i64, i64* %3, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %19 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17ha9339692bd44b2dfE"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { {}*, [3 x i64]* } %19, 0
  %_9.1 = extractvalue { {}*, [3 x i64]* } %19, 1
  %20 = bitcast [3 x i64]* %_9.1 to i64*
  %21 = getelementptr inbounds i64, i64* %20, i64 1
  %22 = load i64, i64* %21, align 8, !invariant.load !3
  %23 = bitcast [3 x i64]* %_9.1 to i64*
  %24 = getelementptr inbounds i64, i64* %23, i64 2
  %25 = load i64, i64* %24, align 8, !invariant.load !3
  store i64 %25, i64* %2, align 8
  %align = load i64, i64* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %26 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %26, 0
  %layout.1 = extractvalue { i64, i64 } %26, 1
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %27, align 8, !nonnull !3
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  %_17.1 = load i64*, i64** %28, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hee97f3999816e914E"(i8* nonnull %_17.0, i64* align 8 dereferenceable(24) %_17.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf65c34c6cc0330e7E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %29 = bitcast { i8*, i32 }* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h4b7533ca5d923cebE(i64* nonnull %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(72) %"std::sys::unix::rwlock::RWLock"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h962d8dd07e799c88E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 72, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(72) %"std::sys::unix::rwlock::RWLock"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h962d8dd07e799c88E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h6aa664771dcb9ebdE"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf65c34c6cc0330e7E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17h6671d4cb01dcd97dE(i64* nonnull %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h17040e993a452cbaE"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 32, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h17040e993a452cbaE"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h461c50e7d4f5fdf3E"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf65c34c6cc0330e7E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17ha074b342337a82c7E(i64* nonnull %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h5b17b3139e498638E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 48, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h5b17b3139e498638E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h36c362a0c36893f7E"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf65c34c6cc0330e7E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17ha4f0c53ea7e5a982E(i8* nonnull %0, i64* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %6, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %7 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hf7fb9a6c6696fa3aE"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { {}*, [3 x i64]* } %7, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %7, 1
  %8 = bitcast [3 x i64]* %_5.1 to i64*
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = load i64, i64* %9, align 8, !invariant.load !3
  %11 = bitcast [3 x i64]* %_5.1 to i64*
  %12 = getelementptr inbounds i64, i64* %11, i64 2
  %13 = load i64, i64* %12, align 8, !invariant.load !3
  store i64 %10, i64* %3, align 8
  %size = load i64, i64* %3, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %19 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hf7fb9a6c6696fa3aE"({ i8*, i64* }* align 8 dereferenceable(16) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_9.0 = extractvalue { {}*, [3 x i64]* } %19, 0
  %_9.1 = extractvalue { {}*, [3 x i64]* } %19, 1
  %20 = bitcast [3 x i64]* %_9.1 to i64*
  %21 = getelementptr inbounds i64, i64* %20, i64 1
  %22 = load i64, i64* %21, align 8, !invariant.load !3
  %23 = bitcast [3 x i64]* %_9.1 to i64*
  %24 = getelementptr inbounds i64, i64* %23, i64 2
  %25 = load i64, i64* %24, align 8, !invariant.load !3
  store i64 %25, i64* %2, align 8
  %align = load i64, i64* %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %26 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %26, 0
  %layout.1 = extractvalue { i64, i64 } %26, 1
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  %_17.0 = load i8*, i8** %27, align 8, !nonnull !3
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  %_17.1 = load i64*, i64** %28, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hcae05c3aef3c2ae7E"(i8* nonnull %_17.0, i64* align 8 dereferenceable(24) %_17.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf65c34c6cc0330e7E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %29 = bitcast { i8*, i32 }* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  resume { i8*, i32 } %34

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17hbd17048977d1bbeaE(i64* nonnull %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(40) %"std::sys::unix::mutex::Mutex"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h5e1ad95c6c32ffa5E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 40, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(40) %"std::sys::unix::mutex::Mutex"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h5e1ad95c6c32ffa5E"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17he67a5c190dc9d0c9E"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf65c34c6cc0330e7E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17hc3491c43f1e9c5a4E(i64* nonnull %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(48) %"std::sys::unix::condvar::Condvar"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hcc957c8c3b5b7ceeE"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 48, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(48) %"std::sys::unix::condvar::Condvar"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hcc957c8c3b5b7ceeE"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h530a825a68e73d09E"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf65c34c6cc0330e7E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17hda558501e931f439E(i64* nonnull %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(24) %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h68942397c15289aaE"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 24, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(24) %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h68942397c15289aaE"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hccc1992ad00b38a5E"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf65c34c6cc0330e7E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5alloc8box_free17heed1e7f4832d43faE(i64* nonnull %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
; invoke core::ptr::unique::Unique<T>::as_ref
  %_5 = invoke align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hd725e069ed9dbbeeE"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i64 112, i64* %2, align 8
  %size = load i64, i64* %2, align 8
  br label %bb2

bb10:                                             ; preds = %cleanup
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb2:                                              ; preds = %bb1
; invoke core::ptr::unique::Unique<T>::as_ref
  %_9 = invoke align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hd725e069ed9dbbeeE"(i64** align 8 dereferenceable(8) %ptr)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64 8, i64* %1, align 8
  %align = load i64, i64* %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::from_size_align_unchecked
  %9 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 %align)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %layout.0 = extractvalue { i64, i64 } %9, 0
  %layout.1 = extractvalue { i64, i64 } %9, 1
  %_17 = load i64*, i64** %ptr, align 8, !nonnull !3
; invoke core::ptr::unique::Unique<T>::cast
  %_16 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hbe1a3d1cb55dfdadE"(i64* nonnull %_17)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke <T as core::convert::Into<U>>::into
  %_15 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf65c34c6cc0330e7E"(i8* nonnull %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %_15, i64 %layout.0, i64 %layout.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb9:                                              ; preds = %bb8
  ret void
}

; alloc::boxed::Box<T,A>::into_unique
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hf51b6b5c60a601f6E"({}* noalias nonnull align 1 %0, [3 x i64]* align 8 dereferenceable(24) %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %3 = alloca { i8*, i64* }, align 8
  %b = alloca { {}*, [3 x i64]* }, align 8
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0
  store {}* %0, {}** %4, align 8
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1
  store [3 x i64]* %1, [3 x i64]** %5, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
  %_4 = bitcast { {}*, [3 x i64]* }* %b to %"alloc::alloc::Global"*
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17h964699b2b6f1dea9E(%"alloc::alloc::Global"* %_4)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 0
  %_7.0 = load {}*, {}** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %b, i32 0, i32 1
  %_7.1 = load [3 x i64]*, [3 x i64]** %7, align 8, !nonnull !3
; invoke alloc::boxed::Box<T,A>::leak
  %8 = invoke { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h2767fc3e082dac18E"({}* noalias nonnull align 1 %_7.0, [3 x i64]* align 8 dereferenceable(24) %_7.1)
          to label %bb2 unwind label %cleanup1

bb7:                                              ; preds = %bb4, %cleanup
  %9 = load i8, i8* %_9, align 1, !range !4
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb5

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { {}*, [3 x i64]* } %8, 0
  %_6.1 = extractvalue { {}*, [3 x i64]* } %8, 1
; invoke <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
  %16 = invoke { i8*, i64* } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hfd0c4be511717604E"({}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) %_6.1)
          to label %bb3 unwind label %cleanup1

bb4:                                              ; preds = %cleanup1
  br label %bb7

cleanup1:                                         ; preds = %bb2, %bb1
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb4

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { i8*, i64* } %16, 0
  %_5.1 = extractvalue { i8*, i64* } %16, 1
  %22 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  store i8* %_5.0, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  store i64* %_5.1, i64** %23, align 8
  %24 = bitcast { i8*, i64* }* %3 to i8*
  %25 = getelementptr i8, i8* %24, i64 16
  %26 = bitcast i8* %25 to %"alloc::alloc::Global"*
  %27 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !nonnull !3
  %29 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %3, i32 0, i32 1
  %30 = load i64*, i64** %29, align 8, !nonnull !3
  %31 = insertvalue { i8*, i64* } undef, i8* %28, 0
  %32 = insertvalue { i8*, i64* } %31, i64* %30, 1
  ret { i8*, i64* } %32

bb5:                                              ; preds = %bb6, %bb7
  %33 = bitcast { i8*, i32 }* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17hf0cfbf2089aa9713E"({ {}*, [3 x i64]* }* %b) #19
  br label %bb5
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hef8e7e235ddabf45E"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i8*, i64* }, align 8
; call alloc::boxed::Box<T,A>::into_unique
  %2 = call { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11into_unique17hf51b6b5c60a601f6E"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1)
  %_4.0 = extractvalue { i8*, i64* } %2, 0
  %_4.1 = extractvalue { i8*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
; invoke core::ptr::unique::Unique<T>::as_ptr
  %3 = invoke { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hbd82e16055ee2893E"(i8* nonnull %_4.0, i64* align 8 dereferenceable(24) %_4.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { {}*, [3 x i64]* } %3, 0
  %_6.1 = extractvalue { {}*, [3 x i64]* } %3, 1
  %4 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 0
  store {}* %_6.0, {}** %5, align 8
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i32 0, i32 1
  store [3 x i64]* %_6.1, [3 x i64]** %6, align 8
  %7 = bitcast { i8*, i64* }* %1 to i8*
  %8 = getelementptr i8, i8* %7, i64 16
  %9 = bitcast i8* %8 to %"alloc::alloc::Global"*
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %1, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %1, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8, !nonnull !3
  %14 = insertvalue { i8*, i64* } undef, i8* %11, 0
  %15 = insertvalue { i8*, i64* } %14, i64* %13, 1
  ret { i8*, i64* } %15

bb3:                                              ; preds = %cleanup
  br label %bb4

cleanup:                                          ; preds = %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %21 = bitcast { i8*, i32 }* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h09f7f4bcaf3f05ecE"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* noalias nonnull align 8 %b) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %_9 = alloca i64*, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !69)
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<_ProbeSemaphore>"**
  store %"alloc::sync::ArcInner<_ProbeSemaphore>"* %b, %"alloc::sync::ArcInner<_ProbeSemaphore>"** %1, align 8, !noalias !69
  %2 = load i64*, i64** %0, align 8, !noalias !69, !nonnull !3
  store i64* %2, i64** %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_9 to %"alloc::sync::ArcInner<_ProbeSemaphore>"**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"** %3 to i64**
  %_6 = load i64*, i64** %4, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9144171730188fcbE"(i64* nonnull %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_5
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h2767fc3e082dac18E"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64* }, align 8
  %_9 = alloca { i8*, i64* }, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !72)
  %1 = bitcast { i8*, i64* }* %0 to { {}*, [3 x i64]* }*
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 0
  store {}* %b.0, {}** %2, align 8, !noalias !72
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 1
  store [3 x i64]* %b.1, [3 x i64]** %3, align 8, !noalias !72
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !noalias !72, !nonnull !3
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !noalias !72, !nonnull !3
  %8 = insertvalue { i8*, i64* } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64* } %8, i64* %7, 1
  store { i8*, i64* } %9, { i8*, i64* }* %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %10 = bitcast { i8*, i64* }* %_9 to { {}*, [3 x i64]* }*
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = bitcast { {}*, [3 x i64]* }* %10 to { i8*, i64* }*
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %11, i32 0, i32 0
  %_6.0 = load i8*, i8** %12, align 8, !nonnull !3
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %11, i32 0, i32 1
  %_6.1 = load i64*, i64** %13, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %14 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hbd82e16055ee2893E"(i8* nonnull %_6.0, i64* align 8 dereferenceable(24) %_6.1)
  %_5.0 = extractvalue { {}*, [3 x i64]* } %14, 0
  %_5.1 = extractvalue { {}*, [3 x i64]* } %14, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %15 = insertvalue { {}*, [3 x i64]* } undef, {}* %_5.0, 0
  %16 = insertvalue { {}*, [3 x i64]* } %15, [3 x i64]* %_5.1, 1
  ret { {}*, [3 x i64]* } %16
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17h83e406cca9a113afE"(%"alloc::sync::ArcInner<_ShuffledOrder>"* noalias nonnull align 8 %b) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %_9 = alloca i64*, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !75)
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<_ShuffledOrder>"**
  store %"alloc::sync::ArcInner<_ShuffledOrder>"* %b, %"alloc::sync::ArcInner<_ShuffledOrder>"** %1, align 8, !noalias !75
  %2 = load i64*, i64** %0, align 8, !noalias !75, !nonnull !3
  store i64* %2, i64** %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_9 to %"alloc::sync::ArcInner<_ShuffledOrder>"**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"** %3 to i64**
  %_6 = load i64*, i64** %4, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17he56c48ed1b01d5cdE"(i64* nonnull %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::sync::ArcInner<_ShuffledOrder>"* %_5
}

; alloc::boxed::Box<T,A>::leak
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17hb89931b5b97567ccE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* noalias nonnull align 8 %b) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %_9 = alloca i64*, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !78)
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"**
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %b, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"** %1, align 8, !noalias !78
  %2 = load i64*, i64** %0, align 8, !noalias !78, !nonnull !3
  store i64* %2, i64** %_9, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast i64** %_9 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"**
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"** %3 to i64**
  %_6 = load i64*, i64** %4, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %_5 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf2f9b39a6e5b24f3E"(i64* nonnull %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_5
}

; alloc::boxed::Box<T,A>::into_raw
; Function Attrs: inlinehint nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h71cb1c899f69ff03E"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1) unnamed_addr #0 {
start:
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %0 = call { i8*, i64* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17hef8e7e235ddabf45E"({}* noalias nonnull align 1 %b.0, [3 x i64]* align 8 dereferenceable(24) %b.1)
  %_2.0 = extractvalue { i8*, i64* } %0, 0
  %_2.1 = extractvalue { i8*, i64* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast i8* %_2.0 to {}*
  %2 = bitcast i64* %_2.1 to [3 x i64]*
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %1, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* %2, 1
  ret { {}*, [3 x i64]* } %4
}

; alloc::slice::<impl [T]>::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17h3f759a33f8a284e2E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call alloc::slice::<impl [T]>::to_vec_in
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h01261f117062bd38E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::<impl [T]>::to_vec_in
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h01261f117062bd38E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call alloc::slice::hack::to_vec
  call void @_ZN5alloc5slice4hack6to_vec17h9ed9919d8bd6befeE(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::hack::to_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc5slice4hack6to_vec17h9ed9919d8bd6befeE(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
; call <T as alloc::slice::hack::ConvertVec>::to_vec
  call void @"_ZN52_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$6to_vec17h741c4731344ea092E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17h0caf8f225e7780beE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call alloc::slice::<impl [T]>::to_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17h3f759a33f8a284e2E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::string::String::from_utf8_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String19from_utf8_unchecked17h1d56a043d8c5eb34E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, %"alloc::vec::Vec<u8>"* noalias nocapture dereferenceable(24) %bytes) unnamed_addr #0 {
start:
  %_2 = alloca %"alloc::vec::Vec<u8>", align 8
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*
  %2 = bitcast %"alloc::vec::Vec<u8>"* %bytes to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*
  %4 = bitcast %"alloc::vec::Vec<u8>"* %3 to i8*
  %5 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  ret void
}

; alloc::string::String::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String3new17h37cb3b14165a7153E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0) unnamed_addr #0 {
start:
  %_1 = alloca %"alloc::vec::Vec<u8>", align 8
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h9a9e9b81c5fca722E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret(%"alloc::vec::Vec<u8>") dereferenceable(24) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*
  %2 = bitcast %"alloc::vec::Vec<u8>"* %1 to i8*
  %3 = bitcast %"alloc::vec::Vec<u8>"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  ret void
}

; alloc::raw_vec::alloc_guard
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec11alloc_guard17hea3055f36e42f60cE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %alloc_size) unnamed_addr #0 {
start:
  %_4 = alloca { i64, i64 }, align 8
  br i1 false, label %bb1, label %bb3

bb3:                                              ; preds = %start
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf2aa3128d0badb28E"(i64 %4, i64 %6)
  %_3.0 = extractvalue { i64, i64 } %7, 0
  %_3.1 = extractvalue { i64, i64 } %7, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %_3.0, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %_3.1, i64* %11, align 8
  %12 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %12, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  ret void
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nonlazybind uwtable
define void @_ZN5alloc7raw_vec11finish_grow17h384d16b49f27e89dE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture dereferenceable(24) %current_memory, %"alloc::alloc::Global"* nonnull align 1 %alloc) unnamed_addr #3 {
start:
  %_41 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %_14 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_13 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>", align 8
  %_6 = alloca %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd3598f53fe974d3eE"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_6, i64 %new_layout.0, i64 %new_layout.1)
  br label %bb1

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc91bb7b060e2f4a6E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>") dereferenceable(24) %_5, %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*
  %_9 = load i64, i64* %1, align 8, !range !2
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*
  %3 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %val.0 = load i64, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %val.1 = load i64, i64* %5, align 8, !range !16
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %val.0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %val.1, i64* %7, align 8
; call core::alloc::layout::Layout::size
  %_15 = call i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb7

bb5:                                              ; preds = %bb2
  %8 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %residual.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %residual.1 = load i64, i64* %11, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd34d6402dbe179a3E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb23

bb23:                                             ; preds = %bb13, %bb6
  br label %bb24

bb7:                                              ; preds = %bb3
; call alloc::raw_vec::alloc_guard
  call void @_ZN5alloc7raw_vec11alloc_guard17hea3055f36e42f60cE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_14, i64 %_15)
  br label %bb8

bb8:                                              ; preds = %bb7
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17heedf7ef38f3d2d3cE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>") dereferenceable(24) %_13, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_14)
  br label %bb9

bb9:                                              ; preds = %bb8
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %_13 to i64*
  %_17 = load i64, i64* %12, align 8, !range !2
  switch i64 %_17, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ]

bb11:                                             ; preds = %bb9
  unreachable

bb10:                                             ; preds = %bb9
  %13 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp eq {}* %14, null
  %_22 = select i1 %15, i64 0, i64 1
  %16 = icmp eq i64 %_22, 1
  br i1 %16, label %bb15, label %bb14

bb12:                                             ; preds = %bb9
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %_13 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  %residual.01 = load i64, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  %residual.12 = load i64, i64* %20, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc428c001cb2fcb9bE"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.01, i64 %residual.12)
  br label %bb13

bb13:                                             ; preds = %bb12
  br label %bb23

bb24:                                             ; preds = %bb22, %bb23
  ret void

bb15:                                             ; preds = %bb10
  %21 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %22 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %21 to { i8*, { i64, i64 } }*
  %23 = bitcast { i8*, { i64, i64 } }* %22 to i8**
  %ptr = load i8*, i8** %23, align 8, !nonnull !3
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %25 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %24 to { i8*, { i64, i64 } }*
  %26 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %25, i32 0, i32 1
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1
  %30 = load i64, i64* %29, align 8, !range !16
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %28, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %30, i64* %32, align 8
; call core::alloc::layout::Layout::align
  %_30 = call i64 @_ZN4core5alloc6layout6Layout5align17h542156459edaee7aE({ i64, i64 }* align 8 dereferenceable(16) %old_layout)
  br label %bb16

bb14:                                             ; preds = %bb10
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_39.0 = load i64, i64* %33, align 8
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_39.1 = load i64, i64* %34, align 8, !range !16
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %35 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h142008b8edc345e4E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_39.0, i64 %_39.1)
  store { i8*, i64 } %35, { i8*, i64 }* %memory, align 8
  br label %bb20

bb20:                                             ; preds = %bb14
  br label %bb21

bb21:                                             ; preds = %bb19, %bb20
  %36 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0
  %_40.0 = load i8*, i8** %36, align 8
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1
  %_40.1 = load i64, i64* %37, align 8
  %38 = bitcast i64** %_41 to { i64, i64 }**
  store { i64, i64 }* %new_layout, { i64, i64 }** %38, align 8
  %39 = load i64*, i64** %_41, align 8, !nonnull !3
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbaa95431c8fffcc8E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %0, i8* %_40.0, i64 %_40.1, i64* align 8 dereferenceable(16) %39)
  br label %bb22

bb16:                                             ; preds = %bb15
; call core::alloc::layout::Layout::align
  %_32 = call i64 @_ZN4core5alloc6layout6Layout5align17h542156459edaee7aE({ i64, i64 }* align 8 dereferenceable(16) %new_layout)
  br label %bb17

bb17:                                             ; preds = %bb16
  %_29 = icmp eq i64 %_30, %_32
  call void @llvm.assume(i1 %_29)
  br label %bb18

bb18:                                             ; preds = %bb17
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  %_36.0 = load i64, i64* %40, align 8
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  %_36.1 = load i64, i64* %41, align 8, !range !16
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_37.0 = load i64, i64* %42, align 8
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_37.1 = load i64, i64* %43, align 8, !range !16
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %44 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h8bbc9f37e9756d2bE"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %ptr, i64 %_36.0, i64 %_36.1, i64 %_37.0, i64 %_37.1)
  store { i8*, i64 } %44, { i8*, i64 }* %memory, align 8
  br label %bb19

bb19:                                             ; preds = %bb18
  br label %bb21

bb22:                                             ; preds = %bb21
  br label %bb24
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h733b5d7a05831bd7E"() unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hb8ad3f4ee22a034eE"(i64* align 8 dereferenceable(16) %_1) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  %0 = bitcast i64* %_1 to { i64, i64 }*
  %1 = bitcast i64* %_1 to { i64, i64 }*
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %_4.0 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %_4.1 = load i64, i64* %3, align 8, !range !16
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  store i64 %_4.0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  store i64 %_4.1, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
; call <T as core::convert::Into<U>>::into
  %10 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf2aa3128d0badb28E"(i64 %7, i64 %9)
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  br label %bb1

bb1:                                              ; preds = %start
  %13 = insertvalue { i64, i64 } undef, i64 %11, 0
  %14 = insertvalue { i64, i64 } %13, i64 %12, 1
  ret { i64, i64 } %14
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec14handle_reserve17he3dc15a1d2cc8865E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %result) unnamed_addr #0 {
start:
  %_3 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_2 = alloca %"core::result::Result<(), alloc::collections::TryReserveErrorKind>", align 8
  %0 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_3 to i8*
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h6f9506b36b97a85fE"(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_2, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %_2 to i64*
  %_6 = load i64, i64* %2, align 8, !range !2
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb3, %bb1
  unreachable

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %bb1
  %3 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %_2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"*
  %4 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"* %3, i32 0, i32 1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %_5 = select i1 %7, i64 0, i64 1
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ]

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hf5949ba689b42eeeE() #18
  unreachable

bb6:                                              ; preds = %bb3
  %8 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>"* %_2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Err"* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !16
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h4346a7dd05d4a0b2E(i64 %layout.0, i64 %layout.1) #21
  unreachable
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hde08c2857941fd93E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %e = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call alloc::collections::TryReserveError::kind
  %4 = call { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h85a689afd05215c8E({ i64, i64 }* align 8 dereferenceable(16) %e)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; alloc::raw_vec::RawVec<T,A>::grow_exact
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$10grow_exact17h56401d449fc3e8e5E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, { i32*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %_24 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_22 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_21 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 4, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf2aa3128d0badb28E"(i64 %4, i64 %6)
  %_5.0 = extractvalue { i64, i64 } %7, 0
  %_5.1 = extractvalue { i64, i64 } %7, 1
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h42104c7a00ec9152E"(i64 %len, i64 %additional)
  %_10.0 = extractvalue { i64, i64 } %8, 0
  %_10.1 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h7c7813c53ef37b7eE"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8c46d8a95fce7508E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %_8, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*
  %_14 = load i64, i64* %14, align 8, !range !2
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1
  %val = load i64, i64* %16, align 8
; call core::alloc::layout::Layout::array
  %17 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h11bcafef21e2a1a1E(i64 %val)
  %new_layout.0 = extractvalue { i64, i64 } %17, 0
  %new_layout.1 = extractvalue { i64, i64 } %17, 1
  br label %bb12

bb10:                                             ; preds = %bb7
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %residual.0 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %residual.1 = load i64, i64* %21, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h171823e31cc97e76E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1)
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb21

bb21:                                             ; preds = %bb19, %bb11
  br label %bb22

bb12:                                             ; preds = %bb8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h3677051e4ed6c4deE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_24, { i32*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb13

bb13:                                             ; preds = %bb12
  %_27 = bitcast { i32*, i64 }* %self to %"alloc::alloc::Global"*
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h384d16b49f27e89dE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %_22, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture dereferenceable(24) %_24, %"alloc::alloc::Global"* nonnull align 1 %_27)
  br label %bb14

bb14:                                             ; preds = %bb13
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h66d54ec3814428e7E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") dereferenceable(24) %_21, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_22)
  br label %bb15

bb15:                                             ; preds = %bb14
  %22 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_21 to i64*
  %_28 = load i64, i64* %22, align 8, !range !2
  switch i64 %_28, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ]

bb17:                                             ; preds = %bb15
  unreachable

bb16:                                             ; preds = %bb15
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_21 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %24 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %23, i32 0, i32 1
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %24, i32 0, i32 0
  %val.0 = load i8*, i8** %25, align 8, !nonnull !3
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %24, i32 0, i32 1
  %val.1 = load i64, i64* %26, align 8
; call alloc::raw_vec::RawVec<T,A>::set_ptr
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17hc269ec521aa46520E"({ i32*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %val.0, i64 %val.1)
  br label %bb20

bb18:                                             ; preds = %bb15
  %27 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_21 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %28 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %27, i32 0, i32 1
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0
  %residual.01 = load i64, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1
  %residual.12 = load i64, i64* %30, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hce0ee3d6dea7375eE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.01, i64 %residual.12)
  br label %bb19

bb19:                                             ; preds = %bb18
  br label %bb21

bb22:                                             ; preds = %bb3, %bb20, %bb21
  ret void

bb20:                                             ; preds = %bb16
  %31 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %31, align 8
  br label %bb22

bb3:                                              ; preds = %bb2
  %32 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %33 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %32, i32 0, i32 1
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i32 0, i32 0
  store i64 %_5.0, i64* %34, align 8
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i32 0, i32 1
  store i64 %_5.1, i64* %35, align 8
  %36 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %36, align 8
  br label %bb22
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h0996e0e5779df906E"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_33 = alloca i8, align 1
  %result = alloca { i8*, i64 }, align 8
  %_11 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_7 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = alloca { i32*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i8 0, i8* %_33, align 1
  store i8 1, i8* %_33, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = icmp eq i64 4, 0
  br i1 %4, label %bb2, label %bb4

bb31:                                             ; preds = %cleanup
  %5 = load i8, i8* %_33, align 1, !range !4
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb30, label %bb29

cleanup:                                          ; preds = %bb2, %bb26, %bb25, %bb24, %bb23, %bb22, %bb16, %bb14, %bb11, %bb9, %bb8, %bb6, %bb4
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb31

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_33, align 1
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %12 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h200c3f9c0803b10aE"()
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array
  %13 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h11bcafef21e2a1a1E(i64 %capacity)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store { i64, i64 } %13, { i64, i64 }* %_7, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %_9 = select i1 %16, i64 1, i64 0
  switch i64 %_9, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb5
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %layout.0 = load i64, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %layout.1 = load i64, i64* %18, align 8, !range !16
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %layout.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %layout.1, i64* %20, align 8
; invoke core::alloc::layout::Layout::size
  %_12 = invoke i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %layout)
          to label %bb9 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hf5949ba689b42eeeE() #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb11, %bb6
  unreachable

bb9:                                              ; preds = %bb8
; invoke alloc::raw_vec::alloc_guard
  invoke void @_ZN5alloc7raw_vec11alloc_guard17hea3055f36e42f60cE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_11, i64 %_12)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %21 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_11 to i64*
  %_14 = load i64, i64* %21, align 8, !range !2
  switch i64 %_14, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb13:                                             ; preds = %bb10
  %22 = load i8, i8* %init, align 1, !range !4
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ]

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hf5949ba689b42eeeE() #18
          to label %unreachable unwind label %cleanup

bb15:                                             ; preds = %bb13
  unreachable

bb16:                                             ; preds = %bb13
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_18.0 = load i64, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_18.1 = load i64, i64* %25, align 8, !range !16
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %26 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h142008b8edc345e4E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_18.0, i64 %_18.1)
          to label %bb17 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_20.0 = load i64, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_20.1 = load i64, i64* %28, align 8, !range !16
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %29 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hb4a05ec719e27579E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_20.0, i64 %_20.1)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %29, { i8*, i64 }* %result, align 8
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %30 = bitcast { i8*, i64 }* %result to {}**
  %31 = load {}*, {}** %30, align 8
  %32 = icmp eq {}* %31, null
  %_22 = select i1 %32, i64 1, i64 0
  switch i64 %_22, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ]

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %26, { i8*, i64 }* %result, align 8
  br label %bb19

bb21:                                             ; preds = %bb19
  unreachable

bb22:                                             ; preds = %bb19
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0
  %ptr.0 = load i8*, i8** %33, align 8, !nonnull !3
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1
  %ptr.1 = load i64, i64* %34, align 8
; invoke core::ptr::non_null::NonNull<T>::cast
  %_27 = invoke nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hedda47d35c7b0bf9E"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb23 unwind label %cleanup

bb20:                                             ; preds = %bb19
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_24.0 = load i64, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_24.1 = load i64, i64* %36, align 8, !range !16
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h4346a7dd05d4a0b2E(i64 %_24.0, i64 %_24.1) #21
  unreachable

bb23:                                             ; preds = %bb22
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = invoke i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2ea6501852262917E"(i32* nonnull %_27)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb23
; invoke core::ptr::unique::Unique<T>::new_unchecked
  %_25 = invoke nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h9fd0d0eb14c2febdE"(i32* %_26)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
; invoke core::ptr::non_null::NonNull<[T]>::len
  %_30 = invoke i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h455bbc3466407ff9E"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
; invoke alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_29 = invoke i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h6b4ea95f74b00b8eE"(i64 %_30)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb26
  store i8 0, i8* %_33, align 1
  %37 = bitcast { i32*, i64 }* %2 to i32**
  store i32* %_25, i32** %37, align 8
  %38 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1
  store i64 %_29, i64* %38, align 8
  %39 = bitcast { i32*, i64 }* %2 to %"alloc::alloc::Global"*
  br label %bb28

bb28:                                             ; preds = %bb3, %bb27
  %40 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8, !nonnull !3
  %42 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = insertvalue { i32*, i64 } undef, i32* %41, 0
  %45 = insertvalue { i32*, i64 } %44, i64 %43, 1
  ret { i32*, i64 } %45

bb3:                                              ; preds = %bb2
  store { i32*, i64 } %12, { i32*, i64 }* %2, align 8
  br label %bb28

bb29:                                             ; preds = %bb30, %bb31
  %46 = bitcast { i8*, i32 }* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51

bb30:                                             ; preds = %bb31
  br label %bb29
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h4a84edce218d887bE"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_33 = alloca i8, align 1
  %result = alloca { i8*, i64 }, align 8
  %_11 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_7 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = alloca { i8*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i8 0, i8* %_33, align 1
  store i8 1, i8* %_33, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = icmp eq i64 1, 0
  br i1 %4, label %bb2, label %bb4

bb31:                                             ; preds = %cleanup
  %5 = load i8, i8* %_33, align 1, !range !4
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb30, label %bb29

cleanup:                                          ; preds = %bb2, %bb26, %bb25, %bb24, %bb23, %bb22, %bb16, %bb14, %bb11, %bb9, %bb8, %bb6, %bb4
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb31

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_33, align 1
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %12 = invoke { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h868f5863a706b538E"()
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array
  %13 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h2fb2b163317cc07cE(i64 %capacity)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store { i64, i64 } %13, { i64, i64 }* %_7, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %_9 = select i1 %16, i64 1, i64 0
  switch i64 %_9, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb5
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %layout.0 = load i64, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %layout.1 = load i64, i64* %18, align 8, !range !16
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %layout.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %layout.1, i64* %20, align 8
; invoke core::alloc::layout::Layout::size
  %_12 = invoke i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %layout)
          to label %bb9 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hf5949ba689b42eeeE() #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb11, %bb6
  unreachable

bb9:                                              ; preds = %bb8
; invoke alloc::raw_vec::alloc_guard
  invoke void @_ZN5alloc7raw_vec11alloc_guard17hea3055f36e42f60cE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_11, i64 %_12)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %21 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_11 to i64*
  %_14 = load i64, i64* %21, align 8, !range !2
  switch i64 %_14, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb13:                                             ; preds = %bb10
  %22 = load i8, i8* %init, align 1, !range !4
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ]

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hf5949ba689b42eeeE() #18
          to label %unreachable unwind label %cleanup

bb15:                                             ; preds = %bb13
  unreachable

bb16:                                             ; preds = %bb13
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_18.0 = load i64, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_18.1 = load i64, i64* %25, align 8, !range !16
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %26 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h142008b8edc345e4E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_18.0, i64 %_18.1)
          to label %bb17 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_20.0 = load i64, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_20.1 = load i64, i64* %28, align 8, !range !16
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %29 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hb4a05ec719e27579E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_20.0, i64 %_20.1)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %29, { i8*, i64 }* %result, align 8
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %30 = bitcast { i8*, i64 }* %result to {}**
  %31 = load {}*, {}** %30, align 8
  %32 = icmp eq {}* %31, null
  %_22 = select i1 %32, i64 1, i64 0
  switch i64 %_22, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ]

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %26, { i8*, i64 }* %result, align 8
  br label %bb19

bb21:                                             ; preds = %bb19
  unreachable

bb22:                                             ; preds = %bb19
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0
  %ptr.0 = load i8*, i8** %33, align 8, !nonnull !3
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1
  %ptr.1 = load i64, i64* %34, align 8
; invoke core::ptr::non_null::NonNull<T>::cast
  %_27 = invoke nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h9fdd4ff43aa93ed8E"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb23 unwind label %cleanup

bb20:                                             ; preds = %bb19
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_24.0 = load i64, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_24.1 = load i64, i64* %36, align 8, !range !16
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h4346a7dd05d4a0b2E(i64 %_24.0, i64 %_24.1) #21
  unreachable

bb23:                                             ; preds = %bb22
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = invoke i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %_27)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb23
; invoke core::ptr::unique::Unique<T>::new_unchecked
  %_25 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h14141d54acc76cf6E"(i8* %_26)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
; invoke core::ptr::non_null::NonNull<[T]>::len
  %_30 = invoke i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h455bbc3466407ff9E"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
; invoke alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_29 = invoke i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h11349d65ab6a64cdE"(i64 %_30)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb26
  store i8 0, i8* %_33, align 1
  %37 = bitcast { i8*, i64 }* %2 to i8**
  store i8* %_25, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %_29, i64* %38, align 8
  %39 = bitcast { i8*, i64 }* %2 to %"alloc::alloc::Global"*
  br label %bb28

bb28:                                             ; preds = %bb3, %bb27
  %40 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8, !nonnull !3
  %42 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = insertvalue { i8*, i64 } undef, i8* %41, 0
  %45 = insertvalue { i8*, i64 } %44, i64 %43, 1
  ret { i8*, i64 } %45

bb3:                                              ; preds = %bb2
  store { i8*, i64 } %12, { i8*, i64 }* %2, align 8
  br label %bb28

bb29:                                             ; preds = %bb30, %bb31
  %46 = bitcast { i8*, i32 }* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51

bb30:                                             ; preds = %bb31
  br label %bb29
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hdd565aaa6b5b2806E"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_33 = alloca i8, align 1
  %result = alloca { i8*, i64 }, align 8
  %_11 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_7 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = alloca { i64*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i8 0, i8* %_33, align 1
  store i8 1, i8* %_33, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = icmp eq i64 16, 0
  br i1 %4, label %bb2, label %bb4

bb31:                                             ; preds = %cleanup
  %5 = load i8, i8* %_33, align 1, !range !4
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb30, label %bb29

cleanup:                                          ; preds = %bb2, %bb26, %bb25, %bb24, %bb23, %bb22, %bb16, %bb14, %bb11, %bb9, %bb8, %bb6, %bb4
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb31

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_33, align 1
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %12 = invoke { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h81544fe55362d2c0E"()
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array
  %13 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h37fe382dc91dad38E(i64 %capacity)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store { i64, i64 } %13, { i64, i64 }* %_7, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %_9 = select i1 %16, i64 1, i64 0
  switch i64 %_9, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
  ]

bb7:                                              ; preds = %bb5
  unreachable

bb8:                                              ; preds = %bb5
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %layout.0 = load i64, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %layout.1 = load i64, i64* %18, align 8, !range !16
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %layout.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %layout.1, i64* %20, align 8
; invoke core::alloc::layout::Layout::size
  %_12 = invoke i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %layout)
          to label %bb9 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hf5949ba689b42eeeE() #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %bb11, %bb6
  unreachable

bb9:                                              ; preds = %bb8
; invoke alloc::raw_vec::alloc_guard
  invoke void @_ZN5alloc7raw_vec11alloc_guard17hea3055f36e42f60cE(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_11, i64 %_12)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %21 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_11 to i64*
  %_14 = load i64, i64* %21, align 8, !range !2
  switch i64 %_14, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ]

bb12:                                             ; preds = %bb10
  unreachable

bb13:                                             ; preds = %bb10
  %22 = load i8, i8* %init, align 1, !range !4
  %23 = trunc i8 %22 to i1
  %_16 = zext i1 %23 to i64
  switch i64 %_16, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ]

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hf5949ba689b42eeeE() #18
          to label %unreachable unwind label %cleanup

bb15:                                             ; preds = %bb13
  unreachable

bb16:                                             ; preds = %bb13
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_18.0 = load i64, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_18.1 = load i64, i64* %25, align 8, !range !16
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %26 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h142008b8edc345e4E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_18.0, i64 %_18.1)
          to label %bb17 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_20.0 = load i64, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_20.1 = load i64, i64* %28, align 8, !range !16
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %29 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hb4a05ec719e27579E"(%"alloc::alloc::Global"* nonnull align 1 %alloc, i64 %_20.0, i64 %_20.1)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %29, { i8*, i64 }* %result, align 8
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %30 = bitcast { i8*, i64 }* %result to {}**
  %31 = load {}*, {}** %30, align 8
  %32 = icmp eq {}* %31, null
  %_22 = select i1 %32, i64 1, i64 0
  switch i64 %_22, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ]

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %26, { i8*, i64 }* %result, align 8
  br label %bb19

bb21:                                             ; preds = %bb19
  unreachable

bb22:                                             ; preds = %bb19
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0
  %ptr.0 = load i8*, i8** %33, align 8, !nonnull !3
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1
  %ptr.1 = load i64, i64* %34, align 8
; invoke core::ptr::non_null::NonNull<T>::cast
  %_27 = invoke nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hd3e12aeddbe249a0E"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb23 unwind label %cleanup

bb20:                                             ; preds = %bb19
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_24.0 = load i64, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_24.1 = load i64, i64* %36, align 8, !range !16
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h4346a7dd05d4a0b2E(i64 %_24.0, i64 %_24.1) #21
  unreachable

bb23:                                             ; preds = %bb22
; invoke core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = invoke { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7ab75b1de90bb502E"(i64* nonnull %_27)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb23
; invoke core::ptr::unique::Unique<T>::new_unchecked
  %_25 = invoke nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h0b6d58c8da5d34f5E"({ [0 x i8]*, i64 }* %_26)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
; invoke core::ptr::non_null::NonNull<[T]>::len
  %_30 = invoke i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h455bbc3466407ff9E"(i8* nonnull %ptr.0, i64 %ptr.1)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
; invoke alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_29 = invoke i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hb36bfac38c6f9d11E"(i64 %_30)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb26
  store i8 0, i8* %_33, align 1
  %37 = bitcast { i64*, i64 }* %2 to i64**
  store i64* %_25, i64** %37, align 8
  %38 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %_29, i64* %38, align 8
  %39 = bitcast { i64*, i64 }* %2 to %"alloc::alloc::Global"*
  br label %bb28

bb28:                                             ; preds = %bb3, %bb27
  %40 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  %41 = load i64*, i64** %40, align 8, !nonnull !3
  %42 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = insertvalue { i64*, i64 } undef, i64* %41, 0
  %45 = insertvalue { i64*, i64 } %44, i64 %43, 1
  ret { i64*, i64 } %45

bb3:                                              ; preds = %bb2
  store { i64*, i64 } %12, { i64*, i64 }* %2, align 8
  br label %bb28

bb29:                                             ; preds = %bb30, %bb31
  %46 = bitcast { i8*, i32 }* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1
  resume { i8*, i32 } %51

bb30:                                             ; preds = %bb31
  br label %bb29
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h0bd699ce7faa2dc8E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %4 = sub i64 %3, %len
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = icmp ugt i64 %additional, %4
  ret i1 %5
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h0e5799abe0c60a2aE"({ i32*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  store i64 %2, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %4 = sub i64 %3, %len
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = icmp ugt i64 %additional, %4
  ret i1 %5
}

; alloc::raw_vec::RawVec<T,A>::reserve_exact
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13reserve_exact17hf8bebc19e8186ca6E"({ i32*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %_5 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
; call alloc::raw_vec::RawVec<T,A>::try_reserve_exact
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17h96ce6d21d77f5a29E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_5, { i32*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17he3dc15a1d2cc8865E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h3677051e4ed6c4deE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %0, { i32*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 4, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb3
  %6 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to {}**
  store {}* null, {}** %6, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  ret void

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1
  %_9 = load i64, i64* %7, align 8
  %size = mul i64 4, %_9
; call core::alloc::layout::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 4)
  %layout.0 = extractvalue { i64, i64 } %8, 0
  %layout.1 = extractvalue { i64, i64 } %8, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %9 = bitcast { i32*, i64 }* %self to i32**
  %_16 = load i32*, i32** %9, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hf1091e759aa5ac7bE"(i32* nonnull %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf65c34c6cc0330e7E"(i8* nonnull %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, { i64, i64 } }* %_13 to i8**
  store i8* %_14, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %layout.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %layout.1, i64* %13, align 8
  %14 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %14 to { i8*, { i64, i64 } }*
  %16 = bitcast { i8*, { i64, i64 } }* %15 to i8*
  %17 = bitcast { i8*, { i64, i64 } }* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb12
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9dfd5c1dcabf9f9eE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %0, { i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 16, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb3
  %6 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to {}**
  store {}* null, {}** %6, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  ret void

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_9 = load i64, i64* %7, align 8
  %size = mul i64 16, %_9
; call core::alloc::layout::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 8)
  %layout.0 = extractvalue { i64, i64 } %8, 0
  %layout.1 = extractvalue { i64, i64 } %8, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %9 = bitcast { i64*, i64 }* %self to i64**
  %_16 = load i64*, i64** %9, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17hc7cd02f96642ff3fE"(i64* nonnull %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf65c34c6cc0330e7E"(i8* nonnull %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, { i64, i64 } }* %_13 to i8**
  store i8* %_14, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %layout.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %layout.1, i64* %13, align 8
  %14 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %14 to { i8*, { i64, i64 } }*
  %16 = bitcast { i8*, { i64, i64 } }* %15 to i8*
  %17 = bitcast { i8*, { i64, i64 } }* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb12
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hb27c505e97ec2351E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %0, { i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  br label %bb4

bb4:                                              ; preds = %start
  %1 = icmp eq i64 1, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1
  br label %bb3

bb2:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_5 = load i64, i64* %2, align 8
  %_4 = icmp eq i64 %_5, 0
  %3 = zext i1 %_4 to i8
  store i8 %3, i8* %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, i8* %_2, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  br label %bb7

bb5:                                              ; preds = %bb3
  %6 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to {}**
  store {}* null, {}** %6, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  ret void

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_9 = load i64, i64* %7, align 8
  %size = mul i64 1, %_9
; call core::alloc::layout::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17ha32321fbd2740da4E(i64 %size, i64 1)
  %layout.0 = extractvalue { i64, i64 } %8, 0
  %layout.1 = extractvalue { i64, i64 } %8, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %9 = bitcast { i8*, i64 }* %self to i8**
  %_16 = load i8*, i8** %9, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h07c27844cc2da907E"(i8* nonnull %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf65c34c6cc0330e7E"(i8* nonnull %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, { i64, i64 } }* %_13 to i8**
  store i8* %_14, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %layout.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %layout.1, i64* %13, align 8
  %14 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %15 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %14 to { i8*, { i64, i64 } }*
  %16 = bitcast { i8*, { i64, i64 } }* %15 to i8*
  %17 = bitcast { i8*, { i64, i64 } }* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb12
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h0d18437a2b3c0ec1E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, { i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %_28 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i64 16, 0
  br i1 %1, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf2aa3128d0badb28E"(i64 %4, i64 %6)
  %_5.0 = extractvalue { i64, i64 } %7, 0
  %_5.1 = extractvalue { i64, i64 } %7, 1
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h42104c7a00ec9152E"(i64 %len, i64 %additional)
  %_10.0 = extractvalue { i64, i64 } %8, 0
  %_10.1 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h7c7813c53ef37b7eE"(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture sret(%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>") dereferenceable(24) %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8c46d8a95fce7508E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %_8, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*
  %_14 = load i64, i64* %14, align 8, !range !2
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1
  %val = load i64, i64* %16, align 8
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_20 = load i64, i64* %17, align 8
  %_19 = mul i64 %_20, 2
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17h90283085d0421460E(i64 %_19, i64 %val)
  br label %bb12

bb10:                                             ; preds = %bb7
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0
  %residual.0 = load i64, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1
  %residual.1 = load i64, i64* %21, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h171823e31cc97e76E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1)
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb23

bb23:                                             ; preds = %bb21, %bb11
  br label %bb24

bb12:                                             ; preds = %bb8
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17h90283085d0421460E(i64 4, i64 %cap)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::alloc::layout::Layout::array
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h37fe382dc91dad38E(i64 %cap1)
  %new_layout.0 = extractvalue { i64, i64 } %22, 0
  %new_layout.1 = extractvalue { i64, i64 } %22, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9dfd5c1dcabf9f9eE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_30, { i64*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_33 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h384d16b49f27e89dE(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") dereferenceable(24) %_28, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture dereferenceable(24) %_30, %"alloc::alloc::Global"* nonnull align 1 %_33)
  br label %bb16

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h66d54ec3814428e7E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") dereferenceable(24) %_27, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_28)
  br label %bb17

bb17:                                             ; preds = %bb16
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*
  %_34 = load i64, i64* %23, align 8, !range !2
  switch i64 %_34, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ]

bb19:                                             ; preds = %bb17
  unreachable

bb18:                                             ; preds = %bb17
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %24, i32 0, i32 1
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 0
  %val.0 = load i8*, i8** %26, align 8, !nonnull !3
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %25, i32 0, i32 1
  %val.1 = load i64, i64* %27, align 8
; call alloc::raw_vec::RawVec<T,A>::set_ptr
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17hdbec3329115bce5cE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %val.0, i64 %val.1)
  br label %bb22

bb20:                                             ; preds = %bb17
  %28 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %29 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %28, i32 0, i32 1
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0
  %residual.02 = load i64, i64* %30, align 8
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1
  %residual.13 = load i64, i64* %31, align 8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hce0ee3d6dea7375eE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.02, i64 %residual.13)
  br label %bb21

bb21:                                             ; preds = %bb20
  br label %bb23

bb24:                                             ; preds = %bb3, %bb22, %bb23
  ret void

bb22:                                             ; preds = %bb18
  %32 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %32, align 8
  br label %bb24

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %34 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %33, i32 0, i32 1
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0
  store i64 %_5.0, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1
  store i64 %_5.1, i64* %36, align 8
  %37 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %37, align 8
  br label %bb24
}

; alloc::raw_vec::RawVec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h5882d4cabb2bf3c7E"(i64 %capacity) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  store i8 0, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !4
  %1 = trunc i8 %0 to i1
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %2 = call { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hdd565aaa6b5b2806E"(i64 %capacity, i1 zeroext %1)
  %3 = extractvalue { i64*, i64 } %2, 0
  %4 = extractvalue { i64*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { i64*, i64 } undef, i64* %3, 0
  %6 = insertvalue { i64*, i64 } %5, i64 %4, 1
  ret { i64*, i64 } %6
}

; alloc::raw_vec::RawVec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hc04ae20e15bc3dd2E"(i64 %capacity) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  store i8 0, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !4
  %1 = trunc i8 %0 to i1
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %2 = call { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h4a84edce218d887bE"(i64 %capacity, i1 zeroext %1)
  %3 = extractvalue { i8*, i64 } %2, 0
  %4 = extractvalue { i8*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1
  ret { i8*, i64 } %6
}

; alloc::raw_vec::RawVec<T,A>::with_capacity_in
; Function Attrs: inlinehint nonlazybind uwtable
define { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hc8d4155b9fc9618cE"(i64 %capacity) unnamed_addr #0 {
start:
  %_4 = alloca i8, align 1
  store i8 0, i8* %_4, align 1
  %0 = load i8, i8* %_4, align 1, !range !4
  %1 = trunc i8 %0 to i1
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %2 = call { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h0996e0e5779df906E"(i64 %capacity, i1 zeroext %1)
  %3 = extractvalue { i32*, i64 } %2, 0
  %4 = extractvalue { i32*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %5 = insertvalue { i32*, i64 } undef, i32* %3, 0
  %6 = insertvalue { i32*, i64 } %5, i64 %4, 1
  ret { i32*, i64 } %6
}

; alloc::raw_vec::RawVec<T,A>::from_raw_parts_in
; Function Attrs: inlinehint nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17h7e68f63690fbe453E"({ [0 x i8]*, i64 }* %ptr, i64 %capacity) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i64*, i64 }, align 8
; invoke core::ptr::unique::Unique<T>::new_unchecked
  %_4 = invoke nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h0b6d58c8da5d34f5E"({ [0 x i8]*, i64 }* %ptr)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i64 }* %1 to i64**
  store i64* %_4, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 %capacity, i64* %3, align 8
  %4 = bitcast { i64*, i64 }* %1 to %"alloc::alloc::Global"*
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8, !nonnull !3
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64*, i64 } undef, i64* %6, 0
  %10 = insertvalue { i64*, i64 } %9, i64 %8, 1
  ret { i64*, i64 } %10

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; alloc::raw_vec::RawVec<T,A>::try_reserve_exact
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17h96ce6d21d77f5a29E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, { i32*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h0e5799abe0c60a2aE"({ i32*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4

bb4:                                              ; preds = %bb1
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %1, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::grow_exact
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$10grow_exact17h56401d449fc3e8e5E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %0, { i32*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  ret void
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h11349d65ab6a64cdE"(i64 %excess) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 1, 0
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %0, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 1
  ret i64 %1

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.j to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc576 to %"core::panic::location::Location"*)) #18
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h6b4ea95f74b00b8eE"(i64 %excess) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 4, 0
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %0, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 4
  ret i64 %1

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.j to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc576 to %"core::panic::location::Location"*)) #18
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hb36bfac38c6f9d11E"(i64 %excess) unnamed_addr #1 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 16, 0
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %0, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 16
  ret i64 %1

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.j to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc576 to %"core::panic::location::Location"*)) #18
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h418b3b8267410f0bE"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i8*, i64 }* %self to i8**
  %_2 = load i8*, i8** %0, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hd1bf3f18bda5738cE"(i8* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define i32* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h44c522aedff9cc16E"({ i32*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i32*, i64 }* %self to i32**
  %_2 = load i32*, i32** %0, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h78ad59412605dfbcE"(i32* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 }* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h7486d61b87b8eb82E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i64 }* %self to i64**
  %_2 = load i64*, i64** %0, align 8, !nonnull !3
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call { [0 x i8]*, i64 }* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hf8309d8a6c532defE"(i64* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret { [0 x i8]*, i64 }* %1
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h200c3f9c0803b10aE"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i32*, i64 }, align 8
; invoke core::ptr::unique::Unique<T>::dangling
  %_2 = invoke nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17hf238264579afa98eE"()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast { i32*, i64 }* %1 to i32**
  store i32* %_2, i32** %2, align 8
  %3 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = bitcast { i32*, i64 }* %1 to %"alloc::alloc::Global"*
  %5 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8, !nonnull !3
  %7 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i32*, i64 } undef, i32* %6, 0
  %10 = insertvalue { i32*, i64 } %9, i64 %8, 1
  ret { i32*, i64 } %10

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h81544fe55362d2c0E"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i64*, i64 }, align 8
; invoke core::ptr::unique::Unique<T>::dangling
  %_2 = invoke nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h8a6cacc6e13cd50aE"()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i64 }* %1 to i64**
  store i64* %_2, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = bitcast { i64*, i64 }* %1 to %"alloc::alloc::Global"*
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8, !nonnull !3
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64*, i64 } undef, i64* %6, 0
  %10 = insertvalue { i64*, i64 } %9, i64 %8, 1
  ret { i64*, i64 } %10

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h868f5863a706b538E"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i8*, i64 }, align 8
; invoke core::ptr::unique::Unique<T>::dangling
  %_2 = invoke nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h43970cc98598dd46E"()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast { i8*, i64 }* %1 to i8**
  store i8* %_2, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = bitcast { i8*, i64 }* %1 to %"alloc::alloc::Global"*
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8, !nonnull !3
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i8*, i64 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %16 = bitcast { i8*, i32 }* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h4f23c5024e26ae88E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h0bd699ce7faa2dc8E"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17he1265f980ff551eaE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17he1265f980ff551eaE"({ i64*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional) unnamed_addr #7 {
start:
  %_5 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h0d18437a2b3c0ec1E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret(%"core::result::Result<(), alloc::collections::TryReserveError>") dereferenceable(24) %_5, { i64*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17he3dc15a1d2cc8865E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::set_ptr
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17hc269ec521aa46520E"({ i32*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %ptr.0, i64 %ptr.1) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_5 = call nonnull i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hedda47d35c7b0bf9E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i32* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h2ea6501852262917E"(i32* nonnull %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_3 = call nonnull i32* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h9fd0d0eb14c2febdE"(i32* %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %0 = bitcast { i32*, i64 }* %self to i32**
  store i32* %_3, i32** %0, align 8
; call core::ptr::non_null::NonNull<[T]>::len
  %_8 = call i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h455bbc3466407ff9E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_7 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17h6b4ea95f74b00b8eE"(i64 %_8)
  br label %bb5

bb5:                                              ; preds = %bb4
  %1 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  ret void
}

; alloc::raw_vec::RawVec<T,A>::set_ptr
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17hdbec3329115bce5cE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %ptr.0, i64 %ptr.1) unnamed_addr #1 {
start:
; call core::ptr::non_null::NonNull<T>::cast
  %_5 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hd3e12aeddbe249a0E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call { [0 x i8]*, i64 }* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7ab75b1de90bb502E"(i64* nonnull %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_3 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h0b6d58c8da5d34f5E"({ [0 x i8]*, i64 }* %_4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %0 = bitcast { i64*, i64 }* %self to i64**
  store i64* %_3, i64** %0, align 8
; call core::ptr::non_null::NonNull<[T]>::len
  %_8 = call i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17h455bbc3466407ff9E"(i8* nonnull %ptr.0, i64 %ptr.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_7 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hb36bfac38c6f9d11E"(i64 %_8)
  br label %bb5

bb5:                                              ; preds = %bb4
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  store i64 %_7, i64* %1, align 8
  ret void
}

; alloc::raw_vec::RawVec<T,A>::allocator
; Function Attrs: nonlazybind uwtable
define nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17h71b0c5b7439a0898E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
  ret %"alloc::alloc::Global"* %0
}

; <alloc::string::String as core::fmt::Display>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17ha6278a9685028c18E"(%"alloc::string::String"* align 8 dereferenceable(24) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 {
start:
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd3ecbe8ffa65aa72E"(%"alloc::string::String"* align 8 dereferenceable(24) %self)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <str as core::fmt::Display>::fmt
  %1 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hc7fdfa9efeb52994E"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0537f764d55780beE"(%"core::str::iter::SplitWhitespace"* noalias nocapture sret(%"core::str::iter::SplitWhitespace") dereferenceable(64) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::str::iter::SplitWhitespace"* %0 to i8*
  %2 = bitcast %"core::str::iter::SplitWhitespace"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 64, i1 false)
  ret void
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h439bcaece2398658E({ i64, i64 }* align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = icmp eq i64 %_4, 0
  br i1 %4, label %bb5, label %bb2

bb5:                                              ; preds = %bb1
  br label %bb6

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %ptr)
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_8.0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_8.1 = load i64, i64* %6, align 8, !range !16
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17hf34a059653073e6cE(i8* %_6, i64 %_8.0, i64 %_8.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  ret void
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hb4a05ec719e27579E"(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hba4d1fd3618eae61E(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h8bbc9f37e9756d2bE"(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::grow_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17hb30fb1aa1dc737c0E(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h142008b8edc345e4E"(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17hba4d1fd3618eae61E(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <core::cell::BorrowRef as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$core..cell..BorrowRef$u20$as$u20$core..ops..drop..Drop$GT$4drop17h95c3c09c340a4ce6E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::cell::Cell<T>::get
  %borrow = call i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17hbb23a753519bba80E"(i64* align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %_5 = load i64*, i64** %self, align 8, !nonnull !3
  %_6 = sub i64 %borrow, 1
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h56da9c400d014d4dE"(i64* align 8 dereferenceable(8) %_5, i64 %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <core::cell::Ref<T> as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN63_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17h74f58bc28733e89cE"({ i64*, i64* }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i64* }* %self to %"alloc::string::String"**
  %_3 = load %"alloc::string::String"*, %"alloc::string::String"** %0, align 8, !nonnull !3
; call <alloc::string::String as core::fmt::Display>::fmt
  %1 = call zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17ha6278a9685028c18E"(%"alloc::string::String"* align 8 dereferenceable(24) %_3, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; <alloc::string::String as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd3ecbe8ffa65aa72E"(%"alloc::string::String"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_5 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17had617edb52580b0bE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_5)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked
  %1 = call { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17h1f56c332b9f5c0ddE([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; <core::alloc::layout::Layout as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h1eb298a56ab3d362E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %1 = load i64, i64* %0, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %3 = load i64, i64* %2, align 8, !range !16
  %4 = insertvalue { i64, i64 } undef, i64 %1, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <core::cell::BorrowRefMut as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN66_$LT$core..cell..BorrowRefMut$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc7346467d4e7bd3bE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_3 = load i64*, i64** %self, align 8, !nonnull !3
; call core::cell::Cell<T>::get
  %borrow = call i64 @"_ZN4core4cell13Cell$LT$T$GT$3get17hbb23a753519bba80E"(i64* align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %_5 = load i64*, i64** %self, align 8, !nonnull !3
  %_6 = add i64 %borrow, 1
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17h56da9c400d014d4dE"(i64* align 8 dereferenceable(8) %_5, i64 %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <core::cell::RefMut<T> as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN66_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17hf590b6c3e6ac4d32E"({ i32*, i64* }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_3 = bitcast { i32*, i64* }* %self to i32**
; call <&mut T as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN52_$LT$$RF$mut$u20$T$u20$as$u20$core..fmt..Display$GT$3fmt17hc9b9347d61ea99caE"(i32** align 8 dereferenceable(8) %_3, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <core::option::Option<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h27b059712fb59d5eE"({ i64, i64 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_20 = alloca i64*, align 8
  %_11 = alloca %"core::fmt::builders::DebugTuple", align 8
  %_3 = alloca i64*, align 8
  %0 = alloca i8, align 1
  %1 = bitcast i64** %_3 to { i64, i64 }**
  store { i64, i64 }* %self, { i64, i64 }** %1, align 8
  %2 = bitcast i64** %_3 to { i64, i64 }**
  %3 = load { i64, i64 }*, { i64, i64 }** %2, align 8, !nonnull !3
  %4 = bitcast { i64, i64 }* %3 to i64*
  %_5 = load i64, i64* %4, align 8, !range !2
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %5 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h183551d38569a8c9E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc581 to [0 x i8]*), i64 4)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast i64** %_3 to { i64, i64 }**
  %8 = load { i64, i64 }*, { i64, i64 }** %7, align 8, !nonnull !3
  %9 = bitcast { i64, i64 }* %8 to %"core::option::Option<usize>::Some"*
  %__self_0 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %9, i32 0, i32 1
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h7224d0bd130049f1E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24) %_11, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc577 to [0 x i8]*), i64 4)
  br label %bb5

bb5:                                              ; preds = %bb1
  store i64* %__self_0, i64** %_20, align 8
  %_17.0 = bitcast i64** %_20 to {}*
; call core::fmt::builders::DebugTuple::field
  %_15 = call align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17hf9e554966e8175aaE(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_11, {}* nonnull align 1 %_17.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.k to [3 x i64]*))
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::fmt::builders::DebugTuple::finish
  %10 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17hb124e78f94d89d10E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24) %_11)
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %0, align 1
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb4, %bb7
  %12 = load i8, i8* %0, align 1, !range !4
  %13 = trunc i8 %12 to i1
  ret i1 %13

bb4:                                              ; preds = %bb3
  br label %bb8
}

; <std::io::error::ErrorKind as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN66_$LT$std..io..error..ErrorKind$u20$as$u20$core..cmp..PartialEq$GT$2eq17h80e77723a301e536E"(i8* align 1 dereferenceable(1) %self, i8* align 1 dereferenceable(1) %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = load i8, i8* %self, align 1, !range !5
  %__self_vi = zext i8 %1 to i64
  %2 = load i8, i8* %other, align 1, !range !5
  %__arg_1_vi = zext i8 %2 to i64
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, i8* %0, align 1, !range !4
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h39796468c56d8342E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i8, align 1
; call alloc::sync::Arc<T>::inner
  %_4 = call align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h43cd35113520efbcE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_4 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_6, align 1
  %0 = load i8, i8* %_6, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h4de5bdca29faa70cE(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_3, i64 1, i8 %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = icmp eq i64 %_2, 1
  br i1 %1, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  store i8 2, i8* %_8, align 1
  %2 = load i8, i8* %_8, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h7f32d2536cc29a16E(i8 %2)
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hd4f567ca7d3cb9ddE"(i64** align 8 dereferenceable(8) %self)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h4cbedf01b5e72a45E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i8, align 1
; call alloc::sync::Arc<T>::inner
  %_4 = call align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h4b409f80af9f6121E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_4 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_6, align 1
  %0 = load i8, i8* %_6, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h4de5bdca29faa70cE(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_3, i64 1, i8 %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = icmp eq i64 %_2, 1
  br i1 %1, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  store i8 2, i8* %_8, align 1
  %2 = load i8, i8* %_8, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h7f32d2536cc29a16E(i8 %2)
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h6836ed5c846b014cE"(i64** align 8 dereferenceable(8) %self)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9bfb935f41721050E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_8 = alloca i8, align 1
  %_6 = alloca i8, align 1
; call alloc::sync::Arc<T>::inner
  %_4 = call align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h4532a94eb71b0d37E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::sync::ArcInner<_ShuffledOrder>"* %_4 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_6, align 1
  %0 = load i8, i8* %_6, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_2 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h4de5bdca29faa70cE(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_3, i64 1, i8 %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = icmp eq i64 %_2, 1
  br i1 %1, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  store i8 2, i8* %_8, align 1
  %2 = load i8, i8* %_8, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h7f32d2536cc29a16E(i8 %2)
  br label %bb5

bb3:                                              ; preds = %bb2
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h0f82a290ffa936feE"(i64** align 8 dereferenceable(8) %self)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h352a8c9c3699f7dcE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17he092fd029563d3acE"(i64** align 8 dereferenceable(8) %self)
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 1
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0
  %inner.0 = load i64*, i64** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1
  %inner.1 = load i64*, i64** %7, align 8, !nonnull !3
  %_8 = bitcast i64* %inner.0 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_9, align 1
  %8 = load i8, i8* %_9, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_7 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h4de5bdca29faa70cE(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_8, i64 1, i8 %8)
  br label %bb4

bb3:                                              ; preds = %bb1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  ret void

bb4:                                              ; preds = %bb2
  %9 = icmp eq i64 %_7, 1
  br i1 %9, label %bb5, label %bb11

bb5:                                              ; preds = %bb4
  store i8 2, i8* %_11, align 1
  %10 = load i8, i8* %_11, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h7f32d2536cc29a16E(i8 %10)
  br label %bb6

bb11:                                             ; preds = %bb4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  br label %bb13

bb6:                                              ; preds = %bb5
  %_14 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::cast
  %_13 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h4910389e1823df71E"(i64* nonnull %_14)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_18 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17 = call %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7468b852db168a0cE"(i64* nonnull %_18)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::alloc::layout::Layout::for_value_raw
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h613e4eab990401e4E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_17)
  %_15.0 = extractvalue { i64, i64 } %11, 0
  %_15.1 = extractvalue { i64, i64 } %11, 1
  br label %bb9

bb9:                                              ; preds = %bb8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc269 to %"alloc::alloc::Global"*), i8* nonnull %_13, i64 %_15.0, i64 %_15.1)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb12
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8ded2662cd3dfa78E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17hdf21995fe7cbd13cE"(i64** align 8 dereferenceable(8) %self)
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 1
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0
  %inner.0 = load i64*, i64** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1
  %inner.1 = load i64*, i64** %7, align 8, !nonnull !3
  %_8 = bitcast i64* %inner.0 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_9, align 1
  %8 = load i8, i8* %_9, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_7 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h4de5bdca29faa70cE(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_8, i64 1, i8 %8)
  br label %bb4

bb3:                                              ; preds = %bb1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  ret void

bb4:                                              ; preds = %bb2
  %9 = icmp eq i64 %_7, 1
  br i1 %9, label %bb5, label %bb11

bb5:                                              ; preds = %bb4
  store i8 2, i8* %_11, align 1
  %10 = load i8, i8* %_11, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h7f32d2536cc29a16E(i8 %10)
  br label %bb6

bb11:                                             ; preds = %bb4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  br label %bb13

bb6:                                              ; preds = %bb5
  %_14 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::cast
  %_13 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h521017ac18423f77E"(i64* nonnull %_14)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_18 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17 = call %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h1170ef527c1cc399E"(i64* nonnull %_18)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::alloc::layout::Layout::for_value_raw
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17hcb37a1514473b9cfE(%"alloc::sync::ArcInner<_ProbeSemaphore>"* %_17)
  %_15.0 = extractvalue { i64, i64 } %11, 0
  %_15.1 = extractvalue { i64, i64 } %11, 1
  br label %bb9

bb9:                                              ; preds = %bb8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc269 to %"alloc::alloc::Global"*), i8* nonnull %_13, i64 %_15.0, i64 %_15.1)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb12
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf08e8723aff4a3f1E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h307a1c44b0802befE"(i64** align 8 dereferenceable(8) %self)
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**
  %2 = load {}*, {}** %1, align 8
  %3 = icmp eq {}* %2, null
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 1
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0
  %inner.0 = load i64*, i64** %6, align 8, !nonnull !3
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1
  %inner.1 = load i64*, i64** %7, align 8, !nonnull !3
  %_8 = bitcast i64* %inner.0 to %"core::sync::atomic::AtomicUsize"*
  store i8 1, i8* %_9, align 1
  %8 = load i8, i8* %_9, align 1, !range !7
; call core::sync::atomic::AtomicUsize::fetch_sub
  %_7 = call i64 @_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h4de5bdca29faa70cE(%"core::sync::atomic::AtomicUsize"* align 8 dereferenceable(8) %_8, i64 1, i8 %8)
  br label %bb4

bb3:                                              ; preds = %bb1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  ret void

bb4:                                              ; preds = %bb2
  %9 = icmp eq i64 %_7, 1
  br i1 %9, label %bb5, label %bb11

bb5:                                              ; preds = %bb4
  store i8 2, i8* %_11, align 1
  %10 = load i8, i8* %_11, align 1, !range !7
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h7f32d2536cc29a16E(i8 %10)
  br label %bb6

bb11:                                             ; preds = %bb4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  br label %bb13

bb6:                                              ; preds = %bb5
  %_14 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::cast
  %_13 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h91806f3c2ab9d5e3E"(i64* nonnull %_14)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_18 = load i64*, i64** %self, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17 = call %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd3203147f8535e97E"(i64* nonnull %_18)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::alloc::layout::Layout::for_value_raw
  %11 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h72a8280caa3d38efE(%"alloc::sync::ArcInner<_ShuffledOrder>"* %_17)
  %_15.0 = extractvalue { i64, i64 } %11, 0
  %_15.1 = extractvalue { i64, i64 } %11, 1
  br label %bb9

bb9:                                              ; preds = %bb8
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 bitcast (<{ [0 x i8] }>* @alloc269 to %"alloc::alloc::Global"*), i8* nonnull %_13, i64 %_15.0, i64 %_15.1)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb12
}

; <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(96) %_ShuffledOrder* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39317c85bb1c3a11E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
; call alloc::sync::Arc<T>::inner
  %_2 = call align 8 dereferenceable(112) %"alloc::sync::ArcInner<_ShuffledOrder>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h4532a94eb71b0d37E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::sync::ArcInner<_ShuffledOrder>", %"alloc::sync::ArcInner<_ShuffledOrder>"* %_2, i32 0, i32 2
  ret %_ShuffledOrder* %0
}

; <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6588f56fd41365ccE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
; call alloc::sync::Arc<T>::inner
  %_2 = call align 8 dereferenceable(32) %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h4b409f80af9f6121E"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %_2, i32 0, i32 2
  ret %"std::sync::mutex::Mutex<std::fs::File>"* %0
}

; <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(32) %_ProbeSemaphore* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hcb1ef12fbc121f7aE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
; call alloc::sync::Arc<T>::inner
  %_2 = call align 8 dereferenceable(48) %"alloc::sync::ArcInner<_ProbeSemaphore>"* @"_ZN5alloc4sync12Arc$LT$T$GT$5inner17h43cd35113520efbcE"(i64** align 8 dereferenceable(8) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::sync::ArcInner<_ProbeSemaphore>", %"alloc::sync::ArcInner<_ProbeSemaphore>"* %_2, i32 0, i32 2
  ret %_ProbeSemaphore* %0
}

; <std::os::fd::owned::OwnedFd as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2f5c0ac9a53f483cE"(i32* align 4 dereferenceable(4) %self) unnamed_addr #0 {
start:
  %_3 = load i32, i32* %self, align 4
  %_2 = call i32 @close(i32 %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0b5abc20312eff4eE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h006e32af3d00997fE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17he9459e820dc6fd6fE(i8* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfd4713facc8a1e54E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h56a927d1ddf002baE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1
  %_5 = load i64, i64* %0, align 8
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { [0 x { [0 x i8]*, i64 }]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hbc205848bd75c776E({ [0 x i8]*, i64 }* %_3, i64 %_5)
  %_2.0 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %1, 0
  %_2.1 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <core::option::Option<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h2b371288d718f49aE"({ i64, i64 }* align 8 dereferenceable(16) %self, { i64, i64 }* align 8 dereferenceable(16) %other) unnamed_addr #0 {
start:
  %_13 = alloca { i64*, i64* }, align 8
  %0 = alloca i8, align 1
  %1 = bitcast { i64, i64 }* %self to i64*
  %__self_vi = load i64, i64* %1, align 8, !range !2
  %2 = bitcast { i64, i64 }* %other to i64*
  %__arg_1_vi = load i64, i64* %2, align 8, !range !2
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi
  br i1 %_10, label %bb1, label %bb7

bb7:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb8

bb1:                                              ; preds = %start
  %3 = bitcast { i64*, i64* }* %_13 to { i64, i64 }**
  store { i64, i64 }* %self, { i64, i64 }** %3, align 8
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %5 = bitcast i64** %4 to { i64, i64 }**
  store { i64, i64 }* %other, { i64, i64 }** %5, align 8
  %6 = bitcast { i64*, i64* }* %_13 to { i64, i64 }**
  %7 = load { i64, i64 }*, { i64, i64 }** %6, align 8, !nonnull !3
  %8 = bitcast { i64, i64 }* %7 to i64*
  %_17 = load i64, i64* %8, align 8, !range !2
  %9 = icmp eq i64 %_17, 1
  br i1 %9, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %11 = bitcast i64** %10 to { i64, i64 }**
  %12 = load { i64, i64 }*, { i64, i64 }** %11, align 8, !nonnull !3
  %13 = bitcast { i64, i64 }* %12 to i64*
  %_16 = load i64, i64* %13, align 8, !range !2
  %14 = icmp eq i64 %_16, 1
  br i1 %14, label %bb4, label %bb2

bb2:                                              ; preds = %bb3, %bb1
  store i8 1, i8* %0, align 1
  br label %bb6

bb4:                                              ; preds = %bb3
  %15 = bitcast { i64*, i64* }* %_13 to { i64, i64 }**
  %16 = load { i64, i64 }*, { i64, i64 }** %15, align 8, !nonnull !3
  %17 = bitcast { i64, i64 }* %16 to %"core::option::Option<usize>::Some"*
  %__self_0 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %17, i32 0, i32 1
  %18 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_13, i32 0, i32 1
  %19 = bitcast i64** %18 to { i64, i64 }**
  %20 = load { i64, i64 }*, { i64, i64 }** %19, align 8, !nonnull !3
  %21 = bitcast { i64, i64 }* %20 to %"core::option::Option<usize>::Some"*
  %__arg_1_0 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %21, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialEq for usize>::eq
  %22 = call zeroext i1 @"_ZN4core3cmp5impls56_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$usize$GT$2eq17h3f3d289d4f283874E"(i64* align 8 dereferenceable(8) %__self_0, i64* align 8 dereferenceable(8) %__arg_1_0)
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %0, align 1
  br label %bb5

bb6:                                              ; preds = %bb5, %bb2
  br label %bb8

bb5:                                              ; preds = %bb4
  br label %bb6

bb8:                                              ; preds = %bb7, %bb6
  %24 = load i8, i8* %0, align 1, !range !4
  %25 = trunc i8 %24 to i1
  ret i1 %25
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17had617edb52580b0bE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h96e1c2ce3c71371aE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1
  %_4 = load i64, i64* %0, align 8
; call core::slice::raw::from_raw_parts
  %1 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17habd447da4082a8f9E(i8* %_2, i64 %_4)
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1
  ret { [0 x i8]*, i64 } %5
}

; <core::cell::RefMut<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN74_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17ha751c9b0693fc3b0E"({ i32*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i32*, i64* }* %self to i32**
  %_2 = load i32*, i32** %0, align 8, !nonnull !3
  ret i32* %_2
}

; <core::cell::RefMut<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN74_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hab6f0bd264b10e77E"({ i64*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i64* }* %self to %"alloc::string::String"**
  %_2 = load %"alloc::string::String"*, %"alloc::string::String"** %0, align 8, !nonnull !3
  ret %"alloc::string::String"* %_2
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd7a9131bd0df5653E"(i8* align 1 dereferenceable_or_null(1) %0) unnamed_addr #0 {
start:
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %5 = bitcast i8** %1 to {}**
  store {}* null, {}** %5, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !3
  store i8* %v, i8** %1, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i8*, i8** %1, align 8
  ret i8* %6
}

; <alloc::string::String as core::convert::From<&str>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h8dc4eeaed8bf4332E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17ha8c6281c923862d3E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h39f93223cb57838cE"(i64** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc587 to [0 x i8]*), i64 11)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_4 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h85261de5cae6d1d7E"({ i64*, i8 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc587 to [0 x i8]*), i64 11)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_4 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hbd0989bc47ff2b9aE"({ i64*, i8 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc587 to [0 x i8]*), i64 11)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_4 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hca53bef3b42bfa6bE"({ i64*, i8 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc587 to [0 x i8]*), i64 11)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_4 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hdab25b09e2acb206E"({ i64*, i8 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc587 to [0 x i8]*), i64 11)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_4 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN76_$LT$std..sync..poison..PoisonError$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hf86fd2058421a8f1E"({ i64*, i8 }* align 8 dereferenceable(16) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %0 = alloca i128, align 8
  %_4 = alloca %"core::fmt::builders::DebugStruct", align 8
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc587 to [0 x i8]*), i64 11)
  store i128 %1, i128* %0, align 8
  %2 = bitcast %"core::fmt::builders::DebugStruct"* %_4 to i8*
  %3 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; call core::fmt::builders::DebugStruct::finish_non_exhaustive
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %4
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h68315a8a9dde9455E"({ i32*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h3677051e4ed6c4deE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_2, { i32*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !3
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !16
  %_7 = bitcast { i32*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 %_7, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8b9444435332016cE"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hb27c505e97ec2351E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_2, { i8*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !3
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !16
  %_7 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 %_7, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he265eab8ca477497E"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9dfd5c1dcabf9f9eE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* noalias nocapture sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") dereferenceable(24) %_2, { i64*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %0 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**
  %ptr = load i8*, i8** %6, align 8, !nonnull !3
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  %layout.0 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  %layout.1 = load i64, i64* %11, align 8, !range !16
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h8ee24cb526228d3dE"(%"alloc::alloc::Global"* nonnull align 1 %_7, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  br label %bb4
}

; <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17hb24392e5b3d846d4E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_2 = alloca i64*, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = bitcast i64** %_2 to { i64, i64 }**
  store { i64, i64 }* %self, { i64, i64 }** %1, align 8
  %2 = bitcast i64** %_2 to { i64, i64 }**
  %3 = load { i64, i64 }*, { i64, i64 }** %2, align 8, !nonnull !3
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %_4 = select i1 %6, i64 0, i64 1
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %7, align 8
  br label %bb6

bb1:                                              ; preds = %start
  %8 = bitcast i64** %_2 to { i64, i64 }**
  %__self_0 = load { i64, i64 }*, { i64, i64 }** %8, align 8, !nonnull !3
  %9 = bitcast i64** %_2 to { i64, i64 }**
  %10 = load { i64, i64 }*, { i64, i64 }** %9, align 8, !nonnull !3
  %__self_1 = bitcast { i64, i64 }* %10 to {}*
; call <core::alloc::layout::Layout as core::clone::Clone>::clone
  %11 = call { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h1eb298a56ab3d362E"({ i64, i64 }* align 8 dereferenceable(16) %__self_0)
  %_7.0 = extractvalue { i64, i64 } %11, 0
  %_7.1 = extractvalue { i64, i64 } %11, 1
  br label %bb4

bb4:                                              ; preds = %bb1
; call core::clone::Clone::clone
  call void @_ZN4core5clone5Clone5clone17ha85f8b9815b09bffE({}* nonnull align 1 %__self_1)
  br label %bb5

bb5:                                              ; preds = %bb4
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %_7.0, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %_7.1, i64* %13, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb5
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1
  ret { i64, i64 } %19
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h66d54ec3814428e7E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>") dereferenceable(24) %0, %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0
  %v.0 = load i8*, i8** %4, align 8, !nonnull !3
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %v.1 = load i64, i64* %5, align 8
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %7, i32 0, i32 0
  store i8* %v.0, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %7, i32 0, i32 1
  store i64 %v.1, i64* %9, align 8
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  %e.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  %e.1 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %16, align 8
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %0 to i64*
  store i64 1, i64* %25, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h78ed606ce026490cE"(i8* %0, i64 %1) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_2 = select i1 %7, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  %v.0 = load i8*, i8** %8, align 8, !nonnull !3
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %v.1 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %v.0, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %v.1, i64* %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %12 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %_6 to %"core::alloc::AllocError"*
  %13 = bitcast { i8*, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>::Break"*
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %13 to %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"*
  %15 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %15, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1
  ret { i8*, i64 } %21
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8a93c96a715b9b36E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %self to %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"*
  %7 = getelementptr inbounds %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok", %"core::result::Result<usize, core::alloc::layout::LayoutError>::Ok"* %6, i32 0, i32 1
  %v = load i64, i64* %7, align 8
  %8 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"*
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Continue"* %8, i32 0, i32 1
  store i64 %v, i64* %9, align 8
  %10 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %_6 to %"core::alloc::layout::LayoutError"*
  %12 = bitcast { i64, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break"*
  %13 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>::Break"* %12, i32 0, i32 1
  %14 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %14, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !range !2
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1
  ret { i64, i64 } %20
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8c46d8a95fce7508E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %0, %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1
  %v = load i64, i64* %3, align 8
  %4 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*
  %5 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %4, i32 0, i32 1
  store i64 %v, i64* %5, align 8
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to i64*
  store i64 0, i64* %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*
  %8 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %7, i32 0, i32 1
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0
  %e.0 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1
  %e.1 = load i64, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %12, align 8
  %13 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*
  %14 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %13, i32 0, i32 1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0
  store i64 %16, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %0 to i64*
  store i64 1, i64* %21, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(32) i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9a5764eecfd95febE"(i64* align 8 dereferenceable_or_null(32) %0) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err", align 1
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i64** %self to %"core::cell::RefCell<alloc::string::String>"**
  %v = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %5, align 8, !nonnull !3
  %6 = bitcast i64** %1 to %"core::cell::RefCell<alloc::string::String>"**
  store %"core::cell::RefCell<alloc::string::String>"* %v, %"core::cell::RefCell<alloc::string::String>"** %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"* %_6 to %"std::thread::local::AccessError"*
  %8 = bitcast i64** %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::RefCell<alloc::string::String>>::Break"*
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::RefCell<alloc::string::String>>::Break"* %8 to %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"*
  %10 = bitcast i64** %1 to {}**
  store {}* null, {}** %10, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %11 = load i64*, i64** %1, align 8
  ret i64* %11
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc91bb7b060e2f4a6E"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>") dereferenceable(24) %0, %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %v.0 = load i64, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %v.1 = load i64, i64* %5, align 8, !range !16
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*
  %7 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %6, i32 0, i32 1
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0
  store i64 %v.0, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1
  store i64 %v.1, i64* %9, align 8
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to i64*
  store i64 0, i64* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  %e.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  %e.1 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %16, align 8
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*
  %18 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %0 to i64*
  store i64 1, i64* %25, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 dereferenceable_or_null(16) i64* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd88ec5e60864a008E"(i64* align 8 dereferenceable_or_null(16) %0) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err", align 1
  %1 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  %2 = bitcast i64** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %5 = bitcast i64** %self to { i64, i32 }**
  %v = load { i64, i32 }*, { i64, i32 }** %5, align 8, !nonnull !3
  %6 = bitcast i64** %1 to { i64, i32 }**
  store { i64, i32 }* %v, { i64, i32 }** %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"* %_6 to %"std::thread::local::AccessError"*
  %8 = bitcast i64** %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::RefCell<i32>>::Break"*
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::local::AccessError>, &core::cell::RefCell<i32>>::Break"* %8 to %"core::result::Result<core::convert::Infallible, std::thread::local::AccessError>::Err"*
  %10 = bitcast i64** %1 to {}**
  store {}* null, {}** %10, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %11 = load i64*, i64** %1, align 8
  ret i64* %11
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hdb90411bd3f54d2eE"(i8* %0) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  %2 = bitcast i8** %self to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp eq {}* %3, null
  %_2 = select i1 %4, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !nonnull !3
  store i8* %v, i8** %1, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %_6 to %"core::alloc::AllocError"*
  %6 = bitcast i8** %1 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break"*
  %7 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>::Break"* %6 to %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"*
  %8 = bitcast i8** %1 to {}**
  store {}* null, {}** %8, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8*, i8** %1, align 8
  ret i8* %9
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hed40e7e5b0f97e5eE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>") dereferenceable(24) %0, %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %_4 = alloca { { i64, i64 }, i64 }, align 8
  %v = alloca { { i64, i64 }, i64 }, align 8
  %1 = getelementptr inbounds %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* %self, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  %3 = icmp eq i64 %2, 0
  %_2 = select i1 %3, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>"* %self to %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Ok"*
  %5 = bitcast %"core::result::Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>::Ok"* %4 to { { i64, i64 }, i64 }*
  %6 = bitcast { { i64, i64 }, i64 }* %v to i8*
  %7 = bitcast { { i64, i64 }, i64 }* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  %8 = bitcast { { i64, i64 }, i64 }* %_4 to i8*
  %9 = bitcast { { i64, i64 }, i64 }* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"*
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Continue"* %10 to { { i64, i64 }, i64 }*
  %12 = bitcast { { i64, i64 }, i64 }* %11 to i8*
  %13 = bitcast { { i64, i64 }, i64 }* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  br label %bb4

bb1:                                              ; preds = %start
  %14 = bitcast %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %_6 to %"core::alloc::layout::LayoutError"*
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Break"*
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>::Break"* %15 to %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"*
  %17 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>"* %0, i32 0, i32 1
  store i64 0, i64* %17, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17heedf7ef38f3d2d3cE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* noalias nocapture sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>") dereferenceable(24) %0, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %_6 = alloca { i64, i64 }, align 8
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !2
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %2 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue"*
  %3 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Continue"* %2, i32 0, i32 1
  %4 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to i64*
  store i64 0, i64* %4, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %5, i32 0, i32 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0
  %e.0 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1
  %e.1 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  store i64 %e.0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  store i64 %e.1, i64* %10, align 8
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"*
  %12 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>::Break"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>"* %0 to i64*
  store i64 1, i64* %19, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2252461a279c8179E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"**
  %1 = load %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %1, i32 0, i32 1
  %_5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %self, i32 0, i32 1
; call std::sync::poison::Flag::done
  call void @_ZN3std4sync6poison4Flag4done17h390590567c805f85E(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3, i8* align 1 dereferenceable(1) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"**
  %3 = load %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %2, align 8, !nonnull !3
  %_7 = bitcast %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %3 to i64**
; call std::sys_common::mutex::MovableMutex::raw_unlock
  call void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17h5f94e28bdda7112aE(i64** align 8 dereferenceable(8) %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h309304adc51e7f55E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<std::fs::File>"**
  %1 = load %"std::sync::mutex::Mutex<std::fs::File>"*, %"std::sync::mutex::Mutex<std::fs::File>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %1, i32 0, i32 1
  %_5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %self, i32 0, i32 1
; call std::sync::poison::Flag::done
  call void @_ZN3std4sync6poison4Flag4done17h390590567c805f85E(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3, i8* align 1 dereferenceable(1) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<std::fs::File>"**
  %3 = load %"std::sync::mutex::Mutex<std::fs::File>"*, %"std::sync::mutex::Mutex<std::fs::File>"** %2, align 8, !nonnull !3
  %_7 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %3 to i64**
; call std::sys_common::mutex::MovableMutex::raw_unlock
  call void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17h5f94e28bdda7112aE(i64** align 8 dereferenceable(8) %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h645a6d29d72703c9E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<()>"**
  %1 = load %"std::sync::mutex::Mutex<()>"*, %"std::sync::mutex::Mutex<()>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<()>", %"std::sync::mutex::Mutex<()>"* %1, i32 0, i32 1
  %_5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %self, i32 0, i32 1
; call std::sync::poison::Flag::done
  call void @_ZN3std4sync6poison4Flag4done17h390590567c805f85E(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3, i8* align 1 dereferenceable(1) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<()>"**
  %3 = load %"std::sync::mutex::Mutex<()>"*, %"std::sync::mutex::Mutex<()>"** %2, align 8, !nonnull !3
  %_7 = bitcast %"std::sync::mutex::Mutex<()>"* %3 to i64**
; call std::sys_common::mutex::MovableMutex::raw_unlock
  call void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17h5f94e28bdda7112aE(i64** align 8 dereferenceable(8) %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <std::sync::mutex::MutexGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6caafeeba4da876eE"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<i32>"**
  %1 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %1, i32 0, i32 1
  %_5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %self, i32 0, i32 1
; call std::sync::poison::Flag::done
  call void @_ZN3std4sync6poison4Flag4done17h390590567c805f85E(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3, i8* align 1 dereferenceable(1) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<i32>"**
  %3 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %2, align 8, !nonnull !3
  %_7 = bitcast %"std::sync::mutex::Mutex<i32>"* %3 to i64**
; call std::sys_common::mutex::MovableMutex::raw_unlock
  call void @_ZN3std10sys_common5mutex12MovableMutex10raw_unlock17h5f94e28bdda7112aE(i64** align 8 dereferenceable(8) %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hcb811b3ebb30a9ceE"(%"std::io::Write::write_fmt::Adapter<std::fs::File>"* align 8 dereferenceable(24) %self, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %2 = alloca i128, align 8
  %_11 = alloca %"std::io::error::Error", align 8
  %_10 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %e = alloca %"std::io::error::Error", align 8
  %_3 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %3 = alloca i8, align 1
  %4 = bitcast %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %self to i32**
  %_4 = load i32*, i32** %4, align 8, !nonnull !3
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %s.1, i64* %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %8 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !3
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1
  %_6.0 = extractvalue { [0 x i8]*, i64 } %12, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %12, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::io::Write::write_all
  %13 = call i128 @_ZN3std2io5Write9write_all17hb9fa382607ad4181E(i32* align 4 dereferenceable(4) %_4, [0 x i8]* nonnull align 1 %_6.0, i64 %_6.1)
  store i128 %13, i128* %2, align 8
  %14 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_3 to i8*
  %15 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
  %16 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_3 to i8*
  %17 = load i8, i8* %16, align 8, !range !7
  %18 = sub i8 %17, 4
  %19 = icmp eq i8 %18, 0
  %_8 = select i1 %19, i64 0, i64 1
  switch i64 %_8, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  store i8 0, i8* %3, align 1
  br label %bb8

bb3:                                              ; preds = %bb2
  %20 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_3 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %21 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %20 to %"std::io::error::Error"*
  %22 = bitcast %"std::io::error::Error"* %e to i8*
  %23 = bitcast %"std::io::error::Error"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = bitcast %"std::io::error::Error"* %_11 to i8*
  %25 = bitcast %"std::io::error::Error"* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 16, i1 false)
  %26 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_10 to %"core::result::Result<(), std::io::error::Error>::Err"*
  %27 = bitcast %"core::result::Result<(), std::io::error::Error>::Err"* %26 to %"std::io::error::Error"*
  %28 = bitcast %"std::io::error::Error"* %27 to i8*
  %29 = bitcast %"std::io::error::Error"* %_11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false)
  %30 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %self, i32 0, i32 1
; invoke core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  invoke void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17ha3b6bcf921980c34E"(%"core::result::Result<(), std::io::error::Error>"* %30)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb3
  %31 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %self, i32 0, i32 1
  %32 = bitcast %"core::result::Result<(), std::io::error::Error>"* %31 to i8*
  %33 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false)
  store i8 1, i8* %3, align 1
  br label %bb8

bb6:                                              ; preds = %cleanup
  %34 = getelementptr inbounds %"std::io::Write::write_fmt::Adapter<std::fs::File>", %"std::io::Write::write_fmt::Adapter<std::fs::File>"* %self, i32 0, i32 1
  %35 = bitcast %"core::result::Result<(), std::io::error::Error>"* %34 to i8*
  %36 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false)
  %37 = bitcast { i8*, i32 }* %1 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1
  resume { i8*, i32 } %42

cleanup:                                          ; preds = %bb3
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  %45 = extractvalue { i8*, i32 } %43, 1
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %45, i32* %47, align 8
  br label %bb6

bb8:                                              ; preds = %bb5, %bb7
  %48 = load i8, i8* %3, align 1, !range !4
  %49 = trunc i8 %48 to i1
  ret i1 %49
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hef6788ab88bf1f93E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
; call core::str::validations::next_code_point
  %0 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17h7188f8891517b481E({ i8*, i8* }* align 8 dereferenceable(16) %self)
  %_2.0 = extractvalue { i32, i32 } %0, 0
  %_2.1 = extractvalue { i32, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::option::Option<T>::map
  %1 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h37d95adf488148c2E"(i32 %_2.0, i32 %_2.1), !range !68
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %1
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h5a4f0a447f18845dE"(i32 %ch) unnamed_addr #0 {
start:
; call core::char::convert::from_u32_unchecked
  %0 = call i32 @_ZN4core4char7convert18from_u32_unchecked17h6666b1f5df8b7220E(i32 %ch), !range !66
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2e3687f320e8085dE"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<i32>"**
  %1 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %1, i32 0, i32 3
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_3
}

; <&mut I as core::iter::traits::exact_size::ExactSizeIterator>::len
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN83_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h37080ad508f27bdbE"(%"alloc::vec::into_iter::IntoIter<&str>"** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_2 = load %"alloc::vec::into_iter::IntoIter<&str>"*, %"alloc::vec::into_iter::IntoIter<&str>"** %self, align 8, !nonnull !3
; call core::iter::traits::exact_size::ExactSizeIterator::len
  %0 = call i64 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17hef99d653d470e83dE(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h14b6eb1a46dd9affE"() unnamed_addr #0 {
start:
  %0 = alloca { i32, i32 }, align 4
  %1 = bitcast { i32, i32 }* %0 to i32*
  store i32 0, i32* %1, align 4
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4, !range !59
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = insertvalue { i32, i32 } undef, i32 %3, 0
  %7 = insertvalue { i32, i32 } %6, i32 %5, 1
  ret { i32, i32 } %7
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h224ccdc44478203dE"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<std::fs::File>"**
  %1 = load %"std::sync::mutex::Mutex<std::fs::File>"*, %"std::sync::mutex::Mutex<std::fs::File>"** %0, align 8, !nonnull !3
  %_6 = getelementptr inbounds %"std::sync::mutex::Mutex<std::fs::File>", %"std::sync::mutex::Mutex<std::fs::File>"* %1, i32 0, i32 3
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_6
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6350f2c4242cfd9fE"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<i32>"**
  %1 = load %"std::sync::mutex::Mutex<i32>"*, %"std::sync::mutex::Mutex<i32>"** %0, align 8, !nonnull !3
  %_6 = getelementptr inbounds %"std::sync::mutex::Mutex<i32>", %"std::sync::mutex::Mutex<i32>"* %1, i32 0, i32 3
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_6
}

; <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define align 8 dereferenceable(32) %"alloc::collections::vec_deque::VecDeque<i32>"* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hca6f00114a8d838eE"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"**
  %1 = load %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"** %0, align 8, !nonnull !3
  %_6 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %1, i32 0, i32 3
  %_2.i = bitcast %"core::cell::UnsafeCell<alloc::collections::vec_deque::VecDeque<i32>>"* %_6 to %"alloc::collections::vec_deque::VecDeque<i32>"*
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::collections::vec_deque::VecDeque<i32>"* %_2.i
}

; <std::sync::rwlock::RwLockReadGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN85_$LT$std..sync..rwlock..RwLockReadGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc5b32094cb6cd609E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = bitcast i64** %self to %"std::sync::rwlock::RwLock<i32>"**
  %1 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %0, align 8, !nonnull !3
  %_3 = bitcast %"std::sync::rwlock::RwLock<i32>"* %1 to i64**
; call std::sys_common::rwlock::MovableRWLock::read_unlock
  call void @_ZN3std10sys_common6rwlock13MovableRWLock11read_unlock17hfd30b6a702dda1e3E(i64** align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN86_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hac10e419b93bbb6fE"(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %guard = alloca i64*, align 8
  %1 = bitcast i64** %guard to %"alloc::vec::into_iter::IntoIter<&str>"**
  store %"alloc::vec::into_iter::IntoIter<&str>"* %self, %"alloc::vec::into_iter::IntoIter<&str>"** %1, align 8
  %2 = bitcast i64** %guard to %"alloc::vec::into_iter::IntoIter<&str>"**
  %_6 = load %"alloc::vec::into_iter::IntoIter<&str>"*, %"alloc::vec::into_iter::IntoIter<&str>"** %2, align 8, !nonnull !3
; invoke alloc::vec::into_iter::IntoIter<T,A>::as_raw_mut_slice
  %3 = invoke { [0 x { [0 x i8]*, i64 }]*, i64 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$16as_raw_mut_slice17he820751bc6e90de4E"(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %_6)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %3, 0
  %_5.1 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %3, 1
  br label %bb2

bb4:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<&str,alloc::alloc::Global>>
  call void @"_ZN4core3ptr161drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$$RF$str$C$alloc..alloc..Global$GT$$GT$17h60d180ff612b993eE"(i64** %guard) #19
  br label %bb5

cleanup:                                          ; preds = %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<&str,alloc::alloc::Global>>
  call void @"_ZN4core3ptr161drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$$RF$str$C$alloc..alloc..Global$GT$$GT$17h60d180ff612b993eE"(i64** %guard)
  br label %bb3

bb5:                                              ; preds = %bb4
  %9 = bitcast { i8*, i32 }* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb3:                                              ; preds = %bb2
  ret void
}

; <std::sync::rwlock::RwLockWriteGuard<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN86_$LT$std..sync..rwlock..RwLockWriteGuard$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hd31fdb25b5bba9a5E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::rwlock::RwLock<i32>"**
  %1 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::rwlock::RwLock<i32>", %"std::sync::rwlock::RwLock<i32>"* %1, i32 0, i32 1
  %_5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %self, i32 0, i32 1
; call std::sync::poison::Flag::done
  call void @_ZN3std4sync6poison4Flag4done17h390590567c805f85E(%"std::sync::poison::Flag"* align 1 dereferenceable(1) %_3, i8* align 1 dereferenceable(1) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64*, i8 }* %self to %"std::sync::rwlock::RwLock<i32>"**
  %3 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %2, align 8, !nonnull !3
  %_7 = bitcast %"std::sync::rwlock::RwLock<i32>"* %3 to i64**
; call std::sys_common::rwlock::MovableRWLock::write_unlock
  call void @_ZN3std10sys_common6rwlock13MovableRWLock12write_unlock17h852df36d603159b1E(i64** align 8 dereferenceable(8) %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha6256fe8a412e17fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %_14 = alloca { i64, i32 }, align 8
  %_4 = alloca i32, align 4
  %4 = alloca { i64, i32 }, align 8
  %_3 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1
  %5 = bitcast { i8*, i8* }* %_3 to i8**
  %start1.i = load i8*, i8** %5, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %start1.i)
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_3, i32 0, i32 1
  %_15.i = load i8*, i8** %6, align 8
  %_14.i = ptrtoint i8* %_15.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %start1.i)
  %_16.i = ptrtoint i8* %_17.i to i64
  %7 = sub nuw i64 %_14.i, %_16.i
  store i64 %7, i64* %2, align 8
  %diff.i = load i64, i64* %2, align 8
  store i64 %diff.i, i64* %3, align 8
  %8 = load i64, i64* %3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_5 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %9 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hef6788ab88bf1f93E"({ i8*, i8* }* align 8 dereferenceable(16) %_5), !range !68
  store i32 %9, i32* %_4, align 4
  br label %bb2

bb2:                                              ; preds = %bb1
  %10 = load i32, i32* %_4, align 4, !range !68
  %11 = sub i32 %10, 1114112
  %12 = icmp eq i32 %11, 0
  %_6 = select i1 %12, i64 0, i64 1
  switch i64 %_6, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ]

bb4:                                              ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  store i32 1114112, i32* %13, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
  %ch = load i32, i32* %_4, align 4, !range !66
  %14 = bitcast %"core::str::iter::CharIndices"* %self to i64*
  %index = load i64, i64* %14, align 8
  %_10 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1
  %15 = bitcast { i8*, i8* }* %_10 to i8**
  %start1.i1 = load i8*, i8** %15, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %start1.i1)
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_10, i32 0, i32 1
  %_15.i3 = load i8*, i8** %16, align 8
  %_14.i4 = ptrtoint i8* %_15.i3 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i5 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %start1.i1)
  %_16.i6 = ptrtoint i8* %_17.i5 to i64
  %17 = sub nuw i64 %_14.i4, %_16.i6
  store i64 %17, i64* %0, align 8
  %diff.i7 = load i64, i64* %0, align 8
  store i64 %diff.i7, i64* %1, align 8
  %18 = load i64, i64* %1, align 8
  br label %bb6

bb6:                                              ; preds = %bb3
  %_11 = sub i64 %8, %18
  %19 = bitcast %"core::str::iter::CharIndices"* %self to i64*
  %20 = bitcast %"core::str::iter::CharIndices"* %self to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %_11
  store i64 %22, i64* %19, align 8
  %23 = bitcast { i64, i32 }* %_14 to i64*
  store i64 %index, i64* %23, align 8
  %24 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 1
  store i32 %ch, i32* %24, align 8
  %25 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 1
  %28 = load i32, i32* %27, align 8, !range !66
  %29 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 0
  store i64 %26, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  store i32 %28, i32* %30, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  %31 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %4, i32 0, i32 1
  %34 = load i32, i32* %33, align 8, !range !68
  %35 = insertvalue { i64, i32 } undef, i64 %32, 0
  %36 = insertvalue { i64, i32 } %35, i32 %34, 1
  ret { i64, i32 } %36
}

; <std::sync::rwlock::RwLockReadGuard<T> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN87_$LT$std..sync..rwlock..RwLockReadGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7ce130a7ac1e5f04E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %0 = bitcast i64** %self to %"std::sync::rwlock::RwLock<i32>"**
  %1 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %0, align 8, !nonnull !3
  %_3 = getelementptr inbounds %"std::sync::rwlock::RwLock<i32>", %"std::sync::rwlock::RwLock<i32>"* %1, i32 0, i32 3
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_3
}

; <alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN90_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h60a12fe74026f9ecE"(%"alloc::vec::into_iter::IntoIter<&str>"* noalias nocapture sret(%"alloc::vec::into_iter::IntoIter<&str>") dereferenceable(32) %0, %"alloc::vec::Vec<&str>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { [0 x i8]*, i64 }*, align 8
  %2 = alloca i64, align 8
  %_2.i = alloca %"alloc::vec::Vec<&str>", align 8
  %3 = alloca i8*, align 8
  %4 = alloca { i8*, i32 }, align 8
  %end = alloca { [0 x i8]*, i64 }*, align 8
  %_3 = alloca %"alloc::vec::Vec<&str>", align 8
  %me = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>", align 8
  %5 = bitcast %"alloc::vec::Vec<&str>"* %_3 to i8*
  %6 = bitcast %"alloc::vec::Vec<&str>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  call void @llvm.experimental.noalias.scope.decl(metadata !81)
  call void @llvm.experimental.noalias.scope.decl(metadata !84)
  %7 = bitcast %"alloc::vec::Vec<&str>"* %_2.i to i8*
  %8 = bitcast %"alloc::vec::Vec<&str>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !noalias !81
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>"* %me to %"alloc::vec::Vec<&str>"*
  %10 = bitcast %"alloc::vec::Vec<&str>"* %9 to i8*
  %11 = bitcast %"alloc::vec::Vec<&str>"* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !noalias !84
  br label %bb1

bb1:                                              ; preds = %start
  %12 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>"* %me to %"alloc::vec::Vec<&str>"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::vec::Vec<T,A>::allocator
  %_6 = call nonnull align 1 %"alloc::alloc::Global"* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17hde123daed178d1c9E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %12)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::ptr::read
  call void @_ZN4core3ptr4read17h964699b2b6f1dea9E(%"alloc::alloc::Global"* %_6)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_3.i = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>"* %me to %"alloc::vec::Vec<&str>"*
  br label %bb5

bb5:                                              ; preds = %bb4
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %begin = invoke { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h56a927d1ddf002baE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %_3.i)
          to label %bb6 unwind label %cleanup

bb20:                                             ; preds = %cleanup
  br label %bb21

cleanup:                                          ; preds = %bb18, %bb9, %bb13, %bb5
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb20

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb6
  %18 = icmp eq i64 16, 0
  br i1 %18, label %bb8, label %bb12

bb8:                                              ; preds = %bb7
  %_17 = bitcast { [0 x i8]*, i64 }* %begin to i8*
  %19 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>"* %me to %"alloc::vec::Vec<&str>"*
  br label %bb9

bb12:                                             ; preds = %bb7
  %20 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>"* %me to %"alloc::vec::Vec<&str>"*
  br label %bb13

bb13:                                             ; preds = %bb12
; invoke alloc::vec::Vec<T,A>::len
  %_26 = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hbf8f2423c405ca7eE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %20)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %begin, i64 %_26
  store { [0 x i8]*, i64 }* %21, { [0 x i8]*, i64 }** %1, align 8
  %_3.i.i = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %1, align 8
  br label %bb15

bb15:                                             ; preds = %bb14
  store { [0 x i8]*, i64 }* %_3.i.i, { [0 x i8]*, i64 }** %end, align 8
  br label %bb16

bb16:                                             ; preds = %bb11, %bb15
  %22 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>"* %me to %"alloc::vec::Vec<&str>"*
  br label %bb17

bb9:                                              ; preds = %bb8
; invoke alloc::vec::Vec<T,A>::len
  %_20 = invoke i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hbf8f2423c405ca7eE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %19)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %23 = getelementptr i8, i8* %_17, i64 %_20
  store i8* %23, i8** %3, align 8
  %_16 = load i8*, i8** %3, align 8
  br label %bb11

bb11:                                             ; preds = %bb10
  %24 = bitcast i8* %_16 to { [0 x i8]*, i64 }*
  store { [0 x i8]*, i64 }* %24, { [0 x i8]*, i64 }** %end, align 8
  br label %bb16

bb17:                                             ; preds = %bb16
  %_31 = bitcast %"alloc::vec::Vec<&str>"* %22 to { i64*, i64 }*
  %25 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_31, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %2, align 8
  %27 = load i64, i64* %2, align 8
  br label %bb18

bb18:                                             ; preds = %bb17
; invoke core::ptr::non_null::NonNull<T>::new_unchecked
  %_34 = invoke nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hef9352d5479952efE"({ [0 x i8]*, i64 }* %begin)
          to label %bb19 unwind label %cleanup

bb19:                                             ; preds = %bb18
  %_40 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %end, align 8
  %28 = bitcast %"alloc::vec::into_iter::IntoIter<&str>"* %0 to i64**
  store i64* %_34, i64** %28, align 8
  %29 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %0, i32 0, i32 3
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"alloc::vec::into_iter::IntoIter<&str>"* %0 to %"alloc::alloc::Global"*
  %31 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %0, i32 0, i32 4
  store { [0 x i8]*, i64 }* %begin, { [0 x i8]*, i64 }** %31, align 8
  %32 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", %"alloc::vec::into_iter::IntoIter<&str>"* %0, i32 0, i32 5
  store { [0 x i8]*, i64 }* %_40, { [0 x i8]*, i64 }** %32, align 8
  ret void

bb21:                                             ; preds = %bb20
  %33 = bitcast { i8*, i32 }* %4 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1
  resume { i8*, i32 } %38
}

; <core::str::IsWhitespace as core::ops::function::Fn<(char,)>>::call
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN90_$LT$core..str..IsWhitespace$u20$as$u20$core..ops..function..Fn$LT$$LP$char$C$$RP$$GT$$GT$4call17he17fa2fe986fdd22E"(%"core::str::IsWhitespace"* nonnull align 1 %self, i32 %0) unnamed_addr #0 {
start:
  %_2 = alloca i32, align 4
  store i32 %0, i32* %_2, align 4
  %c = load i32, i32* %_2, align 4, !range !66
; call core::char::methods::<impl char>::is_whitespace
  %1 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17h98bec6c7e191daeaE"(i32 %c)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %1
}

; <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h46007f0e582a04e0E"(%"core::str::iter::Split<core::str::IsWhitespace>"* align 8 dereferenceable(64) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"core::str::iter::Split<core::str::IsWhitespace>"* %self to %"core::str::iter::SplitInternal<core::str::IsWhitespace>"*
; call core::str::iter::SplitInternal<P>::next
  %0 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h877de53c5fb79cedE"(%"core::str::iter::SplitInternal<core::str::IsWhitespace>"* align 8 dereferenceable(64) %_2)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8395a01dd4a06a5eE"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = bitcast { i8*, i8* }* %self to i8**
  %_6 = load i8*, i8** %3, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1362abababb2d267E"(i8* %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true
  call void @llvm.assume(i1 %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 1, 0
  br i1 %4, label %bb8, label %bb5

bb8:                                              ; preds = %bb4
  br label %bb9

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_11 = load i8*, i8** %5, align 8
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h24cd8ac15c16344cE"(i8* %_11)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true
  call void @llvm.assume(i1 %_9)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %6 = bitcast { i8*, i8* }* %self to i8**
  %_15 = load i8*, i8** %6, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %_15)
  br label %bb10

bb10:                                             ; preds = %bb9
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_16 = load i8*, i8** %7, align 8
  %_12 = icmp eq i8* %_14, %_16
  br i1 %_12, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  %8 = bitcast { i8*, i8* }* %self to i8**
  %_12.i = load i8*, i8** %8, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %_12.i)
  %9 = bitcast { i8*, i8* }* %self to i8**
  %_16.i = load i8*, i8** %9, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %_16.i)
  %10 = getelementptr inbounds i8, i8* %_15.i, i64 1
  store i8* %10, i8** %0, align 8
  %_3.i.i = load i8*, i8** %0, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf8d7b6265503ad0eE"(i8* %_3.i.i)
  %11 = bitcast { i8*, i8* }* %self to i8**
  store i8* %_13.i, i8** %11, align 8
  store i8* %old.i, i8** %1, align 8
  %12 = load i8*, i8** %1, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %13 = bitcast i8** %2 to {}**
  store {}* null, {}** %13, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  %14 = load i8*, i8** %2, align 8
  ret i8* %14

bb13:                                             ; preds = %bb12
  store i8* %12, i8** %2, align 8
  br label %bb14
}

; <core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN91_$LT$core..str..iter..SplitWhitespace$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hae7398579b2a0071E"(%"core::str::iter::SplitWhitespace"* align 8 dereferenceable(64) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"core::str::iter::SplitWhitespace"* %self to %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"*
; call <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::next
  %0 = call { i8*, i64 } @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h047d6a2026768a41E"(%"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* align 8 dereferenceable(64) %_2)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; <core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN91_$LT$core..str..iter..SplitWhitespace$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4b880ed25504de35E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* align 8 dereferenceable(64) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"core::str::iter::SplitWhitespace"* %self to %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"*
; call <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h840acd41ec4d9802E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, %"core::iter::adapters::filter::Filter<core::str::iter::Split<core::str::IsWhitespace>, core::str::IsNotEmpty>"* align 8 dereferenceable(64) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::get
; Function Attrs: nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$3get17hce570b05a7708a45E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64 }* %self to {}**
  %1 = load {}*, {}** %0, align 8
  %2 = icmp eq {}* %1, null
  %_6 = select i1 %2, i64 0, i64 1
  switch i64 %_6, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
; call std::process::abort
  call void @_ZN3std7process5abort17h354795bd2c752f7eE() #18
  unreachable

bb3:                                              ; preds = %start
  %a = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %_5.0 = bitcast { [0 x i8]*, i64 }* %a to {}*
  %3 = insertvalue { {}*, [3 x i64]* } undef, {}* %_5.0, 0
  %4 = insertvalue { {}*, [3 x i64]* } %3, [3 x i64]* bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.l to [3 x i64]*), 1
  ret { {}*, [3 x i64]* } %4
}

; <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::take_box
; Function Attrs: nonlazybind uwtable
define { {}*, [3 x i64]* } @"_ZN91_$LT$std..panicking..begin_panic..PanicPayload$LT$A$GT$$u20$as$u20$core..panic..BoxMeUp$GT$8take_box17hef591409de37e9a6E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_4 = alloca { i8*, i64 }, align 8
  %data = alloca { {}*, [3 x i64]* }, align 8
  store i8 0, i8* %_14, align 1
; call core::option::Option<T>::take
  %2 = call { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$4take17h38ede7a002abf785E"({ i8*, i64 }* align 8 dereferenceable(16) %self)
  store { i8*, i64 } %2, { i8*, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast { i8*, i64 }* %_4 to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp eq {}* %4, null
  %_6 = select i1 %5, i64 0, i64 1
  switch i64 %_6, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb3:                                              ; preds = %bb1
  unreachable

bb2:                                              ; preds = %bb1
; call std::process::abort
  call void @_ZN3std7process5abort17h354795bd2c752f7eE() #18
  unreachable

bb4:                                              ; preds = %bb1
  %6 = bitcast { i8*, i64 }* %_4 to { [0 x i8]*, i64 }*
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 0
  %a.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !nonnull !3
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %6, i32 0, i32 1
  %a.1 = load i64, i64* %8, align 8
; invoke alloc::alloc::exchange_malloc
  %_4.i = invoke i8* @_ZN5alloc5alloc15exchange_malloc17hdbe00db7e3d7029eE(i64 16, i64 8)
          to label %"_ZN5alloc5boxed12Box$LT$T$GT$3new17h3dbeb2cab9c318ddE.exit" unwind label %cleanup.i

cleanup.i:                                        ; preds = %bb4
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  %14 = bitcast { i8*, i32 }* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19

"_ZN5alloc5boxed12Box$LT$T$GT$3new17h3dbeb2cab9c318ddE.exit": ; preds = %bb4
  %20 = bitcast i8* %_4.i to { [0 x i8]*, i64 }*
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0
  store [0 x i8]* %a.0, [0 x i8]** %21, align 8
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1
  store i64 %a.1, i64* %22, align 8
  br label %bb5

bb5:                                              ; preds = %"_ZN5alloc5boxed12Box$LT$T$GT$3new17h3dbeb2cab9c318ddE.exit"
  %23 = bitcast { [0 x i8]*, i64 }* %20 to {}*
  %24 = bitcast {}* %23 to i8*
  %_8.0 = bitcast i8* %24 to {}*
  store i8 1, i8* %_14, align 1
  %25 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0
  store {}* %_8.0, {}** %25, align 8
  %26 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1
  store [3 x i64]* bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.l to [3 x i64]*), [3 x i64]** %26, align 8
  store i8 0, i8* %_14, align 1
  %27 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 0
  %_13.0 = load {}*, {}** %27, align 8, !nonnull !3
  %28 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %data, i32 0, i32 1
  %_13.1 = load [3 x i64]*, [3 x i64]** %28, align 8, !nonnull !3
; invoke alloc::boxed::Box<T,A>::into_raw
  %29 = invoke { {}*, [3 x i64]* } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$8into_raw17h71cb1c899f69ff03E"({}* noalias nonnull align 1 %_13.0, [3 x i64]* align 8 dereferenceable(24) %_13.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_11.0 = extractvalue { {}*, [3 x i64]* } %29, 0
  %_11.1 = extractvalue { {}*, [3 x i64]* } %29, 1
  store i8 0, i8* %_14, align 1
  %30 = insertvalue { {}*, [3 x i64]* } undef, {}* %_11.0, 0
  %31 = insertvalue { {}*, [3 x i64]* } %30, [3 x i64]* %_11.1, 1
  ret { {}*, [3 x i64]* } %31

bb7:                                              ; preds = %cleanup
  %32 = load i8, i8* %_14, align 1, !range !4
  %33 = trunc i8 %32 to i1
  br i1 %33, label %bb9, label %bb8

cleanup:                                          ; preds = %bb5
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  %36 = extractvalue { i8*, i32 } %34, 1
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %36, i32* %38, align 8
  br label %bb7

bb8:                                              ; preds = %bb9, %bb7
  %39 = bitcast { i8*, i32 }* %1 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = insertvalue { i8*, i32 } undef, i8* %40, 0
  %44 = insertvalue { i8*, i32 } %43, i32 %42, 1
  resume { i8*, i32 } %44

bb9:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17hf0cfbf2089aa9713E"({ {}*, [3 x i64]* }* %data) #19
  br label %bb8
}

; <std::sync::rwlock::RwLockWriteGuard<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nonlazybind uwtable
define align 4 dereferenceable(4) i32* @"_ZN91_$LT$std..sync..rwlock..RwLockWriteGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h9c2ac03f6e03e5a3E"({ i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i8 }* %self to %"std::sync::rwlock::RwLock<i32>"**
  %1 = load %"std::sync::rwlock::RwLock<i32>"*, %"std::sync::rwlock::RwLock<i32>"** %0, align 8, !nonnull !3
  %_6 = getelementptr inbounds %"std::sync::rwlock::RwLock<i32>", %"std::sync::rwlock::RwLock<i32>"* %1, i32 0, i32 3
  br label %bb1

bb1:                                              ; preds = %start
  ret i32* %_6
}

; <core::str::IsWhitespace as core::ops::function::FnMut<(char,)>>::call_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN93_$LT$core..str..IsWhitespace$u20$as$u20$core..ops..function..FnMut$LT$$LP$char$C$$RP$$GT$$GT$8call_mut17h28cfdc45a1a07662E"(%"core::str::IsWhitespace"* nonnull align 1 %self, i32 %0) unnamed_addr #0 {
start:
  %_6 = alloca i32, align 4
  %_2 = alloca i32, align 4
  store i32 %0, i32* %_2, align 4
  %c = load i32, i32* %_2, align 4, !range !66
  store i32 %c, i32* %_6, align 4
  %1 = load i32, i32* %_6, align 4, !range !66
; call <core::str::IsWhitespace as core::ops::function::Fn<(char,)>>::call
  %2 = call zeroext i1 @"_ZN90_$LT$core..str..IsWhitespace$u20$as$u20$core..ops..function..Fn$LT$$LP$char$C$$RP$$GT$$GT$4call17he17fa2fe986fdd22E"(%"core::str::IsWhitespace"* nonnull align 1 %self, i32 %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; <alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN94_$LT$alloc..collections..vec_deque..VecDeque$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h93b9c87117a2149bE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_back_dropper = alloca { i32*, i64 }, align 8
  %_4 = alloca { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, align 8
; call alloc::collections::vec_deque::VecDeque<T,A>::as_mut_slices
  call void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$13as_mut_slices17h45d4a214c7e4daffE"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %_4, %"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %_4 to { [0 x i32]*, i64 }*
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %1, i32 0, i32 0
  %front.0 = load [0 x i32]*, [0 x i32]** %2, align 8, !nonnull !3
  %3 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %1, i32 0, i32 1
  %front.1 = load i64, i64* %3, align 8
  %4 = getelementptr inbounds { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }, { { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* %_4, i32 0, i32 1
  %5 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %4, i32 0, i32 0
  %back.0 = load [0 x i32]*, [0 x i32]** %5, align 8, !nonnull !3
  %6 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %4, i32 0, i32 1
  %back.1 = load i64, i64* %6, align 8
  %7 = bitcast { i32*, i64 }* %_back_dropper to { [0 x i32]*, i64 }*
  %8 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %7, i32 0, i32 0
  store [0 x i32]* %back.0, [0 x i32]** %8, align 8
  %9 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %7, i32 0, i32 1
  store i64 %back.1, i64* %9, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::Dropper<i32>>
  call void @"_ZN4core3ptr140drop_in_place$LT$$LT$alloc..collections..vec_deque..VecDeque$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..Dropper$LT$i32$GT$$GT$17h5468cc7b8704df52E"({ i32*, i64 }* %_back_dropper)
  br label %bb3

bb4:                                              ; No predecessors!
; call core::ptr::drop_in_place<<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::Dropper<i32>>
  call void @"_ZN4core3ptr140drop_in_place$LT$$LT$alloc..collections..vec_deque..VecDeque$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..Dropper$LT$i32$GT$$GT$17h5468cc7b8704df52E"({ i32*, i64 }* %_back_dropper) #19
  br label %bb5

bb5:                                              ; preds = %bb4
  %10 = bitcast { i8*, i32 }* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17hbd3cd2a57db4b217E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %iter) unnamed_addr #0 {
start:
  %_3 = alloca %"core::str::iter::SplitWhitespace", align 8
  %_2 = alloca %"core::str::iter::SplitWhitespace", align 8
  %1 = bitcast %"core::str::iter::SplitWhitespace"* %_3 to i8*
  %2 = bitcast %"core::str::iter::SplitWhitespace"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 64, i1 false)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0537f764d55780beE"(%"core::str::iter::SplitWhitespace"* noalias nocapture sret(%"core::str::iter::SplitWhitespace") dereferenceable(64) %_2, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
  call void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17hc68a4c474a1f1bc3E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hcc6d83af71f2992eE"() unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to %"core::ops::control_flow::ControlFlow<&str>::Continue"*
  %2 = bitcast %"core::ops::control_flow::ControlFlow<&str>::Continue"* %1 to {}*
  %3 = bitcast { i8*, i64 }* %0 to {}**
  store {}* null, {}** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1
  ret { i8*, i64 } %9
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h264644c1c4319201E"(i8* align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_6 = alloca { i8*, i64 }, align 8
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i8*, i64 }* %self to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp eq {}* %6, null
  %_2 = select i1 %7, i64 0, i64 1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %2 to %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<&str, core::convert::Infallible>>::Continue"*
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<&str, core::convert::Infallible>>::Continue"* %8 to {}*
  %10 = bitcast { i8*, i64 }* %2 to {}**
  store {}* null, {}** %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %11 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0
  %b.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !nonnull !3
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1
  %b.1 = load i64, i64* %13, align 8
  %14 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0
  store [0 x i8]* %b.0, [0 x i8]** %15, align 8
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1
  store i64 %b.1, i64* %16, align 8
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8, !nonnull !3
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %18, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %20, i64* %22, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %23 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = insertvalue { i8*, i64 } undef, i8* %24, 0
  %28 = insertvalue { i8*, i64 } %27, i64 %26, 1
  ret { i8*, i64 } %28
}

; <core::ptr::unique::Unique<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define { i8*, i64* } @"_ZN95_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hfd0c4be511717604E"({}* nonnull align 1 %reference.0, [3 x i64]* align 8 dereferenceable(24) %reference.1) unnamed_addr #0 {
start:
  %0 = alloca { i8*, i64* }, align 8
  %1 = bitcast { i8*, i64* }* %0 to { {}*, [3 x i64]* }*
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 0
  store {}* %reference.0, {}** %2, align 8
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %1, i32 0, i32 1
  store [3 x i64]* %reference.1, [3 x i64]** %3, align 8
  %4 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %0, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !3
  %8 = insertvalue { i8*, i64* } undef, i8* %5, 0
  %9 = insertvalue { i8*, i64* } %8, i64* %7, 1
  ret { i8*, i64* } %9
}

; <core::str::IsNotEmpty as core::ops::function::Fn<(&&str,)>>::call
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN95_$LT$core..str..IsNotEmpty$u20$as$u20$core..ops..function..Fn$LT$$LP$$RF$$RF$str$C$$RP$$GT$$GT$4call17h316564a5bb0b6078E"(%"core::str::IsNotEmpty"* nonnull align 1 %self, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %0) unnamed_addr #0 {
start:
  %_2 = alloca i64*, align 8
  %1 = bitcast i64** %_2 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %0, { [0 x i8]*, i64 }** %1, align 8
  %2 = bitcast i64** %_2 to { [0 x i8]*, i64 }**
  %s = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %2, align 8, !nonnull !3
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0
  %_5.0 = load [0 x i8]*, [0 x i8]** %3, align 8, !nonnull !3
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1
  %_5.1 = load i64, i64* %4, align 8
; call core::str::<impl str>::is_empty
  %_4 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h62ccfe9c93fbd4b9E"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1)
  br label %bb1

bb1:                                              ; preds = %start
  %5 = xor i1 %_4, true
  ret i1 %5
}

; <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h563155f1eb72d44fE"(%"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* noalias nocapture sret(%"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>") dereferenceable(40) %0, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_5 = alloca %"core::str::iter::CharIndices", align 8
; invoke core::str::<impl str>::char_indices
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hd65a8a6b5330d83fE"(%"core::str::iter::CharIndices"* noalias nocapture sret(%"core::str::iter::CharIndices") dereferenceable(24) %_5, [0 x i8]* nonnull align 1 %haystack.0, i64 %haystack.1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %2 = bitcast %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %0 to %"core::str::IsWhitespace"*
  %3 = bitcast %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %0 to { [0 x i8]*, i64 }*
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1
  store i64 %haystack.1, i64* %5, align 8
  %6 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>", %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %0, i32 0, i32 2
  %7 = bitcast %"core::str::iter::CharIndices"* %6 to i8*
  %8 = bitcast %"core::str::iter::CharIndices"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  ret void

bb2:                                              ; preds = %cleanup
  br label %bb3

cleanup:                                          ; preds = %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb2

bb3:                                              ; preds = %bb2
  %14 = bitcast { i8*, i32 }* %1 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1
  resume { i8*, i32 } %19
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h34cf22cd7063e45dE"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %iter) unnamed_addr #1 {
start:
  %_4 = alloca %"core::str::iter::SplitWhitespace", align 8
  %0 = bitcast %"core::str::iter::SplitWhitespace"* %_4 to i8*
  %1 = bitcast %"core::str::iter::SplitWhitespace"* %iter to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 64, i1 false)
; call alloc::vec::Vec<T,A>::extend_desugared
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17hfca0d40301388439E"(%"alloc::vec::Vec<&str>"* align 8 dereferenceable(24) %self, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h0666d91e8c12ee28E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 {
start:
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %slice.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %slice.1, 1
  ret { [0 x i8]*, i64 } %2
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h4cd81ee6d695c712E"(%"core::str::pattern::SearchStep"* noalias nocapture sret(%"core::str::pattern::SearchStep") dereferenceable(24) %0, %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %_5 = alloca { i64, i32 }, align 8
  %s = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>", %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %self, i32 0, i32 2
  %_4 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1
  %5 = bitcast { i8*, i8* }* %_4 to i8**
  %start1.i = load i8*, i8** %5, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %start1.i)
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_4, i32 0, i32 1
  %_15.i = load i8*, i8** %6, align 8
  %_14.i = ptrtoint i8* %_15.i to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %start1.i)
  %_16.i = ptrtoint i8* %_17.i to i64
  %7 = sub nuw i64 %_14.i, %_16.i
  store i64 %7, i64* %3, align 8
  %diff.i = load i64, i64* %3, align 8
  store i64 %diff.i, i64* %4, align 8
  %8 = load i64, i64* %4, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %9 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha6256fe8a412e17fE"(%"core::str::iter::CharIndices"* align 8 dereferenceable(24) %s)
  store { i64, i32 } %9, { i64, i32 }* %_5, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1
  %11 = load i32, i32* %10, align 8, !range !68
  %12 = sub i32 %11, 1114112
  %13 = icmp eq i32 %12, 0
  %_7 = select i1 %13, i64 0, i64 1
  %14 = icmp eq i64 %_7, 1
  br i1 %14, label %bb3, label %bb8

bb3:                                              ; preds = %bb2
  %15 = bitcast { i64, i32 }* %_5 to i64*
  %i = load i64, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1
  %c = load i32, i32* %16, align 8, !range !66
  %_11 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1
  %17 = bitcast { i8*, i8* }* %_11 to i8**
  %start1.i1 = load i8*, i8** %17, align 8, !nonnull !3
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5.i2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %start1.i1)
  %18 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_11, i32 0, i32 1
  %_15.i3 = load i8*, i8** %18, align 8
  %_14.i4 = ptrtoint i8* %_15.i3 to i64
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_17.i5 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h67e82f6ab005cf3cE"(i8* nonnull %start1.i1)
  %_16.i6 = ptrtoint i8* %_17.i5 to i64
  %19 = sub nuw i64 %_14.i4, %_16.i6
  store i64 %19, i64* %1, align 8
  %diff.i7 = load i64, i64* %1, align 8
  store i64 %diff.i7, i64* %2, align 8
  %20 = load i64, i64* %2, align 8
  br label %bb4

bb8:                                              ; preds = %bb2
  %21 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 2, i64* %21, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  ret void

bb4:                                              ; preds = %bb3
  %char_len = sub i64 %8, %20
  %_16 = bitcast %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %self to %"core::str::IsWhitespace"*
; call <F as core::str::pattern::MultiCharEq>::matches
  %_15 = call zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hb1fac914609f6a13E"(%"core::str::IsWhitespace"* nonnull align 1 %_16, i32 %c)
  br label %bb5

bb5:                                              ; preds = %bb4
  br i1 %_15, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
  %_23 = add i64 %i, %char_len
  %22 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %23 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %22, i32 0, i32 1
  store i64 %i, i64* %23, align 8
  %24 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*
  %25 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %24, i32 0, i32 2
  store i64 %_23, i64* %25, align 8
  %26 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 1, i64* %26, align 8
  br label %bb9

bb6:                                              ; preds = %bb5
  %_19 = add i64 %i, %char_len
  %27 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %28 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %27, i32 0, i32 1
  store i64 %i, i64* %28, align 8
  %29 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*
  %30 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %29, i32 0, i32 2
  store i64 %_19, i64* %30, align 8
  %31 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*
  store i64 0, i64* %31, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb6
  br label %bb10
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::haystack
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h10d6b9deded7eef5E"(%"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %0 = bitcast %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* %self to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  %2 = load [0 x i8]*, [0 x i8]** %1, align 8, !nonnull !3
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1
  ret { [0 x i8]*, i64 } %6
}

; <&mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices>::slice
; Function Attrs: nonlazybind uwtable
define { [0 x i32]*, i64 } @"_ZN98_$LT$$RF$mut$u20$$u5b$T$u5d$$u20$as$u20$alloc..collections..vec_deque..ring_slices..RingSlices$GT$5slice17h07bc62204d762fa5E"([0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %from, i64 %to) unnamed_addr #1 {
start:
  %_8 = alloca { i64, i64 }, align 8
  %0 = bitcast { i64, i64 }* %_8 to i64*
  store i64 %from, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  store i64 %to, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %6 = call { [0 x i32]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hae36c26c6e30fb4bE"([0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %3, i64 %5, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc592 to %"core::panic::location::Location"*))
  %_6.0 = extractvalue { [0 x i32]*, i64 } %6, 0
  %_6.1 = extractvalue { [0 x i32]*, i64 } %6, 1
  br label %bb1

bb1:                                              ; preds = %start
  %7 = insertvalue { [0 x i32]*, i64 } undef, [0 x i32]* %_6.0, 0
  %8 = insertvalue { [0 x i32]*, i64 } %7, i64 %_6.1, 1
  ret { [0 x i32]*, i64 } %8
}

; <&mut [T] as alloc::collections::vec_deque::ring_slices::RingSlices>::split_at
; Function Attrs: nonlazybind uwtable
define void @"_ZN98_$LT$$RF$mut$u20$$u5b$T$u5d$$u20$as$u20$alloc..collections..vec_deque..ring_slices..RingSlices$GT$8split_at17hdadc5456d2672023E"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, [0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %i) unnamed_addr #1 {
start:
; call core::slice::<impl [T]>::split_at_mut
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h86224e629dd161dbE"({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }* noalias nocapture sret({ { [0 x i32]*, i64 }, { [0 x i32]*, i64 } }) dereferenceable(32) %0, [0 x i32]* nonnull align 4 %self.0, i64 %self.1, i64 %i)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17hc68a4c474a1f1bc3E"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %iterator) unnamed_addr #1 {
start:
  %_2 = alloca %"core::str::iter::SplitWhitespace", align 8
  %1 = bitcast %"core::str::iter::SplitWhitespace"* %_2 to i8*
  %2 = bitcast %"core::str::iter::SplitWhitespace"* %iterator to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 64, i1 false)
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
  call void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h6f3b455cc3283eecE"(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %0, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h2f95771579ed6b00E"(%"alloc::sync::ArcInner<_ProbeSemaphore>"* align 8 dereferenceable(48) %reference) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<_ProbeSemaphore>"**
  store %"alloc::sync::ArcInner<_ProbeSemaphore>"* %reference, %"alloc::sync::ArcInner<_ProbeSemaphore>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h76783586d0d3d08eE"(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* align 8 dereferenceable(32) %reference) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"**
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"* %reference, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<std::fs::File>>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define nonnull i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17he1820319b02c653cE"(%"alloc::sync::ArcInner<_ShuffledOrder>"* align 8 dereferenceable(112) %reference) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<_ShuffledOrder>"**
  store %"alloc::sync::ArcInner<_ShuffledOrder>"* %reference, %"alloc::sync::ArcInner<_ShuffledOrder>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !3
  ret i64* %2
}

; <core::str::IsNotEmpty as core::ops::function::FnMut<(&&str,)>>::call_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN98_$LT$core..str..IsNotEmpty$u20$as$u20$core..ops..function..FnMut$LT$$LP$$RF$$RF$str$C$$RP$$GT$$GT$8call_mut17h5a56d9083e3e12a9E"(%"core::str::IsNotEmpty"* nonnull align 1 %self, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %0) unnamed_addr #0 {
start:
  %_6 = alloca i64*, align 8
  %_2 = alloca i64*, align 8
  %1 = bitcast i64** %_2 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %0, { [0 x i8]*, i64 }** %1, align 8
  %2 = bitcast i64** %_2 to { [0 x i8]*, i64 }**
  %s = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %2, align 8, !nonnull !3
  %3 = bitcast i64** %_6 to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %s, { [0 x i8]*, i64 }** %3, align 8
  %4 = load i64*, i64** %_6, align 8, !nonnull !3
  %5 = bitcast i64* %4 to { [0 x i8]*, i64 }*
; call <core::str::IsNotEmpty as core::ops::function::Fn<(&&str,)>>::call
  %6 = call zeroext i1 @"_ZN95_$LT$core..str..IsNotEmpty$u20$as$u20$core..ops..function..Fn$LT$$LP$$RF$$RF$str$C$$RP$$GT$$GT$4call17h316564a5bb0b6078E"(%"core::str::IsNotEmpty"* nonnull align 1 %self, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %5)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %6
}

; <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17hc14f0645150d72f3E"(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* %self to %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"*
; call core::str::pattern::Searcher::next_match
  call void @_ZN4core3str7pattern8Searcher10next_match17hdaa04cf9e91b3fbdE(%"core::option::Option<(usize, usize)>"* noalias nocapture sret(%"core::option::Option<(usize, usize)>") dereferenceable(24) %0, %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::haystack
; Function Attrs: inlinehint nonlazybind uwtable
define { [0 x i8]*, i64 } @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17ha6f79bbb1c6aa861E"(%"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"core::str::pattern::CharPredicateSearcher<core::str::IsWhitespace>"* %self to %"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"*
; call <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::haystack
  %0 = call { [0 x i8]*, i64 } @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h10d6b9deded7eef5E"(%"core::str::pattern::MultiCharEqSearcher<core::str::IsWhitespace>"* align 8 dereferenceable(40) %_2)
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1
  ret { [0 x i8]*, i64 } %4
}

; probe_tle::_init_
; Function Attrs: nonlazybind uwtable
define void @_ZN9probe_tle6_init_17hab361908c6dce481E() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i128, align 8
  %1 = alloca i128, align 8
  %2 = alloca i128, align 8
  %3 = alloca i128, align 8
  %4 = alloca i128, align 8
  %5 = alloca { i8*, i32 }, align 8
  %_96 = alloca i8, align 1
  %_95 = alloca i8, align 1
  %_84 = alloca %"alloc::string::String", align 8
  %_83 = alloca %_ShuffledOrder, align 8
  %_81 = alloca i64*, align 8
  %_75 = alloca %"core::result::Result<usize, std::io::error::Error>", align 8
  %shuffle_order_str = alloca %"alloc::string::String", align 8
  %_66 = alloca %"core::fmt::Arguments", align 8
  %shuffle_stream = alloca i32, align 4
  %_62 = alloca %"std::fs::OpenOptions", align 4
  %shuffle_stream_res = alloca %"core::result::Result<std::fs::File, std::io::error::Error>", align 8
  %_47 = alloca %"core::fmt::Arguments", align 8
  %_43 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_33 = alloca %"core::fmt::Arguments", align 8
  %_29 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_24 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>", align 8
  %file_stream = alloca { i64*, i8 }, align 8
  %_17 = alloca %"std::fs::OpenOptions", align 4
  %_9 = alloca %"core::result::Result<std::fs::File, std::io::error::Error>", align 8
  %_7 = alloca %"std::sync::mutex::Mutex<std::fs::File>", align 8
  %_5 = alloca i64*, align 8
  %_3 = alloca %_ProbeSemaphore, align 8
  %_1 = alloca i64*, align 8
  store i8 0, i8* %_95, align 1
  store i8 0, i8* %_96, align 1
; call probe_tle::_ProbeSemaphore::new
  call void @_ZN9probe_tle15_ProbeSemaphore3new17hd1119993a6fc7171E(%_ProbeSemaphore* noalias nocapture sret(%_ProbeSemaphore) dereferenceable(32) %_3, i32 1)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::sync::Arc<T>::new
  %_2 = call nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h056029294754c5b9E"(%_ProbeSemaphore* noalias nocapture dereferenceable(32) %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i64* %_2, i64** %_1, align 8
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<probe_tle::_ProbeSemaphore>>>
  invoke void @"_ZN4core3ptr99drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$probe_tle.._ProbeSemaphore$GT$$GT$$GT$17h32685b09e78ea13dE"(i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_PROBE_THRD_SEM17h3b4f837b99158c04E to i64**))
          to label %bb42 unwind label %cleanup

bb42:                                             ; preds = %bb2
  %6 = load i64*, i64** %_1, align 8
  store i64* %6, i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_PROBE_THRD_SEM17h3b4f837b99158c04E to i64**), align 8
; call std::fs::OpenOptions::new
  %7 = call i128 @_ZN3std2fs11OpenOptions3new17h6b9455b7cbc43679E()
  store i128 %7, i128* %4, align 8
  %8 = bitcast %"std::fs::OpenOptions"* %_17 to i8*
  %9 = bitcast i128* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 8 %9, i64 16, i1 false)
  br label %bb3

bb41:                                             ; preds = %cleanup
  %10 = load i64*, i64** %_1, align 8
  store i64* %10, i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_PROBE_THRD_SEM17h3b4f837b99158c04E to i64**), align 8
  br label %bb40

cleanup:                                          ; preds = %bb2
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb41

bb40:                                             ; preds = %bb54, %bb53, %bb55, %bb39, %bb43, %bb41
  %16 = bitcast { i8*, i32 }* %5 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21

bb3:                                              ; preds = %bb42
; call std::fs::OpenOptions::write
  %_15 = call align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions5write17h7a3ac3ee6d53c986E(%"std::fs::OpenOptions"* align 4 dereferenceable(16) %_17, i1 zeroext true)
  br label %bb4

bb4:                                              ; preds = %bb3
; call std::fs::OpenOptions::create
  %_13 = call align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions6create17h844069579c36805bE(%"std::fs::OpenOptions"* align 4 dereferenceable(16) %_15, i1 zeroext true)
  br label %bb5

bb5:                                              ; preds = %bb4
; call std::fs::OpenOptions::append
  %_11 = call align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions6append17h8434c75b524a9103E(%"std::fs::OpenOptions"* align 4 dereferenceable(16) %_13, i1 zeroext true)
  br label %bb6

bb6:                                              ; preds = %bb5
; call std::fs::OpenOptions::open
  call void @_ZN3std2fs11OpenOptions4open17h097803acad1b1380E(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24) %_9, %"std::fs::OpenOptions"* align 4 dereferenceable(16) %_11, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc593 to [0 x i8]*), i64 3)
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::result::Result<T,E>::unwrap
  %_8 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h144d03eb13b5449dE"(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture dereferenceable(24) %_9, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc595 to %"core::panic::location::Location"*)), !range !8
  br label %bb8

bb8:                                              ; preds = %bb7
; call std::sync::mutex::Mutex<T>::new
  %22 = call i128 @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h59d989b87025e1e2E"(i32 %_8)
  store i128 %22, i128* %3, align 8
  %23 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %_7 to i8*
  %24 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  br label %bb9

bb9:                                              ; preds = %bb8
  %25 = bitcast %"std::sync::mutex::Mutex<std::fs::File>"* %_7 to i128*
  %26 = load i128, i128* %25, align 8
; call alloc::sync::Arc<T>::new
  %_6 = call nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17hdf48e5b41278d4d0E"(i128 %26)
  br label %bb10

bb10:                                             ; preds = %bb9
  store i64* %_6, i64** %_5, align 8
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<std::fs::File>>>>
  invoke void @"_ZN4core3ptr117drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$std..fs..File$GT$$GT$$GT$$GT$17h297541187a3186aaE"(i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E to i64**))
          to label %bb44 unwind label %cleanup1

bb44:                                             ; preds = %bb10
  %27 = load i64*, i64** %_5, align 8
  store i64* %27, i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E to i64**), align 8
  %28 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E to {}**), align 8
  %29 = icmp eq {}* %28, null
  %_21 = select i1 %29, i64 0, i64 1
  %30 = icmp eq i64 %_21, 1
  br i1 %30, label %bb11, label %bb23

bb43:                                             ; preds = %cleanup1
  %31 = load i64*, i64** %_5, align 8
  store i64* %31, i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E to i64**), align 8
  br label %bb40

cleanup1:                                         ; preds = %bb10
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  %34 = extractvalue { i8*, i32 } %32, 1
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %34, i32* %36, align 8
  br label %bb43

bb11:                                             ; preds = %bb44
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_26 = call align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6588f56fd41365ccE"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E to i64**))
  br label %bb12

bb23:                                             ; preds = %bb22, %bb44
  %_56 = call i32 @atexit(void ()* nonnull @_ZN9probe_tle7_final_17h2f6b59bee18dea85E)
  br label %bb24

bb12:                                             ; preds = %bb11
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h03604a269a5c308fE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %_24, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %_26)
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::result::Result<T,E>::unwrap
  %37 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbd51cebe08db4971E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture dereferenceable(24) %_24, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc597 to %"core::panic::location::Location"*))
  store { i64*, i8 } %37, { i64*, i8 }* %file_stream, align 8
  br label %bb14

bb14:                                             ; preds = %bb13
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_31 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h224ccdc44478203dE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb15 unwind label %cleanup2

bb15:                                             ; preds = %bb14
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h2945c196adeacc55E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_33, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc107 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc269 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb16 unwind label %cleanup2

bb39:                                             ; preds = %cleanup2
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h0291b9d70805d303E"({ i64*, i8 }* %file_stream) #19
  br label %bb40

cleanup2:                                         ; preds = %bb21, %bb20, %bb19, %bb18, %bb17, %bb16, %bb15, %bb14
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  %40 = extractvalue { i8*, i32 } %38, 1
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %39, i8** %41, align 8
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %40, i32* %42, align 8
  br label %bb39

bb16:                                             ; preds = %bb15
; invoke std::io::Write::write_fmt
  %43 = invoke i128 @_ZN3std2io5Write9write_fmt17h85f0732d49b4061dE(i32* align 4 dereferenceable(4) %_31, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_33)
          to label %bb17 unwind label %cleanup2

bb17:                                             ; preds = %bb16
  store i128 %43, i128* %2, align 8
  %44 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_29 to i8*
  %45 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 16, i1 false)
  %46 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_29 to i128*
  %47 = load i128, i128* %46, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf85c3cc50a49daa3E"(i128 %47, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc653 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc600 to %"core::panic::location::Location"*))
          to label %bb18 unwind label %cleanup2

bb18:                                             ; preds = %bb17
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_45 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h224ccdc44478203dE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb19 unwind label %cleanup2

bb19:                                             ; preds = %bb18
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h2945c196adeacc55E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_47, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc114 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc269 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb20 unwind label %cleanup2

bb20:                                             ; preds = %bb19
; invoke std::io::Write::write_fmt
  %48 = invoke i128 @_ZN3std2io5Write9write_fmt17h85f0732d49b4061dE(i32* align 4 dereferenceable(4) %_45, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_47)
          to label %bb21 unwind label %cleanup2

bb21:                                             ; preds = %bb20
  store i128 %48, i128* %1, align 8
  %49 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_43 to i8*
  %50 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 16, i1 false)
  %51 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_43 to i128*
  %52 = load i128, i128* %51, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf85c3cc50a49daa3E"(i128 %52, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc653 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc603 to %"core::panic::location::Location"*))
          to label %bb22 unwind label %cleanup2

bb22:                                             ; preds = %bb21
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h0291b9d70805d303E"({ i64*, i8 }* %file_stream)
  br label %bb23

bb24:                                             ; preds = %bb23
; call std::fs::OpenOptions::new
  %53 = call i128 @_ZN3std2fs11OpenOptions3new17h6b9455b7cbc43679E()
  store i128 %53, i128* %0, align 8
  %54 = bitcast %"std::fs::OpenOptions"* %_62 to i8*
  %55 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 8 %55, i64 16, i1 false)
  br label %bb25

bb25:                                             ; preds = %bb24
; call std::fs::OpenOptions::read
  %_60 = call align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions4read17h7dd9beaf9e60b894E(%"std::fs::OpenOptions"* align 4 dereferenceable(16) %_62, i1 zeroext true)
  br label %bb26

bb26:                                             ; preds = %bb25
  store i8 1, i8* %_95, align 1
; call std::fs::OpenOptions::open
  call void @_ZN3std2fs11OpenOptions4open17h097803acad1b1380E(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24) %shuffle_stream_res, %"std::fs::OpenOptions"* align 4 dereferenceable(16) %_60, [0 x i8]* nonnull align 1 bitcast (<{ [8 x i8] }>* @alloc604 to [0 x i8]*), i64 8)
  br label %bb27

bb27:                                             ; preds = %bb26
  %56 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %shuffle_stream_res to i32*
  %57 = load i32, i32* %56, align 8, !range !59
  %_63 = zext i32 %57 to i64
  %58 = icmp eq i64 %_63, 0
  br i1 %58, label %bb28, label %bb36

bb28:                                             ; preds = %bb27
  store i8 0, i8* %_95, align 1
  %59 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %shuffle_stream_res to %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"*
  %60 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Ok", %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4, !range !8
  store i32 %61, i32* %shuffle_stream, align 4
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h2945c196adeacc55E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_66, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc123 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc269 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb29 unwind label %cleanup3

bb36:                                             ; preds = %bb46, %bb27
; invoke std::thread::local::LocalKey<T>::with
  invoke void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17hd7d3ee00335bb9cfE"(i64** align 8 dereferenceable(8) bitcast (<{ i8*, [0 x i8] }>* @alloc296 to i64**))
          to label %bb37 unwind label %cleanup6

bb29:                                             ; preds = %bb28
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17hfd70903caad28085E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_66)
          to label %bb30 unwind label %cleanup3

bb38:                                             ; preds = %bb51, %bb52, %cleanup3
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17he584526ff1bb905aE"(i32* %shuffle_stream) #19
  br label %bb56

cleanup3:                                         ; preds = %bb30, %bb29, %bb28
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  %64 = extractvalue { i8*, i32 } %62, 1
  %65 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %63, i8** %65, align 8
  %66 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %64, i32* %66, align 8
  br label %bb38

bb30:                                             ; preds = %bb29
; invoke alloc::string::String::new
  invoke void @_ZN5alloc6string6String3new17h37cb3b14165a7153E(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %shuffle_order_str)
          to label %bb31 unwind label %cleanup3

bb31:                                             ; preds = %bb30
  store i8 1, i8* %_96, align 1
; invoke <std::fs::File as std::io::Read>::read_to_string
  invoke void @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$14read_to_string17h7565b43626013008E"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<usize, std::io::error::Error>") dereferenceable(24) %_75, i32* align 4 dereferenceable(4) %shuffle_stream, %"alloc::string::String"* align 8 dereferenceable(24) %shuffle_order_str)
          to label %bb32 unwind label %cleanup4

bb32:                                             ; preds = %bb31
; invoke core::result::Result<T,E>::expect
  %_74 = invoke i64 @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17he89abdf8e4a3b954E"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture dereferenceable(24) %_75, [0 x i8]* nonnull align 1 bitcast (<{ [23 x i8] }>* @alloc605 to [0 x i8]*), i64 23, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc607 to %"core::panic::location::Location"*))
          to label %bb33 unwind label %cleanup4

bb52:                                             ; preds = %bb45, %cleanup4
  %67 = load i8, i8* %_96, align 1, !range !4
  %68 = trunc i8 %67 to i1
  br i1 %68, label %bb51, label %bb38

cleanup4:                                         ; preds = %bb34, %bb33, %bb32, %bb31
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  %71 = extractvalue { i8*, i32 } %69, 1
  %72 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %70, i8** %72, align 8
  %73 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %71, i32* %73, align 8
  br label %bb52

bb33:                                             ; preds = %bb32
  store i8 0, i8* %_96, align 1
  %74 = bitcast %"alloc::string::String"* %_84 to i8*
  %75 = bitcast %"alloc::string::String"* %shuffle_order_str to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 24, i1 false)
; invoke probe_tle::_ShuffledOrder::new
  invoke void @_ZN9probe_tle14_ShuffledOrder3new17h4037a15c9a8800e3E(%_ShuffledOrder* noalias nocapture sret(%_ShuffledOrder) dereferenceable(96) %_83, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_84)
          to label %bb34 unwind label %cleanup4

bb34:                                             ; preds = %bb33
; invoke alloc::sync::Arc<T>::new
  %_82 = invoke nonnull i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h334f748570a58d0dE"(%_ShuffledOrder* noalias nocapture dereferenceable(96) %_83)
          to label %bb35 unwind label %cleanup4

bb35:                                             ; preds = %bb34
  store i64* %_82, i64** %_81, align 8
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<probe_tle::_ShuffledOrder>>>
  invoke void @"_ZN4core3ptr98drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$probe_tle.._ShuffledOrder$GT$$GT$$GT$17hbc3ebba299cd690dE"(i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_SHUFFLED_ORDER17h638985828a80dff6E to i64**))
          to label %bb46 unwind label %cleanup5

bb46:                                             ; preds = %bb35
  %76 = load i64*, i64** %_81, align 8
  store i64* %76, i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_SHUFFLED_ORDER17h638985828a80dff6E to i64**), align 8
  store i8 0, i8* %_96, align 1
; invoke core::ptr::drop_in_place<std::fs::File>
  invoke void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17he584526ff1bb905aE"(i32* %shuffle_stream)
          to label %bb36 unwind label %cleanup6

bb45:                                             ; preds = %cleanup5
  %77 = load i64*, i64** %_81, align 8
  store i64* %77, i64** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_SHUFFLED_ORDER17h638985828a80dff6E to i64**), align 8
  br label %bb52

cleanup5:                                         ; preds = %bb35
  %78 = landingpad { i8*, i32 }
          cleanup
  %79 = extractvalue { i8*, i32 } %78, 0
  %80 = extractvalue { i8*, i32 } %78, 1
  %81 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %79, i8** %81, align 8
  %82 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %80, i32* %82, align 8
  br label %bb45

bb51:                                             ; preds = %bb52
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h8d8b0bae1660ceedE"(%"alloc::string::String"* %shuffle_order_str) #19
  br label %bb38

bb56:                                             ; preds = %cleanup6, %bb38
  %83 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %shuffle_stream_res to i32*
  %84 = load i32, i32* %83, align 8, !range !59
  %_98 = zext i32 %84 to i64
  %85 = icmp eq i64 %_98, 0
  br i1 %85, label %bb53, label %bb55

cleanup6:                                         ; preds = %bb36, %bb46
  %86 = landingpad { i8*, i32 }
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  %88 = extractvalue { i8*, i32 } %86, 1
  %89 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %87, i8** %89, align 8
  %90 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %88, i32* %90, align 8
  br label %bb56

bb37:                                             ; preds = %bb36
  %91 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %shuffle_stream_res to i32*
  %92 = load i32, i32* %91, align 8, !range !59
  %_97 = zext i32 %92 to i64
  %93 = icmp eq i64 %_97, 0
  br i1 %93, label %bb48, label %bb50

bb53:                                             ; preds = %bb56
  %94 = load i8, i8* %_95, align 1, !range !4
  %95 = trunc i8 %94 to i1
  br i1 %95, label %bb54, label %bb40

bb55:                                             ; preds = %bb56
; call core::ptr::drop_in_place<core::result::Result<std::fs::File,std::io::error::Error>>
  call void @"_ZN4core3ptr86drop_in_place$LT$core..result..Result$LT$std..fs..File$C$std..io..error..Error$GT$$GT$17h07a1d354b41e10e3E"(%"core::result::Result<std::fs::File, std::io::error::Error>"* %shuffle_stream_res) #19
  br label %bb40

bb54:                                             ; preds = %bb53
  %96 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %shuffle_stream_res to %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"*
  %97 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Ok", %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"* %96, i32 0, i32 1
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17he584526ff1bb905aE"(i32* %97) #19
  br label %bb40

bb48:                                             ; preds = %bb37
  %98 = load i8, i8* %_95, align 1, !range !4
  %99 = trunc i8 %98 to i1
  br i1 %99, label %bb49, label %bb47

bb50:                                             ; preds = %bb37
; call core::ptr::drop_in_place<core::result::Result<std::fs::File,std::io::error::Error>>
  call void @"_ZN4core3ptr86drop_in_place$LT$core..result..Result$LT$std..fs..File$C$std..io..error..Error$GT$$GT$17h07a1d354b41e10e3E"(%"core::result::Result<std::fs::File, std::io::error::Error>"* %shuffle_stream_res)
  br label %bb47

bb47:                                             ; preds = %bb49, %bb48, %bb50
  store i8 0, i8* %_95, align 1
  ret void

bb49:                                             ; preds = %bb48
  %100 = bitcast %"core::result::Result<std::fs::File, std::io::error::Error>"* %shuffle_stream_res to %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"*
  %101 = getelementptr inbounds %"core::result::Result<std::fs::File, std::io::error::Error>::Ok", %"core::result::Result<std::fs::File, std::io::error::Error>::Ok"* %100, i32 0, i32 1
; call core::ptr::drop_in_place<std::fs::File>
  call void @"_ZN4core3ptr34drop_in_place$LT$std..fs..File$GT$17he584526ff1bb905aE"(i32* %101)
  br label %bb47
}

; probe_tle::_init_::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_tle6_init_28_$u7b$$u7b$closure$u7d$$u7d$17h6e85b5629b43ffd1E"(%"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %tid) unnamed_addr #0 {
start:
  %_5 = alloca %"alloc::string::String", align 8
  %_3 = alloca %"alloc::string::String", align 8
; call <alloc::string::String as core::convert::From<&str>>::from
  call void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h8dc4eeaed8bf4332E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_5, [0 x i8]* nonnull align 1 bitcast (<{ [1 x i8] }>* @alloc608 to [0 x i8]*), i64 1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::cell::RefCell<T>::replace
  call void @"_ZN4core4cell16RefCell$LT$T$GT$7replace17h33ac3e24844c96c9E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_3, %"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %tid, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_5, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc610 to %"core::panic::location::Location"*))
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h8d8b0bae1660ceedE"(%"alloc::string::String"* %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; probe_tle::_final_
; Function Attrs: nonlazybind uwtable
define void @_ZN9probe_tle7_final_17h2f6b59bee18dea85E() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i128, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_15 = alloca %"core::fmt::Arguments", align 8
  %_11 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_6 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>", align 8
  %file_stream = alloca { i64*, i8 }, align 8
  %2 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E to {}**), align 8
  %3 = icmp eq {}* %2, null
  %_3 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_3, 1
  br i1 %4, label %bb1, label %bb9

bb1:                                              ; preds = %start
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_8 = call align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6588f56fd41365ccE"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E to i64**))
  br label %bb2

bb9:                                              ; preds = %bb8, %start
  ret void

bb2:                                              ; preds = %bb1
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h03604a269a5c308fE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %_6, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %_8)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::result::Result<T,E>::unwrap
  %5 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbd51cebe08db4971E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture dereferenceable(24) %_6, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc612 to %"core::panic::location::Location"*))
  store { i64*, i8 } %5, { i64*, i8 }* %file_stream, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_13 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h224ccdc44478203dE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h2945c196adeacc55E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_15, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc160 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* nonnull align 8 bitcast (<{ [0 x i8] }>* @alloc269 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb6 unwind label %cleanup

bb10:                                             ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h0291b9d70805d303E"({ i64*, i8 }* %file_stream) #19
  br label %bb11

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb10

bb6:                                              ; preds = %bb5
; invoke std::io::Write::write_fmt
  %11 = invoke i128 @_ZN3std2io5Write9write_fmt17h85f0732d49b4061dE(i32* align 4 dereferenceable(4) %_13, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_15)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  store i128 %11, i128* %0, align 8
  %12 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_11 to i8*
  %13 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false)
  %14 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_11 to i128*
  %15 = load i128, i128* %14, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf85c3cc50a49daa3E"(i128 %15, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc653 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc615 to %"core::panic::location::Location"*))
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h0291b9d70805d303E"({ i64*, i8 }* %file_stream)
  br label %bb9

bb11:                                             ; preds = %bb10
  %16 = bitcast { i8*, i32 }* %1 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; probe_tle::_probe_mutex_
; Function Attrs: nonlazybind uwtable
define void @_ZN9probe_tle13_probe_mutex_17h80ff35bd1207ef42E(i32 %0, i32 %1, i8* %2, i64* %3) unnamed_addr #1 {
start:
  %_7 = alloca %"[closure@./probe/probe_tle.rs:76:18: 84:10]", align 8
  %lock_var_addr = alloca i64*, align 8
  %func_name = alloca i8*, align 8
  %func_num = alloca i32, align 4
  %line = alloca i32, align 4
  store i32 %0, i32* %line, align 4
  store i32 %1, i32* %func_num, align 4
  store i8* %2, i8** %func_name, align 8
  store i64* %3, i64** %lock_var_addr, align 8
  %4 = bitcast %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* %_7 to i8***
  store i8** %func_name, i8*** %4, align 8
  %5 = getelementptr inbounds %"[closure@./probe/probe_tle.rs:76:18: 84:10]", %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* %_7, i32 0, i32 1
  store i32* %line, i32** %5, align 8
  %6 = getelementptr inbounds %"[closure@./probe/probe_tle.rs:76:18: 84:10]", %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* %_7, i32 0, i32 2
  store i32* %func_num, i32** %6, align 8
  %7 = getelementptr inbounds %"[closure@./probe/probe_tle.rs:76:18: 84:10]", %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* %_7, i32 0, i32 3
  store i64** %lock_var_addr, i64*** %7, align 8
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h9f42a5eca004c250E"(i64** align 8 dereferenceable(8) bitcast (<{ i8*, [0 x i8] }>* @alloc296 to i64**), %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* noalias nocapture dereferenceable(32) %_7)
  br label %bb1

bb1:                                              ; preds = %start
  %8 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_SHUFFLED_ORDER17h638985828a80dff6E to {}**), align 8
  %9 = icmp eq {}* %8, null
  %_14 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_14, 1
  br i1 %10, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_18 = call align 8 dereferenceable(96) %_ShuffledOrder* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39317c85bb1c3a11E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_SHUFFLED_ORDER17h638985828a80dff6E to i64**))
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  %_20 = load i32, i32* %func_num, align 4
; call probe_tle::_ShuffledOrder::wait_or_pass
  call void @_ZN9probe_tle14_ShuffledOrder12wait_or_pass17h98e35343babe5f8fE(%_ShuffledOrder* align 8 dereferenceable(96) %_18, i32 %_20)
  br label %bb4
}

; probe_tle::_probe_mutex_::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_tle13_probe_mutex_28_$u7b$$u7b$closure$u7d$$u7d$17h63810e51f28bfb3eE"(%"[closure@./probe/probe_tle.rs:76:18: 84:10]"* noalias nocapture dereferenceable(32) %_1, %"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %tid) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i128, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_32 = alloca { i64*, i64* }, align 8
  %_30 = alloca { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, align 8
  %_29 = alloca [5 x { i8*, i64* }], align 8
  %_22 = alloca %"core::fmt::Arguments", align 8
  %_18 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_13 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>", align 8
  %file_stream = alloca { i64*, i8 }, align 8
  %_4 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %func_name_str = alloca { [0 x i8]*, i64 }, align 8
  %2 = bitcast %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* %_1 to i8***
  %3 = load i8**, i8*** %2, align 8, !nonnull !3
  %_7 = load i8*, i8** %3, align 8
; call std::ffi::c_str::CStr::from_ptr
  %4 = call { %"std::ffi::c_str::CStr"*, i64 } @_ZN3std3ffi5c_str4CStr8from_ptr17hf488328b45c6fe23E(i8* %_7)
  %_6.0 = extractvalue { %"std::ffi::c_str::CStr"*, i64 } %4, 0
  %_6.1 = extractvalue { %"std::ffi::c_str::CStr"*, i64 } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::ffi::c_str::CStr::to_str
  call void @_ZN3std3ffi5c_str4CStr6to_str17hd770c2be353b80beE(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture sret(%"core::result::Result<&str, core::str::error::Utf8Error>") dereferenceable(24) %_4, %"std::ffi::c_str::CStr"* nonnull align 1 %_6.0, i64 %_6.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::result::Result<T,E>::unwrap
  %5 = call { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf01b14641ac73edeE"(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture dereferenceable(24) %_4, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc617 to %"core::panic::location::Location"*))
  store { [0 x i8]*, i64 } %5, { [0 x i8]*, i64 }* %func_name_str, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E to {}**), align 8
  %7 = icmp eq {}* %6, null
  %_10 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_10, 1
  br i1 %8, label %bb4, label %bb20

bb4:                                              ; preds = %bb3
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_15 = call align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6588f56fd41365ccE"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E to i64**))
  br label %bb5

bb20:                                             ; preds = %bb19, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h03604a269a5c308fE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %_13, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %_15)
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::result::Result<T,E>::unwrap
  %9 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbd51cebe08db4971E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture dereferenceable(24) %_13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc619 to %"core::panic::location::Location"*))
  store { i64*, i8 } %9, { i64*, i8 }* %file_stream, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_20 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h224ccdc44478203dE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke core::cell::RefCell<T>::borrow
  %10 = invoke { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17hfb541208f9bc4248E"(%"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %tid, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc621 to %"core::panic::location::Location"*))
          to label %bb9 unwind label %cleanup

bb22:                                             ; preds = %bb21, %cleanup
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h0291b9d70805d303E"({ i64*, i8 }* %file_stream) #19
  br label %bb23

cleanup:                                          ; preds = %bb18, %bb8, %bb7
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb22

bb9:                                              ; preds = %bb8
  store { i64*, i64* } %10, { i64*, i64* }* %_32, align 8
  %16 = getelementptr inbounds %"[closure@./probe/probe_tle.rs:76:18: 84:10]", %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* %_1, i32 0, i32 1
  %_35 = load i32*, i32** %16, align 8, !nonnull !3
  %17 = getelementptr inbounds %"[closure@./probe/probe_tle.rs:76:18: 84:10]", %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* %_1, i32 0, i32 2
  %_36 = load i32*, i32** %17, align 8, !nonnull !3
  %18 = getelementptr inbounds %"[closure@./probe/probe_tle.rs:76:18: 84:10]", %"[closure@./probe/probe_tle.rs:76:18: 84:10]"* %_1, i32 0, i32 3
  %_37 = load i64**, i64*** %18, align 8, !nonnull !3
  %19 = bitcast { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_30 to { i64*, i64* }**
  store { i64*, i64* }* %_32, { i64*, i64* }** %19, align 8
  %20 = getelementptr inbounds { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_30, i32 0, i32 1
  store { [0 x i8]*, i64 }* %func_name_str, { [0 x i8]*, i64 }** %20, align 8
  %21 = getelementptr inbounds { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_30, i32 0, i32 2
  store i32* %_35, i32** %21, align 8
  %22 = getelementptr inbounds { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_30, i32 0, i32 3
  store i32* %_36, i32** %22, align 8
  %23 = getelementptr inbounds { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_30, i32 0, i32 4
  store i64** %_37, i64*** %23, align 8
  %24 = bitcast { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_30 to { i64*, i64* }**
  %arg0 = load { i64*, i64* }*, { i64*, i64* }** %24, align 8, !nonnull !3
  %25 = getelementptr inbounds { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_30, i32 0, i32 1
  %arg1 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %25, align 8, !nonnull !3
  %26 = getelementptr inbounds { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_30, i32 0, i32 2
  %arg2 = load i32*, i32** %26, align 8, !nonnull !3
  %27 = getelementptr inbounds { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_30, i32 0, i32 3
  %arg3 = load i32*, i32** %27, align 8, !nonnull !3
  %28 = getelementptr inbounds { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }, { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32*, i64** }* %_30, i32 0, i32 4
  %arg4 = load i64**, i64*** %28, align 8, !nonnull !3
; invoke core::fmt::ArgumentV1::new
  %29 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hf8aeb570c436443aE({ i64*, i64* }* align 8 dereferenceable(16) %arg0, i1 ({ i64*, i64* }*, %"core::fmt::Formatter"*)* nonnull @"_ZN63_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17h74f58bc28733e89cE")
          to label %bb10 unwind label %cleanup1

bb10:                                             ; preds = %bb9
  %_43.0 = extractvalue { i8*, i64* } %29, 0
  %_43.1 = extractvalue { i8*, i64* } %29, 1
; invoke core::fmt::ArgumentV1::new
  %30 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h0df7b51e292440feE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %arg1, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h2289649d21cc25e6E")
          to label %bb11 unwind label %cleanup1

bb21:                                             ; preds = %cleanup1
; call core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  call void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17hf5df39aff9f85eacE"({ i64*, i64* }* %_32) #19
  br label %bb22

cleanup1:                                         ; preds = %bb17, %bb16, %bb15, %bb13, %bb12, %bb11, %bb10, %bb9
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  %33 = extractvalue { i8*, i32 } %31, 1
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %33, i32* %35, align 8
  br label %bb21

bb11:                                             ; preds = %bb10
  %_46.0 = extractvalue { i8*, i64* } %30, 0
  %_46.1 = extractvalue { i8*, i64* } %30, 1
; invoke core::fmt::ArgumentV1::new
  %36 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg2, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb12 unwind label %cleanup1

bb12:                                             ; preds = %bb11
  %_49.0 = extractvalue { i8*, i64* } %36, 0
  %_49.1 = extractvalue { i8*, i64* } %36, 1
; invoke core::fmt::ArgumentV1::new
  %37 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg3, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb13 unwind label %cleanup1

bb13:                                             ; preds = %bb12
  %_52.0 = extractvalue { i8*, i64* } %37, 0
  %_52.1 = extractvalue { i8*, i64* } %37, 1
; invoke core::fmt::ArgumentV1::new
  %38 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17ha3ecc8983dece7deE(i64** align 8 dereferenceable(8) %arg4, i1 (i64**, %"core::fmt::Formatter"*)* nonnull @"_ZN50_$LT$$BP$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8b03d52d222fc716E")
          to label %bb14 unwind label %cleanup1

bb14:                                             ; preds = %bb13
  %_55.0 = extractvalue { i8*, i64* } %38, 0
  %_55.1 = extractvalue { i8*, i64* } %38, 1
  %39 = bitcast [5 x { i8*, i64* }]* %_29 to { i8*, i64* }*
  %40 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %39, i32 0, i32 0
  store i8* %_43.0, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %39, i32 0, i32 1
  store i64* %_43.1, i64** %41, align 8
  %42 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_29, i32 0, i32 1
  %43 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %42, i32 0, i32 0
  store i8* %_46.0, i8** %43, align 8
  %44 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %42, i32 0, i32 1
  store i64* %_46.1, i64** %44, align 8
  %45 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_29, i32 0, i32 2
  %46 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %45, i32 0, i32 0
  store i8* %_49.0, i8** %46, align 8
  %47 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %45, i32 0, i32 1
  store i64* %_49.1, i64** %47, align 8
  %48 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_29, i32 0, i32 3
  %49 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %48, i32 0, i32 0
  store i8* %_52.0, i8** %49, align 8
  %50 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %48, i32 0, i32 1
  store i64* %_52.1, i64** %50, align 8
  %51 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_29, i32 0, i32 4
  %52 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %51, i32 0, i32 0
  store i8* %_55.0, i8** %52, align 8
  %53 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %51, i32 0, i32 1
  store i64* %_55.1, i64** %53, align 8
  %_26.0 = bitcast [5 x { i8*, i64* }]* %_29 to [0 x { i8*, i64* }]*
  br label %bb15

bb15:                                             ; preds = %bb14
; invoke core::fmt::Arguments::new_v1_formatted
  invoke void @_ZN4core3fmt9Arguments16new_v1_formatted17hb31be9bfa45775c8E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_22, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc191 to [0 x { [0 x i8]*, i64 }]*), i64 6, [0 x { i8*, i64* }]* nonnull align 8 %_26.0, i64 5, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [280 x i8] }>* @alloc223 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 5)
          to label %bb16 unwind label %cleanup1

bb16:                                             ; preds = %bb15
; invoke std::io::Write::write_fmt
  %54 = invoke i128 @_ZN3std2io5Write9write_fmt17h85f0732d49b4061dE(i32* align 4 dereferenceable(4) %_20, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_22)
          to label %bb17 unwind label %cleanup1

bb17:                                             ; preds = %bb16
  store i128 %54, i128* %0, align 8
  %55 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_18 to i8*
  %56 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 16, i1 false)
  %57 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_18 to i128*
  %58 = load i128, i128* %57, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf85c3cc50a49daa3E"(i128 %58, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc653 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc624 to %"core::panic::location::Location"*))
          to label %bb18 unwind label %cleanup1

bb18:                                             ; preds = %bb17
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17hf5df39aff9f85eacE"({ i64*, i64* }* %_32)
          to label %bb19 unwind label %cleanup

bb19:                                             ; preds = %bb18
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h0291b9d70805d303E"({ i64*, i8 }* %file_stream)
  br label %bb20

bb23:                                             ; preds = %bb22
  %59 = bitcast { i8*, i32 }* %1 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = insertvalue { i8*, i32 } undef, i8* %60, 0
  %64 = insertvalue { i8*, i32 } %63, i32 %62, 1
  resume { i8*, i32 } %64
}

; probe_tle::_probe_func_
; Function Attrs: nonlazybind uwtable
define void @_ZN9probe_tle12_probe_func_17h1420926937153729E(i32 %0, i32 %1, i8* %2) unnamed_addr #1 {
start:
  %_6 = alloca %"[closure@./probe/probe_tle.rs:94:18: 102:10]", align 8
  %func_name = alloca i8*, align 8
  %func_num = alloca i32, align 4
  %line = alloca i32, align 4
  store i32 %0, i32* %line, align 4
  store i32 %1, i32* %func_num, align 4
  store i8* %2, i8** %func_name, align 8
  %3 = bitcast %"[closure@./probe/probe_tle.rs:94:18: 102:10]"* %_6 to i8***
  store i8** %func_name, i8*** %3, align 8
  %4 = getelementptr inbounds %"[closure@./probe/probe_tle.rs:94:18: 102:10]", %"[closure@./probe/probe_tle.rs:94:18: 102:10]"* %_6, i32 0, i32 1
  store i32* %line, i32** %4, align 8
  %5 = getelementptr inbounds %"[closure@./probe/probe_tle.rs:94:18: 102:10]", %"[closure@./probe/probe_tle.rs:94:18: 102:10]"* %_6, i32 0, i32 2
  store i32* %func_num, i32** %5, align 8
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17hce31c40a5801a758E"(i64** align 8 dereferenceable(8) bitcast (<{ i8*, [0 x i8] }>* @alloc296 to i64**), %"[closure@./probe/probe_tle.rs:94:18: 102:10]"* noalias nocapture dereferenceable(24) %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %6 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_SHUFFLED_ORDER17h638985828a80dff6E to {}**), align 8
  %7 = icmp eq {}* %6, null
  %_12 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_12, 1
  br i1 %8, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_16 = call align 8 dereferenceable(96) %_ShuffledOrder* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39317c85bb1c3a11E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_SHUFFLED_ORDER17h638985828a80dff6E to i64**))
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb3:                                              ; preds = %bb2
  %_18 = load i32, i32* %func_num, align 4
; call probe_tle::_ShuffledOrder::wait_or_pass
  call void @_ZN9probe_tle14_ShuffledOrder12wait_or_pass17h98e35343babe5f8fE(%_ShuffledOrder* align 8 dereferenceable(96) %_16, i32 %_18)
  br label %bb4
}

; probe_tle::_probe_func_::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_tle12_probe_func_28_$u7b$$u7b$closure$u7d$$u7d$17h37097dba05f7752aE"(%"[closure@./probe/probe_tle.rs:94:18: 102:10]"* noalias nocapture dereferenceable(24) %_1, %"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %tid) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i128, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_32 = alloca { i64*, i64* }, align 8
  %_30 = alloca { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32* }, align 8
  %_29 = alloca [4 x { i8*, i64* }], align 8
  %_22 = alloca %"core::fmt::Arguments", align 8
  %_18 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_13 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>", align 8
  %file_stream = alloca { i64*, i8 }, align 8
  %_4 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %func_name_str = alloca { [0 x i8]*, i64 }, align 8
  %2 = bitcast %"[closure@./probe/probe_tle.rs:94:18: 102:10]"* %_1 to i8***
  %3 = load i8**, i8*** %2, align 8, !nonnull !3
  %_7 = load i8*, i8** %3, align 8
; call std::ffi::c_str::CStr::from_ptr
  %4 = call { %"std::ffi::c_str::CStr"*, i64 } @_ZN3std3ffi5c_str4CStr8from_ptr17hf488328b45c6fe23E(i8* %_7)
  %_6.0 = extractvalue { %"std::ffi::c_str::CStr"*, i64 } %4, 0
  %_6.1 = extractvalue { %"std::ffi::c_str::CStr"*, i64 } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
; call std::ffi::c_str::CStr::to_str
  call void @_ZN3std3ffi5c_str4CStr6to_str17hd770c2be353b80beE(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture sret(%"core::result::Result<&str, core::str::error::Utf8Error>") dereferenceable(24) %_4, %"std::ffi::c_str::CStr"* nonnull align 1 %_6.0, i64 %_6.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::result::Result<T,E>::unwrap
  %5 = call { [0 x i8]*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf01b14641ac73edeE"(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture dereferenceable(24) %_4, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc626 to %"core::panic::location::Location"*))
  store { [0 x i8]*, i64 } %5, { [0 x i8]*, i64 }* %func_name_str, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E to {}**), align 8
  %7 = icmp eq {}* %6, null
  %_10 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_10, 1
  br i1 %8, label %bb4, label %bb19

bb4:                                              ; preds = %bb3
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_15 = call align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6588f56fd41365ccE"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E to i64**))
  br label %bb5

bb19:                                             ; preds = %bb18, %bb3
  ret void

bb5:                                              ; preds = %bb4
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h03604a269a5c308fE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %_13, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %_15)
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::result::Result<T,E>::unwrap
  %9 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbd51cebe08db4971E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture dereferenceable(24) %_13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc628 to %"core::panic::location::Location"*))
  store { i64*, i8 } %9, { i64*, i8 }* %file_stream, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_20 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h224ccdc44478203dE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke core::cell::RefCell<T>::borrow
  %10 = invoke { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17hfb541208f9bc4248E"(%"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %tid, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc630 to %"core::panic::location::Location"*))
          to label %bb9 unwind label %cleanup

bb21:                                             ; preds = %bb20, %cleanup
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h0291b9d70805d303E"({ i64*, i8 }* %file_stream) #19
  br label %bb22

cleanup:                                          ; preds = %bb17, %bb8, %bb7
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb21

bb9:                                              ; preds = %bb8
  store { i64*, i64* } %10, { i64*, i64* }* %_32, align 8
  %16 = getelementptr inbounds %"[closure@./probe/probe_tle.rs:94:18: 102:10]", %"[closure@./probe/probe_tle.rs:94:18: 102:10]"* %_1, i32 0, i32 1
  %_35 = load i32*, i32** %16, align 8, !nonnull !3
  %17 = getelementptr inbounds %"[closure@./probe/probe_tle.rs:94:18: 102:10]", %"[closure@./probe/probe_tle.rs:94:18: 102:10]"* %_1, i32 0, i32 2
  %_36 = load i32*, i32** %17, align 8, !nonnull !3
  %18 = bitcast { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32* }* %_30 to { i64*, i64* }**
  store { i64*, i64* }* %_32, { i64*, i64* }** %18, align 8
  %19 = getelementptr inbounds { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32* }, { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32* }* %_30, i32 0, i32 1
  store { [0 x i8]*, i64 }* %func_name_str, { [0 x i8]*, i64 }** %19, align 8
  %20 = getelementptr inbounds { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32* }, { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32* }* %_30, i32 0, i32 2
  store i32* %_35, i32** %20, align 8
  %21 = getelementptr inbounds { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32* }, { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32* }* %_30, i32 0, i32 3
  store i32* %_36, i32** %21, align 8
  %22 = bitcast { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32* }* %_30 to { i64*, i64* }**
  %arg0 = load { i64*, i64* }*, { i64*, i64* }** %22, align 8, !nonnull !3
  %23 = getelementptr inbounds { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32* }, { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32* }* %_30, i32 0, i32 1
  %arg1 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %23, align 8, !nonnull !3
  %24 = getelementptr inbounds { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32* }, { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32* }* %_30, i32 0, i32 2
  %arg2 = load i32*, i32** %24, align 8, !nonnull !3
  %25 = getelementptr inbounds { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32* }, { { i64*, i64* }*, { [0 x i8]*, i64 }*, i32*, i32* }* %_30, i32 0, i32 3
  %arg3 = load i32*, i32** %25, align 8, !nonnull !3
; invoke core::fmt::ArgumentV1::new
  %26 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hf8aeb570c436443aE({ i64*, i64* }* align 8 dereferenceable(16) %arg0, i1 ({ i64*, i64* }*, %"core::fmt::Formatter"*)* nonnull @"_ZN63_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17h74f58bc28733e89cE")
          to label %bb10 unwind label %cleanup1

bb10:                                             ; preds = %bb9
  %_41.0 = extractvalue { i8*, i64* } %26, 0
  %_41.1 = extractvalue { i8*, i64* } %26, 1
; invoke core::fmt::ArgumentV1::new
  %27 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h0df7b51e292440feE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %arg1, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h2289649d21cc25e6E")
          to label %bb11 unwind label %cleanup1

bb20:                                             ; preds = %cleanup1
; call core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  call void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17hf5df39aff9f85eacE"({ i64*, i64* }* %_32) #19
  br label %bb21

cleanup1:                                         ; preds = %bb16, %bb15, %bb14, %bb12, %bb11, %bb10, %bb9
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %30, i32* %32, align 8
  br label %bb20

bb11:                                             ; preds = %bb10
  %_44.0 = extractvalue { i8*, i64* } %27, 0
  %_44.1 = extractvalue { i8*, i64* } %27, 1
; invoke core::fmt::ArgumentV1::new
  %33 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg2, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb12 unwind label %cleanup1

bb12:                                             ; preds = %bb11
  %_47.0 = extractvalue { i8*, i64* } %33, 0
  %_47.1 = extractvalue { i8*, i64* } %33, 1
; invoke core::fmt::ArgumentV1::new
  %34 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg3, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb13 unwind label %cleanup1

bb13:                                             ; preds = %bb12
  %_50.0 = extractvalue { i8*, i64* } %34, 0
  %_50.1 = extractvalue { i8*, i64* } %34, 1
  %35 = bitcast [4 x { i8*, i64* }]* %_29 to { i8*, i64* }*
  %36 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %35, i32 0, i32 0
  store i8* %_41.0, i8** %36, align 8
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %35, i32 0, i32 1
  store i64* %_41.1, i64** %37, align 8
  %38 = getelementptr inbounds [4 x { i8*, i64* }], [4 x { i8*, i64* }]* %_29, i32 0, i32 1
  %39 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %38, i32 0, i32 0
  store i8* %_44.0, i8** %39, align 8
  %40 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %38, i32 0, i32 1
  store i64* %_44.1, i64** %40, align 8
  %41 = getelementptr inbounds [4 x { i8*, i64* }], [4 x { i8*, i64* }]* %_29, i32 0, i32 2
  %42 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %41, i32 0, i32 0
  store i8* %_47.0, i8** %42, align 8
  %43 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %41, i32 0, i32 1
  store i64* %_47.1, i64** %43, align 8
  %44 = getelementptr inbounds [4 x { i8*, i64* }], [4 x { i8*, i64* }]* %_29, i32 0, i32 3
  %45 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %44, i32 0, i32 0
  store i8* %_50.0, i8** %45, align 8
  %46 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %44, i32 0, i32 1
  store i64* %_50.1, i64** %46, align 8
  %_26.0 = bitcast [4 x { i8*, i64* }]* %_29 to [0 x { i8*, i64* }]*
  br label %bb14

bb14:                                             ; preds = %bb13
; invoke core::fmt::Arguments::new_v1_formatted
  invoke void @_ZN4core3fmt9Arguments16new_v1_formatted17hb31be9bfa45775c8E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_22, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc235 to [0 x { [0 x i8]*, i64 }]*), i64 5, [0 x { i8*, i64* }]* nonnull align 8 %_26.0, i64 4, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [224 x i8] }>* @alloc261 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 4)
          to label %bb15 unwind label %cleanup1

bb15:                                             ; preds = %bb14
; invoke std::io::Write::write_fmt
  %47 = invoke i128 @_ZN3std2io5Write9write_fmt17h85f0732d49b4061dE(i32* align 4 dereferenceable(4) %_20, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_22)
          to label %bb16 unwind label %cleanup1

bb16:                                             ; preds = %bb15
  store i128 %47, i128* %0, align 8
  %48 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_18 to i8*
  %49 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 16, i1 false)
  %50 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_18 to i128*
  %51 = load i128, i128* %50, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf85c3cc50a49daa3E"(i128 %51, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc653 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc633 to %"core::panic::location::Location"*))
          to label %bb17 unwind label %cleanup1

bb17:                                             ; preds = %bb16
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17hf5df39aff9f85eacE"({ i64*, i64* }* %_32)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb17
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h0291b9d70805d303E"({ i64*, i8 }* %file_stream)
  br label %bb19

bb22:                                             ; preds = %bb21
  %52 = bitcast { i8*, i32 }* %1 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  resume { i8*, i32 } %57
}

; probe_tle::_probe_spawning_
; Function Attrs: nonlazybind uwtable
define void @_ZN9probe_tle16_probe_spawning_17h8ab35c22afc074caE(i32 %0, i32 %1) unnamed_addr #1 {
start:
  %_13 = alloca { i32*, i32* }, align 8
  %func_num = alloca i32, align 4
  %line = alloca i32, align 4
  store i32 %0, i32* %line, align 4
  store i32 %1, i32* %func_num, align 4
  %2 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_PROBE_THRD_SEM17h3b4f837b99158c04E to {}**), align 8
  %3 = icmp eq {}* %2, null
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 1
  br i1 %4, label %bb1, label %bb3

bb1:                                              ; preds = %start
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_9 = call align 8 dereferenceable(32) %_ProbeSemaphore* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hcb1ef12fbc121f7aE"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_PROBE_THRD_SEM17h3b4f837b99158c04E to i64**))
  br label %bb2

bb3:                                              ; preds = %bb2, %start
  %5 = bitcast { i32*, i32* }* %_13 to i32**
  store i32* %line, i32** %5, align 8
  %6 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_13, i32 0, i32 1
  store i32* %func_num, i32** %6, align 8
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_13, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8, !nonnull !3
  %9 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_13, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8, !nonnull !3
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h648cd73b1cea555dE"(i64** align 8 dereferenceable(8) bitcast (<{ i8*, [0 x i8] }>* @alloc296 to i64**), i32* align 4 dereferenceable(4) %8, i32* align 4 dereferenceable(4) %10)
  br label %bb4

bb2:                                              ; preds = %bb1
; call probe_tle::_ProbeSemaphore::dec
  call void @_ZN9probe_tle15_ProbeSemaphore3dec17hfefaa0d1779c6b49E(%_ProbeSemaphore* align 8 dereferenceable(32) %_9)
  br label %bb3

bb4:                                              ; preds = %bb3
  %11 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_SHUFFLED_ORDER17h638985828a80dff6E to {}**), align 8
  %12 = icmp eq {}* %11, null
  %_18 = select i1 %12, i64 0, i64 1
  %13 = icmp eq i64 %_18, 1
  br i1 %13, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_22 = call align 8 dereferenceable(96) %_ShuffledOrder* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39317c85bb1c3a11E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_SHUFFLED_ORDER17h638985828a80dff6E to i64**))
  br label %bb6

bb7:                                              ; preds = %bb6, %bb4
  ret void

bb6:                                              ; preds = %bb5
  %_24 = load i32, i32* %func_num, align 4
; call probe_tle::_ShuffledOrder::wait_or_pass
  call void @_ZN9probe_tle14_ShuffledOrder12wait_or_pass17h98e35343babe5f8fE(%_ShuffledOrder* align 8 dereferenceable(96) %_22, i32 %_24)
  br label %bb7
}

; probe_tle::_probe_spawning_::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_tle16_probe_spawning_28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17he0f35ab8dbfe97ffE"(%"[closure@./probe/probe_tle.rs:116:27: 126:14]"* noalias nocapture dereferenceable(24) %_1, { i64, i32 }* align 8 dereferenceable(16) %child_id) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i128, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_58 = alloca { i64*, i64* }, align 8
  %_56 = alloca { { i64*, i64* }*, i32*, i32* }, align 8
  %_55 = alloca [3 x { i8*, i64* }], align 8
  %_48 = alloca %"core::fmt::Arguments", align 8
  %_44 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_39 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>", align 8
  %file_stream = alloca { i64*, i8 }, align 8
  %_19 = alloca { i64*, i64* }, align 8
  %_18 = alloca { i64*, i64* }*, align 8
  %_16 = alloca { i64*, i64* }, align 8
  %_15 = alloca [2 x { i8*, i64* }], align 8
  %_8 = alloca %"core::fmt::Arguments", align 8
  %res = alloca %"alloc::string::String", align 8
  %_6 = alloca %"alloc::string::String", align 8
  %_5 = alloca %"core::option::Option<alloc::string::String>", align 8
  %child_id1 = alloca { i32*, i64* }, align 8
; call core::cell::RefCell<T>::borrow_mut
  %2 = call { i32*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$10borrow_mut17hcff6c69a8458b103E"({ i64, i32 }* align 8 dereferenceable(16) %child_id, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc635 to %"core::panic::location::Location"*))
  store { i32*, i64* } %2, { i32*, i64* }* %child_id1, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast %"[closure@./probe/probe_tle.rs:116:27: 126:14]"* %_1 to %"core::cell::RefCell<alloc::string::String>"***
  %4 = load %"core::cell::RefCell<alloc::string::String>"**, %"core::cell::RefCell<alloc::string::String>"*** %3, align 8, !nonnull !3
  %_20 = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %4, align 8, !nonnull !3
; invoke core::cell::RefCell<T>::borrow
  %5 = invoke { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17hfb541208f9bc4248E"(%"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %_20, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc637 to %"core::panic::location::Location"*))
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store { i64*, i64* } %5, { i64*, i64* }* %_19, align 8
  store { i64*, i64* }* %_19, { i64*, i64* }** %_18, align 8
  %6 = bitcast { i64*, i64* }* %_16 to { i64*, i64* }***
  store { i64*, i64* }** %_18, { i64*, i64* }*** %6, align 8
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_16, i32 0, i32 1
  %8 = bitcast i64** %7 to { i32*, i64* }**
  store { i32*, i64* }* %child_id1, { i32*, i64* }** %8, align 8
  %9 = bitcast { i64*, i64* }* %_16 to { i64*, i64* }***
  %arg0 = load { i64*, i64* }**, { i64*, i64* }*** %9, align 8, !nonnull !3
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_16, i32 0, i32 1
  %11 = bitcast i64** %10 to { i32*, i64* }**
  %arg1 = load { i32*, i64* }*, { i32*, i64* }** %11, align 8, !nonnull !3
; invoke core::fmt::ArgumentV1::new
  %12 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h70d1b78777a19203E({ i64*, i64* }** align 8 dereferenceable(8) %arg0, i1 ({ i64*, i64* }**, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hb61db68ab11457ecE")
          to label %bb3 unwind label %cleanup2

bb30:                                             ; preds = %bb27, %bb32, %bb28, %bb29, %cleanup
; call core::ptr::drop_in_place<core::cell::RefMut<i32>>
  call void @"_ZN4core3ptr50drop_in_place$LT$core..cell..RefMut$LT$i32$GT$$GT$17h08c85482eb858f55E"({ i32*, i64* }* %child_id1) #19
  br label %bb31

cleanup:                                          ; preds = %bb23, %bb12, %bb11, %bb10, %panic, %bb33, %bb1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb30

bb3:                                              ; preds = %bb2
  %_24.0 = extractvalue { i8*, i64* } %12, 0
  %_24.1 = extractvalue { i8*, i64* } %12, 1
; invoke core::fmt::ArgumentV1::new
  %18 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h4fe1b5202260740cE({ i32*, i64* }* align 8 dereferenceable(16) %arg1, i1 ({ i32*, i64* }*, %"core::fmt::Formatter"*)* nonnull @"_ZN66_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17hf590b6c3e6ac4d32E")
          to label %bb4 unwind label %cleanup2

bb29:                                             ; preds = %cleanup2
; call core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  call void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17hf5df39aff9f85eacE"({ i64*, i64* }* %_19) #19
  br label %bb30

cleanup2:                                         ; preds = %bb5, %bb4, %bb3, %bb2
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %21, i32* %23, align 8
  br label %bb29

bb4:                                              ; preds = %bb3
  %_27.0 = extractvalue { i8*, i64* } %18, 0
  %_27.1 = extractvalue { i8*, i64* } %18, 1
  %24 = bitcast [2 x { i8*, i64* }]* %_15 to { i8*, i64* }*
  %25 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %24, i32 0, i32 0
  store i8* %_24.0, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %24, i32 0, i32 1
  store i64* %_24.1, i64** %26, align 8
  %27 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_15, i32 0, i32 1
  %28 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %27, i32 0, i32 0
  store i8* %_27.0, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %27, i32 0, i32 1
  store i64* %_27.1, i64** %29, align 8
  %_12.0 = bitcast [2 x { i8*, i64* }]* %_15 to [0 x { i8*, i64* }]*
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h2945c196adeacc55E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_8, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc270 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* nonnull align 8 %_12.0, i64 2)
          to label %bb5 unwind label %cleanup2

bb5:                                              ; preds = %bb4
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17ha1eb41d0b46bdf9aE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %res, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_8)
          to label %bb6 unwind label %cleanup2

bb6:                                              ; preds = %bb5
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17hf5df39aff9f85eacE"({ i64*, i64* }* %_19)
          to label %bb7 unwind label %cleanup3

bb7:                                              ; preds = %bb6
  %30 = bitcast %"alloc::string::String"* %_6 to i8*
  %31 = bitcast %"alloc::string::String"* %res to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false)
  %32 = bitcast %"core::option::Option<alloc::string::String>"* %_5 to %"core::option::Option<alloc::string::String>::Some"*
  %33 = bitcast %"core::option::Option<alloc::string::String>::Some"* %32 to %"alloc::string::String"*
  %34 = bitcast %"alloc::string::String"* %33 to i8*
  %35 = bitcast %"alloc::string::String"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false)
; invoke core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h9e27ae23e1c38f30E"(%"core::option::Option<alloc::string::String>"* bitcast (<{ [24 x i8] }>* @_ZN9probe_tle20_PROBE_NEW_THREAD_ID17hfb79ff6743752cd9E to %"core::option::Option<alloc::string::String>"*))
          to label %bb33 unwind label %cleanup4

bb28:                                             ; preds = %cleanup3
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h8d8b0bae1660ceedE"(%"alloc::string::String"* %res) #19
  br label %bb30

cleanup3:                                         ; preds = %bb6
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  %38 = extractvalue { i8*, i32 } %36, 1
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %38, i32* %40, align 8
  br label %bb28

bb33:                                             ; preds = %bb7
  %41 = bitcast %"core::option::Option<alloc::string::String>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (<{ [24 x i8] }>, <{ [24 x i8] }>* @_ZN9probe_tle20_PROBE_NEW_THREAD_ID17hfb79ff6743752cd9E, i32 0, i32 0, i32 0), i8* align 8 %41, i64 24, i1 false)
; invoke <core::cell::RefMut<T> as core::ops::deref::DerefMut>::deref_mut
  %_31 = invoke align 4 dereferenceable(4) i32* @"_ZN74_$LT$core..cell..RefMut$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17ha751c9b0693fc3b0E"({ i32*, i64* }* align 8 dereferenceable(16) %child_id1)
          to label %bb8 unwind label %cleanup

bb32:                                             ; preds = %cleanup4
  %42 = bitcast %"core::option::Option<alloc::string::String>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (<{ [24 x i8] }>, <{ [24 x i8] }>* @_ZN9probe_tle20_PROBE_NEW_THREAD_ID17hfb79ff6743752cd9E, i32 0, i32 0, i32 0), i8* align 8 %42, i64 24, i1 false)
  br label %bb30

cleanup4:                                         ; preds = %bb7
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  %45 = extractvalue { i8*, i32 } %43, 1
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %45, i32* %47, align 8
  br label %bb32

bb8:                                              ; preds = %bb33
  %48 = load i32, i32* %_31, align 4
  %49 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %48, i32 1)
  %_33.0 = extractvalue { i32, i1 } %49, 0
  %_33.1 = extractvalue { i32, i1 } %49, 1
  %50 = call i1 @llvm.expect.i1(i1 %_33.1, i1 false)
  br i1 %50, label %panic, label %bb9

bb9:                                              ; preds = %bb8
  store i32 %_33.0, i32* %_31, align 4
  %51 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E to {}**), align 8
  %52 = icmp eq {}* %51, null
  %_36 = select i1 %52, i64 0, i64 1
  %53 = icmp eq i64 %_36, 1
  br i1 %53, label %bb10, label %bb24

panic:                                            ; preds = %bb8
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.4 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc639 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb10:                                             ; preds = %bb9
; invoke <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_41 = invoke align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6588f56fd41365ccE"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E to i64**))
          to label %bb11 unwind label %cleanup

bb24:                                             ; preds = %bb23, %bb9
; call core::ptr::drop_in_place<core::cell::RefMut<i32>>
  call void @"_ZN4core3ptr50drop_in_place$LT$core..cell..RefMut$LT$i32$GT$$GT$17h08c85482eb858f55E"({ i32*, i64* }* %child_id1)
  br label %bb25

bb11:                                             ; preds = %bb10
; invoke std::sync::mutex::Mutex<T>::lock
  invoke void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h03604a269a5c308fE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %_39, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %_41)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
; invoke core::result::Result<T,E>::unwrap
  %54 = invoke { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbd51cebe08db4971E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture dereferenceable(24) %_39, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc641 to %"core::panic::location::Location"*))
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb12
  store { i64*, i8 } %54, { i64*, i8 }* %file_stream, align 8
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_46 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h224ccdc44478203dE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb14 unwind label %cleanup5

bb14:                                             ; preds = %bb13
  %55 = bitcast %"[closure@./probe/probe_tle.rs:116:27: 126:14]"* %_1 to %"core::cell::RefCell<alloc::string::String>"***
  %56 = load %"core::cell::RefCell<alloc::string::String>"**, %"core::cell::RefCell<alloc::string::String>"*** %55, align 8, !nonnull !3
  %_59 = load %"core::cell::RefCell<alloc::string::String>"*, %"core::cell::RefCell<alloc::string::String>"** %56, align 8, !nonnull !3
; invoke core::cell::RefCell<T>::borrow
  %57 = invoke { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17hfb541208f9bc4248E"(%"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %_59, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc643 to %"core::panic::location::Location"*))
          to label %bb15 unwind label %cleanup5

bb27:                                             ; preds = %bb26, %cleanup5
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h0291b9d70805d303E"({ i64*, i8 }* %file_stream) #19
  br label %bb30

cleanup5:                                         ; preds = %bb22, %bb14, %bb13
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  %60 = extractvalue { i8*, i32 } %58, 1
  %61 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %59, i8** %61, align 8
  %62 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %60, i32* %62, align 8
  br label %bb27

bb15:                                             ; preds = %bb14
  store { i64*, i64* } %57, { i64*, i64* }* %_58, align 8
  %63 = getelementptr inbounds %"[closure@./probe/probe_tle.rs:116:27: 126:14]", %"[closure@./probe/probe_tle.rs:116:27: 126:14]"* %_1, i32 0, i32 1
  %_60 = load i32*, i32** %63, align 8, !nonnull !3
  %64 = getelementptr inbounds %"[closure@./probe/probe_tle.rs:116:27: 126:14]", %"[closure@./probe/probe_tle.rs:116:27: 126:14]"* %_1, i32 0, i32 2
  %_61 = load i32*, i32** %64, align 8, !nonnull !3
  %65 = bitcast { { i64*, i64* }*, i32*, i32* }* %_56 to { i64*, i64* }**
  store { i64*, i64* }* %_58, { i64*, i64* }** %65, align 8
  %66 = getelementptr inbounds { { i64*, i64* }*, i32*, i32* }, { { i64*, i64* }*, i32*, i32* }* %_56, i32 0, i32 1
  store i32* %_60, i32** %66, align 8
  %67 = getelementptr inbounds { { i64*, i64* }*, i32*, i32* }, { { i64*, i64* }*, i32*, i32* }* %_56, i32 0, i32 2
  store i32* %_61, i32** %67, align 8
  %68 = bitcast { { i64*, i64* }*, i32*, i32* }* %_56 to { i64*, i64* }**
  %arg06 = load { i64*, i64* }*, { i64*, i64* }** %68, align 8, !nonnull !3
  %69 = getelementptr inbounds { { i64*, i64* }*, i32*, i32* }, { { i64*, i64* }*, i32*, i32* }* %_56, i32 0, i32 1
  %arg17 = load i32*, i32** %69, align 8, !nonnull !3
  %70 = getelementptr inbounds { { i64*, i64* }*, i32*, i32* }, { { i64*, i64* }*, i32*, i32* }* %_56, i32 0, i32 2
  %arg2 = load i32*, i32** %70, align 8, !nonnull !3
; invoke core::fmt::ArgumentV1::new
  %71 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hf8aeb570c436443aE({ i64*, i64* }* align 8 dereferenceable(16) %arg06, i1 ({ i64*, i64* }*, %"core::fmt::Formatter"*)* nonnull @"_ZN63_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17h74f58bc28733e89cE")
          to label %bb16 unwind label %cleanup8

bb16:                                             ; preds = %bb15
  %_65.0 = extractvalue { i8*, i64* } %71, 0
  %_65.1 = extractvalue { i8*, i64* } %71, 1
; invoke core::fmt::ArgumentV1::new
  %72 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg17, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb17 unwind label %cleanup8

bb26:                                             ; preds = %cleanup8
; call core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  call void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17hf5df39aff9f85eacE"({ i64*, i64* }* %_58) #19
  br label %bb27

cleanup8:                                         ; preds = %bb21, %bb20, %bb19, %bb17, %bb16, %bb15
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = extractvalue { i8*, i32 } %73, 0
  %75 = extractvalue { i8*, i32 } %73, 1
  %76 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %74, i8** %76, align 8
  %77 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %75, i32* %77, align 8
  br label %bb26

bb17:                                             ; preds = %bb16
  %_68.0 = extractvalue { i8*, i64* } %72, 0
  %_68.1 = extractvalue { i8*, i64* } %72, 1
; invoke core::fmt::ArgumentV1::new
  %78 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg2, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb18 unwind label %cleanup8

bb18:                                             ; preds = %bb17
  %_71.0 = extractvalue { i8*, i64* } %78, 0
  %_71.1 = extractvalue { i8*, i64* } %78, 1
  %79 = bitcast [3 x { i8*, i64* }]* %_55 to { i8*, i64* }*
  %80 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %79, i32 0, i32 0
  store i8* %_65.0, i8** %80, align 8
  %81 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %79, i32 0, i32 1
  store i64* %_65.1, i64** %81, align 8
  %82 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_55, i32 0, i32 1
  %83 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %82, i32 0, i32 0
  store i8* %_68.0, i8** %83, align 8
  %84 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %82, i32 0, i32 1
  store i64* %_68.1, i64** %84, align 8
  %85 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_55, i32 0, i32 2
  %86 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %85, i32 0, i32 0
  store i8* %_71.0, i8** %86, align 8
  %87 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %85, i32 0, i32 1
  store i64* %_71.1, i64** %87, align 8
  %_52.0 = bitcast [3 x { i8*, i64* }]* %_55 to [0 x { i8*, i64* }]*
  br label %bb19

bb19:                                             ; preds = %bb18
; invoke core::fmt::Arguments::new_v1_formatted
  invoke void @_ZN4core3fmt9Arguments16new_v1_formatted17hb31be9bfa45775c8E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_48, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc274 to [0 x { [0 x i8]*, i64 }]*), i64 4, [0 x { i8*, i64* }]* nonnull align 8 %_52.0, i64 3, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [168 x i8] }>* @alloc321 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 3)
          to label %bb20 unwind label %cleanup8

bb20:                                             ; preds = %bb19
; invoke std::io::Write::write_fmt
  %88 = invoke i128 @_ZN3std2io5Write9write_fmt17h85f0732d49b4061dE(i32* align 4 dereferenceable(4) %_46, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_48)
          to label %bb21 unwind label %cleanup8

bb21:                                             ; preds = %bb20
  store i128 %88, i128* %0, align 8
  %89 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_44 to i8*
  %90 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false)
  %91 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_44 to i128*
  %92 = load i128, i128* %91, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf85c3cc50a49daa3E"(i128 %92, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc653 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc646 to %"core::panic::location::Location"*))
          to label %bb22 unwind label %cleanup8

bb22:                                             ; preds = %bb21
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17hf5df39aff9f85eacE"({ i64*, i64* }* %_58)
          to label %bb23 unwind label %cleanup5

bb23:                                             ; preds = %bb22
; invoke core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h0291b9d70805d303E"({ i64*, i8 }* %file_stream)
          to label %bb24 unwind label %cleanup

bb31:                                             ; preds = %bb30
  %93 = bitcast { i8*, i32 }* %1 to i8**
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = insertvalue { i8*, i32 } undef, i8* %94, 0
  %98 = insertvalue { i8*, i32 } %97, i32 %96, 1
  resume { i8*, i32 } %98

bb25:                                             ; preds = %bb24
  ret void
}

; probe_tle::_probe_spawning_::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_tle16_probe_spawning_28_$u7b$$u7b$closure$u7d$$u7d$17h39a4fcacb5f6c2f3E"(i32* align 4 dereferenceable(4) %_1.0, i32* align 4 dereferenceable(4) %_1.1, %"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %0) unnamed_addr #0 {
start:
  %_4 = alloca %"[closure@./probe/probe_tle.rs:116:27: 126:14]", align 8
  %tid = alloca %"core::cell::RefCell<alloc::string::String>"*, align 8
  store %"core::cell::RefCell<alloc::string::String>"* %0, %"core::cell::RefCell<alloc::string::String>"** %tid, align 8
  %1 = bitcast %"[closure@./probe/probe_tle.rs:116:27: 126:14]"* %_4 to %"core::cell::RefCell<alloc::string::String>"***
  store %"core::cell::RefCell<alloc::string::String>"** %tid, %"core::cell::RefCell<alloc::string::String>"*** %1, align 8
  %2 = getelementptr inbounds %"[closure@./probe/probe_tle.rs:116:27: 126:14]", %"[closure@./probe/probe_tle.rs:116:27: 126:14]"* %_4, i32 0, i32 1
  store i32* %_1.0, i32** %2, align 8
  %3 = getelementptr inbounds %"[closure@./probe/probe_tle.rs:116:27: 126:14]", %"[closure@./probe/probe_tle.rs:116:27: 126:14]"* %_4, i32 0, i32 2
  store i32* %_1.1, i32** %3, align 8
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h4c3ef89de05ebf41E"(i64** align 8 dereferenceable(8) bitcast (<{ i8*, [0 x i8] }>* @alloc267 to i64**), %"[closure@./probe/probe_tle.rs:116:27: 126:14]"* noalias nocapture dereferenceable(24) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; probe_tle::_probe_spawned_
; Function Attrs: nonlazybind uwtable
define void @_ZN9probe_tle15_probe_spawned_17had8adcf2b46404beE(i32 %0, i32 %1) unnamed_addr #1 {
start:
  %_5 = alloca { i32*, i32* }, align 8
  %func_num = alloca i32, align 4
  %line = alloca i32, align 4
  store i32 %0, i32* %line, align 4
  store i32 %1, i32* %func_num, align 4
  %2 = bitcast { i32*, i32* }* %_5 to i32**
  store i32* %line, i32** %2, align 8
  %3 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_5, i32 0, i32 1
  store i32* %func_num, i32** %3, align 8
  %4 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_5, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8, !nonnull !3
  %6 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_5, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8, !nonnull !3
; call std::thread::local::LocalKey<T>::with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h32dc4fc06e837fa1E"(i64** align 8 dereferenceable(8) bitcast (<{ i8*, [0 x i8] }>* @alloc296 to i64**), i32* align 4 dereferenceable(4) %5, i32* align 4 dereferenceable(4) %7)
  br label %bb1

bb1:                                              ; preds = %start
  %8 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_PROBE_THRD_SEM17h3b4f837b99158c04E to {}**), align 8
  %9 = icmp eq {}* %8, null
  %_10 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_10, 1
  br i1 %10, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_14 = call align 8 dereferenceable(32) %_ProbeSemaphore* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hcb1ef12fbc121f7aE"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_PROBE_THRD_SEM17h3b4f837b99158c04E to i64**))
  br label %bb3

bb4:                                              ; preds = %bb3, %bb1
  %11 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_SHUFFLED_ORDER17h638985828a80dff6E to {}**), align 8
  %12 = icmp eq {}* %11, null
  %_18 = select i1 %12, i64 0, i64 1
  %13 = icmp eq i64 %_18, 1
  br i1 %13, label %bb5, label %bb7

bb3:                                              ; preds = %bb2
; call probe_tle::_ProbeSemaphore::inc
  call void @_ZN9probe_tle15_ProbeSemaphore3inc17h500775edcd1b0a87E(%_ProbeSemaphore* align 8 dereferenceable(32) %_14)
  br label %bb4

bb5:                                              ; preds = %bb4
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_22 = call align 8 dereferenceable(96) %_ShuffledOrder* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39317c85bb1c3a11E"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN9probe_tle15_SHUFFLED_ORDER17h638985828a80dff6E to i64**))
  br label %bb6

bb7:                                              ; preds = %bb6, %bb4
  ret void

bb6:                                              ; preds = %bb5
  %_24 = load i32, i32* %func_num, align 4
; call probe_tle::_ShuffledOrder::wait_or_pass
  call void @_ZN9probe_tle14_ShuffledOrder12wait_or_pass17h98e35343babe5f8fE(%_ShuffledOrder* align 8 dereferenceable(96) %_22, i32 %_24)
  br label %bb7
}

; probe_tle::_probe_spawned_::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN9probe_tle15_probe_spawned_28_$u7b$$u7b$closure$u7d$$u7d$17h4e4fba2cfc0ff85dE"(i32* align 4 dereferenceable(4) %_1.0, i32* align 4 dereferenceable(4) %_1.1, %"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %tid) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i128, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_35 = alloca { i64*, i64* }, align 8
  %_33 = alloca { { i64*, i64* }*, i32*, i32* }, align 8
  %_32 = alloca [3 x { i8*, i64* }], align 8
  %_25 = alloca %"core::fmt::Arguments", align 8
  %_21 = alloca %"core::result::Result<(), std::io::error::Error>", align 8
  %_16 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>", align 8
  %file_stream = alloca { i64*, i8 }, align 8
  %_9 = alloca %"alloc::string::String", align 8
  %_7 = alloca %"alloc::string::String", align 8
  %2 = load {}*, {}** getelementptr inbounds (%"core::option::Option<alloc::string::String>", %"core::option::Option<alloc::string::String>"* bitcast (<{ [24 x i8] }>* @_ZN9probe_tle20_PROBE_NEW_THREAD_ID17hfb79ff6743752cd9E to %"core::option::Option<alloc::string::String>"*), i32 0, i32 0), align 8
  %3 = icmp eq {}* %2, null
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 1
  br i1 %4, label %bb1, label %bb4

bb1:                                              ; preds = %start
; call <T as alloc::borrow::ToOwned>::to_owned
  call void @"_ZN44_$LT$T$u20$as$u20$alloc..borrow..ToOwned$GT$8to_owned17hb25848f06c0b0de3E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_9, %"alloc::string::String"* align 8 dereferenceable(24) bitcast (<{ [24 x i8] }>* @_ZN9probe_tle20_PROBE_NEW_THREAD_ID17hfb79ff6743752cd9E to %"alloc::string::String"*))
  br label %bb2

bb4:                                              ; preds = %bb3, %start
  %5 = load {}*, {}** bitcast (<{ [8 x i8] }>* @_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E to {}**), align 8
  %6 = icmp eq {}* %5, null
  %_13 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_13, 1
  br i1 %7, label %bb5, label %bb19

bb2:                                              ; preds = %bb1
; call core::cell::RefCell<T>::replace
  call void @"_ZN4core4cell16RefCell$LT$T$GT$7replace17h33ac3e24844c96c9E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_7, %"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %tid, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_9, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc648 to %"core::panic::location::Location"*))
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h8d8b0bae1660ceedE"(%"alloc::string::String"* %_7)
  br label %bb4

bb5:                                              ; preds = %bb4
; call <alloc::sync::Arc<T> as core::ops::deref::Deref>::deref
  %_18 = call align 8 dereferenceable(16) %"std::sync::mutex::Mutex<std::fs::File>"* @"_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6588f56fd41365ccE"(i64** align 8 dereferenceable(8) bitcast (<{ [8 x i8] }>* @_ZN9probe_tle9_PROBE_FP17hec22655762462ef8E to i64**))
  br label %bb6

bb19:                                             ; preds = %bb18, %bb4
  ret void

bb6:                                              ; preds = %bb5
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h03604a269a5c308fE"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>") dereferenceable(24) %_16, %"std::sync::mutex::Mutex<std::fs::File>"* align 8 dereferenceable(16) %_18)
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::result::Result<T,E>::unwrap
  %8 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hbd51cebe08db4971E"(%"core::result::Result<std::sync::mutex::MutexGuard<std::fs::File>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<std::fs::File>>>"* noalias nocapture dereferenceable(24) %_16, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc650 to %"core::panic::location::Location"*))
  store { i64*, i8 } %8, { i64*, i8 }* %file_stream, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_23 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h224ccdc44478203dE"({ i64*, i8 }* align 8 dereferenceable(16) %file_stream)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
; invoke core::cell::RefCell<T>::borrow
  %9 = invoke { i64*, i64* } @"_ZN4core4cell16RefCell$LT$T$GT$6borrow17hfb541208f9bc4248E"(%"core::cell::RefCell<alloc::string::String>"* align 8 dereferenceable(32) %tid, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc652 to %"core::panic::location::Location"*))
          to label %bb10 unwind label %cleanup

bb21:                                             ; preds = %bb20, %cleanup
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h0291b9d70805d303E"({ i64*, i8 }* %file_stream) #19
  br label %bb22

cleanup:                                          ; preds = %bb17, %bb9, %bb8
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb21

bb10:                                             ; preds = %bb9
  store { i64*, i64* } %9, { i64*, i64* }* %_35, align 8
  %15 = bitcast { { i64*, i64* }*, i32*, i32* }* %_33 to { i64*, i64* }**
  store { i64*, i64* }* %_35, { i64*, i64* }** %15, align 8
  %16 = getelementptr inbounds { { i64*, i64* }*, i32*, i32* }, { { i64*, i64* }*, i32*, i32* }* %_33, i32 0, i32 1
  store i32* %_1.0, i32** %16, align 8
  %17 = getelementptr inbounds { { i64*, i64* }*, i32*, i32* }, { { i64*, i64* }*, i32*, i32* }* %_33, i32 0, i32 2
  store i32* %_1.1, i32** %17, align 8
  %18 = bitcast { { i64*, i64* }*, i32*, i32* }* %_33 to { i64*, i64* }**
  %arg0 = load { i64*, i64* }*, { i64*, i64* }** %18, align 8, !nonnull !3
  %19 = getelementptr inbounds { { i64*, i64* }*, i32*, i32* }, { { i64*, i64* }*, i32*, i32* }* %_33, i32 0, i32 1
  %arg1 = load i32*, i32** %19, align 8, !nonnull !3
  %20 = getelementptr inbounds { { i64*, i64* }*, i32*, i32* }, { { i64*, i64* }*, i32*, i32* }* %_33, i32 0, i32 2
  %arg2 = load i32*, i32** %20, align 8, !nonnull !3
; invoke core::fmt::ArgumentV1::new
  %21 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hf8aeb570c436443aE({ i64*, i64* }* align 8 dereferenceable(16) %arg0, i1 ({ i64*, i64* }*, %"core::fmt::Formatter"*)* nonnull @"_ZN63_$LT$core..cell..Ref$LT$T$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17h74f58bc28733e89cE")
          to label %bb11 unwind label %cleanup1

bb11:                                             ; preds = %bb10
  %_42.0 = extractvalue { i8*, i64* } %21, 0
  %_42.1 = extractvalue { i8*, i64* } %21, 1
; invoke core::fmt::ArgumentV1::new
  %22 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg1, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb12 unwind label %cleanup1

bb20:                                             ; preds = %cleanup1
; call core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  call void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17hf5df39aff9f85eacE"({ i64*, i64* }* %_35) #19
  br label %bb21

cleanup1:                                         ; preds = %bb16, %bb15, %bb14, %bb12, %bb11, %bb10
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  br label %bb20

bb12:                                             ; preds = %bb11
  %_45.0 = extractvalue { i8*, i64* } %22, 0
  %_45.1 = extractvalue { i8*, i64* } %22, 1
; invoke core::fmt::ArgumentV1::new
  %28 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg2, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
          to label %bb13 unwind label %cleanup1

bb13:                                             ; preds = %bb12
  %_48.0 = extractvalue { i8*, i64* } %28, 0
  %_48.1 = extractvalue { i8*, i64* } %28, 1
  %29 = bitcast [3 x { i8*, i64* }]* %_32 to { i8*, i64* }*
  %30 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %29, i32 0, i32 0
  store i8* %_42.0, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %29, i32 0, i32 1
  store i64* %_42.1, i64** %31, align 8
  %32 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_32, i32 0, i32 1
  %33 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %32, i32 0, i32 0
  store i8* %_45.0, i8** %33, align 8
  %34 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %32, i32 0, i32 1
  store i64* %_45.1, i64** %34, align 8
  %35 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_32, i32 0, i32 2
  %36 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %35, i32 0, i32 0
  store i8* %_48.0, i8** %36, align 8
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %35, i32 0, i32 1
  store i64* %_48.1, i64** %37, align 8
  %_29.0 = bitcast [3 x { i8*, i64* }]* %_32 to [0 x { i8*, i64* }]*
  br label %bb14

bb14:                                             ; preds = %bb13
; invoke core::fmt::Arguments::new_v1_formatted
  invoke void @_ZN4core3fmt9Arguments16new_v1_formatted17hb31be9bfa45775c8E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_25, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc301 to [0 x { [0 x i8]*, i64 }]*), i64 4, [0 x { i8*, i64* }]* nonnull align 8 %_29.0, i64 3, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [168 x i8] }>* @alloc321 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 3)
          to label %bb15 unwind label %cleanup1

bb15:                                             ; preds = %bb14
; invoke std::io::Write::write_fmt
  %38 = invoke i128 @_ZN3std2io5Write9write_fmt17h85f0732d49b4061dE(i32* align 4 dereferenceable(4) %_23, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_25)
          to label %bb16 unwind label %cleanup1

bb16:                                             ; preds = %bb15
  store i128 %38, i128* %0, align 8
  %39 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_21 to i8*
  %40 = bitcast i128* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = bitcast %"core::result::Result<(), std::io::error::Error>"* %_21 to i128*
  %42 = load i128, i128* %41, align 8
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hf85c3cc50a49daa3E"(i128 %42, [0 x i8]* nonnull align 1 bitcast (<{ [13 x i8] }>* @alloc653 to [0 x i8]*), i64 13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc655 to %"core::panic::location::Location"*))
          to label %bb17 unwind label %cleanup1

bb17:                                             ; preds = %bb16
; invoke core::ptr::drop_in_place<core::cell::Ref<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$core..cell..Ref$LT$alloc..string..String$GT$$GT$17hf5df39aff9f85eacE"({ i64*, i64* }* %_35)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb17
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<std::fs::File>>
  call void @"_ZN4core3ptr70drop_in_place$LT$std..sync..mutex..MutexGuard$LT$std..fs..File$GT$$GT$17h0291b9d70805d303E"({ i64*, i8 }* %file_stream)
  br label %bb19

bb22:                                             ; preds = %bb21
  %43 = bitcast { i8*, i32 }* %1 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = insertvalue { i8*, i32 } undef, i8* %44, 0
  %48 = insertvalue { i8*, i32 } %47, i32 %46, 1
  resume { i8*, i32 } %48
}

; probe_tle::_ProbeSemaphore::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN9probe_tle15_ProbeSemaphore3new17hd1119993a6fc7171E(%_ProbeSemaphore* noalias nocapture sret(%_ProbeSemaphore) dereferenceable(32) %0, i32 %count) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i128, align 8
  %2 = alloca { i8*, i32 }, align 8
  %3 = alloca i128, align 8
  %_4 = alloca %"std::sync::condvar::Condvar", align 8
  %_2 = alloca %"std::sync::mutex::Mutex<i32>", align 8
; call std::sync::mutex::Mutex<T>::new
  %4 = call i128 @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h41c993713127bdb7E"(i32 %count)
  store i128 %4, i128* %3, align 8
  %5 = bitcast %"std::sync::mutex::Mutex<i32>"* %_2 to i8*
  %6 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false)
  br label %bb1

bb1:                                              ; preds = %start
; invoke std::sync::condvar::Condvar::new
  %7 = invoke i128 @_ZN3std4sync7condvar7Condvar3new17hd7f2ff5e47d3962fE()
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  store i128 %7, i128* %1, align 8
  %8 = bitcast %"std::sync::condvar::Condvar"* %_4 to i8*
  %9 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = bitcast %_ProbeSemaphore* %0 to %"std::sync::mutex::Mutex<i32>"*
  %11 = bitcast %"std::sync::mutex::Mutex<i32>"* %10 to i8*
  %12 = bitcast %"std::sync::mutex::Mutex<i32>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  %13 = getelementptr inbounds %_ProbeSemaphore, %_ProbeSemaphore* %0, i32 0, i32 1
  %14 = bitcast %"std::sync::condvar::Condvar"* %13 to i8*
  %15 = bitcast %"std::sync::condvar::Condvar"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false)
  ret void

bb3:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<i32>>
  call void @"_ZN4core3ptr55drop_in_place$LT$std..sync..mutex..Mutex$LT$i32$GT$$GT$17hf5df23ad8160777eE"(%"std::sync::mutex::Mutex<i32>"* %_2) #19
  br label %bb4

cleanup:                                          ; preds = %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb3

bb4:                                              ; preds = %bb3
  %21 = bitcast { i8*, i32 }* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26
}

; probe_tle::_ProbeSemaphore::dec
; Function Attrs: nonlazybind uwtable
define internal void @_ZN9probe_tle15_ProbeSemaphore3dec17hfefaa0d1779c6b49E(%_ProbeSemaphore* align 8 dereferenceable(32) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_16 = alloca i8, align 1
  %_13 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>", align 8
  %_3 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>", align 8
  %lock = alloca { i64*, i8 }, align 8
  store i8 0, i8* %_16, align 1
  %_4 = bitcast %_ProbeSemaphore* %self to %"std::sync::mutex::Mutex<i32>"*
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17he0d5db2fe08d859aE"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %_3, %"std::sync::mutex::Mutex<i32>"* align 8 dereferenceable(16) %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::unwrap
  %1 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h21ffdb16b140a576E"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture dereferenceable(24) %_3, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc657 to %"core::panic::location::Location"*))
  store { i64*, i8 } %1, { i64*, i8 }* %lock, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_16, align 1
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_5 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6350f2c4242cfd9fE"({ i64*, i8 }* align 8 dereferenceable(16) %lock)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %2 = load i32, i32* %_5, align 4
  %3 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %2, i32 1)
  %_7.0 = extractvalue { i32, i1 } %3, 0
  %_7.1 = extractvalue { i32, i1 } %3, 1
  %4 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false)
  br i1 %4, label %panic, label %bb4

bb14:                                             ; preds = %cleanup
  %5 = load i8, i8* %_16, align 1, !range !4
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb13, label %bb12

cleanup:                                          ; preds = %bb8, %bb7, %bb5, %panic, %bb2
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb14

bb4:                                              ; preds = %bb3
  store i32 %_7.0, i32* %_5, align 4
  br label %bb5

panic:                                            ; preds = %bb3
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.m to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc659 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb5:                                              ; preds = %bb9, %bb4
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
  %_10 = invoke align 4 dereferenceable(4) i32* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2e3687f320e8085dE"({ i64*, i8 }* align 8 dereferenceable(16) %lock)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_9 = load i32, i32* %_10, align 4
  %_8 = icmp slt i32 %_9, 0
  br i1 %_8, label %bb7, label %bb10

bb10:                                             ; preds = %bb6
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h90d0415356584575E"({ i64*, i8 }* %lock)
  br label %bb11

bb7:                                              ; preds = %bb6
  %_14 = getelementptr inbounds %_ProbeSemaphore, %_ProbeSemaphore* %self, i32 0, i32 1
  store i8 0, i8* %_16, align 1
  %12 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %lock, i32 0, i32 0
  %_15.0 = load i64*, i64** %12, align 8, !nonnull !3
  %13 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %lock, i32 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !4
  %_15.1 = trunc i8 %14 to i1
; invoke std::sync::condvar::Condvar::wait
  invoke void @_ZN3std4sync7condvar7Condvar4wait17he4a5205ef24a0775E(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %_13, %"std::sync::condvar::Condvar"* align 8 dereferenceable(16) %_14, i64* align 8 dereferenceable(16) %_15.0, i1 zeroext %_15.1)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke core::result::Result<T,E>::unwrap
  %15 = invoke { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h21ffdb16b140a576E"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture dereferenceable(24) %_13, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*))
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %_12.0 = extractvalue { i64*, i8 } %15, 0
  %16 = extractvalue { i64*, i8 } %15, 1
  %_12.1 = trunc i8 %16 to i1
  store i8 1, i8* %_16, align 1
  %17 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %lock, i32 0, i32 0
  store i64* %_12.0, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %lock, i32 0, i32 1
  %19 = zext i1 %_12.1 to i8
  store i8 %19, i8* %18, align 8
  br label %bb5

bb12:                                             ; preds = %bb13, %bb14
  %20 = bitcast { i8*, i32 }* %0 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1
  resume { i8*, i32 } %25

bb13:                                             ; preds = %bb14
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h90d0415356584575E"({ i64*, i8 }* %lock) #19
  br label %bb12

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_16, align 1
  ret void
}

; probe_tle::_ProbeSemaphore::inc
; Function Attrs: nonlazybind uwtable
define internal void @_ZN9probe_tle15_ProbeSemaphore3inc17h500775edcd1b0a87E(%_ProbeSemaphore* align 8 dereferenceable(32) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_3 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>", align 8
  %lock = alloca { i64*, i8 }, align 8
  %_4 = bitcast %_ProbeSemaphore* %self to %"std::sync::mutex::Mutex<i32>"*
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17he0d5db2fe08d859aE"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>") dereferenceable(24) %_3, %"std::sync::mutex::Mutex<i32>"* align 8 dereferenceable(16) %_4)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::unwrap
  %1 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h21ffdb16b140a576E"(%"core::result::Result<std::sync::mutex::MutexGuard<i32>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<i32>>>"* noalias nocapture dereferenceable(24) %_3, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc663 to %"core::panic::location::Location"*))
  store { i64*, i8 } %1, { i64*, i8 }* %lock, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_5 = invoke align 4 dereferenceable(4) i32* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h6350f2c4242cfd9fE"({ i64*, i8 }* align 8 dereferenceable(16) %lock)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %2 = load i32, i32* %_5, align 4
  %3 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 1)
  %_7.0 = extractvalue { i32, i1 } %3, 0
  %_7.1 = extractvalue { i32, i1 } %3, 1
  %4 = call i1 @llvm.expect.i1(i1 %_7.1, i1 false)
  br i1 %4, label %panic, label %bb4

bb9:                                              ; preds = %cleanup
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h90d0415356584575E"({ i64*, i8 }* %lock) #19
  br label %bb10

cleanup:                                          ; preds = %bb6, %bb4, %panic, %bb2
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb9

bb4:                                              ; preds = %bb3
  store i32 %_7.0, i32* %_5, align 4
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::Deref>::deref
  %_10 = invoke align 4 dereferenceable(4) i32* @"_ZN81_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2e3687f320e8085dE"({ i64*, i8 }* align 8 dereferenceable(16) %lock)
          to label %bb5 unwind label %cleanup

panic:                                            ; preds = %bb3
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.4 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc665 to %"core::panic::location::Location"*)) #18
          to label %unreachable unwind label %cleanup

unreachable:                                      ; preds = %panic
  unreachable

bb5:                                              ; preds = %bb4
  %_9 = load i32, i32* %_10, align 4
  %_8 = icmp sle i32 %_9, 0
  br i1 %_8, label %bb6, label %bb7

bb7:                                              ; preds = %bb11, %bb5
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<i32>>
  call void @"_ZN4core3ptr60drop_in_place$LT$std..sync..mutex..MutexGuard$LT$i32$GT$$GT$17h90d0415356584575E"({ i64*, i8 }* %lock)
  br label %bb8

bb6:                                              ; preds = %bb5
  %_13 = getelementptr inbounds %_ProbeSemaphore, %_ProbeSemaphore* %self, i32 0, i32 1
; invoke std::sync::condvar::Condvar::notify_one
  invoke void @_ZN3std4sync7condvar7Condvar10notify_one17hb275bf503c25f2f4E(%"std::sync::condvar::Condvar"* align 8 dereferenceable(16) %_13)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb6
  br label %bb7

bb10:                                             ; preds = %bb9
  %10 = bitcast { i8*, i32 }* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb8:                                              ; preds = %bb7
  ret void
}

; <probe_tle::_ProbeNode as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN60_$LT$probe_tle.._ProbeNode$u20$as$u20$core..fmt..Display$GT$3fmt17hc2cfdfa2e3686f27E"(%_ProbeNode* align 8 dereferenceable(48) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 {
start:
  %_58 = alloca { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, align 8
  %_57 = alloca [5 x { i8*, i64* }], align 8
  %_50 = alloca %"core::fmt::Arguments", align 8
  %_14 = alloca { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, align 8
  %_13 = alloca [6 x { i8*, i64* }], align 8
  %_6 = alloca %"core::fmt::Arguments", align 8
  %var_addr = alloca i64*, align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 1
  %2 = bitcast { i64, i8* }* %1 to i64*
  %_3 = load i64, i64* %2, align 8, !range !2
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ]

bb2:                                              ; preds = %start
  unreachable

bb1:                                              ; preds = %start
  %_59 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 2
  %_60 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 3
  %_61 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 4
  %_62 = bitcast %_ProbeNode* %self to { [0 x i8]*, i64 }*
  %_63 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 5
  %3 = bitcast { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58 to i32**
  store i32* %_59, i32** %3, align 8
  %4 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 1
  store i32* %_60, i32** %4, align 8
  %5 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 2
  store i32* %_61, i32** %5, align 8
  %6 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 3
  store { [0 x i8]*, i64 }* %_62, { [0 x i8]*, i64 }** %6, align 8
  %7 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 4
  store i32* %_63, i32** %7, align 8
  %8 = bitcast { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58 to i32**
  %arg01 = load i32*, i32** %8, align 8, !nonnull !3
  %9 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 1
  %arg12 = load i32*, i32** %9, align 8, !nonnull !3
  %10 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 2
  %arg23 = load i32*, i32** %10, align 8, !nonnull !3
  %11 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 3
  %arg34 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %11, align 8, !nonnull !3
  %12 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32* }* %_58, i32 0, i32 4
  %arg45 = load i32*, i32** %12, align 8, !nonnull !3
; call core::fmt::ArgumentV1::new
  %13 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg01, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_69.0 = extractvalue { i8*, i64* } %13, 0
  %_69.1 = extractvalue { i8*, i64* } %13, 1
  br label %bb12

bb3:                                              ; preds = %start
  %14 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 1
  %15 = bitcast { i64, i8* }* %14 to %"core::option::Option<*const u64>::Some"*
  %16 = getelementptr inbounds %"core::option::Option<*const u64>::Some", %"core::option::Option<*const u64>::Some"* %15, i32 0, i32 1
  %17 = load i64*, i64** %16, align 8
  store i64* %17, i64** %var_addr, align 8
  %_15 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 2
  %_16 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 3
  %_17 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 4
  %_18 = bitcast %_ProbeNode* %self to { [0 x i8]*, i64 }*
  %_19 = getelementptr inbounds %_ProbeNode, %_ProbeNode* %self, i32 0, i32 5
  %18 = bitcast { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14 to i32**
  store i32* %_15, i32** %18, align 8
  %19 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 1
  store i32* %_16, i32** %19, align 8
  %20 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 2
  store i32* %_17, i32** %20, align 8
  %21 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 3
  store { [0 x i8]*, i64 }* %_18, { [0 x i8]*, i64 }** %21, align 8
  %22 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 4
  store i32* %_19, i32** %22, align 8
  %23 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 5
  store i64** %var_addr, i64*** %23, align 8
  %24 = bitcast { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14 to i32**
  %arg0 = load i32*, i32** %24, align 8, !nonnull !3
  %25 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 1
  %arg1 = load i32*, i32** %25, align 8, !nonnull !3
  %26 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 2
  %arg2 = load i32*, i32** %26, align 8, !nonnull !3
  %27 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 3
  %arg3 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %27, align 8, !nonnull !3
  %28 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 4
  %arg4 = load i32*, i32** %28, align 8, !nonnull !3
  %29 = getelementptr inbounds { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }, { i32*, i32*, i32*, { [0 x i8]*, i64 }*, i32*, i64** }* %_14, i32 0, i32 5
  %arg5 = load i64**, i64*** %29, align 8, !nonnull !3
; call core::fmt::ArgumentV1::new
  %30 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg0, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_27.0 = extractvalue { i8*, i64* } %30, 0
  %_27.1 = extractvalue { i8*, i64* } %30, 1
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::fmt::ArgumentV1::new
  %31 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg1, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_30.0 = extractvalue { i8*, i64* } %31, 0
  %_30.1 = extractvalue { i8*, i64* } %31, 1
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::fmt::ArgumentV1::new
  %32 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg2, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_33.0 = extractvalue { i8*, i64* } %32, 0
  %_33.1 = extractvalue { i8*, i64* } %32, 1
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::fmt::ArgumentV1::new
  %33 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h0df7b51e292440feE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %arg3, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h2289649d21cc25e6E")
  %_36.0 = extractvalue { i8*, i64* } %33, 0
  %_36.1 = extractvalue { i8*, i64* } %33, 1
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::fmt::ArgumentV1::new
  %34 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg4, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_39.0 = extractvalue { i8*, i64* } %34, 0
  %_39.1 = extractvalue { i8*, i64* } %34, 1
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::fmt::ArgumentV1::new
  %35 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17hbd2683e22c9f341fE(i64** align 8 dereferenceable(8) %arg5, i1 (i64**, %"core::fmt::Formatter"*)* nonnull @"_ZN52_$LT$$BP$const$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hc566a47af9f007f1E")
  %_42.0 = extractvalue { i8*, i64* } %35, 0
  %_42.1 = extractvalue { i8*, i64* } %35, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %36 = bitcast [6 x { i8*, i64* }]* %_13 to { i8*, i64* }*
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %36, i32 0, i32 0
  store i8* %_27.0, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %36, i32 0, i32 1
  store i64* %_27.1, i64** %38, align 8
  %39 = getelementptr inbounds [6 x { i8*, i64* }], [6 x { i8*, i64* }]* %_13, i32 0, i32 1
  %40 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %39, i32 0, i32 0
  store i8* %_30.0, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %39, i32 0, i32 1
  store i64* %_30.1, i64** %41, align 8
  %42 = getelementptr inbounds [6 x { i8*, i64* }], [6 x { i8*, i64* }]* %_13, i32 0, i32 2
  %43 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %42, i32 0, i32 0
  store i8* %_33.0, i8** %43, align 8
  %44 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %42, i32 0, i32 1
  store i64* %_33.1, i64** %44, align 8
  %45 = getelementptr inbounds [6 x { i8*, i64* }], [6 x { i8*, i64* }]* %_13, i32 0, i32 3
  %46 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %45, i32 0, i32 0
  store i8* %_36.0, i8** %46, align 8
  %47 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %45, i32 0, i32 1
  store i64* %_36.1, i64** %47, align 8
  %48 = getelementptr inbounds [6 x { i8*, i64* }], [6 x { i8*, i64* }]* %_13, i32 0, i32 4
  %49 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %48, i32 0, i32 0
  store i8* %_39.0, i8** %49, align 8
  %50 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %48, i32 0, i32 1
  store i64* %_39.1, i64** %50, align 8
  %51 = getelementptr inbounds [6 x { i8*, i64* }], [6 x { i8*, i64* }]* %_13, i32 0, i32 5
  %52 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %51, i32 0, i32 0
  store i8* %_42.0, i8** %52, align 8
  %53 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %51, i32 0, i32 1
  store i64* %_42.1, i64** %53, align 8
  %_10.0 = bitcast [6 x { i8*, i64* }]* %_13 to [0 x { i8*, i64* }]*
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hb31be9bfa45775c8E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_6, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc338 to [0 x { [0 x i8]*, i64 }]*), i64 6, [0 x { i8*, i64* }]* nonnull align 8 %_10.0, i64 6, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [336 x i8] }>* @alloc383 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 6)
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::fmt::Formatter::write_fmt
  %54 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h9d6b4d9dd2c64373E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_6)
  %55 = zext i1 %54 to i8
  store i8 %55, i8* %0, align 1
  br label %bb19

bb19:                                             ; preds = %bb18, %bb11
  %56 = load i8, i8* %0, align 1, !range !4
  %57 = trunc i8 %56 to i1
  ret i1 %57

bb12:                                             ; preds = %bb1
; call core::fmt::ArgumentV1::new
  %58 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg12, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_72.0 = extractvalue { i8*, i64* } %58, 0
  %_72.1 = extractvalue { i8*, i64* } %58, 1
  br label %bb13

bb13:                                             ; preds = %bb12
; call core::fmt::ArgumentV1::new
  %59 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg23, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_75.0 = extractvalue { i8*, i64* } %59, 0
  %_75.1 = extractvalue { i8*, i64* } %59, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call core::fmt::ArgumentV1::new
  %60 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h0df7b51e292440feE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %arg34, i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* nonnull @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h2289649d21cc25e6E")
  %_78.0 = extractvalue { i8*, i64* } %60, 0
  %_78.1 = extractvalue { i8*, i64* } %60, 1
  br label %bb15

bb15:                                             ; preds = %bb14
; call core::fmt::ArgumentV1::new
  %61 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV13new17h67ae791d6ddf86c3E(i32* align 4 dereferenceable(4) %arg45, i1 (i32*, %"core::fmt::Formatter"*)* nonnull @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E")
  %_81.0 = extractvalue { i8*, i64* } %61, 0
  %_81.1 = extractvalue { i8*, i64* } %61, 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %62 = bitcast [5 x { i8*, i64* }]* %_57 to { i8*, i64* }*
  %63 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %62, i32 0, i32 0
  store i8* %_69.0, i8** %63, align 8
  %64 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %62, i32 0, i32 1
  store i64* %_69.1, i64** %64, align 8
  %65 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_57, i32 0, i32 1
  %66 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %65, i32 0, i32 0
  store i8* %_72.0, i8** %66, align 8
  %67 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %65, i32 0, i32 1
  store i64* %_72.1, i64** %67, align 8
  %68 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_57, i32 0, i32 2
  %69 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %68, i32 0, i32 0
  store i8* %_75.0, i8** %69, align 8
  %70 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %68, i32 0, i32 1
  store i64* %_75.1, i64** %70, align 8
  %71 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_57, i32 0, i32 3
  %72 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %71, i32 0, i32 0
  store i8* %_78.0, i8** %72, align 8
  %73 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %71, i32 0, i32 1
  store i64* %_78.1, i64** %73, align 8
  %74 = getelementptr inbounds [5 x { i8*, i64* }], [5 x { i8*, i64* }]* %_57, i32 0, i32 4
  %75 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %74, i32 0, i32 0
  store i8* %_81.0, i8** %75, align 8
  %76 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %74, i32 0, i32 1
  store i64* %_81.1, i64** %76, align 8
  %_54.0 = bitcast [5 x { i8*, i64* }]* %_57 to [0 x { i8*, i64* }]*
  br label %bb17

bb17:                                             ; preds = %bb16
; call core::fmt::Arguments::new_v1_formatted
  call void @_ZN4core3fmt9Arguments16new_v1_formatted17hb31be9bfa45775c8E(%"core::fmt::Arguments"* noalias nocapture sret(%"core::fmt::Arguments") dereferenceable(48) %_50, [0 x { [0 x i8]*, i64 }]* nonnull align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc325 to [0 x { [0 x i8]*, i64 }]*), i64 6, [0 x { i8*, i64* }]* nonnull align 8 %_54.0, i64 5, [0 x %"core::fmt::rt::v1::Argument"]* nonnull align 8 bitcast (<{ [280 x i8] }>* @alloc411 to [0 x %"core::fmt::rt::v1::Argument"]*), i64 5)
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::fmt::Formatter::write_fmt
  %77 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h9d6b4d9dd2c64373E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, %"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_50)
  %78 = zext i1 %77 to i8
  store i8 %78, i8* %0, align 1
  br label %bb19
}

; probe_tle::_ShuffledOrder::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN9probe_tle14_ShuffledOrder3new17h4037a15c9a8800e3E(%_ShuffledOrder* noalias nocapture sret(%_ShuffledOrder) dereferenceable(96) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %shuffle_order_str) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i128, align 8
  %2 = alloca i128, align 8
  %3 = alloca i128, align 8
  %4 = alloca i64, align 8
  %5 = alloca { i8*, i32 }, align 8
  %_34 = alloca i8, align 1
  %_32 = alloca %"std::sync::mutex::Mutex<()>", align 8
  %_31 = alloca %"std::sync::condvar::Condvar", align 8
  %_29 = alloca %"std::sync::rwlock::RwLock<i32>", align 8
  %_28 = alloca %"alloc::collections::vec_deque::VecDeque<i32>", align 8
  %_27 = alloca %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>", align 8
  %_22 = alloca %"core::result::Result<i32, core::num::error::ParseIntError>", align 4
  %_12 = alloca { i8*, i64 }, align 8
  %iter = alloca %"alloc::vec::into_iter::IntoIter<&str>", align 8
  %_9 = alloca %"alloc::vec::Vec<&str>", align 8
  %_8 = alloca %"alloc::vec::into_iter::IntoIter<&str>", align 8
  %_4 = alloca %"core::str::iter::SplitWhitespace", align 8
  %str_vec = alloca %"alloc::vec::Vec<&str>", align 8
  %order = alloca %"alloc::collections::vec_deque::VecDeque<i32>", align 8
  store i8 0, i8* %_34, align 1
; invoke alloc::collections::vec_deque::VecDeque<T>::new
  invoke void @"_ZN5alloc11collections9vec_deque17VecDeque$LT$T$GT$3new17h2a6be328d582d828E"(%"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture sret(%"alloc::collections::vec_deque::VecDeque<i32>") dereferenceable(32) %order)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 1, i8* %_34, align 1
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %6 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd3ecbe8ffa65aa72E"(%"alloc::string::String"* align 8 dereferenceable(24) %shuffle_order_str)
          to label %bb2 unwind label %cleanup1

bb25:                                             ; preds = %bb27, %bb28, %cleanup
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h8d8b0bae1660ceedE"(%"alloc::string::String"* %shuffle_order_str) #19
  br label %bb26

cleanup:                                          ; preds = %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb25

bb2:                                              ; preds = %bb1
  %_6.0 = extractvalue { [0 x i8]*, i64 } %6, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %6, 1
; invoke core::str::<impl str>::split_whitespace
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$16split_whitespace17h4eaa305c8a9dd22dE"(%"core::str::iter::SplitWhitespace"* noalias nocapture sret(%"core::str::iter::SplitWhitespace") dereferenceable(64) %_4, [0 x i8]* nonnull align 1 %_6.0, i64 %_6.1)
          to label %bb3 unwind label %cleanup1

bb28:                                             ; preds = %bb23, %bb24, %cleanup1
  %12 = load i8, i8* %_34, align 1, !range !4
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb27, label %bb25

cleanup1:                                         ; preds = %bb15, %bb14, %bb13, %bb8, %bb4, %bb3, %bb2, %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb28

bb3:                                              ; preds = %bb2
; invoke core::iter::traits::iterator::Iterator::collect
  invoke void @_ZN4core4iter6traits8iterator8Iterator7collect17h8cad5d27f2b1d403E(%"alloc::vec::Vec<&str>"* noalias nocapture sret(%"alloc::vec::Vec<&str>") dereferenceable(24) %str_vec, %"core::str::iter::SplitWhitespace"* noalias nocapture dereferenceable(64) %_4)
          to label %bb4 unwind label %cleanup1

bb4:                                              ; preds = %bb3
  %19 = bitcast %"alloc::vec::Vec<&str>"* %_9 to i8*
  %20 = bitcast %"alloc::vec::Vec<&str>"* %str_vec to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false)
; invoke <alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN90_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h60a12fe74026f9ecE"(%"alloc::vec::into_iter::IntoIter<&str>"* noalias nocapture sret(%"alloc::vec::into_iter::IntoIter<&str>") dereferenceable(32) %_8, %"alloc::vec::Vec<&str>"* noalias nocapture dereferenceable(24) %_9)
          to label %bb5 unwind label %cleanup1

bb5:                                              ; preds = %bb4
  %21 = bitcast %"alloc::vec::into_iter::IntoIter<&str>"* %iter to i8*
  %22 = bitcast %"alloc::vec::into_iter::IntoIter<&str>"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 32, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb29, %bb5
; invoke <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::next
  %23 = invoke { i8*, i64 } @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb80d59ce6085ce06E"(%"alloc::vec::into_iter::IntoIter<&str>"* align 8 dereferenceable(32) %iter)
          to label %bb7 unwind label %cleanup2

bb7:                                              ; preds = %bb6
  store { i8*, i64 } %23, { i8*, i64 }* %_12, align 8
  %24 = bitcast { i8*, i64 }* %_12 to {}**
  %25 = load {}*, {}** %24, align 8
  %26 = icmp eq {}* %25, null
  %_15 = select i1 %26, i64 0, i64 1
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb24:                                             ; preds = %cleanup2
; call core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<&str>>
  call void @"_ZN4core3ptr67drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$17h42474c82907b293bE"(%"alloc::vec::into_iter::IntoIter<&str>"* %iter) #19
  br label %bb28

cleanup2:                                         ; preds = %bb12, %bb11, %bb10, %bb6
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb24

bb9:                                              ; preds = %bb7
  unreachable

bb8:                                              ; preds = %bb7
; invoke core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<&str>>
  invoke void @"_ZN4core3ptr67drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$17h42474c82907b293bE"(%"alloc::vec::into_iter::IntoIter<&str>"* %iter)
          to label %bb13 unwind label %cleanup1

bb10:                                             ; preds = %bb7
  %32 = bitcast { i8*, i64 }* %_12 to { [0 x i8]*, i64 }*
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0
  %val.0 = load [0 x i8]*, [0 x i8]** %33, align 8, !nonnull !3
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1
  %val.1 = load i64, i64* %34, align 8
; invoke core::str::<impl str>::parse
  %35 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17hc8f0d47e75633e47E"([0 x i8]* nonnull align 1 %val.0, i64 %val.1)
          to label %bb11 unwind label %cleanup2

bb11:                                             ; preds = %bb10
  store i64 %35, i64* %4, align 8
  %36 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %_22 to i8*
  %37 = bitcast i64* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 8 %37, i64 8, i1 false)
  %38 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %_22 to i64*
  %39 = load i64, i64* %38, align 4
; invoke core::result::Result<T,E>::unwrap
  %_21 = invoke i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hef5715728bd23a33E"(i64 %39, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc667 to %"core::panic::location::Location"*))
          to label %bb12 unwind label %cleanup2

bb12:                                             ; preds = %bb11
; invoke alloc::collections::vec_deque::VecDeque<T,A>::push_back
  invoke void @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$9push_back17h5bac4c1bed4c6ba1E"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %order, i32 %_21)
          to label %bb29 unwind label %cleanup2

bb29:                                             ; preds = %bb12
  br label %bb6

bb13:                                             ; preds = %bb8
; invoke alloc::collections::vec_deque::VecDeque<T,A>::pop_front
  %40 = invoke { i32, i32 } @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$9pop_front17h90b664cc9ac6ae9dE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %order)
          to label %bb14 unwind label %cleanup1

bb14:                                             ; preds = %bb13
  %_25.0 = extractvalue { i32, i32 } %40, 0
  %_25.1 = extractvalue { i32, i32 } %40, 1
; invoke core::option::Option<T>::unwrap
  %next_exe_init = invoke i32 @"_ZN4core6option15Option$LT$T$GT$6unwrap17hc7763a541bfd14ccE"(i32 %_25.0, i32 %_25.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc669 to %"core::panic::location::Location"*))
          to label %bb15 unwind label %cleanup1

bb15:                                             ; preds = %bb14
  store i8 0, i8* %_34, align 1
  %41 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %_28 to i8*
  %42 = bitcast %"alloc::collections::vec_deque::VecDeque<i32>"* %order to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 32, i1 false)
; invoke std::sync::mutex::Mutex<T>::new
  invoke void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17hc898baebc73826dbE"(%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* noalias nocapture sret(%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>") dereferenceable(48) %_27, %"alloc::collections::vec_deque::VecDeque<i32>"* noalias nocapture dereferenceable(32) %_28)
          to label %bb16 unwind label %cleanup1

bb16:                                             ; preds = %bb15
; invoke std::sync::rwlock::RwLock<T>::new
  %43 = invoke i128 @"_ZN3std4sync6rwlock15RwLock$LT$T$GT$3new17h0b92b36e9fe511abE"(i32 %next_exe_init)
          to label %bb17 unwind label %cleanup3

bb17:                                             ; preds = %bb16
  store i128 %43, i128* %3, align 8
  %44 = bitcast %"std::sync::rwlock::RwLock<i32>"* %_29 to i8*
  %45 = bitcast i128* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 16, i1 false)
; invoke std::sync::condvar::Condvar::new
  %46 = invoke i128 @_ZN3std4sync7condvar7Condvar3new17hd7f2ff5e47d3962fE()
          to label %bb18 unwind label %cleanup4

bb23:                                             ; preds = %bb22, %cleanup3
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>>
  call void @"_ZN4core3ptr102drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17h06b200a280fcf0bfE"(%"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %_27) #19
  br label %bb28

cleanup3:                                         ; preds = %bb16
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  %49 = extractvalue { i8*, i32 } %47, 1
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %49, i32* %51, align 8
  br label %bb23

bb18:                                             ; preds = %bb17
  store i128 %46, i128* %2, align 8
  %52 = bitcast %"std::sync::condvar::Condvar"* %_31 to i8*
  %53 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 16, i1 false)
; invoke std::sync::mutex::Mutex<T>::new
  %54 = invoke i128 @"_ZN3std4sync5mutex14Mutex$LT$T$GT$3new17h32482af0c51d975fE"()
          to label %bb19 unwind label %cleanup5

bb22:                                             ; preds = %bb21, %cleanup4
; call core::ptr::drop_in_place<std::sync::rwlock::RwLock<i32>>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..sync..rwlock..RwLock$LT$i32$GT$$GT$17h3c1301b4aa4bf45eE"(%"std::sync::rwlock::RwLock<i32>"* %_29) #19
  br label %bb23

cleanup4:                                         ; preds = %bb17
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  %57 = extractvalue { i8*, i32 } %55, 1
  %58 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %56, i8** %58, align 8
  %59 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %57, i32* %59, align 8
  br label %bb22

bb19:                                             ; preds = %bb18
  store i128 %54, i128* %1, align 8
  %60 = bitcast %"std::sync::mutex::Mutex<()>"* %_32 to i8*
  %61 = bitcast i128* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 16, i1 false)
  %62 = bitcast %_ShuffledOrder* %0 to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*
  %63 = bitcast %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %62 to i8*
  %64 = bitcast %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* %_27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 48, i1 false)
  %65 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %0, i32 0, i32 1
  %66 = bitcast %"std::sync::rwlock::RwLock<i32>"* %65 to i8*
  %67 = bitcast %"std::sync::rwlock::RwLock<i32>"* %_29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 16, i1 false)
  %68 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %0, i32 0, i32 2
  %69 = bitcast %"std::sync::condvar::Condvar"* %68 to i8*
  %70 = bitcast %"std::sync::condvar::Condvar"* %_31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 16, i1 false)
  %71 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %0, i32 0, i32 3
  %72 = bitcast %"std::sync::mutex::Mutex<()>"* %71 to i8*
  %73 = bitcast %"std::sync::mutex::Mutex<()>"* %_32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 16, i1 false)
  store i8 0, i8* %_34, align 1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h8d8b0bae1660ceedE"(%"alloc::string::String"* %shuffle_order_str)
  br label %bb20

bb21:                                             ; preds = %cleanup5
; call core::ptr::drop_in_place<std::sync::condvar::Condvar>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..sync..condvar..Condvar$GT$17hc0b8fe413a6763f7E"(%"std::sync::condvar::Condvar"* %_31) #19
  br label %bb22

cleanup5:                                         ; preds = %bb18
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  %76 = extractvalue { i8*, i32 } %74, 1
  %77 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 0
  store i8* %75, i8** %77, align 8
  %78 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  store i32 %76, i32* %78, align 8
  br label %bb21

bb27:                                             ; preds = %bb28
; call core::ptr::drop_in_place<alloc::collections::vec_deque::VecDeque<i32>>
  call void @"_ZN4core3ptr71drop_in_place$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$17had6f692e017e6505E"(%"alloc::collections::vec_deque::VecDeque<i32>"* %order) #19
  br label %bb25

bb26:                                             ; preds = %bb25
  %79 = bitcast { i8*, i32 }* %5 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = insertvalue { i8*, i32 } undef, i8* %80, 0
  %84 = insertvalue { i8*, i32 } %83, i32 %82, 1
  resume { i8*, i32 } %84

bb20:                                             ; preds = %bb19
  ret void
}

; probe_tle::_ShuffledOrder::wait_or_pass
; Function Attrs: nonlazybind uwtable
define internal void @_ZN9probe_tle14_ShuffledOrder12wait_or_pass17h98e35343babe5f8fE(%_ShuffledOrder* align 8 dereferenceable(96) %self, i32 %exe_num) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_45 = alloca i8, align 1
  %_44 = alloca i8, align 1
  %_37 = alloca %"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>", align 8
  %w = alloca { i64*, i8 }, align 8
  %_30 = alloca { i32, i32 }, align 4
  %_28 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>", align 8
  %order_queue = alloca { i64*, i8 }, align 8
  %_17 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>", align 8
  %next_exe_guard = alloca i64*, align 8
  %_4 = alloca %"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>", align 8
  %guard = alloca { i64*, i8 }, align 8
  store i8 0, i8* %_44, align 1
  store i8 0, i8* %_45, align 1
  %_5 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %self, i32 0, i32 3
; call std::sync::mutex::Mutex<T>::lock
  call void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17h44d131e16132f29dE"(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %_4, %"std::sync::mutex::Mutex<()>"* align 8 dereferenceable(16) %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::unwrap
  %1 = call { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h895596befc405311E"(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture dereferenceable(24) %_4, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc671 to %"core::panic::location::Location"*))
  store { i64*, i8 } %1, { i64*, i8 }* %guard, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_45, align 1
  %_8 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %self, i32 0, i32 1
; invoke std::sync::rwlock::RwLock<T>::read
  %2 = invoke { i64, i8* } @"_ZN3std4sync6rwlock15RwLock$LT$T$GT$4read17haac171831d9796b7E"(%"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %_8)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_7.0 = extractvalue { i64, i8* } %2, 0
  %_7.1 = extractvalue { i64, i8* } %2, 1
; invoke core::result::Result<T,E>::unwrap
  %3 = invoke align 8 dereferenceable(16) i64* @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h84bd7da7c7251649E"(i64 %_7.0, i8* %_7.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc673 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup

bb36:                                             ; preds = %bb33, %bb34, %cleanup
  %4 = load i8, i8* %_45, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb35, label %bb32

cleanup:                                          ; preds = %bb3, %bb2
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb36

bb4:                                              ; preds = %bb3
  store i64* %3, i64** %next_exe_guard, align 8
  store i8 1, i8* %_44, align 1
  br label %bb5

bb5:                                              ; preds = %bb12, %bb4
; invoke <std::sync::rwlock::RwLockReadGuard<T> as core::ops::deref::Deref>::deref
  %_11 = invoke align 4 dereferenceable(4) i32* @"_ZN87_$LT$std..sync..rwlock..RwLockReadGuard$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7ce130a7ac1e5f04E"(i64** align 8 dereferenceable(8) %next_exe_guard)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5
  %_10 = load i32, i32* %_11, align 4
  %_9 = icmp ne i32 %_10, %exe_num
  br i1 %_9, label %bb7, label %bb13

bb34:                                             ; preds = %bb31, %cleanup1
  %11 = load i8, i8* %_44, align 1, !range !4
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb33, label %bb36

cleanup1:                                         ; preds = %bb27, %bb17, %bb16, %bb15, %bb14, %bb13, %bb11, %bb10, %bb9, %bb8, %bb7, %bb5
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb34

bb13:                                             ; preds = %bb6
  store i8 0, i8* %_44, align 1
  %_24 = load i64*, i64** %next_exe_guard, align 8, !nonnull !3
; invoke core::mem::drop
  invoke void @_ZN4core3mem4drop17hb4a1e960f1f0f322E(i64* align 8 dereferenceable(16) %_24)
          to label %bb14 unwind label %cleanup1

bb7:                                              ; preds = %bb6
  store i8 0, i8* %_44, align 1
  %_15 = load i64*, i64** %next_exe_guard, align 8, !nonnull !3
; invoke core::mem::drop
  invoke void @_ZN4core3mem4drop17hb4a1e960f1f0f322E(i64* align 8 dereferenceable(16) %_15)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
  %_18 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %self, i32 0, i32 2
  store i8 0, i8* %_45, align 1
  %18 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  %_19.0 = load i64*, i64** %18, align 8, !nonnull !3
  %19 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %20 = load i8, i8* %19, align 8, !range !4
  %_19.1 = trunc i8 %20 to i1
; invoke std::sync::condvar::Condvar::wait
  invoke void @_ZN3std4sync7condvar7Condvar4wait17h72966bba405ba3dfE(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>") dereferenceable(24) %_17, %"std::sync::condvar::Condvar"* align 8 dereferenceable(16) %_18, i64* align 8 dereferenceable(16) %_19.0, i1 zeroext %_19.1)
          to label %bb9 unwind label %cleanup1

bb9:                                              ; preds = %bb8
; invoke core::result::Result<T,E>::unwrap
  %21 = invoke { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h895596befc405311E"(%"core::result::Result<std::sync::mutex::MutexGuard<()>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<()>>>"* noalias nocapture dereferenceable(24) %_17, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc675 to %"core::panic::location::Location"*))
          to label %bb10 unwind label %cleanup1

bb10:                                             ; preds = %bb9
  %_16.0 = extractvalue { i64*, i8 } %21, 0
  %22 = extractvalue { i64*, i8 } %21, 1
  %_16.1 = trunc i8 %22 to i1
  store i8 1, i8* %_45, align 1
  %23 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 0
  store i64* %_16.0, i64** %23, align 8
  %24 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %guard, i32 0, i32 1
  %25 = zext i1 %_16.1 to i8
  store i8 %25, i8* %24, align 8
  %_22 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %self, i32 0, i32 1
; invoke std::sync::rwlock::RwLock<T>::read
  %26 = invoke { i64, i8* } @"_ZN3std4sync6rwlock15RwLock$LT$T$GT$4read17haac171831d9796b7E"(%"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %_22)
          to label %bb11 unwind label %cleanup1

bb11:                                             ; preds = %bb10
  %_21.0 = extractvalue { i64, i8* } %26, 0
  %_21.1 = extractvalue { i64, i8* } %26, 1
; invoke core::result::Result<T,E>::unwrap
  %_20 = invoke align 8 dereferenceable(16) i64* @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h84bd7da7c7251649E"(i64 %_21.0, i8* %_21.1, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc677 to %"core::panic::location::Location"*))
          to label %bb12 unwind label %cleanup1

bb12:                                             ; preds = %bb11
  store i8 1, i8* %_44, align 1
  store i64* %_20, i64** %next_exe_guard, align 8
  br label %bb5

bb14:                                             ; preds = %bb13
; invoke core::time::Duration::from_millis
  %27 = invoke { i64, i32 } @_ZN4core4time8Duration11from_millis17h3a49901f766b5e46E(i64 20)
          to label %bb15 unwind label %cleanup1

bb15:                                             ; preds = %bb14
  %_26.0 = extractvalue { i64, i32 } %27, 0
  %_26.1 = extractvalue { i64, i32 } %27, 1
; invoke std::thread::sleep
  invoke void @_ZN3std6thread5sleep17h5f3e2ec71796842dE(i64 %_26.0, i32 %_26.1)
          to label %bb16 unwind label %cleanup1

bb16:                                             ; preds = %bb15
  %_29 = bitcast %_ShuffledOrder* %self to %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"*
; invoke std::sync::mutex::Mutex<T>::lock
  invoke void @"_ZN3std4sync5mutex14Mutex$LT$T$GT$4lock17hbc5b1a197ae6de16E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture sret(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>") dereferenceable(24) %_28, %"std::sync::mutex::Mutex<alloc::collections::vec_deque::VecDeque<i32>>"* align 8 dereferenceable(48) %_29)
          to label %bb17 unwind label %cleanup1

bb17:                                             ; preds = %bb16
; invoke core::result::Result<T,E>::unwrap
  %28 = invoke { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h7795de4fdc9ed8d1E"(%"core::result::Result<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>, std::sync::poison::PoisonError<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>>"* noalias nocapture dereferenceable(24) %_28, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc679 to %"core::panic::location::Location"*))
          to label %bb18 unwind label %cleanup1

bb18:                                             ; preds = %bb17
  store { i64*, i8 } %28, { i64*, i8 }* %order_queue, align 8
; invoke <std::sync::mutex::MutexGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_32 = invoke align 8 dereferenceable(32) %"alloc::collections::vec_deque::VecDeque<i32>"* @"_ZN84_$LT$std..sync..mutex..MutexGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hca6f00114a8d838eE"({ i64*, i8 }* align 8 dereferenceable(16) %order_queue)
          to label %bb19 unwind label %cleanup2

bb19:                                             ; preds = %bb18
; invoke alloc::collections::vec_deque::VecDeque<T,A>::pop_front
  %29 = invoke { i32, i32 } @"_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$9pop_front17h90b664cc9ac6ae9dE"(%"alloc::collections::vec_deque::VecDeque<i32>"* align 8 dereferenceable(32) %_32)
          to label %bb20 unwind label %cleanup2

bb31:                                             ; preds = %bb30, %cleanup2
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>
  call void @"_ZN4core3ptr107drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17hb7a2e132aac5020bE"({ i64*, i8 }* %order_queue) #19
  br label %bb34

cleanup2:                                         ; preds = %bb26, %bb25, %bb23, %bb22, %bb19, %bb18
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  %32 = extractvalue { i8*, i32 } %30, 1
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %32, i32* %34, align 8
  br label %bb31

bb20:                                             ; preds = %bb19
  store { i32, i32 } %29, { i32, i32 }* %_30, align 4
  %35 = bitcast { i32, i32 }* %_30 to i32*
  %36 = load i32, i32* %35, align 4, !range !59
  %_34 = zext i32 %36 to i64
  switch i64 %_34, label %bb21 [
    i64 0, label %bb26
    i64 1, label %bb22
  ]

bb21:                                             ; preds = %bb20
  unreachable

bb26:                                             ; preds = %bb25, %bb20
  %_43 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %self, i32 0, i32 2
; invoke std::sync::condvar::Condvar::notify_all
  invoke void @_ZN3std4sync7condvar7Condvar10notify_all17h9b1caab06f6bd730E(%"std::sync::condvar::Condvar"* align 8 dereferenceable(16) %_43)
          to label %bb27 unwind label %cleanup2

bb22:                                             ; preds = %bb20
  %37 = bitcast { i32, i32 }* %_30 to %"core::option::Option<i32>::Some"*
  %38 = getelementptr inbounds %"core::option::Option<i32>::Some", %"core::option::Option<i32>::Some"* %37, i32 0, i32 1
  %next_exe_num = load i32, i32* %38, align 4
  %_38 = getelementptr inbounds %_ShuffledOrder, %_ShuffledOrder* %self, i32 0, i32 1
; invoke std::sync::rwlock::RwLock<T>::write
  invoke void @"_ZN3std4sync6rwlock15RwLock$LT$T$GT$5write17h904bc5bc3784f5faE"(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture sret(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>") dereferenceable(24) %_37, %"std::sync::rwlock::RwLock<i32>"* align 8 dereferenceable(16) %_38)
          to label %bb23 unwind label %cleanup2

bb23:                                             ; preds = %bb22
; invoke core::result::Result<T,E>::unwrap
  %39 = invoke { i64*, i8 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3b2adceb7c9b3829E"(%"core::result::Result<std::sync::rwlock::RwLockWriteGuard<i32>, std::sync::poison::PoisonError<std::sync::rwlock::RwLockWriteGuard<i32>>>"* noalias nocapture dereferenceable(24) %_37, %"core::panic::location::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc681 to %"core::panic::location::Location"*))
          to label %bb24 unwind label %cleanup2

bb24:                                             ; preds = %bb23
  store { i64*, i8 } %39, { i64*, i8 }* %w, align 8
; invoke <std::sync::rwlock::RwLockWriteGuard<T> as core::ops::deref::DerefMut>::deref_mut
  %_40 = invoke align 4 dereferenceable(4) i32* @"_ZN91_$LT$std..sync..rwlock..RwLockWriteGuard$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h9c2ac03f6e03e5a3E"({ i64*, i8 }* align 8 dereferenceable(16) %w)
          to label %bb25 unwind label %cleanup3

bb25:                                             ; preds = %bb24
  store i32 %next_exe_num, i32* %_40, align 4
; invoke core::ptr::drop_in_place<std::sync::rwlock::RwLockWriteGuard<i32>>
  invoke void @"_ZN4core3ptr67drop_in_place$LT$std..sync..rwlock..RwLockWriteGuard$LT$i32$GT$$GT$17ha3125b4ee7dc5ef5E"({ i64*, i8 }* %w)
          to label %bb26 unwind label %cleanup2

bb30:                                             ; preds = %cleanup3
; call core::ptr::drop_in_place<std::sync::rwlock::RwLockWriteGuard<i32>>
  call void @"_ZN4core3ptr67drop_in_place$LT$std..sync..rwlock..RwLockWriteGuard$LT$i32$GT$$GT$17ha3125b4ee7dc5ef5E"({ i64*, i8 }* %w) #19
  br label %bb31

cleanup3:                                         ; preds = %bb24
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  %42 = extractvalue { i8*, i32 } %40, 1
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %42, i32* %44, align 8
  br label %bb30

bb27:                                             ; preds = %bb26
; invoke core::ptr::drop_in_place<std::sync::mutex::MutexGuard<alloc::collections::vec_deque::VecDeque<i32>>>
  invoke void @"_ZN4core3ptr107drop_in_place$LT$std..sync..mutex..MutexGuard$LT$alloc..collections..vec_deque..VecDeque$LT$i32$GT$$GT$$GT$17hb7a2e132aac5020bE"({ i64*, i8 }* %order_queue)
          to label %bb28 unwind label %cleanup1

bb28:                                             ; preds = %bb27
  store i8 0, i8* %_44, align 1
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<()>>
  call void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$17h92307b27fd4ec372E"({ i64*, i8 }* %guard)
  br label %bb29

bb33:                                             ; preds = %bb34
; call core::ptr::drop_in_place<std::sync::rwlock::RwLockReadGuard<i32>>
  call void @"_ZN4core3ptr66drop_in_place$LT$std..sync..rwlock..RwLockReadGuard$LT$i32$GT$$GT$17h3c24917e9592e87aE"(i64** %next_exe_guard) #19
  br label %bb36

bb32:                                             ; preds = %bb35, %bb36
  %45 = bitcast { i8*, i32 }* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1
  resume { i8*, i32 } %50

bb35:                                             ; preds = %bb36
; call core::ptr::drop_in_place<std::sync::mutex::MutexGuard<()>>
  call void @"_ZN4core3ptr65drop_in_place$LT$std..sync..mutex..MutexGuard$LT$$LP$$RP$$GT$$GT$17h92307b27fd4ec372E"({ i64*, i8 }* %guard) #19
  br label %bb32

bb29:                                             ; preds = %bb28
  store i8 0, i8* %_45, align 1
  ret void
}

; probe_tle::TID::__init
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN9probe_tle3TID6__init17hd4b1a1fdbda31a2bE(%"core::cell::RefCell<alloc::string::String>"* noalias nocapture sret(%"core::cell::RefCell<alloc::string::String>") dereferenceable(32) %0) unnamed_addr #0 {
start:
  %_1 = alloca %"alloc::string::String", align 8
; call <alloc::string::String as core::convert::From<&str>>::from
  call void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h8dc4eeaed8bf4332E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24) %_1, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc682 to [0 x i8]*), i64 4)
  br label %bb1

bb1:                                              ; preds = %start
; call core::cell::RefCell<T>::new
  call void @"_ZN4core4cell16RefCell$LT$T$GT$3new17h09c9b511a9f670c3E"(%"core::cell::RefCell<alloc::string::String>"* noalias nocapture sret(%"core::cell::RefCell<alloc::string::String>") dereferenceable(32) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; probe_tle::TID::__getit
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 dereferenceable_or_null(32) i64* @_ZN9probe_tle3TID7__getit17h37c28b5d351cffcbE() unnamed_addr #0 {
start:
; call std::thread::local::fast::Key<T>::get
  %0 = call align 8 dereferenceable_or_null(32) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17h250588ad93abae78E"(%"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"* align 8 dereferenceable(48) bitcast (<{ [48 x i8] }>* @_ZN9probe_tle3TID7__getit5__KEY17hf86e3cd814c9b041E to %"std::thread::local::fast::Key<core::cell::RefCell<alloc::string::String>>"*))
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; probe_tle::CHILD_ID::__init
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @_ZN9probe_tle8CHILD_ID6__init17h0ef85434b239925cE() unnamed_addr #0 {
start:
; call core::cell::RefCell<T>::new
  %0 = call { i64, i32 } @"_ZN4core4cell16RefCell$LT$T$GT$3new17h26e9e17cf25421d0E"(i32 1)
  %1 = extractvalue { i64, i32 } %0, 0
  %2 = extractvalue { i64, i32 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i32 } undef, i64 %1, 0
  %4 = insertvalue { i64, i32 } %3, i32 %2, 1
  ret { i64, i32 } %4
}

; probe_tle::CHILD_ID::__getit
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 dereferenceable_or_null(16) i64* @_ZN9probe_tle8CHILD_ID7__getit17hdbc20204649a9f04E() unnamed_addr #0 {
start:
; call std::thread::local::fast::Key<T>::get
  %0 = call align 8 dereferenceable_or_null(16) i64* @"_ZN3std6thread5local4fast12Key$LT$T$GT$3get17h4e627cf503dca90fE"(%"std::thread::local::fast::Key<core::cell::RefCell<i32>>"* align 8 dereferenceable(32) bitcast (<{ [32 x i8] }>* @_ZN9probe_tle8CHILD_ID7__getit5__KEY17h77ab8dfced1ef3b1E to %"std::thread::local::fast::Key<core::cell::RefCell<i32>>"*))
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17hf6d6ed6dae21e8e9E(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17h811b684e8de6a021E(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index26slice_start_index_len_fail17h429384a76db70f0fE(i64, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; std::sys_common::condvar::check::SameMutexCheck::verify
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std10sys_common7condvar5check14SameMutexCheck6verify17h05fd77e152fcfa51E(%"std::sys_common::condvar::check::SameMutexCheck"* align 8 dereferenceable(8), i64** align 8 dereferenceable(8)) unnamed_addr #1

; std::sys_common::mutex::MovableMutex::raw
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(40) %"std::sys::unix::mutex::Mutex"* @_ZN3std10sys_common5mutex12MovableMutex3raw17h291a5d574400a240E(i64** align 8 dereferenceable(8)) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; std::fs::OpenOptions::_open
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std2fs11OpenOptions5_open17hf9a7f113c14c71dfE(%"core::result::Result<std::fs::File, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<std::fs::File, std::io::error::Error>") dereferenceable(24), %"std::fs::OpenOptions"* align 4 dereferenceable(16), %"std::path::Path"* nonnull align 1, i64) unnamed_addr #1

; <std::fs::File as std::io::Write>::write
; Function Attrs: nonlazybind uwtable
declare void @"_ZN48_$LT$std..fs..File$u20$as$u20$std..io..Write$GT$5write17h03102cc4fd32491dE"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<usize, std::io::error::Error>") dereferenceable(24), i32* align 4 dereferenceable(4), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::write
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt5write17h182b3dab33fa727dE({}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #1

; std::sys::unix::decode_error_kind
; Function Attrs: nonlazybind uwtable
declare i8 @_ZN3std3sys4unix17decode_error_kind17h0b4b195659215c25E(i32) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @pthread_mutex_lock(%"libc::unix::linux_like::linux::pthread_mutex_t"*) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @pthread_mutex_unlock(%"libc::unix::linux_like::linux::pthread_mutex_t"*) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @pthread_rwlock_unlock(%"libc::unix::linux_like::linux::pthread_rwlock_t"*) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @pthread_rwlock_rdlock(%"libc::unix::linux_like::linux::pthread_rwlock_t"*) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @pthread_rwlock_wrlock(%"libc::unix::linux_like::linux::pthread_rwlock_t"*) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @pthread_cond_wait(%"libc::unix::linux_like::linux::pthread_cond_t"*, %"libc::unix::linux_like::linux::pthread_mutex_t"*) unnamed_addr #1

; std::sys_common::mutex::MovableMutex::new
; Function Attrs: nonlazybind uwtable
declare noalias nonnull align 8 i64* @_ZN3std10sys_common5mutex12MovableMutex3new17h2bb8f0e9b979bf81E() unnamed_addr #1

; std::sync::poison::Flag::new
; Function Attrs: nonlazybind uwtable
declare i8 @_ZN3std4sync6poison4Flag3new17h47827b134c610a5eE() unnamed_addr #1

; std::sys_common::rwlock::MovableRWLock::new
; Function Attrs: nonlazybind uwtable
declare noalias nonnull align 8 i64* @_ZN3std10sys_common6rwlock13MovableRWLock3new17h8cb6241447c11387E() unnamed_addr #1

; std::sys::unix::thread_local_dtor::register_dtor
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix17thread_local_dtor13register_dtor17h23209ede0e49f302E(i8*, void (i8*)* nonnull) unnamed_addr #1

; core::panic::location::Location::caller
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(24) %"core::panic::location::Location"* @_ZN4core5panic8location8Location6caller17h5348652b54841341E(%"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #1

; std::panicking::rust_panic_with_hook
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN3std9panicking20rust_panic_with_hook17h00e530dc19739cc5E({}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), i64* align 8 dereferenceable_or_null(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #10

; std::panicking::panic_count::is_zero_slow_path
; Function Attrs: cold noinline nonlazybind uwtable
declare zeroext i1 @_ZN3std9panicking11panic_count17is_zero_slow_path17h88139735fad522c1E() unnamed_addr #11

; <str as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hc7fdfa9efeb52994E"([0 x i8]* nonnull align 1, i64, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <alloc::string::String as core::clone::Clone>::clone
; Function Attrs: nonlazybind uwtable
declare void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17ha8dd3d668ab621c8E"(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24), %"alloc::string::String"* align 8 dereferenceable(24)) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #12

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h0354e4a24413a363E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17hd38ace2d8b112396E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h964ee865e084bf23E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17hec07c72f4ac49b15E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hea1df36702709463E"(i64* align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17ha5ca6c77bd7d16dbE([0 x i8]* nonnull align 1, i64, %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #13

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #14

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.uadd.sat.i64(i64, i64) #13

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #13

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #13

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #13

; <std::sys_common::condvar::Condvar as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN75_$LT$std..sys_common..condvar..Condvar$u20$as$u20$core..ops..drop..Drop$GT$4drop17h83b8ba3d0c35aabaE"(%"std::sys_common::condvar::Condvar"* align 8 dereferenceable(16)) unnamed_addr #1

; <std::sys_common::mutex::MovableMutex as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN78_$LT$std..sys_common..mutex..MovableMutex$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha55fce36199af4d5E"(i64** align 8 dereferenceable(8)) unnamed_addr #1

; <std::sys_common::rwlock::MovableRWLock as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN80_$LT$std..sys_common..rwlock..MovableRWLock$u20$as$u20$core..ops..drop..Drop$GT$4drop17haffd3c1b234564a3E"(i64** align 8 dereferenceable(8)) unnamed_addr #1

; core::num::<impl core::str::traits::FromStr for i32>::from_str
; Function Attrs: nonlazybind uwtable
declare i64 @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$i32$GT$8from_str17h501abcb150b3d434E"([0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h3993b2255ce6d89bE"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17hbfd18ed1d8ed03e1E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #15

; core::unicode::unicode_data::white_space::lookup
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core7unicode12unicode_data11white_space6lookup17hd6f8b9b07e22cd88E(i32) unnamed_addr #1

; <core::cell::BorrowMutError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN63_$LT$core..cell..BorrowMutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hcb6b239d20f4c4a6E"(%"core::cell::BorrowMutError"* nonnull align 1, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6result13unwrap_failed17h08205c98ce46b680E([0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #4

; <std::thread::local::AccessError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN68_$LT$std..thread..local..AccessError$u20$as$u20$core..fmt..Debug$GT$3fmt17h4742560aef5d22b8E"(%"std::thread::local::AccessError"* nonnull align 1, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <std::io::error::Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h827e52fb911077aeE"(%"std::io::error::Error"* align 8 dereferenceable(16), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <core::cell::BorrowError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN60_$LT$core..cell..BorrowError$u20$as$u20$core..fmt..Debug$GT$3fmt17h181a42d1bc7840fcE"(%"core::cell::BorrowError"* nonnull align 1, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <core::alloc::layout::LayoutError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17h18b08294eb593cf2E"(%"core::alloc::layout::LayoutError"* nonnull align 1, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <core::num::error::ParseIntError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN68_$LT$core..num..error..ParseIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17he685b773c162151eE"(i8* align 1 dereferenceable(1), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <core::str::error::Utf8Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h1c178a3c145491d4E"(%"core::str::error::Utf8Error"* align 8 dereferenceable(16), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::panicking::assert_failed_inner
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN4core9panicking19assert_failed_inner17h53988bbf3ad10cb2E(i8, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"core::option::Option<core::fmt::Arguments>"* noalias nocapture dereferenceable(48), %"core::panic::location::Location"* align 8 dereferenceable(24)) unnamed_addr #10

; core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h376b6c97a3bbad10E"(i32* align 4 dereferenceable(4), %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::Formatter::alternate
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9alternate17h38ef9de37e051e79E(%"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; Function Attrs: nounwind nonlazybind uwtable
declare i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #16

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nounwind nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h4346a7dd05d4a0b2E(i64, i64) unnamed_addr #17

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #16

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #16

; Function Attrs: nounwind nonlazybind uwtable
declare i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #16

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17hf5949ba689b42eeeE() unnamed_addr #10

; core::fmt::Formatter::debug_tuple
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter11debug_tuple17h7224d0bd130049f1E(%"core::fmt::builders::DebugTuple"* noalias nocapture sret(%"core::fmt::builders::DebugTuple") dereferenceable(24), %"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::builders::DebugTuple::field
; Function Attrs: nonlazybind uwtable
declare align 8 dereferenceable(24) %"core::fmt::builders::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17hf9e554966e8175aaE(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::builders::DebugTuple::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17hb124e78f94d89d10E(%"core::fmt::builders::DebugTuple"* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17h183551d38569a8c9E(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @close(i32) unnamed_addr #1

; core::fmt::Formatter::debug_struct
; Function Attrs: nonlazybind uwtable
declare i128 @_ZN4core3fmt9Formatter12debug_struct17h018d5199e76edfe7E(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::builders::DebugStruct::finish_non_exhaustive
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders11DebugStruct21finish_non_exhaustive17h0f518e02fcc171f4E(%"core::fmt::builders::DebugStruct"* align 8 dereferenceable(16)) unnamed_addr #1

; std::process::abort
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN3std7process5abort17h354795bd2c752f7eE() unnamed_addr #6

; std::fs::OpenOptions::new
; Function Attrs: nonlazybind uwtable
declare i128 @_ZN3std2fs11OpenOptions3new17h6b9455b7cbc43679E() unnamed_addr #1

; std::fs::OpenOptions::write
; Function Attrs: nonlazybind uwtable
declare align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions5write17h7a3ac3ee6d53c986E(%"std::fs::OpenOptions"* align 4 dereferenceable(16), i1 zeroext) unnamed_addr #1

; std::fs::OpenOptions::create
; Function Attrs: nonlazybind uwtable
declare align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions6create17h844069579c36805bE(%"std::fs::OpenOptions"* align 4 dereferenceable(16), i1 zeroext) unnamed_addr #1

; std::fs::OpenOptions::append
; Function Attrs: nonlazybind uwtable
declare align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions6append17h8434c75b524a9103E(%"std::fs::OpenOptions"* align 4 dereferenceable(16), i1 zeroext) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @atexit(void ()* nonnull) unnamed_addr #1

; std::fs::OpenOptions::read
; Function Attrs: nonlazybind uwtable
declare align 4 dereferenceable(16) %"std::fs::OpenOptions"* @_ZN3std2fs11OpenOptions4read17h7dd9beaf9e60b894E(%"std::fs::OpenOptions"* align 4 dereferenceable(16), i1 zeroext) unnamed_addr #1

; std::io::stdio::_print
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std2io5stdio6_print17hfd70903caad28085E(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #1

; <std::fs::File as std::io::Read>::read_to_string
; Function Attrs: nonlazybind uwtable
declare void @"_ZN47_$LT$std..fs..File$u20$as$u20$std..io..Read$GT$14read_to_string17h7565b43626013008E"(%"core::result::Result<usize, std::io::error::Error>"* noalias nocapture sret(%"core::result::Result<usize, std::io::error::Error>") dereferenceable(24), i32* align 4 dereferenceable(4), %"alloc::string::String"* align 8 dereferenceable(24)) unnamed_addr #1

; std::ffi::c_str::CStr::from_ptr
; Function Attrs: nonlazybind uwtable
declare { %"std::ffi::c_str::CStr"*, i64 } @_ZN3std3ffi5c_str4CStr8from_ptr17hf488328b45c6fe23E(i8*) unnamed_addr #1

; std::ffi::c_str::CStr::to_str
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3ffi5c_str4CStr6to_str17hd770c2be353b80beE(%"core::result::Result<&str, core::str::error::Utf8Error>"* noalias nocapture sret(%"core::result::Result<&str, core::str::error::Utf8Error>") dereferenceable(24), %"std::ffi::c_str::CStr"* nonnull align 1, i64) unnamed_addr #1

; alloc::fmt::format
; Function Attrs: nonlazybind uwtable
declare void @_ZN5alloc3fmt6format17ha1eb41d0b46bdf9aE(%"alloc::string::String"* noalias nocapture sret(%"alloc::string::String") dereferenceable(24), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #13

; std::sync::condvar::Condvar::new
; Function Attrs: nonlazybind uwtable
declare i128 @_ZN3std4sync7condvar7Condvar3new17hd7f2ff5e47d3962fE() unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #13

; std::sync::condvar::Condvar::notify_one
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std4sync7condvar7Condvar10notify_one17hb275bf503c25f2f4E(%"std::sync::condvar::Condvar"* align 8 dereferenceable(16)) unnamed_addr #1

; core::fmt::Formatter::write_fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17h9d6b4d9dd2c64373E(%"core::fmt::Formatter"* align 8 dereferenceable(64), %"core::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #1

; std::thread::sleep
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std6thread5sleep17h5f3e2ec71796842dE(i64, i32) unnamed_addr #1

; std::sync::condvar::Condvar::notify_all
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std4sync7condvar7Condvar10notify_all17h9b1caab06f6bd730E(%"std::sync::condvar::Condvar"* align 8 dereferenceable(16)) unnamed_addr #1

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #15

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #5 = { inlinehint noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #6 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #7 = { cold nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #8 = { argmemonly nofree nounwind willreturn }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #11 = { cold noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #14 = { nofree nosync nounwind readnone willreturn }
attributes #15 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #16 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #17 = { cold noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #18 = { noreturn }
attributes #19 = { noinline }
attributes #20 = { nounwind }
attributes #21 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 7, !"PIC Level", i32 2}
!1 = !{i32 2, !"RtLibUseGOT", i32 1}
!2 = !{i64 0, i64 2}
!3 = !{}
!4 = !{i8 0, i8 2}
!5 = !{i8 0, i8 41}
!6 = !{i8 0, i8 4}
!7 = !{i8 0, i8 5}
!8 = !{i32 0, i32 -1}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h5108dd07c964dedfE: argument 0"}
!11 = distinct !{!11, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h5108dd07c964dedfE"}
!12 = !{!13}
!13 = distinct !{!13, !11, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h5108dd07c964dedfE: %value"}
!14 = !{i8 0, i8 3}
!15 = !{i8 -1, i8 2}
!16 = !{i64 1, i64 0}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h34a65c884b61c7ffE: argument 0"}
!19 = distinct !{!19, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h34a65c884b61c7ffE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17ha5f58f98706d425cE: argument 0"}
!22 = distinct !{!22, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17ha5f58f98706d425cE"}
!23 = !{!24}
!24 = distinct !{!24, !22, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17ha5f58f98706d425cE: %self"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h2bf726c7c67e15c7E: argument 0"}
!27 = distinct !{!27, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h2bf726c7c67e15c7E"}
!28 = !{!29}
!29 = distinct !{!29, !27, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h2bf726c7c67e15c7E: %slot"}
!30 = !{!26, !29}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h7bef856d0c9f9eafE: argument 0"}
!33 = distinct !{!33, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h7bef856d0c9f9eafE"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hf536d6ee0a2edd82E: argument 0"}
!36 = distinct !{!36, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hf536d6ee0a2edd82E"}
!37 = !{!38}
!38 = distinct !{!38, !36, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hf536d6ee0a2edd82E: %self"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h7954b1bb5a21f75eE: argument 0"}
!41 = distinct !{!41, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h7954b1bb5a21f75eE"}
!42 = !{!43}
!43 = distinct !{!43, !41, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h7954b1bb5a21f75eE: %slot"}
!44 = !{!40, !43}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h5138313c8d74a73fE: argument 0"}
!47 = distinct !{!47, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h5138313c8d74a73fE"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17ha7dc1dd688bcbfcdE: argument 0"}
!50 = distinct !{!50, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17ha7dc1dd688bcbfcdE"}
!51 = !{!52}
!52 = distinct !{!52, !50, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17ha7dc1dd688bcbfcdE: %self"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hd21c8274ab53bc97E: argument 0"}
!55 = distinct !{!55, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hd21c8274ab53bc97E"}
!56 = !{!57}
!57 = distinct !{!57, !55, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hd21c8274ab53bc97E: %slot"}
!58 = !{!54, !57}
!59 = !{i32 0, i32 2}
!60 = !{i64 0, i64 3}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h95792069e28395d1E: argument 0"}
!63 = distinct !{!63, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h95792069e28395d1E"}
!64 = !{!65}
!65 = distinct !{!65, !63, !"_ZN4core4cell19UnsafeCell$LT$T$GT$3new17h95792069e28395d1E: %value"}
!66 = !{i32 0, i32 1114112}
!67 = !{i32 3174326}
!68 = !{i32 0, i32 1114113}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hdcd320cc9b46070bE: %value"}
!71 = distinct !{!71, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hdcd320cc9b46070bE"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h1f625996037c0063E: %value.0"}
!74 = distinct !{!74, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h1f625996037c0063E"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hf3d69c940f2ddcb0E: %value"}
!77 = distinct !{!77, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hf3d69c940f2ddcb0E"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17he8c4b0400336afbaE: %value"}
!80 = distinct !{!80, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17he8c4b0400336afbaE"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h064fd8bff514a4dbE: argument 0"}
!83 = distinct !{!83, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h064fd8bff514a4dbE"}
!84 = !{!85}
!85 = distinct !{!85, !83, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h064fd8bff514a4dbE: %value"}
